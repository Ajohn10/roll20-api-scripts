/**
 * MagicMaster.js
 *
 * * Copyright 2020: Richard @ Damery.
 * Licensed under the GPL Version 3 license.
 * http://www.gnu.org/licenses/gpl.html
 * 
 * This script is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This script is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * 
 * The goal of this script is to create and automate aspects of magic item
 * discovery, storage & use, initially for the ADnD 2e game in Roll20
 * 
 * v0.001  25/11/2020  Initial creation from redtrackerjacker.js stripped down
 * v0.002  30/11/2020  Working version with unused functions stripped
 * v0.003  08/12/2020  Fixed a bug when a character sheet does not have the 
 *                     sheet-flags field created, causing the API to crash
 * v0.004  12/12/2020  Allowed all players to use !magic commands
 * v0.005  14/12/2020  Added setAttr function to save attributes and not need
 *                     ChatSetAttr unless to create an attribute
 * v0.007  06/01/2021  Continued adding the Pick-or-Put functions from the macros
 * v0.008  10/01/2021  Converted to use tokenIDs as parameters to fit with standards
 *                     rather than characterIDs, and made all --button arguments
 *                     a standard format.  Add a short menu option.
 * v0.009  11/01/2021  Adding support for picking pockets and traps
 * v1.010  13/01/2021  Added capability to view the gold and treasure in
 *                     a looted target
 * v1.011  21/01/2021  TODO Added menus for editing the Magic Item bag contents
 * v1.012  05/02/2021  Added commands to allow a MI to alter the light
 *                     settings of a character, and a menu for players
 *                     to have torches, lanterns & continual light gems
 * v1.013  11/02/2021  If a controlling player is not online, send messages to
 *                     the GM as they are probably testing the character.
 * v1.014  11/02/2021  Programmed the DM-only-Change-MI macro, so that it
 *                     works well for DMs without alerting players.
 * v2.001  14/02/2021  Merged with the spellMaster draft API and renamed
 *                     MagicMaster.  It will handle all Magic Items, spells & powers.
 * v2.002  19/02/2021  Changed spell functions to accept 2 parameters: type and tokenIDs
 *                     Also added spell menus.
 * v2.003  20/02/2021  Corrected how spell macros are called, as sendChat() did not work.
 *                     Also programmed spellcaster rests
 * v2.004  24/02/2021  Added all Power capabilities, using the same or similar handlers
 *                     as spell use.
 * v2.005  26/02/2021  Added Edit Magic Items Powers capability.
 * v2.006  28/02/2021  Changed used spells & powers to display name rather than '-' but
 *                     grayed out though still selectable if viewing or memorising
 * v2.007  03/03/2021  Fixed errors in recent coding.  Simplified looting.
 * v2.008  06/03/2021  Added view and use Magic Items.
 * v2.009  10/03/2021  Added the manage MI menu, and multi-database concatenation.
 * v2.010  11/03/2021  Started looking at coding Magic Items that can store spells
 * v2.011  13/03/2021  Added error handling to v2.009 code that overcame Roll20
 *                     issue with findObjs() not always finding existing ability objects,
 *                     then merged in v2.010 updates to create v2.011.  Also added
 *                     Magic Item Powers.
 * v2.012  16/03/2021  Added ability to decrement additional charges from a magic item,
 *                     for instance when using a magic item optional power
 * v2.013  20/03/2021  Swapped MI Powers to be held on PC's character sheet rather
 *                     than in the MIDB.  When picking up & putting away MIs, deal
 *                     with creating or deleting the powers & spells
 * v2.014  25/03/2021  Change attrLookup() and setAttr() to handle de-constructed
 *                     repeating table references through parameterization
 * v2.015  26/03/2021  Debugged looting & storing of spell-storing MIs
 * v2.016  28/03/2021  Added spell targeting and charge management commands
 * v2.017  30/03/2021  Added additional checks for hitting the end of various repeating
 *                     tables on the character sheet, so it will work with any sheet
 * v2.018  10/04/2021  Added the getTable() function to retrieve whole repeating 
 *                     attribute tables into arrays for iteration & manipulation
 * v2.019  27/04/2021  Extensive rebuild of table management adopting same suite of 
 *                     functions as developed for attackMaster API
 * v2.020  30/04/2021  Add setting of MI container size to GM-only menu and fix bugs 
 *                     with searching and storing caused by table row creation
 * v2.021  03/05/2021  Register with new commandMaster API
 * v2.022  06/05/2021  Set up MI spells & powers when using Change MI or GM-only 
 *                     change MI menus to add MIs to containers and characters.
 * v2.023  12/05/2021  Set ammo max to current qty on long rest
 * v2.024  14/05/2021  Changed Light menu 'On' buttons to be green.
 * v2.025  16/05/2021  Removed --target command to RoundMaster so that PlayerID can 
 *                     be used as part of the command processing.  Also fixed default 
 *                     values for tables, long rest processing, and spell caster type
 *                     if not specified otherwise.
 * v2.026  09/06/2021  Small fix to View/Use Magic Items to set the default casting-level,
 *                     and amended sendResponse to treat the viewer PID as the GM
 * v2.027  28/06/2021  Adapted chat message handling to use a switch statement 
 *                     and have a try/catch strategy for error capture and 
 *                     prevent the API falling over
 * v2.028  30/06/2021  Change all table operations to use my table management suite
 * v2.029  03/07/2021  Fixed current/max issue with creation of table rows
 * v2.030  04/07/2021  Changed MIs_ table to be Items_ table
 * v2.031  27/07/2021  Introduce new MI type of SelfChargeable which is still selectable
 *                     when at 0 so a [Recharge] button on the item can be pressed
 * v2.032  04/08/2021  Fixed some bugs with quantity reads in GM-only MI menu
 * v2.033  25/08/2021  sendResponse() for tokens controlled by All Players now sends message
 *                     to all players, including the GM.
 * v2.034  26/08/2021  Added Monster Hit Dice as a contributor to Character level assessment,
 *                     and if any MIs added to MIbag ensure container type is set properly
 * v2.035  03/09/2021  Added the ability to have a "Book of Powers" - i.e. an MI with 
 *                     powers/spells that are regained each long rest.
 * v2.036  15/09/2021  Fixed issue with MI stored spells displaying too many
 * v2.037  09/10/2021  Added scanning of the MI Bag for Armour, Shields & protective 
 *                     items and determine the AC on each pick-up, put-down or change 
 *                     to the MI bag.  
 *                     Also corrected Search error handling.  
 *                     Added a button to the Spells menu to call the !rounds -aoe function
 *                     to display a custom area of effect of a spell or other effect.
 * v2.038  26/10/2021  Implemented API database update system
 * v2.039  01/11/2021  Fixed bugs with API database update system
 * v2.040  15/11/2021  Reduced fields object to only include fields used in MagicMaster API
 * v2.041  24/11/2021  Fixed view-spell function if used by a dual class MU/PR
 * v2.042  24/11/2021  Make token_id parameters optional where possible, getting selected
 *                     token instead.  Also, allow --mem-spell to take MU-PR as a class
 * v2.043  01/01/2022  Prioritise user-defined database items over provided ones
 *                     Add spell weapons to the provided weapons database (e.g. Ice Knife)
 *                     Add all remaining spells from the PHB to the databases
 * v2.044  08/01/2022  Added index of database ability objects to improve performance.
 * v2.045  14/01/2022  Fixes to multiclass spell level calculation and non-MU/non-Priest
 *                     spellcaster spell numbers, and force container type when adding items.
 * v2.046  23/01/2022  Fixed illegal characters not rendered by One-Click installation
 *                     Corrected definitions of Spear and Lightning-Bolt
 *                     Added menu for adding Spells & Powers to magic items
 * v2.047  02/02/2022  Added --config command and menu for DM to alter some API behavior
 *                     Fixed Shocking Bracers LB error & enhanced Rage power
 *                     Multiple weapon and magic item definition updates
 */
 
var MagicMaster = (function() {
	'use strict'; 
	var version = 2.047,
		author = 'RED',
		pending = null;
		
	/*
	 * The fields object defines all the fields on a character sheet that the
	 * API uses.  These can be changed by the user **with caution**
	 * DO NOT change the name of each line in the object - this is what the API
	 * uses to find the name of the fields you want on the character sheet.
	 * ONLY CHANGE definitions within the '[...]' brackets.  Before the comma is
	 * the name of the field on the character sheet, and after the comma is the
	 * property used in the attribute object with that name.
	 * For REPEATING TABLE LINES: the table reference is in a definition named '..._table:'
	 * and consists of the reference name before the comma, and a flag defining if the
	 * first row of the table is the 'repeating_..._$0_' line (true) or a static field (false).
	 * Values in the table are then defined as separate definitions below the table
	 * reference definition e.g. 
	 *     MW_table: ['repeating_weapons',false],
	 *     MW_name:  ['weaponname','current'],
	 *     MW_speed: ['weapspeed','current'],
	 * means the MW (Melee Weapons) table has the following structure:
	 *     1st row:  weaponname.current, weapspeed.current
	 *     2nd row:  repeating_weapons_$0_weaponname.current, repeating_weapons_$0_weapspeed.current
	 *     3rd row:  repeating_weapons_$1_weaponname.current, repeating_weapons_$1_weapspeed.current
	 *     etc...
	 */

	const fields = Object.freeze({
		
		feedbackName:       'MagicMaster',
		feedbackImg:        'https://s3.amazonaws.com/files.d20.io/images/11514664/jfQMTRqrT75QfmaD98BQMQ/thumb.png?1439491849',
		MagicItemDB:        'MI-DB',
		MU_SpellsDB:		'MU-Spells-DB',
		PR_SpellsDB:		'PR-Spells-DB',
		GlobalVarsDB:		'MI-DB',
		PowersDB:			'Powers-DB',
		roundMaster:        '!rounds',
		attackMaster:       '!attk',
		commandMaster:		'!cmd',
		defaultTemplate:    '2Edefault',
		spellTemplate:		'2Espell',
		dbVersion:			['db-version','current'],
		SheetVersion:		['character_sheet','current'],
		Total_level:        ['level-total','current'],
		Fighter_class:      ['class1','current'],
		Wizard_class:		['class2','current'],
		Priest_class:      	['class3','current'],
		Rogue_class:		['class4','current'],
		Psion_class:		['class5','current'],
		Fighter_level:      ['level-class1','current'],
		Wizard_level:       ['level-class2','current'],
		Priest_level:       ['level-class3','current'],
		Rogue_level:        ['level-class4','current'],
		Psion_level:        ['level-class5','current'],
		Expenditure:		['expenditure','current'],
		Thac0_base:			['thac0-base','current'],
		Thac0:              ['thac0','current'],
		MonsterThac0:		['monsterthac0','current'],
		HP:					['HP','current'],
		MonsterAC:			['monsterarmor','current'],
		AC:					['AC','current'],
		LightSource:        ['lightsource','current'],
		Strength_hit:       ['strengthhit','current'],
		Wisdom:				['wisdom','current'],
		MW_table:           ['repeating_weapons',0],
		Dmg_table:			['repeating_weapons-damage',0],
		RW_table:           ['repeating_weapons2',0],
		Ammo_table:         ['repeating_ammo',0],
		WP_table:           ['repeating_weaponprofs',0],
		MUSpellNo_table:	['spell-level',true],
		MUSpellNo_total:	['-total','current'],
		MUSpellNo_memable:	['-castable','current','',true],
		MUSpellNo_specialist:['-specialist','current','',true],
		MUSpellNo_misc:		['-misc','current','',true],
		PRSpellNo_table:	['spell-priest-level',true],
		PRSpellNo_total:	['-total','current'],
		PRSpellNo_memable:	['-castable','current','',true],
		PRSpellNo_wisdom:	['-wisdom','current','',true],
		PRSpellNo_misc:		['-misc','current','',true],
		MISpellNo_table:	['spell-level',true],
		MISpellNo_memable:  ['-castable','current'],
		SpellsCols:         3,
		Spells_table:       ['repeating_spells',false],
		Spells_name:        ['spellname','current','-'],
		Spells_db:			['spellname','max',''],
		Spells_speed:       ['casttime','current','5'],
		Spells_cost:		['casttime','max','0'],
		Spells_castValue:	['cast-value','current','0'],
		Spells_castMax:		['cast-max','current','1'],
		Spells_storedLevel:	['spell-points','current','1'],
		Spells_miSpellSet:	['arc','current','0'],
		Spells_msg:			['cast-macro','current',''],
		SpellToMem:			['spelltomem','current'],
		SpellRowRef:		['spellrowref','current'],
		SpellColIndex:		['spellref','current'],
		SpellCharges:		['spellcharges','current'],
		Casting_level:      ['casting-level','current'],
		MU_Casting_level:   ['mu-casting-level','current'],
		PR_Casting_level:   ['pr-casting-level','current'],
		Casting_name:       ['casting-name','current'],
		Spellbook:          ['spellmem','current'],
		Powers_table:       ['repeating_spells',false],
		Powers_name:        ['spellname','current','-'],
		Powers_speed:       ['casttime','current','5'],
		Powers_castValue:	['cast-value','current','0'],
		Powers_castMax:		['cast-max','current','0'],
		MIRows:             100,
		MIRowsStandard:     18,
		MIspellLevel:       15,
		MIpowerLevel:		14,
		Items_table:		['repeating_potions',0],
		Items_name:			['potion','current','-'],
		Items_trueName:		['potion','max',''],
		Items_speed:		['potion-speed','current','5'],
		Items_trueSpeed:	['potion-speed','max','5'],
		Items_qty:			['potionqty','current','0'],
		Items_trueQty:		['potionqty','max','0'],
		Items_cost:			['potion-macro','current','0'],
		Items_type:			['potion-macro','max',''],
		ItemContainerType:	['check-for-mibag','current'],
		ItemContainerSize:	['container-size','current'],
		ItemWeaponList:		['spellmem','current'],
		ItemArmourList:		['spellmem2','current'],
		ItemRingList:		['spellmem3','current'],
		ItemMiscList: 		['spellmem4','current'],
		ItemPotionList:		['spellmem10','current'],
		ItemScrollList:		['spellmem11','current'],
		ItemWandsList:		['spellmem12','current'],
		ItemDMList:			['spellmem13','current'],
		ItemMUspellsList:	['mi-muspells-','current'],
		ItemMUspellValues:	['mi-muspells-','max'],
		ItemPRspellsList:	['mi-prspells-','current'],
		ItemPRspellValues:	['mi-prspells-','max'],
		ItemPowersList:		['mi-powers-','current'],
		ItemPowerValues:	['mi-powers-','max'],
		ItemChosen:			['mi-name','current'],
		ItemCastingTime:    ['MIct', 'current'],
		ItemSelected:       ['MI-chosen', 'current'],
		ItemRowRef:			['MIrowref','current'],
		MIspellPrefix:		['mi-spell-','current'],
		MIpowerPrefix:		['mi-power-','current'],
		CastingTimePrefix:  ['ct-','current'],
		Money_gold:         ['gold','current'],
		Money_silver:       ['silver','current'],
		Money_copper:       ['copper','current'],
		Money_treasure:		['otherval','current'],
		Pick_Pockets:       ['pp','current'],
		Timespent:			['timespent','current'],
		CharDay:			['in-game-day','current'],
		Today:				['today','current'],
		Today_weekday:		['today-weekday','current'],
		Today_day:			['today-day','current'],
		Today_dayth:		['today-dayth','current'],
		Today_month:		['today-month','current'],
		Today_year:			['today-year','current'],
		InHand_table:		['repeating_dusts',0],
		Quiver_table:		['repeating_scrolls',0],
		Monster_hitDice:	['hitdice','current'],
		Monster_hpExtra:	['monsterhpextra','current'],
	}); 
	
	const tableIntro = Object.freeze({
		MELEE:['MW_',fields.MW_table],
		DMG:['Dmg_',fields.Dmg_table],
		RANGED:['RW_',fields.RW_table],
		AMMO:['Ammo_',fields.Ammo_table],
		WPROF:['WP_',fields.WP_table],
		MI:['Items_',fields.Items_table],
		SPELLS:['Spells_',fields.Spells_table],
		POWERS:['Powers_',fields.Powers_table],
		INHAND:['InHand_',fields.InHand_table],
		QUIVER:['Quiver_',fields.Quiver_table],
	});

	const stdDB = ['MU-Spells-DB','PR-Spells-DB','Powers-DB','MI-DB','MI-DB-Ammo','MI-DB-Armour','MI-DB-Light','MI-DB-Potions','MI-DB-Rings','MI-DB-Scrolls-Books','MI-DB-Wands-Staves-Rods','MI-DB-Weapons'];
	
	const dbNames = Object.freeze({
	MI_DB_Light:	{bio:'<header class="bio-header"><blockquote>Light Sources</blockquote></header><main>   <b>v5.6 01/01/2022</b><br><br>   This database holds definitions for light sources such as torches & lanterns that can be carried by creatures or found in locations and picked up.</main>',
					gmnotes:'<header class="gmnotes-header"><blockquote>Change Log</blockquote></header><main>v5.6  01/01/2022 Updated to common release version<br><br>v5.2 - 5.5 Skipped to even up version numbers<br><br>v5.1  31/10/2021  Encoded using machine readable data to support API databases<br><br>v5.0 08/10/2021  Initial creation by separating out the MI-DB into item types</main>',
					root:'MI-DB',
					controlledby:'all',
					avatar:'https://s3.amazonaws.com/files.d20.io/images/6671/thumb.png?1336327350',
					version:5.6,
					db:[{name:'Lantern',type:'Light',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Lantern}}{{subtitle=Light Source}}{{Speed=[[0]]}}Data=[sp:0,rc:uncharged]{{Size=Medium}}{{Shield=Held in 1 hand, and provides a light source}}Specs=[Lantern,Light,1H,Lantern]{{desc=Provides light to illuminate your way. It can be:\nType................Illuminates\nHooded............30ft\nBullseye...........60ft beam\nBeacon............240ft beam\nContinual Light 60ft}}'},
						{name:'Torch',type:'Light',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Torch}}{{subtitle=Light Source}}{{Speed=[[0]]}}Data=[sp:0,rc:uncharged]{{Size=Medium}}{{Shield=Held in 1 hand, with flame}}Specs=[Torch,Light,1H,Lantern]}}{{desc=Provides some crude illumination in dark places, or can be used to set fire to objects}}'},
					]},
	MI_DB_Armour:	{bio:'<blockquote>Armour and Shields</blockquote><b>v5.6  01/01/2022</b><br><br>This Magic Item database holds definitions for Armour & Shields.',
					gmnotes:'<blockquote>Change Log:</blockquote><br>v5.6  01/01/2022  Updated to common release version<br><br>v5.2 - 5.5 Skipped to even up version numbers<br><br>v5.1  29/10/2021  Encoded machine readable data to support API distribution of databases<br><br>v5.0  01/10/2021  Split MI-DB into separate databases for different types of Item. See MI-DB for earlier Change Log.',
					root:'MI-DB',
					controlledby:'all',
					avatar:'https://s3.amazonaws.com/files.d20.io/images/141800/VLyMWsmneMt4n6OBOLYn6A/max.png?1344434416',
					version:5.6,
					db:[{name:'-',type:'',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" This is a blank slot in your Magic Item bag. Go search out some new Magic Items to fill it up!'},
						{name:'Ankheg-Armour',type:'Armour',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Ankheg Armour}}{{subtitle=Armour}}{{Armour=+0 non-magical, constructed like Full Plate}}Specs=[Ankheg,Armour,0H,Plate]{{AC=[[0]]\nNaturally 0, no metal}}ACData=[a:Ankheg,st:Plate,+:0,ac:0,sz:L,wt:25,sp:0,rc:uncharged]{{Speed=[[0]]}}{{Size=Large}}{{Immunity=None}}{{Saves=No effect}}{{desc=Armour made from the shell of an Ankheg. Exceptionally durable, very light, and naturally AC0. Its construction does not involve any metal components.}}'},
						{name:'Armour',type:'',ct:'0',charge:'uncharged',cost:'0',body:'%{MI-DB-Armour|Magical-Armour}'},
						{name:'Armour-of-Resistance+3',type:'Armour',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Field Plate Armour of Resistance+3}}{{subtitle=Magical Armour}}{{Armour=+3 selectively magical Field Plate}}Specs=[Armour-of-Resistance,Armour,0H,Plate]{{AC=[[2]][[0-3]]\nagainst Slashing damage}}ACData=[a:Armour-of-Resistance+3,st:Plate,+S:3,+:0,ac:2,sz:L,wt:60,sp:0,rc:uncharged]{{Speed=[[0]]}}{{Size=Large}}{{Immunity=None}}{{Saves=No effect}}{{desc=This armour provides resistance to Slashing damage only.\nThis armor is a combination of chain or brigandine with metal plates (cuirass, epaulettes, elbow guards, gauntlets, tasets, and greaves) covering vital areas. The weight is distributed over the whole body and the whole thing is held together by buckles and straps. This is the most common form of heavy armor.\nFor each +1 bonus to armor, regardless of the type of armor, the wearer\'s Armor Class moves downward (toward AC 2 . . . to 1 . . . to 0, -1, -2, and so on). Note, however, that Armor Class can never be improved beyond -10.}}'},
						{name:'Armour-of-Vulnerability+-3',type:'Armour',ct:'0',charge:'cursed',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Field Plate Armour of Vulnerability+/-3}}{{subtitle=Cursed Armour}}{{Armour=+/-3 selectively magical Field Plate}}Specs=[Armour-of-Vulnerability|Armour-of-Resistance,Armour,0H,Plate]{{AC=[[2]][[0-3]] better AC against Slashing damage\n+[[3]] worse AC against any other type}}ACData=[a:Armour-of-Vulnerability+-3,st:Mail,+S:3,+P:-3,+B:-3,ac:2,sz:L,wt:60,sp:0,rc:cursed]{{Speed=0}}{{Size=Large}}{{Immunity=None}}{{Saves=No effect}}{{desc=***Curse.*** This armor is cursed, a fact that is revealed only when an identify spell is cast on the armor or you attune to it. Attuning to the armor curses you until you are targeted by the remove curse spell or similar magic; removing the armor fails to end the curse. While cursed, you have vulnerability to two of the three damage types associated with the armor (not the one to which it grants resistance).}}{{desc1=This armour provides resistance to Slashing damage only, but vulnerability to Piercing and Bludgeoning damage. \nThis armor is a combination of chain or brigandine with metal plates (cuirass, epaulettes, elbow guards, gauntlets, tasets, and greaves) covering vital areas. The weight is distributed over the whole body and the whole thing is held together by buckles and straps. This is the most common form of heavy armor.\nFor each +1 bonus to armor, regardless of the type of armor, the wearer\'s Armor Class moves downward (toward AC 2 . . . to 1 . . . to 0, -1, -2, and so on). Note, however, that Armor Class can never be improved beyond -10}}'},
						{name:'Banded-Mail',type:'Armour',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Banded Mail Armour}}{{subtitle=Armour}}{{Armour=Banded Mail armour}}Specs=[Banded Mail,Armour,0H,Mail]{{AC=[[4]]\nvs all attacks}}ACData=[a:Banded-Mail,st:Mail,+:0,ac:4,sz:L,wt:35]{{Speed=[[0]]}}{{Size=Large}}{{Immunity=None}}{{Saves=No effect}}{{desc=This armor is made of overlapping strips of metal sewn to a backing of leather and chain mail. Generally the strips cover only the more vulnerable areas, while the chain and leather protect the joints where freedom of movement must be ensured. Through straps and buckles, the weight is more or less evenly distributed.}}'},
						{name:'Banded-Mail+1',type:'Armour',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Banded Mail +1}}{{subtitle=Magical Armour}}{{Armour=Banded Mail +1 armour}}Specs=[Banded Mail,Armour,0H,Mail]{{AC=[[4]][[0-1]]\nvs all attacks}}ACData=[a:Banded-Mail+1,st:Mail,+:1,ac:4,sz:L,wt:35]{{Speed=[[0]]}}{{Size=Large}}{{Immunity=None}}{{Saves=No effect}}{{desc=This armor is made of overlapping strips of metal sewn to a backing of leather and chain mail. Generally the strips cover only the more vulnerable areas, while the chain and leather protect the joints where freedom of movement must be ensured. Through straps and buckles, the weight is more or less evenly distributed.}}'},
						{name:'Banded-Mail+2',type:'Armour',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Banded Mail +2}}{{subtitle=Magical Armour}}{{Armour=Banded Mail +2 armour}}Specs=[Banded Mail,Armour,0H,Mail]{{AC=[[4]][[0-2]]\nvs all attacks}}ACData=[a:Banded-Mail+2,st:Mail,+:2,ac:4,sz:L,wt:35]{{Speed=[[0]]}}{{Size=Large}}{{Immunity=None}}{{Saves=No effect}}{{desc=This armor is made of overlapping strips of metal sewn to a backing of leather and chain mail. Generally the strips cover only the more vulnerable areas, while the chain and leather protect the joints where freedom of movement must be ensured. Through straps and buckles, the weight is more or less evenly distributed.}}'},
						{name:'Banded-Mail+3',type:'Armour',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Banded Mail Armour +3}}{{subtitle=Magical Armour}}{{Armour=+3 magical Mail armour}}Specs=[Banded Mail,Armour,0H,Mail]{{AC=[[4]][[0-3]]\nvs all attacks}}ACData=[a:Banded-Mail+3,st:Mail,+:3,ac:4,sz:L,wt:35]{{Speed=[[0]]}}{{Size=Large}}{{Immunity=None}}{{Saves=No effect}}{{desc=This armor is made of overlapping strips of metal sewn to a backing of leather and chain mail. Generally the strips cover only the more vulnerable areas, while the chain and leather protect the joints where freedom of movement must be ensured. Through straps and buckles, the weight is more or less evenly distributed.}}'},
						{name:'Body-Shield',type:'Shield',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Body or Tower Shield}}{{subtitle=Shield}}{{Shield=1-handed body shield (also known as a tower shield) made of wood \\amp metal}}Specs=[Body Shield,Shield,1H,Shield]{{AC=+0, Body/Tower shield}}ACData=[a:Body Shield,st:Shield,+:0,+M:1,sz:M,wt:15]{{Speed=[[0]]}}{{Size=Medium}}{{Immunity=None}}{{Saves=No effect}}{{desc=All shields improve a character\'s Armor Class by 1 or more against a specified number of attacks. A shield is useful only to protect the front and flanks of the user. Attacks from the rear or rear flanks cannot be blocked by a shield (exception: a shield slung across the back does help defend against rear attacks). The reference to the size of the shield is relative to the size of the character. Thus, a human\'s small shield would have all the effects of a medium shield when used by a gnome.\nThe *body shield* is a massive shield reaching nearly from chin to toe. It must be firmly fastened to the forearm and the shield hand must grip it at all times. It provides a great deal of protection, improving the Armor Class of the character by 1 against melee attacks and by 2 against missile attacks, for attacks from the front or front flank sides. It is very heavy; the DM may wish to use the optional encumbrance system if he allows this shield.}}'},
						{name:'Bracers-AC4',type:'Armour',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Bracers of Defense AC4}}{{subtitle=Magic Armour}}{{Armour=magical armour composed of a pair of bracers}}Specs=[Bracers,Armour,0H,Magic Item]{{AC=[[4]]}}ACData=[a:Bracers AC4,st:Bracers,+:0,ac:4,sz:S,wt:0]{{Speed=[[0]]}}{{Size=Small}}{{Immunity=None}}{{Saves=No effect}}{{desc=These items appear to be wrist or arm guards. Their magic bestows an effective Armor Class equal to someone wearing armor and employing a shield. If armor is actually worn, the bracers have no additional effect, but they do work in conjunction with other magical items of protection. The Armor Class the bracers of defense bestow is determined by making a percentile roll and consulting the table}}'},
						{name:'Bracers-AC5',type:'Armour',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Bracers of Defense AC5}}{{subtitle=Magic Armour}}{{Armour=magical armour composed of a pair of bracers}}Specs=[Bracers,Armour,0H,Magic Item]{{AC=[[5]]}}ACData=[a:Bracers AC5,st:Bracers,+:0,ac:5,sz:S,wt:0]{{Speed=[[0]]}}[ct:0,ty:uncharged]{{Size=Small}}{{Immunity=None}}{{Saves=No effect}}{{desc=These items appear to be wrist or arm guards. Their magic bestows an effective Armor Class equal to someone wearing armor and employing a shield. If armor is actually worn, the bracers have no additional effect, but they do work in conjunction with other magical items of protection. The Armor Class the bracers of defense bestow is determined by making a percentile roll and consulting the table}}'},
						{name:'Bracers-AC6',type:'Armour',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Bracers of Defense AC6}}{{subtitle=Magic Armour}}{{Armour=magical armour composed of a pair of bracers}}Specs=[Bracers,Armour,0H,Magic Item]{{AC=[[6]]}}ACData=[a:Bracers AC6,st:Bracers,+:0,ac:6,sz:S,wt:0]{{Speed=[[0]]}}[ct:0,ty:uncharged]{{Size=Small}}{{Immunity=None}}{{Saves=No effect}}{{desc=These items appear to be wrist or arm guards. Their magic bestows an effective Armor Class equal to someone wearing armor and employing a shield. If armor is actually worn, the bracers have no additional effect, but they do work in conjunction with other magical items of protection. The Armor Class the bracers of defense bestow is determined by making a percentile roll and consulting the table}}'},
						{name:'Brigandine+1',type:'Armour',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Magical Brigandine +1 Armour}}{{subtitle=Armour}}{{Armour=Brigandine Armour +1}}Specs=[Brigandine,Armour,0H,Brigandine]{{AC=[[6]][[0-1]]\nagainst all attacks}}ACData=[a:Brigandine+1,st:Brigandine,+:1,ac:6,sz:L,wt:35]{{Speed=[[0]]}}{{Size=Large}}{{Immunity=None}}{{Saves=No effect}}{{desc=This armor is made from small metal plates sewn or riveted to a layer of canvas or leather and protected by an outer layer of cloth. It is rather stiff and does not provide adequate protection to the joints where the metal plates must be spaced widely or left off.}}'},
						{name:'Brigandine+2',type:'Armour',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Magical Brigandine +2 Armour}}{{subtitle=Armour}}{{Armour=Brigandine Armour +2}}Specs=[Brigandine,Armour,0H,Brigandine]{{AC=[[6]][[0-2]]\nagainst all attacks}}ACData=[a:Brigandine+2,st:Brigandine,+:2,ac:6,sz:L,wt:35]{{Speed=[[0]]}}{{Size=Large}}{{Immunity=None}}{{Saves=No effect}}{{desc=This armor is made from small metal plates sewn or riveted to a layer of canvas or leather and protected by an outer layer of cloth. It is rather stiff and does not provide adequate protection to the joints where the metal plates must be spaced widely or left off.}}'},
						{name:'Brigandine-Armour',type:'Armour',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Brigandine Armour}}{{subtitle=Armour}}{{Armour=Brigandine Armour}}Specs=[Brigandine,Armour,0H,Brigandine]{{AC=[[6]]\nagainst all attacks}}ACData=[a:Brigandine,st:Brigandine,+:0,ac:6,sz:L,wt:35]{{Speed=[[0]]}}{{Size=Large}}{{Immunity=None}}{{Saves=No effect}}{{desc=This armor is made from small metal plates sewn or riveted to a layer of canvas or leather and protected by an outer layer of cloth. It is rather stiff and does not provide adequate protection to the joints where the metal plates must be spaced widely or left off.}}'},
						{name:'Bronze-Plate+1',type:'Armour',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Bronze Plate Mail +1}}{{subtitle=Armour}}{{Armour=+1 magical plate mail made from bronze}}Specs=[Bronze Plate Mail,Armour,0H,Mail]{{AC=[[4]][[0-1]]\nagainst all attacks}}ACData=[a:Bronze Plate+1,st:Mail,ac:4,+:1,sz:L,wt:45]{{Speed=[[0]]}}{{Size=Large}}{{Immunity=None}}{{Saves=No effect}}{{desc=This is a plate mail armor--a combination of metal plates, chain mail or brigandine, leather and padding--made of softer bronze. It is easier and cheaper to make than steel armor, but it does not protect as well. A large breastplate and other metal plates cover areas of the body, but the other materials must protect the joints and movable parts of the body. It is not the full plate armor of the heavy knight of the Late Middle Ages and the Renaissance.}}'},
						{name:'Bronze-Plate+2',type:'Armour',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Bronze Plate Mail +2}}{{subtitle=Armour}}{{Armour=+2 magical plate mail made from bronze}}Specs=[Bronze Plate Mail,Armour,0H,Mail]{{AC=[[4]][[0-2]]\nagainst all attacks}}ACData=[a:Bronze Plate+2,st:Mail,ac:4,+:2,sz:L,wt:45]{{Speed=[[0]]}}{{Size=Large}}{{Immunity=None}}{{Saves=No effect}}{{desc=This is a plate mail armor--a combination of metal plates, chain mail or brigandine, leather and padding--made of softer bronze. It is easier and cheaper to make than steel armor, but it does not protect as well. A large breastplate and other metal plates cover areas of the body, but the other materials must protect the joints and movable parts of the body. It is not the full plate armor of the heavy knight of the Late Middle Ages and the Renaissance.}}'},
						{name:'Bronze-Plate-Mail',type:'Armour',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Bronze Plate Mail}}{{subtitle=Armour}}{{Armour=Plate mail made from bronze}}Specs=[Bronze Plate Mail,Armour,0H,Mail]{{AC=[[4]] against all attacks}}ACData=[a:Bronze Plate Mail,st:Mail,ac:4,+:0,sz:L,wt:45]{{Speed=[[0]]}}{{Size=Large}}{{Immunity=None}}{{Saves=No effect}}{{desc=This is a plate mail armor--a combination of metal plates, chain mail or brigandine, leather and padding--made of softer bronze. It is easier and cheaper to make than steel armor, but it does not protect as well. A large breastplate and other metal plates cover areas of the body, but the other materials must protect the joints and movable parts of the body. It is not the full plate armor of the heavy knight of the Late Middle Ages and the Renaissance.}}'},
						{name:'Buckler',type:'Shield',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Buckler}}{{subtitle=Shield}}{{Shield=Hands-free shield for archers, made of metal}}Specs=[Buckler,Shield,0H,Shield]{{AC=+0 Buckler, against 1 attack only}}ACData=[a:Buckler,st:Shield,+:0,sz:S,wt:3]{{Speed=[[0]]}}{{Size=Small}}{{Immunity=None}}{{Saves=No effect}}{{desc=All shields improve a character\'s Armor Class by 1 or more against a specified number of attacks. A shield is useful only to protect the front and flanks of the user. Attacks from the rear or rear flanks cannot be blocked by a shield (exception: a shield slung across the back does help defend against rear attacks). The reference to the size of the shield is relative to the size of the character. Thus, a human\'s small shield would have all the effects of a medium shield when used by a gnome.\nA* buckler (or target)* is a very small shield that fastens on the forearm. It can be worn by crossbowmen and archers with no hindrance. Its small size enables it to protect against only one attack per melee round (of the user\'s choice), improving the character\'s Armor Class by 1 against that attack.}}'},
						{name:'Buckler+1',type:'Shield',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Buckler+1}}{{subtitle=Magical Shield}}{{Shield=Hands-free magical shield for archers, made of metal}}Specs=[Buckler,Shield,0H,Shield]{{AC=+1 Buckler, against 1 attack only}}ACData=[a:Buckler+1,st:Shield,+:1,sz:S,wt:3]{{Speed=[[0]]}}{{Size=Small}}{{Immunity=None}}{{Saves=No effect}}{{desc=All shields improve a character\'s Armor Class by 1 or more against a specified number of attacks. A shield is useful only to protect the front and flanks of the user. Attacks from the rear or rear flanks cannot be blocked by a shield (exception: a shield slung across the back does help defend against rear attacks). The reference to the size of the shield is relative to the size of the character. Thus, a human\'s small shield would have all the effects of a medium shield when used by a gnome.\nA* buckler (or target)* is a very small shield that fastens on the forearm. It can be worn by crossbowmen and archers with no hindrance. Its small size enables it to protect against only one attack per melee round (of the user\'s choice), improving the character\'s Armor Class by 1 against that attack.}}'},
						{name:'Buckler+2',type:'Shield',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Buckler+2}}{{subtitle=Magical Shield}}{{Shield=Hands-free magical shield for archers, made of metal}}Specs=[Buckler,Shield,0H,Shield]{{AC=+2 Buckler, against 1 attack only}}ACData=[a:Buckler+2,st:Shield,+:2,sz:S,wt:3]{{Speed=[[0]]}}{{Size=Small}}{{Immunity=None}}{{Saves=No effect}}{{desc=All shields improve a character\'s Armor Class by 1 or more against a specified number of attacks. A shield is useful only to protect the front and flanks of the user. Attacks from the rear or rear flanks cannot be blocked by a shield (exception: a shield slung across the back does help defend against rear attacks). The reference to the size of the shield is relative to the size of the character. Thus, a human\'s small shield would have all the effects of a medium shield when used by a gnome.\nA* buckler (or target)* is a very small shield that fastens on the forearm. It can be worn by crossbowmen and archers with no hindrance. Its small size enables it to protect against only one attack per melee round (of the user\'s choice), improving the character\'s Armor Class by 1 against that attack.}}'},
						{name:'Buckler+3',type:'Shield',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Buckler+3}}{{subtitle=Magical Shield}}{{Shield=Hands-free magical shield for archers, made of metal}}Specs=[Buckler,Shield,0H,Shield]{{AC=+3 Buckler, against 1 attack only}}ACData=[a:Buckler+3,st:Shield,+:3,sz:S,wt:3]{{Speed=[[0]]}}{{Size=Small}}{{Immunity=None}}{{Saves=No effect}}{{desc=All shields improve a character\'s Armor Class by 1 or more against a specified number of attacks. A shield is useful only to protect the front and flanks of the user. Attacks from the rear or rear flanks cannot be blocked by a shield (exception: a shield slung across the back does help defend against rear attacks). The reference to the size of the shield is relative to the size of the character. Thus, a human\'s small shield would have all the effects of a medium shield when used by a gnome.\nA* buckler (or target)* is a very small shield that fastens on the forearm. It can be worn by crossbowmen and archers with no hindrance. Its small size enables it to protect against only one attack per melee round (of the user\'s choice), improving the character\'s Armor Class by 1 against that attack.}}'},
						{name:'Chain-Mail',type:'Armour',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Chain Mail}}{{subtitle=Armour}}{{Armour=Chain Mail}}Specs=[Chain Mail,Armour,0H,Mail]{{AC=[[5]]\nvs all attacks}}ACData=[a:Chain Mail,st:Mail,+:0,ac:5,sz:L,wt:40]{{Speed=[[0]]}}{{Size=Large}}{{Immunity=None}}{{Saves=No effect}}{{desc=This armor is made of interlocking metal rings. It is always worn with a layer of quilted fabric padding underneath to prevent painful chafing and to cushion the impact of blows. Several layers of mail are normally hung over vital areas. The links yield easily to blows, absorbing some of the shock. Most of the weight of this armor is carried on the shoulders and it is uncomfortable to wear for long periods of time.}}'},
						{name:'Chain-Mail+1',type:'Armour',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Chain Mail +1}}{{subtitle=Magical Armour}}{{Armour=+1 magical chain mail}}Specs=[Chain mail,Armour,0H,Mail]{{AC=[[5]][[0-1]]\nvs all attacks}}ACData=[a:Chain Mail+1,st:Mail,+:1,ac:5,sz:L,wt:40]{{Speed=[[0]]}}{{Size=Large}}{{Immunity=None}}{{Saves=No effect}}{{desc=This armor is made of interlocking metal rings. It is always worn with a layer of quilted fabric padding underneath to prevent painful chafing and to cushion the impact of blows. Several layers of mail are normally hung over vital areas. The links yield easily to blows, absorbing some of the shock. Most of the weight of this armor is carried on the shoulders and it is uncomfortable to wear for long periods of time.}}'},
						{name:'Chain-Mail+2',type:'Armour',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Chain Mail +2}}{{subtitle=Magical Armour}}{{Armour=+2 magical chain mail}}Specs=[Chain mail,Armour,0H,Mail]{{AC=[[5]][[0-2]]\nvs all attacks}}ACData=[a:Chain Mail+2,st:Mail,+:2,ac:5,sz:L,wt:40]{{Speed=[[0]]}}{{Size=Large}}{{Immunity=None}}{{Saves=No effect}}{{desc=This armor is made of interlocking metal rings. It is always worn with a layer of quilted fabric padding underneath to prevent painful chafing and to cushion the impact of blows. Several layers of mail are normally hung over vital areas. The links yield easily to blows, absorbing some of the shock. Most of the weight of this armor is carried on the shoulders and it is uncomfortable to wear for long periods of time.}}'},
						{name:'Field-Plate',type:'Armour',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Field Plate}}{{subtitle=Armour}}{{Armour=Field plate}}Specs=[Field Plate,Armour,0H,Plate]{{AC=[[3]] against all attacks}}ACData=[a:Field Plate,st:Plate,ac:3,+:0,sz:L,wt:60]{{Speed=[[0]]}}{{Size=Large}}{{Immunity=None}}{{Saves=No effect}}{{desc=This is the most common version of full plate armor, consisting of shaped and fitted metal plates riveted and interlocked to cover the entire body. It includes gauntlets, boots, and a visored helmet. A thick layer of padding must be worn underneath. However, the weight of the suit is well-distributed over the whole body. Such armor hampers movement only slightly. Aside from its expense, the main disadvantages are the lack of ventilation and the time required to put it on and take it off. Each suit of field plate must be individually fitted to its owner by a master armorer, although captured pieces can be resized to fit the new owner (unless such is patently absurd, such as a human trying to resize a halfling\'s armor).}}'},
						{name:'Field-Plate+1',type:'Armour',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Field Plate+1}}{{subtitle=Armour}}{{Armour=Magical Field plate +1}}Specs=[Field Plate,Armour,0H,Plate]{{AC=[[3]][[0-1]]\nagainst all attacks}}ACData=[a:Field Plate+1,st:Plate,ac:3,+:1,sz:L,wt:60]{{Speed=[[0]]}}{{Size=Large}}{{Immunity=None}}{{Saves=No effect}}{{desc=This is the most common version of full plate armor, consisting of shaped and fitted metal plates riveted and interlocked to cover the entire body. It includes gauntlets, boots, and a visored helmet. A thick layer of padding must be worn underneath. However, the weight of the suit is well-distributed over the whole body. Such armor hampers movement only slightly. Aside from its expense, the main disadvantages are the lack of ventilation and the time required to put it on and take it off. Each suit of field plate must be individually fitted to its owner by a master armorer, although captured pieces can be resized to fit the new owner (unless such is patently absurd, such as a human trying to resize a halfling\'s armor).}}'},
						{name:'Field-Plate+2',type:'Armour',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Field Plate+2}}{{subtitle=Armour}}{{Armour=Magical Field plate +2}}Specs=[Field Plate,Armour,0H,Plate]{{AC=[[3]][[0-2]]\nagainst all attacks}}ACData=[a:Field Plate+2,st:Plate,ac:3,+:2,sz:L,wt:60]{{Speed=[[0]]}}{{Size=Large}}{{Immunity=None}}{{Saves=No effect}}{{desc=This is the most common version of full plate armor, consisting of shaped and fitted metal plates riveted and interlocked to cover the entire body. It includes gauntlets, boots, and a visored helmet. A thick layer of padding must be worn underneath. However, the weight of the suit is well-distributed over the whole body. Such armor hampers movement only slightly. Aside from its expense, the main disadvantages are the lack of ventilation and the time required to put it on and take it off. Each suit of field plate must be individually fitted to its owner by a master armorer, although captured pieces can be resized to fit the new owner (unless such is patently absurd, such as a human trying to resize a halfling\'s armor).}}'},
						{name:'Full-Plate',type:'Armour',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Full-Plate Armour}}{{subtitle=Armour}}{{Armour=Full Plate}}Specs=[Full Plate,Armour,0H,Plate]{{AC=[[1]]\nagainst all attacks}}ACData=[a:Full Plate,st:Plate,+:0,ac:1,sz:L,wt:70]{{Speed=[[0]]}}{{Size=Large}}{{Immunity=None}}{{Saves=No effect}}{{desc=This is the impressive, high Gothic-style armor of the Late Middle Ages and Renaissance. It is perfectly forged and fitted. All the plates are interlocking and carefully angled to deflect blows. The surfaces are normally highly ornamented with etching and inlaid metals. Each suit must be carefully custom-fitted to the owner and there is only a 20% chance that a captured suit can be refitted to a new owner of approximately the same size. The metal plates are backed by padding and chain mail. The weight is well-distributed. The armor is hot, slow to don, and extremely expensive. *Due to these factors, it tends to be used more for parades and triumphs than actual combat.*}}'},
						{name:'Full-Plate+1',type:'Armour',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Full-Plate+1}}{{subtitle=Armour}}{{Armour=+1 magical Full Plate}}Specs=[Full Plate,Armour,0H,Plate]{{AC=[[1]][[0-1]]\nagainst all attacks}}ACData=[a:Full Plate+1,st:Plate,+:1,ac:1,sz:L,wt:70]{{Speed=[[0]]}}{{Size=Large}}{{Immunity=None}}{{Saves=No effect}}{{desc=This is the impressive, high Gothic-style armor of the Late Middle Ages and Renaissance. It is perfectly forged and fitted. All the plates are interlocking and carefully angled to deflect blows. The surfaces are normally highly ornamented with etching and inlaid metals. Each suit must be carefully custom-fitted to the owner and there is only a 20% chance that a captured suit can be refitted to a new owner of approximately the same size. The metal plates are backed by padding and chain mail. The weight is well-distributed. The armor is hot, slow to don, and extremely expensive. *Due to these factors, it tends to be used more for parades and triumphs than actual combat.*}}'},
						{name:'Full-Plate+2',type:'Armour',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Full-Plate+2}}{{subtitle=Armour}}{{Armour=+2 magical Full Plate}}Specs=[Full Plate,Armour,0H,Plate]{{AC=[[1]][[0-2]]\nagainst all attacks}}ACData=[a:Full Plate+2,st:Plate,+:2,ac:1,sz:L,wt:70]{{Speed=[[0]]}}{{Size=Large}}{{Immunity=None}}{{Saves=No effect}}{{desc=This is the impressive, high Gothic-style armor of the Late Middle Ages and Renaissance. It is perfectly forged and fitted. All the plates are interlocking and carefully angled to deflect blows. The surfaces are normally highly ornamented with etching and inlaid metals. Each suit must be carefully custom-fitted to the owner and there is only a 20% chance that a captured suit can be refitted to a new owner of approximately the same size. The metal plates are backed by padding and chain mail. The weight is well-distributed. The armor is hot, slow to don, and extremely expensive. *Due to these factors, it tends to be used more for parades and triumphs than actual combat.*}}'},
						{name:'Helm-of-Languages',type:'Miscellaneous',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Helm of Comprehending Languages \\amp Reading Magic}}{{subtitle=Magic Item}}Specs=[Helm of Languages,Miscellaneous,0H,Helm]{{Speed=[[0]]}}ACData=[a:Helm of Languages,sp:0,rc:uncharged]{{Size=Medium}}{{Immunity=None}}{{desc=Appearing as a normal helmet, a helmet of comprehending languages and reading magic enables its wearer to understand 90% of strange tongues and writings and 80% of magical writings. (Note that these percentage figures apply to whether all or none of the speaking/writing or inscription is understandable. Understanding does not necessarily imply spell use.) This device is equal to a normal helmet of the type accompanying Armor Class 5.}}'},
						{name:'Hide-Armour',type:'Armour',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Hide Armour}}{{subtitle=Armour}}{{Armour=Hide Armour}}Specs=[Hide,Armour,0H,Hide]{{AC=[[6]]\nagainst all attacks}}ACData=[a:Hide,st:Hide,+:0,ac:6,sz:L,wt:30]{{Speed=[[0]]}}{{Size=Large}}{{Immunity=None}}{{Saves=No effect}}{{desc=This is armor prepared from the extremely thick hide of a creature (such as an elephant) or from multiple layers of regular leather. It is stiff and hard to move in.}}'},
						{name:'Hide-Armour+1',type:'Armour',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Hide Armour +1}}{{subtitle=Magical Armour}}{{Armour=Hide Armour +1}}Specs=[Hide,Armour,0H,Hide]{{AC=[[6]][[0-1]]\nagainst all attacks}}ACData=[a:Hide+1,st:Hide,+:1,ac:6,sz:L,wt:30]{{Speed=[[0]]}}{{Size=Large}}{{Immunity=None}}{{Saves=No effect}}{{desc=This is armor prepared from the extremely thick hide of a creature (such as an elephant) or from multiple layers of regular leather. It is stiff and hard to move in.}}'},
						{name:'Hide-Armour+2',type:'Armour',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Hide Armour +2}}{{subtitle=Magical Armour}}{{Armour=Hide Armour +2}}Specs=[Hide,Armour,0H,Hide]{{AC=[[6]][[0-2]]\nagainst all attacks}}ACData=[a:Hide+2,st:Hide,+:2,ac:6,sz:L,wt:30]{{Speed=[[0]]}}{{Size=Large}}{{Immunity=None}}{{Saves=No effect}}{{desc=This is armor prepared from the extremely thick hide of a creature (such as an elephant) or from multiple layers of regular leather. It is stiff and hard to move in.}}'},
						{name:'Indirect',type:'',ct:'0',charge:'uncharged',cost:'0',body:'@{'},
						{name:'Leather',type:'Armour',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Leather Armour}}{{subtitle=Armour}}{{Armour=Leather armour}}Specs=[Leather,Armour,0H,Leather]{{AC=[[8]]\nagainst all attacks}}ACData=[a:Leather,st:Leather,+:0,ac:8,sz:L,wt:15]{{Speed=[[0]]}}{{Size=Large}}{{Immunity=None}}{{Saves=No effect}}{{desc=This armor is made of leather hardened in boiling oil and then shaped into breastplate and shoulder protectors. The remainder of the suit is fashioned from more flexible, somewhat softer materials.}}'},
						{name:'Leather+1',type:'Armour',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Leather+1}}{{subtitle=Magical Armour}}{{Armour=+1 magical leather armour}}Specs=[Leather,Armour,0H,Leather]{{AC=[[8]][[0-1]]\nagainst all attacks}}ACData=[a:Leather+1,st:Leather,+:1,ac:8,sz:L,wt:15]{{Speed=[[0]]}}{{Size=Large}}{{Immunity=None}}{{Saves=No effect}}{{desc=This armor is made of leather hardened in boiling oil and then shaped into breastplate and shoulder protectors. The remainder of the suit is fashioned from more flexible, somewhat softer materials.}}'},
						{name:'Leather+2',type:'Armour',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Leather+2}}{{subtitle=Magical Armour}}{{Armour=+2 magical leather armour}}Specs=[Leather,Armour,0H,Leather]{{AC=[[8]][[0-2]]\nagainst all attacks}}ACData=[a:Leather+2,st:Leather,+:2,ac:8,sz:L,wt:15]{{Speed=[[0]]}}{{Size=Large}}{{Immunity=None}}{{Saves=No effect}}{{desc=This armor is made of leather hardened in boiling oil and then shaped into breastplate and shoulder protectors. The remainder of the suit is fashioned from more flexible, somewhat softer materials.}}'},
						{name:'Leather-Armour',type:'Armour',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Leather Armour}}{{subtitle=Armour}}{{Armour=Leather armour}}Specs=[Leather,Armour,0H,Leather]{{AC=[[8]]\nagainst all attacks}}ACData=[a:Leather,st:Leather,+:0,ac:8,sz:L,wt:15]{{Speed=[[0]]}}{{Size=Large}}{{Immunity=None}}{{Saves=No effect}}{{desc=This armor is made of leather hardened in boiling oil and then shaped into breastplate and shoulder protectors. The remainder of the suit is fashioned from more flexible, somewhat softer materials.}}'},
						{name:'Magical-Armour',type:'DMitem',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Unknown Magical Armour}}{{subtitle=Magical Armour}}Specs=[Magical Armour,DMitem,0H,Armour]{{Speed=[[0]]}}ACData=[w:Magical Armour]{{Size=Large}}{{Immunity=Unknown}}{{Resistance=+? on AC}}{{Saves=Unknown effect}}{{desc=This armour appears especially well made, and seems to glow somewhat if in a darkened area. Check with the DM as to what type of materials it seems to be made of}}'},
						{name:'Magical-Shield',type:'',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Unknown Magical Shield}}{{subtitle=Magical Armour}}{{Shield=+? on AC}}[Magical Shield,DMitem,1H,Shield]{{AC=AC [[0-1]] -?}}ACData=[a:Magical Shield,st:Shield,+:0,sz:M,wt:10]{{Speed=[[0]]}}{{Size=Medium (even if small)}}{{Immunity=Unknown}}{{Saves=Unknown effect}}{{desc=This shield seems to be exceptionally finely crafted, and gleams with hidden power. Check with the DM about its size and material components}}'},
						{name:'Magical-plate+0',type:'Armour',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Magical Plate +0}}{{subtitle=Magical Armour}}{{Armour=+0 magical armour (so resizes itself to fit}}Specs=[Full Plate,Armour,0H,Plate]{{AC=[[1]]\nagainst all attacks}}ACData=[a:Magical Plate+0,st:Plate,+:0,ac:1,sz:L,wt:70]{{Speed=[[0]]}}{{Size=Large}}{{Immunity=None}}{{Resistance=+[[0]] on AC}}{{Saves=No effect}}{{desc=This is the impressive, high Gothic-style armor of the Late Middle Ages and Renaissance. It is perfectly forged and fitted. All the plates are interlocking and carefully angled to deflect blows. The surfaces are normally highly ornamented with etching and inlaid metals. Each suit must be carefully custom-fitted to the owner and there is only a 20% chance that a captured suit can be refitted to a new owner of approximately the same size. The metal plates are backed by padding and chain mail. The weight is well-distributed. The armor is hot, slow to don, and extremely expensive. *Due to these factors, it tends to be used more for parades and triumphs than actual combat.*}}'},
						{name:'Memorise-MI-Power',type:'',ct:'0',charge:'uncharged',cost:'0',body:'!magic --mem-spell MIPOWERS|@{selected|token_id}'},
						{name:'Padded-Armour',type:'Armour',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Padded Armour}}{{subtitle=Armour}}{{Armour=Padded armour}}Specs=[Padded Armour,Armour,0H,Padded]{{AC=[[8]]\nagainst all attacks}}ACData=[a:Padded Armour,st:Padded,+:0,ac:8,sz:L,wt:10]{{Speed=[[0]]}}{{Size=Large}}{{Immunity=None}}{{Saves=No effect}}{{desc=This is the simplest type of armor, fashioned from quilted layers of cloth and batting. It tends to get hot and after a time becomes foul with sweat, grime, lice, and fleas.}}'},
						{name:'Padded-Armour+1',type:'Armour',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Padded Armour +1}}{{subtitle=Magical Armour}}{{Armour=Magical Padded armour +1}}Specs=[Padded Armour,Armour,0H,Padded]{{AC=[[8]][[0-1]]\nagainst all attacks}}ACData=[a:Padded Armour+1,st:Padded,+:1,ac:8,sz:L,wt:10]{{Speed=[[0]]}}{{Size=Large}}{{Immunity=None}}{{Saves=No effect}}{{desc=This is the simplest type of armor, fashioned from quilted layers of cloth and batting. It tends to get hot and after a time becomes foul with sweat, grime, lice, and fleas.}}'},
						{name:'Padded-Armour+2',type:'Armour',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Padded Armour +2}}{{subtitle=Magical Armour}}{{Armour=Magical Padded armour +2}}Specs=[Padded Armour,Armour,0H,Padded]{{AC=[[8]][[0-2]]\nagainst all attacks}}ACData=[a:Padded Armour+2,st:Padded,+:2,ac:8,sz:L,wt:10]{{Speed=[[0]]}}{{Size=Large}}{{Immunity=None}}{{Saves=No effect}}{{desc=This is the simplest type of armor, fashioned from quilted layers of cloth and batting. It tends to get hot and after a time becomes foul with sweat, grime, lice, and fleas.}}'},
						{name:'Plate+1',type:'Armour',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Magical Plate+1}}{{subtitle=Armour}}{{Armour=+1 magical field plate}}Specs=[Field Plate,Armour,0H,Plate]{{AC=[[2]][[0-1]] against all attacks}}ACData=[a:Field Plate +1,st:Plate,ac:2,+:1,sz:L,wt:60]{{Speed=[[0]]}}{{Size=Large}}{{Immunity=None}}{{Saves=No effect}}{{desc=This is the most common version of full plate armor, consisting of shaped and fitted metal plates riveted and interlocked to cover the entire body. It includes gauntlets, boots, and a visored helmet. A thick layer of padding must be worn underneath. However, the weight of the suit is well-distributed over the whole body. Such armor hampers movement only slightly. Aside from its expense, the main disadvantages are the lack of ventilation and the time required to put it on and take it off. Each suit of field plate must be individually fitted to its owner by a master armorer, although captured pieces can be resized to fit the new owner (unless such is patently absurd, such as a human trying to resize a halfling\'s armor).}}'},
						{name:'Plate+1+3-vs-Breath',type:'Armour',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Magical Plate+1, +3 vs Breath Weapons}}{{subtitle=Armour}}{{Armour=+1 Field Plate}}Specs=[Field Plate,Armour,0H,Plate]{{AC=[[2]][[0-1]] against all attacks}}ACData=[a:Field Plate+1+3 vs Breath,st:Plate,ac:2,+:1,sz:L,wt:60]{{Speed=[[0]]}}{{Size=Large}}{{Immunity=None}}{{Saves=+[[3]] vs Breath Weapons}}{{desc=This is the most common version of full plate armor, consisting of shaped and fitted metal plates riveted and interlocked to cover the entire body. It includes gauntlets, boots, and a visored helmet. A thick layer of padding must be worn underneath. However, the weight of the suit is well-distributed over the whole body. Such armor hampers movement only slightly. Aside from its expense, the main disadvantages are the lack of ventilation and the time required to put it on and take it off. Each suit of field plate must be individually fitted to its owner by a master armorer, although captured pieces can be resized to fit the new owner (unless such is patently absurd, such as a human trying to resize a halfling\'s armor).}}'},
						{name:'Plate+2',type:'Armour',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Magical Plate+2}}{{subtitle=Armour}}{{Armour=+2 magical field plate}}Specs=[Field Plate,Armour,0H,Plate]{{AC=[[3]][[0-2]] against all attacks}}ACData=[a:Field Plate+2,st:Plate,ac:3,+:2,sz:L,wt:60]{{Speed=[[0]]}}{{Size=Large}}{{Immunity=None}}{{Saves=No effect}}{{desc=This is the most common version of full plate armor, consisting of shaped and fitted metal plates riveted and interlocked to cover the entire body. It includes gauntlets, boots, and a visored helmet. A thick layer of padding must be worn underneath. However, the weight of the suit is well-distributed over the whole body. Such armor hampers movement only slightly. Aside from its expense, the main disadvantages are the lack of ventilation and the time required to put it on and take it off. Each suit of field plate must be individually fitted to its owner by a master armorer, although captured pieces can be resized to fit the new owner (unless such is patently absurd, such as a human trying to resize a halfling\'s armor).}}'},
						{name:'Plate-Mail',type:'Armour',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Plate Mail}}{{subtitle=Armour}}{{Armour=Plate mail made from steel}}Specs=[Plate Mail,Armour,0H,Mail]{{AC=[[3]] against all attacks}}ACData=[a:Plate Mail,st:Mail,ac:3,+:0,sz:L,wt:50]{{Speed=[[0]]}}{{Size=Large}}{{Immunity=None}}{{Saves=No effect}}{{desc=This armor is a combination of chain or brigandine with metal plates (cuirass, epaulettes, elbow guards, gauntlets, tasets, and greaves) covering vital areas. The weight is distributed over the whole body and the whole thing is held together by buckles and straps. This is the most common form of heavy armor.}}'},
						{name:'Plate-Mail+1',type:'Armour',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Plate Mail+1}}{{subtitle=Magical Armour}}{{Armour=Magical Plate Mail +1}}Specs=[Plate Mail,Armour,0H,Mail]{{AC=[[3]][[0-1]]\nagainst all attacks}}ACData=[a:Plate Mail+1,st:Mail,ac:3,+:1,sz:L,wt:50]{{Speed=[[0]]}}{{Size=Large}}{{Immunity=None}}{{Saves=No effect}}{{desc=This armor is a combination of chain or brigandine with metal plates (cuirass, epaulettes, elbow guards, gauntlets, tasets, and greaves) covering vital areas. The weight is distributed over the whole body and the whole thing is held together by buckles and straps. This is the most common form of heavy armor.}}'},
						{name:'Plate-Mail+2',type:'Armour',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Plate Mail+2}}{{subtitle=Magical Armour}}{{Armour=Magical Plate Mail +2}}Specs=[Plate Mail,Armour,0H,Mail]{{AC=[[3]][[0-2]]\nagainst all attacks}}ACData=[a:Plate Mail+2,st:Mail,ac:3,+:2,sz:L,wt:50]{{Speed=[[0]]}}{{Size=Large}}{{Immunity=None}}{{Saves=No effect}}{{desc=This armor is a combination of chain or brigandine with metal plates (cuirass, epaulettes, elbow guards, gauntlets, tasets, and greaves) covering vital areas. The weight is distributed over the whole body and the whole thing is held together by buckles and straps. This is the most common form of heavy armor.}}'},
						{name:'Ring-Mail',type:'Armour',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Ring Mail}}{{subtitle=Armour}}{{Armour=Ring Mail}}Specs=[Ring Mail,Armour,0H,Mail]{{AC=[[7]]\nagainst all attacks}}ACData=[a:Ring Mail,st:Mail,+:0,ac:7,sz:L,wt:30]{{Speed=[[0]]}}[ct:0,ty:uncharged]{{Size=Large}}{{Immunity=None}}{{Saves=No effect}}{{desc=This armor is an early (and less effective) form of chain mail in which metal rings are sewn directly to a leather backing instead of being interlaced. (Historians still debate whether this armor ever existed.)}}'},
						{name:'Ring-Mail+1',type:'Armour',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Ring Mail+1}}{{subtitle=Armour}}{{Armour=Magical Ring Mail+1}}Specs=[Ring Mail,Armour,0H,Mail]{{AC=[[7]][[0-1]]\nagainst all attacks}}ACData=[a:Ring Mail+1,st:Mail,+:1,ac:7,sz:L,wt:30]{{Speed=[[0]]}}{{Size=Large}}{{Immunity=None}}{{Saves=No effect}}{{desc=This armor is an early (and less effective) form of chain mail in which metal rings are sewn directly to a leather backing instead of being interlaced. (Historians still debate whether this armor ever existed.)}}'},
						{name:'Ring-Mail+2',type:'Armour',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Ring Mail+2}}{{subtitle=Armour}}{{Armour=Magical Ring Mail+2}}Specs=[Ring Mail,Armour,0H,Mail]{{AC=[[7]][[0-2]]\nagainst all attacks}}ACData=[a:Ring Mail+2,st:Mail,+:2,ac:7,sz:L,wt:30]{{Speed=[[0]]}}{{Size=Large}}{{Immunity=None}}{{Saves=No effect}}{{desc=This armor is an early (and less effective) form of chain mail in which metal rings are sewn directly to a leather backing instead of being interlaced. (Historians still debate whether this armor ever existed.)}}'},
						{name:'Scale-Mail',type:'Armour',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Scale Mail}}{{subtitle=Armour}}{{Armour=Scale Mail}}Specs=[Scale Mail,Armour,0H,Mail]{{AC=[[6]]\nagainst all attacks}}ACData=[a:Scale Mail,st:Mail,+:0,ac:6,sz:L,wt:40]{{Speed=[[0]]}}{{Size=Large}}{{Immunity=None}}{{Saves=No effect}}{{desc=This is a coat and leggings (and perhaps a separate skirt) of leather covered with overlapping pieces of metal, much like the scales of a fish.}}'},
						{name:'Scale-Mail+1',type:'Armour',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Scale Mail+1}}{{subtitle=Magical Armour}}{{Armour=Magical Scale Mail+1}}Specs=[Scale Mail,Armour,0H,Mail]{{AC=[[6]][[0-1]]\nagainst all attacks}}ACData=[a:Scale Mail+1,st:Mail,+:1,ac:6,sz:L,wt:40]{{Speed=[[0]]}}{{Size=Large}}{{Immunity=None}}{{Saves=No effect}}{{desc=This is a coat and leggings (and perhaps a separate skirt) of leather covered with overlapping pieces of metal, much like the scales of a fish.}}'},
						{name:'Scale-Mail+2',type:'Armour',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Scale Mail+2}}{{subtitle=Magical Armour}}{{Armour=Magical Scale Mail+2}}Specs=[Scale Mail,Armour,0H,Mail]{{AC=[[6]][[0-2]]\nagainst all attacks}}ACData=[a:Scale Mail+2,st:Mail,+:2,ac:6,sz:L,wt:40]{{Speed=[[0]]}}{{Size=Large}}{{Immunity=None}}{{Saves=No effect}}{{desc=This is a coat and leggings (and perhaps a separate skirt) of leather covered with overlapping pieces of metal, much like the scales of a fish.}}'},
						{name:'Shield',type:'Shield',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Medium Shield}}{{subtitle=Shield}}{{Shield=1-handed medium shield made of wood only}}Specs=[Wooden Shield,Shield,1H,Shield]{{AC=+0, Medium shield}}ACData=[a:Wooden Shield,st:Shield,+:0,sz:M,wt:10]{{Speed=[[0]]}}{{Size=Medium}}{{Immunity=None}}{{Saves=No effect}}{{desc=All shields improve a character\'s Armor Class by 1 or more against a specified number of attacks. A shield is useful only to protect the front and flanks of the user. Attacks from the rear or rear flanks cannot be blocked by a shield (exception: a shield slung across the back does help defend against rear attacks). The reference to the size of the shield is relative to the size of the character. Thus, a human\'s small shield would have all the effects of a medium shield when used by a gnome.\n*The medium shield* is carried on the forearm and gripped with the hand. Its weight prevents the character from using his shield hand for other purposes. With a medium shield, a character can protect against any frontal or flank attacks.}}'},
						{name:'Shield+1',type:'Shield',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Shield+1}}{{subtitle=Shield}}{{Shield=1-handed +1 Medium Shield made of wood \\amp metal}}Specs=[Medium Shield,Shield,1H,Shield]{{AC=+[[1]] against all attacks from the front}}ACData=[a:Medium Shield+1,st:Shield,+:1,sz:M,wt:10]{{Speed=[[0]]}}{{Size=M}}{{Immunity=None}}{{Saves=No effect}}{{desc=All shields improve a character\'s Armor Class by 1 or more against a specified number of attacks. A shield is useful only to protect the front and flanks of the user. Attacks from the rear or rear flanks cannot be blocked by a shield (exception: a shield slung across the back does help defend against rear attacks). The reference to the size of the shield is relative to the size of the character. Thus, a human\'s small shield would have all the effects of a medium shield when used by a gnome.\n*The medium shield* is carried on the forearm and gripped with the hand. Its weight prevents the character from using his shield hand for other purposes. With a medium shield, a character can protect against any frontal or flank attacks.}}'},
						{name:'Shield+2',type:'Shield',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Shield+2}}{{subtitle=Shield}}{{Shield=1-handed +2 Medium Shield made of wood \\amp metal}}Specs=[Medium Shield,Shield,1H,Shield]{{AC=+[[2]] against all attacks from the front}}ACData=[a:Medium Shield+2,st:Shield,+:2,sz:M,wt:10]{{Speed=[[0]]}}{{Size=M}}{{Immunity=None}}{{Saves=No effect}}{{desc=All shields improve a character\'s Armor Class by 1 or more against a specified number of attacks. A shield is useful only to protect the front and flanks of the user. Attacks from the rear or rear flanks cannot be blocked by a shield (exception: a shield slung across the back does help defend against rear attacks). The reference to the size of the shield is relative to the size of the character. Thus, a human\'s small shield would have all the effects of a medium shield when used by a gnome.\n*The medium shield* is carried on the forearm and gripped with the hand. Its weight prevents the character from using his shield hand for other purposes. With a medium shield, a character can protect against any frontal or flank attacks.}}'},
						{name:'Small-Shield+1',type:'Shield',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Small Magical Shield+1}}{{subtitle=Shield}}{{Shield=1-handed +1 Small Shield made of wood \\amp metal}}Specs=[Small Shield,Shield,1H,Shield]{{AC=+[[1]] against only 2 attacks from the front}}ACData=[a:Small Shield+1,st:Shield,+:1,sz:M,wt:5]{{Speed=[[0]]}}{{Size=M}}{{Immunity=None}}{{Saves=No effect}}{{desc=All shields improve a character\'s Armor Class by 1 or more against a specified number of attacks. A shield is useful only to protect the front and flanks of the user. Attacks from the rear or rear flanks cannot be blocked by a shield (exception: a shield slung across the back does help defend against rear attacks). The reference to the size of the shield is relative to the size of the character. Thus, a human\'s small shield would have all the effects of a medium shield when used by a gnome.\n*A small shield* is carried on the forearm and gripped with the hand. Its light weight permits the user to carry other items in that hand (although he cannot use weapons). *It can be used to protect against **only** two frontal attacks of the user\'s choice.*}}'},
						{name:'Small-metal-shield+1',type:'Shield',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Small Metal Shield+1 made of metal \\amp some wood}}{{subtitle=Shield}}{{Shield=1-handed +1 Small Metal Shield}}Specs=[Small Metal Shield,Shield,1H,Shield]{{AC=+[[1]] against only 2 attacks from the front}}ACData=[a:Small Metal Shield+1,st:Shield,+:1,sz:M,wt:5]{{Speed=[[0]]}}{{Size=M}}{{Immunity=None}}{{Saves=No effect}}{{desc=All shields improve a character\'s Armor Class by 1 or more against a specified number of attacks. A shield is useful only to protect the front and flanks of the user. Attacks from the rear or rear flanks cannot be blocked by a shield (exception: a shield slung across the back does help defend against rear attacks). The reference to the size of the shield is relative to the size of the character. Thus, a human\'s small shield would have all the effects of a medium shield when used by a gnome.\n*A small shield* is carried on the forearm and gripped with the hand. Its light weight permits the user to carry other items in that hand (although he cannot use weapons). *It can be used to protect against **only** two frontal attacks of the user\'s choice.*}}'},
						{name:'Small-wood-shield+1',type:'Shield',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Small Wooden Shield+1}}{{subtitle=Shield}}{{Shield=1-handed +1 Small Wooden Shield}}Specs=[Small Wooden Shield,Shield,1H,Wooden Shield]{{AC=+[[1]] against only 2 attacks from the front}}ACData=[a:Small Wooden Shield+1,st:Wooden Shield,+:1,sz:M,wt:4]{{Speed=[[0]]}}{{Size=M}}{{Immunity=None}}{{Saves=No effect}}{{desc=All shields improve a character\'s Armor Class by 1 or more against a specified number of attacks. A shield is useful only to protect the front and flanks of the user. Attacks from the rear or rear flanks cannot be blocked by a shield (exception: a shield slung across the back does help defend against rear attacks). The reference to the size of the shield is relative to the size of the character. Thus, a human\'s small shield would have all the effects of a medium shield when used by a gnome.\n*A small shield* is carried on the forearm and gripped with the hand. Its light weight permits the user to carry other items in that hand (although he cannot use weapons). *It can be used to protect against **only** two frontal attacks of the user\'s choice.*}}'},
						{name:'Splint-Mail',type:'Armour',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Splint Mail}}{{subtitle=Armour}}{{Armour=Splint Mail}}Specs=[Splint Mail,Armour,0H,Mail]{{AC=[[4]]\nvs all attacks}}ACData=[a:Splint Mail,st:Mail,+:0,ac:4,sz:L,wt:40]{{Speed=[[0]]}}{{Size=Large}}{{Immunity=None}}{{Saves=No effect}}{{desc=The existence of this armor has been questioned. It is claimed that the armor is made of narrow vertical strips riveted to a backing of leather and cloth padding. Since this is not flexible, the joints are protected by chain mail.}}'},
						{name:'Splint-Mail+1',type:'Armour',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Splint Mail+1}}{{subtitle=Magical Armour}}{{Armour=Magical Splint Mail+1}}Specs=[Splint Mail,Armour,0H,Mail]{{AC=[[4]][[0-1]]\nvs all attacks}}ACData=[a:Splint Mail+1,st:Mail,+:1,ac:4,sz:L,wt:40]{{Speed=[[0]]}}{{Size=Large}}{{Immunity=None}}{{Saves=No effect}}{{desc=The existence of this armor has been questioned. It is claimed that the armor is made of narrow vertical strips riveted to a backing of leather and cloth padding. Since this is not flexible, the joints are protected by chain mail.}}'},
						{name:'Splint-Mail+2',type:'Armour',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Splint Mail+2}}{{subtitle=Magical Armour}}{{Armour=Magical Splint Mail+2}}Specs=[Splint Mail,Armour,0H,Mail]{{AC=[[4]][[0-2]]\nvs all attacks}}ACData=[a:Splint Mail+2,st:Mail,+:2,ac:4,sz:L,wt:40]{{Speed=[[0]]}}{{Size=Large}}{{Immunity=None}}{{Saves=No effect}}{{desc=The existence of this armor has been questioned. It is claimed that the armor is made of narrow vertical strips riveted to a backing of leather and cloth padding. Since this is not flexible, the joints are protected by chain mail.}}'},
						{name:'Studded-Leather',type:'Armour',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Studded Leather Armour}}{{subtitle=Armour}}{{Armour=Studded leather armour}}Specs=[Studded Leather,Armour,0H,Leather]{{AC=[[7]]\nagainst all attacks}}ACData=[a:Studded Leather,st:Leather,+:0,ac:7,sz:L,wt:25]{{Speed=[[0]]}}{{Size=Large}}{{Immunity=None}}{{Saves=No effect}}{{desc=This armor is made from leather (not hardened as with normal leather armor) reinforced with close-set metal rivets. In some ways it is very similar to brigandine, although the spacing between each metal piece is greater.}}'},
						{name:'Studded-Leather+1',type:'Armour',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Studded Leather+1}}{{subtitle=Magical Armour}}{{Armour=+1 magical studded leather armour}}Specs=[Studded Leather,Armour,0H,Leather]{{AC=[[7]][[0-1]]\nagainst all attacks}}ACData=[a:Studded Leather+1,st:Leather,+:1,ac:7,sz:L,wt:25]{{Speed=[[0]]}}{{Size=Large}}{{Immunity=None}}{{Saves=No effect}}{{desc=This armor is made from leather (not hardened as with normal leather armor) reinforced with close-set metal rivets. In some ways it is very similar to brigandine, although the spacing between each metal piece is greater.}}'},
						{name:'Studded-Leather+2',type:'Armour',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Studded Leather+2}}{{subtitle=Magical Armour}}{{Armour=+2 magical studded leather armour}}Specs=[Studded Leather,Armour,0H,Leather]{{AC=[[7]][[0-2]]\nagainst all attacks}}ACData=[a:Studded Leather+2,st:Leather,+:2,ac:7,sz:L,wt:25]{{Speed=[[0]]}}{{Size=Large}}{{Immunity=None}}{{Saves=No effect}}{{desc=This armor is made from leather (not hardened as with normal leather armor) reinforced with close-set metal rivets. In some ways it is very similar to brigandine, although the spacing between each metal piece is greater.}}'},
						{name:'Tower-Shield',type:'Shield',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Tower or Body Shield}}{{subtitle=Shield}}{{Shield=1-handed tower shield (also known as a body shield) made of wood \\amp metal}}Specs=[Tower Shield,Shield,1H,Shield]{{AC=+0, Tower/Body shield}}ACData=[a:Tower Shield,st:Shield,+:0,+M:1,sz:M,wt:15]{{Speed=[[0]]}}{{Size=Medium}}{{Immunity=None}}{{Saves=No effect}}{{desc=All shields improve a character\'s Armor Class by 1 or more against a specified number of attacks. A shield is useful only to protect the front and flanks of the user. Attacks from the rear or rear flanks cannot be blocked by a shield (exception: a shield slung across the back does help defend against rear attacks). The reference to the size of the shield is relative to the size of the character. Thus, a human\'s small shield would have all the effects of a medium shield when used by a gnome.\nThe *body shield* is a massive shield reaching nearly from chin to toe. It must be firmly fastened to the forearm and the shield hand must grip it at all times. It provides a great deal of protection, improving the Armor Class of the character by 1 against melee attacks and by 2 against missile attacks, for attacks from the front or front flank sides. It is very heavy; the DM may wish to use the optional encumbrance system if he allows this shield.}}'},
						{name:'Unknown-Bracers',type:'DMitem',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Unknown Bracers}}{{subtitle=Bracers}}{{Armour=Unknown Bracers}}Specs=[Unknown Bracers,DMitem,0H,Bracers]{{save=Unknown}}ACData=[a:Unknown Bracers,st:Bracers,+:0,sz:S,wt:1]{{desc=The powers of these bracers are unknown. In fact, are they magical bracers at all, or just of fine quality and just treasure?}}'},
						{name:'Wooden-Shield',type:'Shield',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Medium Wooden Shield}}{{subtitle=Shield}}{{Shield=1-handed medium shield made of wood \\amp metal}}Specs=[Medium Shield,Shield,1H,Shield]{{AC=+0, Medium shield}}ACData=[a:Medium Shield,st:Shield,+:0,sz:M,wt:10]{{Speed=[[0]]}}{{Size=Medium}}{{Immunity=None}}{{Saves=No effect}}{{desc=All shields improve a character\'s Armor Class by 1 or more against a specified number of attacks. A shield is useful only to protect the front and flanks of the user. Attacks from the rear or rear flanks cannot be blocked by a shield (exception: a shield slung across the back does help defend against rear attacks). The reference to the size of the shield is relative to the size of the character. Thus, a human\'s small shield would have all the effects of a medium shield when used by a gnome.\n*The medium shield* is carried on the forearm and gripped with the hand. Its weight prevents the character from using his shield hand for other purposes. With a medium shield, a character can protect against any frontal or flank attacks.}}'},
					]},
	MI_DB_Potions:	{bio:'<blockquote>Potions, Pills and Oils</blockquote><b>v5.6  01/01/2022</b><br><br>This Magic Item database holds definitions for Potions, Pills, Oils and other consumable liquids and similar substances.',
					gmnotes:'<blockquote>Change Log</blockquote>v5.6  01/01/2022  Updated to common release version<br><br>v5.2 - 5.5 Skipped to even up version numbers<br><br>v5.1  31/10/2021  Encoded using machine readable data to support API databases<br><br>v5.0 08/10/2021  Initial creation by separating out the MI-DB into item types',
					root:'MI-DB',
					controlledby:'all',
					avatar:'https://s3.amazonaws.com/files.d20.io/images/40483/thumb.png?1339823257',
					version:5.6,
					db:[{name:'Dark-Mage-Porter',type:'Potion',ct:'100*1d4',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Dark Mage Porter}}{{splevel=Beer}}{{school=Inebriation}}Specs=[Dark Mage Porter,Potion,1H,Inebriation]{{components=Alcohol}}{{time=[1d4](!\\amp#13;\\amp#47;r 1d4) turns until imbibed}}PotionData=[sp:100*1d4,rc:charged]{{range=Consumer}} {{duration=Drunk for [[1d3]]hours}}{{aoe=Consumer}}{{save=None}}{{effects=A reasonable beer, though it could be on the turn}}{{materials=Pint of beer}}'},
						{name:'Elixir-of-Health',type:'Potion',ct:'2+1d4',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Elixir of Health}}{{splevel=Potion}}{{school=Healing}}Specs=[Elixir of Health,Potion,1H,Healing]{{components=M}}{{time=[[1]]+[1d4+1](!\\amp#13;\\amp#47;r 1d4+2)}}PotionData=[sp:2+1d4,rc:charged]{{range=Consumer}}{{duration=Permanent}}{{aoe=Consumer}}{{save=None}}{{effects=This potion cures blindness, deafness, disease, feeblemindedness, insanity, infection, infestation, poisoning, and rot. It will not heal wounds or restore hit points lost through any of the above causes. Imbibing the whole potion will cure all of the above afflictions suffered by the imbiber. Half a flask will cure any one or two of the listed ills (DM\'s choice).}}{{materials=Potion}}'},
						{name:'Mountain-Blood-Strong-Spirit',type:'Potion',ct:'10*1d4',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Mountain Blood Strong Spirit}}{{splevel=Spirit}}{{school=Inebriation}}Specs=[Mountain Blood Spirit,Potion,1H,Inebriation]{{components=Strong Alcohol}}{{time=[1d4](!\\amp#13;\\amp#47;r 1d4) rounds until imbibed}}PotionData=[sp:10*1d4,rc:charged]{{range=Consumer}} {{duration=Drunk for [[1d6]]hours}}{{aoe=Consumer}}{{save=None}}{{effects=A dark red distilled spirit of some unidentifiable type, extremely alcoholic. Probably safe to drink, as it could never go off - there\'s so much alcohol!}}{{materials=Absolute alcohol and a drop of mountain stream water}}'},
						{name:'Oil-of-Etherealness',type:'Potion',ct:'30',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Oil of Etherealness}}{{splevel=Oil}}{{school=Alteration}}Specs=[Oil of Etherealness,Potion,1H,Alteration]{{components=M}}{{time=[[3]] rounds after application}}PotionData=[sp:30,rc:charged]{{range=User}}{{duration=4+1d4 turns}}{{aoe=User}}{{save=None}}{{healing=[Become Ethereal](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Select a target|token_id}|Oil-of-Etherealness|\\amp#91;[10*(4+1d4)]\\amp#93;|-1|Ethereal|Ninja-mask)}}{{effects=This potion is actually a light oil that is applied externally to clothes and exposed flesh, conferring etherealness. In the ethereal state, the individual can pass through solid objects in any direction—sideways, upward, downward—or to different planes. The individual cannot touch non-ethereal objects.\nThe oil takes effect three rounds after application, and it lasts for 4+1d4 turns unless removed with a weak acidic solution prior to the expiration of its normal effective duration. It can be applied to objects as well as creatures. One potion is sufficient to anoint a normal human and such gear as he typically carries (two or three weapons, garments, armor, shield, and miscellaneous gear). Ethereal individuals are invisible.}}{{materials=Oil}}'},
						{name:'Oil-of-Slipperiness',type:'Potion',ct:'30',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Oil of Slipperiness}}{{splevel=Oil}}{{school=Alteration}}Specs=[Oil of Slipperiness,Potion,1H,Alteration]{{components=M}}{{time=[[3]] rounds after application}}PotionData=[sp:30,rc:charged]{{range=User}}{{duration=[[8]] hours}}{{aoe=User}}{{save=None}}{{healing=[Become Slippery](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Select a target|token_id}|Oil-of-Slipperiness|99|0|Slippery customer, cannot be grabbed or hugged|drink-me)}}{{effects=This potion is actually a light oil that is applied externally to clothes and exposed flesh. This application makes it impossible for the individual to be grabbed, grasped, or hugged by any opponent, or constricted by snakes or tentacles. (Note that a roper could still inflict weakness, but that the monster\'s tentacles could not entwine the opponent coated with *oil of slipperiness*.)\nIn addition, such obstructions as webs, magical or otherwise, will not effect an anointed individual. Bonds such an ropes, manacles, and chains can be slipped free. Magical ropes and the like are not effective against this oil. If poured on a floor or on steps, there is a 95% chance that creatures standing on the surface will slip and fall. The oil requires eight hours to wear off normally, or it can be wiped off with an alcohol solution (even wine!)}}{{materials=Oil}}'},
						{name:'Ointment-of-Flying',type:'Potion',ct:'2+1d4',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Ointment of Flying}}{{splevel=Ointment}}{{school=Alteration}}Specs=[Ointment of Flying,Potion,1H,Alteration]{{components=M}}{{time=[[1]]+[1d4+1](!\\amp#13;\\amp#47;r 1d4+2)}}PotionData=[sp:2+1d4,rc:charged]{{range=Consumer}}{{duration=[4+1d4](!\\amp#13;\\amp#47;r 1d4+4) turns}}{{aoe=Consumer}}{{save=None}}{{healing=Select the number of portions to use below}}{{effects=A small flat tin of a white ointment. When rubbed into the skin of a living creature it will cause wings to sprout from an aerodynamically plausible location on the body, giving the ability to fly, in accordance with a 3rd level MU Fly spell. \nDifferent “portions” applied enable different sized creatures to fly.[1 portion](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Select a target|token_id}|Potion-of-Flying99|0|Flying - DM to determine duration|fluffy-wing) = large dog to fly, or human size to feather fall, [2 portions](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Select a target|token_id}|Potion-of-Flying99|0|Flying - DM to determine duration|fluffy-wing --mi-charges @{selected|token_id}|-1|Ointment-of-Flying) = human to fly or light horse to feather fall, [3 portions](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Select a target|token_id}|Potion-of-Flying99|0|Flying - DM to determine duration|fluffy-wing --mi-charges @{selected|token_id}|-2|Ointment-of-Flying) = light horse etc. The pot contains 2D6+4 portions. No. of portions should be rolled by the person who gets it.\nMove vertically and horizontally at a rate of [[18]] (half that if ascending, twice that if descending in a dive). The manoeuvrability class is B. Using the ointment requires as much concentration as walking, so most spells can be cast while hovering or moving slowly (movement of [[3]]). Possible combat penalties while flying are known to the DM (found in the "Aerial Combat" section of Chapter 9 of the DMG). The exact duration of the effect is always unknown to the user of the ointment, as the variable addition is determined secretly by the DM}}{{materials=Ointment}}'},
						{name:'Philter-of-Persuasiveness',type:'Potion',ct:'2+1d4',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Philter of Persuasiveness}}{{splevel=Potion}}{{school=Evocation}}Specs=[Philter of Persuasiveness,Potion,1H,Evocation]{{components=M}}{{time=[[1]]+[1d4+1](!\\amp#13;\\amp#47;r 1d4+2)}}PotionData=[sp:2+1d4,rc:charged]{{range=Consumer}}{{duration=4+1d4 Turns}}{{aoe=Special}}{{save=None}}{{effects=When this potion is imbibed the individual becomes more charismatic, gaining a bonus of +5 on reaction dice rolls. The individual is also able to [Suggest](~MU-Spells-DB|Suggestion) (see the 3rd-level wizard spell, *Suggestion*) once per turn to all creatures within 30 yards of him.}}{{materials=Potion}}'},
						{name:'Pill-of-Cure-Blindness+Deafness',type:'',ct:'2+1d4',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Potion of Cure Blindness \\amp Deafness}}{{splevel=Potion}}{{school=Abjuration}}Specs=[Pill of Cure Blindness+Deafness,Potion,1H,Abjuration]{{components=M}}{{time=[[1]]+[1d4+1](!\\amp#13;\\amp#47;r 1d4+2)}}PotionData=[sp:2+1d4,rc:charged]{{range=Consumer}}{{duration=Permanent}}{{aoe=Consumer}}{{save=None}}{{healing=Cure some forms of blindness \\amp deafness}}{{effects=This potion has the equivalent result to the 3rd level Priest spell, *Cure Blindness \\amp Deafness*. On complete consumption within [[1]] round, the potion, it restores some forms of blindness and deafness (DMs ruling). It will not restore or repair visual or auditory organs damaged by disease, but will generally cure magical effects that have not done physical damage. Curing of effects due to wounding by weapons will be at DMs discression, depending on the types of wounds.\nA deafened creature can react only to what it can see or feel, and suffers a [[0-1]] penalty to surprise rolls, a +[[1]] penalty to its initiative rolls, and a [[20]]% chance of spell failure for spells with verbal components. A blinded creature suffers a [[0-4]] penalty to its attack rolls, a +[[4]] penalty to its Armor Class, and a +[[2]] penalty to its initiative rolls}}{{materials=Potion}}'},
						{name:'Pill-of-Cure-Critical-Wounds',type:'Potion',ct:'2+1d4',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Pill of Cure Critical Wounds}}{{splevel=Pill}}{{school=Healing}}Specs=[Pill of Cure Critical Wounds,Potion,1H,Healing]{{components=M}}{{time=[[1]]+[1d4+1](!\\amp#13;\\amp#47;r 1d4+2)}}PotionData=[sp:2+1d4,rc:charged]{{range=Consumer}}{{duration=Permanent}}{{aoe=Consumer}}{{save=None}}{{healing=[3d8+3](!\\amp#13;\\amp#47;r 3d8+3)}}{{effects=This pill has the equivalent result to the 5th level Priest spell, *Cure Critical Wounds*, which is a more potent version of the *Cure Light Wounds spell*. On complete consumption within [[1]] round, the potion heals [3d8+3](!\\amp#13;\\amp#47;r 3d8+3) points of wound or other injury damage to the creature\'s body. This healing cannot affect noncorporeal, nonliving, or extraplanar creatures}}{{materials=Pill}}'},
						{name:'Pill-of-Cure-Disease',type:'Potion',ct:'2+1d4',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Pill of Cure Disease}}{{splevel=Pill}}{{school=Healing}}Specs=[Pill of Cure Disease,Potion,1H,Healing]{{components=M}}{{time=[[1]]+[1d4+1](!\\amp#13;\\amp#47;r 1d4+2)}}PotionData=[sp:2+1d4,rc:charged]{{range=Consumer}}{{duration=Permanent}}{{aoe=Consumer}}{{save=None}}{{effects=This pill has the equivalent result to the 3rd level Priest spell, *Cure Disease*. This pill cures most diseases by complete consumption within [[1]] round. The affliction rapidly disappears thereafter, making the cured creature whole and well in from one turn to 10 days, depending on the type of disease and the state of its advancement when the cure took place. (The DM must adjudicate these conditions.) The spell is also effective against parasitic monsters such as green slime, rot grubs, and others. Note that the spell does not prevent reoccurrence\nof a disease if the recipient is again exposed.}}{{materials=Pill}}'},
						{name:'Pill-of-Cure-Serious-Wounds',type:'Potion',ct:'2+1d4',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Potion of Cure-Serious-Wounds}}{{splevel=Potion}}{{school=Healing}}Specs=[Pill of Cure Seriuos Wounds,Potion,1H,Healing]{{components=M}}{{time=[[1]]+[1d4+1](!\\amp#13;\\amp#47;r 1d4+2)}}PotionData=[sp:2+1d4,rc:charged]{{range=Consumer}}{{duration=Permanent}}{{aoe=Consumer}}{{save=None}}{{healing=[2d8+1](!\\amp#13;\\amp#47;r 2d8+1)}}{{effects=This potion has the equivalent result to the 4th level Priest spell, *Cure Serious Wounds*, which is a more potent version of the *Cure Light Wounds spell*. On complete consumption within [[1]] round, the potion heals [2d8+1](!\\amp#13;\\amp#47;r 2d8+1) points of wound or other injury damage to the creature\'s body. This healing cannot affect noncorporeal, nonliving, or extraplanar creatures}}{{materials=Potion}}'},
						{name:'Poisonous-Spider-Sacks',type:'Potion',ct:'2+1d4',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Poisonous Spider Sacks}}{{splevel=Potion}}{{school=Unknown}}Specs=[Poisonous Spider Sacks,Potion,1H,Necromancy]{{components=M}}{{time=[[1]]+[1d4+1](!\\amp#13;\\amp#47;r 1d4+2)}}PotionData=[sp:2+1d4,rc:charged]{{range=[[0]]}}{{duration=Unknown}}{{aoe=Creature hit}}{{save=Unknown}}{{reference=DMG p73}}{{effects=Damage is [1d8](!\\amp#13;\\amp#47;r 1d8 HP damage from poisonous spider sacks - poison type unknown). The effects of this poison other than damage are unknown.}}{{materials=Potion}}'},
						{name:'Potion',type:'',ct:'0',charge:'uncharged',cost:'0',body:'%{MI-DB-Potions|Unknown-Potion}'},
						{name:'Potion-Trans-Class',type:'Potion',ct:'2+1d4',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Potion of Trans-Class Ability}}{{splevel=Potion}}{{school=Alteration}}Specs=[Potion Trans-Class,Potion,1H,Alteration]{{components=M}}{{time=[[1]]+[1d4+1](!\\amp#13;\\amp#47;r 1d4+2)}}PotionData=[sp:2+1d4,rc:charged]{{range=Consumer}}{{duration=[[1]] day}}{{aoe=Consumer}}{{save=None}}{{effects=For a period of 1 day enables the imbiber to use limited skills for another class e.g. \n**Warrior skills** - use a weapon normally forbidden, as proficient.\n**Wizard skil**l - Cast 3 first level spells of choice\n**Priest** - cast 3 first level spells of choice\n**Thief** - Move silently + Hide in shadows, even in armour.\nChoose one class when drinking.}}{{materials=Potion}}'},
						{name:'Potion-of-ESP',type:'Potion',ct:'2+1d4',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Potion of ESP}}{{splevel=Potion}}{{school=Divination}}Specs=[Potion of ESP,Potion,1H,Divination]{{components=M}}{{time=[[1]]+[1d4+1](!\\amp#13;\\amp#47;r 1d4+2)}}PotionData=[sp:2+1d4,rc:charged]{{range=Consumer}}{{duration=5d8 rounds}}{{aoe=}}{{save=None}}{{[Read Thoughts](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Select a target|token_id}|Potion-of-ESP|\\amp#91;[5d8]\\amp#93;|-1|Reading surface thoughts|broken-skull)}}{{effects=When an ESP spell is used, the caster is able to detect the surface thoughts of any creatures in range--except for those of undead and creatures without minds (as we know them). The ESP is stopped by 2 feet of rock, 2 inches of any metal other than lead, or a thin sheet of lead foil.\nThe wizard employing the spell is able to probe the surface thoughts of one creature per round, getting simple instinctual thoughts from lower order creatures. Probes can continue on the same creature from round to round or can move on to other creatures. The caster can use the spell to help determine if a creature lurks behind a door, for example, but the ESP does not always reveal what sort of creature it is. If used as part of a program of interrogation, an intelligent and wary subject receives an initial saving throw. If successful, the creature successfully resists and the spell reveals no additional information. If the saving throw is failed, the caster may learn additional information, according to the DM\'s ruling. The creature\'s Wisdom adjustment applies, as may additional bonuses up to +4, based on the sensitivity of the information sought. The material component of this spell is a copper piece.}}{{materials=Potion}}'},
						{name:'Potion-of-Elf-Control',type:'Potion',ct:'2+1d4',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Potion of Human Control, Elves \\amp Half-Elves}}{{splevel=Potion}}{{school=Enchantment/Charm}}Specs=[Potion of Elf Control,Potion,1H,Enchantment-Charm]{{components=M}}{{time=[[1]]+[1d4+1](!\\amp#13;\\amp#47;r 1d4+2)}}PotionData=[sp:2+1d4,rc:charged]{{range=Consumer}}{{duration=5d6 rounds}}{{aoe=Consumer}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20)}}{{healing=[Control Elves](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Select first target|token_id}|Potion-of-Elf-Control|\\amp#91;[5d6]\\amp#93;|-1|Elf Control - Charmed|chained-heart)}}{{effects=A potion of human control allows the imbiber to control up to 32 levels or Hit Dice of humans, humanoids, and demihumans as if a charm person spell had been cast. All creatures are entitled to saving throws vs. spell. Any pluses on Hit Dice are rounded down to the lowest whole die (e.g., 1 + 2 = 1, 2 + 6 = 2, etc.). This potion lasts for 5d6 rounds. The type of human(s) that can be controlled is randomly determined.\n\nD20 Roll Human/Humanoid Controlled\n1-2......Dwarves\n3-4......Elves/Half-Elves\n5-6......Gnomes\n7-8......Halflings\n9-10....Half-Orcs\n11-16..Humans\n17-19..Humanoids (gnolls, orcs, goblins, etc.)\n20...... Elves, Half-Elves, and Humans}}{{materials=Potion}}'},
						{name:'Potion-of-Extra-Healing',type:'Potion',ct:'2+1d4',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Potion of Extra Healing}}{{splevel=Potion}}{{school=Healing}}Specs=[Potion of Extra Healing,Potion,1H,Healing]{{components=M}}{{time=[[1]]+[1d4+1](!\\amp#13;\\amp#47;r 1d4+2)}}PotionData=[sp:2+1d4,rc:charged]{{range=Consumer}}{{duration=Permanent}}{{aoe=Consumer}}{{save=None}}{{healing=[3d8+3](!\\amp#13;\\amp#47;r 3d8+3)}}{{effects=This potion restores 3d8 + 3 hit points of damage when wholly consumed, or 1d8 hit points of damage for each one-third that is drunk.}}{{materials=Potion}}'},
						{name:'Potion-of-Fire-Resistance',type:'Potion',ct:'2+1d4',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Potion of Levitation}}{{splevel=Potion}}{{school=Alteration}}Specs=[Potion of Fire Resistance,Potion,1H,Alteration]{{components=M}}{{time=[[1]]+[1d4+1](!\\amp#13;\\amp#47;r 1d4+2)}}PotionData=[sp:2+1d4,rc:charged]{{range=Consumer}}{{duration=[[10]] rounds}}{{aoe=Consumer}}{{save=None}}{{healing=[Resist Fire](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Select a target|token_id}|Potion-of-Fire-Resistance|\\amp#63;{Consume how much?|All,10|Half,5}|-1|Immune to normal fire, +4 save -2/die dmg from intense fire|white-tower)}}{{effects=This potion bestows upon the person drinking it magical invulnerability to all forms of normal fire (such as bonfires, burning oil, or even huge pyres of flaming wood). It also gives resistance to fires generated by molten lava, a wall of fire, a fireball, fiery dragon breath, and similar intense flame/heat. All damage from such fires is reduced by -2 from each die of damage, and if a saving throw is applicable, it is rolled with a +4 bonus. If one-half of the potion is consumed, it confers invulnerability to normal fires and half the benefits noted above (-1, +2). The potion lasts one turn, or five rounds for half doses.}}{{materials=Potion}}'},
						{name:'Potion-of-Firebreath',type:'Potion',ct:'2+1d4',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Potion of Firebreath}}{{splevel=Potion}}{{school=Evocation}}Specs=[Potion of Firebreath,Potion,1H,Evocation]{{components=M}}{{time=[[1]]+[1d4+1](!\\amp#13;\\amp#47;r 1d4+2)}}PotionData=[sp:2+1d4,rc:charged]{{range=Consumer}}{{duration=[[1]]hour}}{{aoe=Special}}{{save=[Halves flame dmg](!\\amp#13;\\amp#47;r 1d20 save vs breath weapon}}{{effects=This potion allows the imbiber to spew a tongue of flame any time within one hour of quaffing the liquid. Each potion contains enough liquid for four small draughts. One draught allows the imbiber to breathe a cone of fire 10 feet wide and up to 20 feet long that inflicts 1d10 + 2 points of damage (d10 + 2). A double draught doubles the range and damage. If the entire potion is taken at once, the cone is 20 feet wide, up to 80 feet long, and inflicts 5d10 points of damage. Saving throws vs. breath weapon for half damage apply in all cases. If the flame is not expelled before the hour expires, the potion fails, with a 10% chance that the flames erupt in the imbiber\'s system, inflicting double damage upon him, with no saving throw allowed.}}{{materials=Potion}}'},
						{name:'Potion-of-Flying',type:'Potion',ct:'2+1d4',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Potion of Flying}}{{splevel=Potion}}{{school=Alteration}}Specs=[Potion of Flying,Potion,1H,Alteration]{{components=M}}{{time=[[1]]+[1d4+1](!\\amp#13;\\amp#47;r 1d4+2)}}PotionData=[sp:2+1d4,rc:charged]{{range=Consumer}}{{duration=[4+1d4](!\\amp#13;\\amp#47;r 1d4+4) turns}}{{aoe=Consumer}}{{save=None}}{{healing=[Who\'s Flying?](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Select a target|token_id}|Potion-of-Flying|\\amp#63;{Duration?|\\amp#91;[4+1d4]\\amp#93;}|-1|Flying|fluffy-wing)}}{{effects=Equivalent to the 3rd level MU Spell.\nThis spell enables the wizard to bestow the power of magical flight. The creature affected is able to move vertically and horizontally at a rate of [[18]] (half that if ascending,\ntwice that if descending in a dive). The manoeuvrability class is B. Using the fly spell requires as much concentration as walking, so most spells can be cast while hovering or moving slowly (movement of [[3]]). Possible combat penalties while flying are known to the DM (found in the "Aerial Combat" section of Chapter 9 of the DMG). The exact duration of the spell is always unknown to the spellcaster, as the variable addition is determined secretly by the DM.\nThe material component of the fly spell is a wing feather of any bird.}}{{materials=Potion}}'},
						{name:'Potion-of-Healing',type:'Potion',ct:'2+1d4',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Potion of Healing}}{{splevel=Potion}}{{school=Healing}}Specs=[Potion of Healing,Potion,1H,Healing]{{components=M}}{{time=[[1]]+[1d4+1](!\\amp#13;\\amp#47;r 1d4+2)}}PotionData=[sp:2+1d4,rc:charged]{{range=Consumer}}{{duration=Permanent}}{{aoe=Consumer}}{{save=None}}{{healing=[2d4+2](!\\amp#13;\\amp#47;r 2d4+2)}}{{effects=An entire potion must be consumed in a single round. If this is done, the potion restores [2d4+2](!\\amp#13;\\amp#47;r 2d4+2) hit points of damage}}{{materials=Potion}}'},
						{name:'Potion-of-Hill-Giant-Strength',type:'Potion',ct:'2+1d4',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Potion of Hill Giant Strength}}{{splevel=Potion}}{{school=Alteration}}Specs=[Potion of Hill Giant Strength,Potion,1H,Alteration]{{components=M}}{{time=[[1]]+[1d4+1](!\\amp#13;\\amp#47;r 1d4+2)}}PotionData=[sp:2+1d4,rc:charged]{{range=Consumer}}{{duration=[4+1d4](!\\amp#13;\\amp#47;r 4+1d4)]] rounds}}{{aoe=Consumer}}{{save=None}}{{healing=[Make Super-strong](!rounds --target single|@{selected|token_id}|@{target|Select a target|token_id}|Hill-Giant-Strength|\\amp#63;{Duration?|\\amp#91;[4+1d4]\\amp#93;}|-1|Hill Giant Strength=19|strong)}}{{effects=This potion can be used only by warriors. When a giant strength potion is consumed, the individual gains great strength and bonuses to damage when he scores a hit with any hand-held or thrown weapon. It is also possible for the person to hurl rocks as shown on the table in the DMG. Note that the type of giant strength gained by drinking the potion is randomly determined on the same table}}{{materials=Potion}}'},
						{name:'Potion-of-Invisibility',type:'Potion',ct:'2+1d4',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Potion of Invisibility}}{{splevel=as per Level 2 Wizard spell}}{{school=Illusion/Phantasm}}Specs=[Potion of Invisibility,Potion,1H,Illusion-Phantasm]{{components=M}}{{time=[[1]]+[1d4+1](!\\amp#13;\\amp#47;r 1d4+2)}}PotionData=[sp:2+1d4,rc:charged]{{range=Consumer}}{{duration=Until attack or [[24]] hours or [DM: 3 to 6](!\\amp#13;\\amp#47;gmroll 1d4+2) turns for 1/8th}}{{aoe=Consumer}}{{save=None}}{{healing=[Go Invisible](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Select a target|token_id}|Invisibility|99|0|Invisible|half-haze)}}{{effects=Same as 2nd Level Wizard spell, *Invisibility*. \n Consumer vanishes from sight, undetectable by normal vision or infravision. Not magically silenced. Allies cannot see the invisible creature or gear, unless can normally see invisible things or employ magic to do so. Items put down become visible; items picked up disappear if tucked into the clothing or pouches. Light never becomes invisible, although source of light can become so.\nRemains in effect until magically broken or dispelled, until recipient attacks any creature, or until [[24]] hours have passed. If only a gulp is taken, equal to 1/8th, will last [DM: 3 to 6](!\\amp#13;\\amp#47;gmroll 1d4+2) turns - DM rolls and player does not know result. If creature attacks, the invisibility enables him to attack first, but then appears. Note that priest spells bless, chant, and prayer are not attacks for this purpose. All Intelligence [[13]] or more creatures with \\gt [[10]] Hit Dice or Levels can roll saving throws vs. spell; success means they noticed the invisible object.}}{{materials=Potion}}'},
						{name:'Potion-of-Invulnerability',type:'Potion',ct:'2+1d4',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Potion of Invulnerability}}{{splevel=Potion}}{{school=Protection}}Specs=[Potion of Invulnerability,Potion,1H,Protection]{{components=M}}{{time=[[1]]+[1d4+1](!\\amp#13;\\amp#47;r 1d4+2)}}PotionData=[sp:2+1d4,rc:charged]{{range=Consumer}}{{duration=[5d4](!\\amp#13;\\amp#47;r 5d4) rounds}}{{aoe=Consumer}}{{save=None}}{{healing=[Consume Potion](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Select a target|token_id}|Invulnerability|\\amp#91;[\\amp#63;{Duration?|5d4}]\\amp#93;|-1|Invulnerable, Magic weapon to hit, +[[2]] on AC+saves|strong)}}{{effects=This potion confers immunity to nonmagical weapons. It also protects against attacks from creatures (not characters) with no magical properties or with fewer than 4 Hit Dice. Thus, an 8th-level character without a magical weapon could not harm the imbiber of an invulnerability potion.\nThe potion also improves Armor Class rating by 2 classes and gives a bonus of +2 to the individual on his saving throws versus all forms of attack. Its effects are realized only when the entire potion is consumed, and they last for [5d4](!\\amp#13;\\amp#47;r 5d4) rounds. Only warriors can use this potion}}{{materials=Potion}}'},
						{name:'Potion-of-Levitation',type:'Potion',ct:'2+1d4',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Potion of Levitation}}{{splevel=Potion}}{{school=Alteration}}Specs=[Potion of Levitation,Potion,1H,Alteration]{{components=M}}{{time=[[1]]+[1d4+1](!\\amp#13;\\amp#47;r 1d4+2)}}PotionData=[sp:2+1d4,rc:charged]{{range=Consumer}}{{duration=5d6 rounds}}{{aoe=Consumer}}{{save=None}}{{healing=[Levitate](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Select a target|token_id}|Levitate|\\amp#91;[\\amp#63;{Duration?|5d6}]\\amp#93;|-1|Levitating vertical not horizontal, minuses on missile fire|fluffy-wing)}}{{effects=A levitation potion enables the consumer to levitate in much the same manner as the 2nd-level wizard spell of the same name. The potion allows levitation of the individual only, to a maximum weight of 600 pounds. The consumer can carry\nanother person, as long as their total weight is within this limit.\nWhen a levitate potion is consumed, they can move vertically up or down at a movement rate of 2 per round. The potion does not empower horizontal movement, but the recipient could push along the face of a cliff, for example, to move laterally.\nOnce consumed, the effect requires no concentration, except when changing height. A levitating creature attempting to use a missile weapon finds himself increasingly unstable; the first attack has an attack roll penalty of [[0-1]], the second [[0-2]], the third [[0-3]], etc., up to a maximum of [[0-5]]. A full round spent stabilizing allows the creature to begin again at -1. Lack of leverage makes it impossible to cock a medium or heavy crossbow.}}{{materials=Potion}}'},
						{name:'Potion-of-Neutralise-Poison',type:'Potion',ct:'2+1d4',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Potion of Neutralise Poison}}{{splevel=Potion}}{{school=Necromancy}}Specs=[Potion of Neutralise Poison,Potion,1H,Necromancy]{{components=M}}{{time=[[1]]+[1d4+1](!\\amp#13;\\amp#47;r 1d4+2)}}PotionData=[sp:2+1d4,rc:charged]{{range=Consumer}}{{duration=Permanent}}{{aoe=Consumer}}{{save=None}}{{effects=By means of a neutralize poison spell, the priest detoxifies any sort of venom in the creature or substance touched. Note that an opponent, such as a poisonous reptile or snake (or even an envenomed weapon of an opponent) unwilling to be so touched requires the priest to roll a successful attack in combat. This spell can prevent death in a poisoned creature if cast before death occurs. The effects of the spell are permanent only with respect to poison existing in the touched creature at the time of the touch; thus, creatures (and objects) that generate new poison are not permanently detoxified.\nThe reversed spell, poison, likewise requires a successful attack roll, and the victim is allowed a saving throw vs. poison. If the latter is unsuccessful, the victim is incapacitated and dies in one turn unless the poison is magically neutralized or slowed.}}{{materials=Potion}}'},
						{name:'Potion-of-Raise-Dead',type:'Potion',ct:'2+1d4',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Potion of Raise Dead}}{{splevel=Potion}}{{school=Necromancy}}Specs=[Potion of Raise Dead,Potion,1H,Necromancy]{{components=M}}{{time=[[1]]+[1d4+1](!\\amp#13;\\amp#47;r 1d4+2)}}PotionData=[sp:2+1d4,rc:charged]{{range=Consumer}}{{duration=Permanent}}{{aoe=Consumer}}{{save=Special}}{{effects=Equivalent to the 5th level Priest Spell.\nWhen the priest casts a raise dead spell, he can restore life to a dwarf, gnome, half-elf, halfling, or human (other creatures may be allowed, at the DM\'s option). The length of time that the person has been dead is of importance, as the priest can raise persons dead only up to a limit of one day for each experience level of the priest (i.e., a 9th-level priest can raise a person who has been dead for up to nine days).\nNote that the body of the person must be whole, or otherwise missing parts are still missing when the person is brought back to life. Likewise, other ills, such as poison and disease, are not negated. The raised person must roll a successful resurrection survival check to survive the ordeal (see Table 3: Constitution) and loses 1 point of Constitution.\nFurther, the raised person is weak and helpless, needing a minimum of one full day of rest in bed for each day or fraction he was dead. The person has 1 hit point when raised and must regain the rest by natural healing or curative magic. A character\'s starting Constitution is an absolute limit to the number of times he can be revived by this means.}}{{materials=Potion}}'},
						{name:'Potion-of-Recovery',type:'Potion',ct:'2+1d4',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Potion of Recovery}}{{splevel=Potion}}{{school=Necromancy}}Specs=[Potion of Recovery,Potion,1H,Necromancy]{{components=M}}{{time=[[1]]+[1d4+1](!\\amp#13;\\amp#47;r 1d4+2)}}PotionData=[sp:2+1d4,rc:charged]{{range=Consumer}}{{duration=Permanent}}{{aoe=Consumer}}{{save=None}}{{effects=Removes exhaustion, cures any disease or poison. Recovery increased by +10 for 2 consecutive full sleeps (but requires full night\'s rest to complete each night)}}{{materials=Potion}}'},
						{name:'Potion-of-Remove-Paralysis',type:'Potion',ct:'2+1d4',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Potion of Remove Paralysis}}{{splevel=Potion}}{{school=Abjuration}}Specs=[Potion of Remove Paralysis,Potion,1H,Abjuration]{{components=M}}{{time=[[1]]+[1d4+1](!\\amp#13;\\amp#47;r 1d4+2)}}PotionData=[sp:2+1d4,rc:charged]{{range=Consumer}}{{duration=Permanent}}{{aoe=Consumer}}{{save=None}}{{effects=Equivalent to the 3rd level Priest Spell.\nBy the use of this potion, the consumer is freed from the effects of any paralysation or from related magic (such as a ghoul touch, or a hold or slow spell)}}{{materials=Potion}}'},
						{name:'Potion-of-Special-Restoration',type:'Potion',ct:'30',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Potion of Restoration (Special)}}{{splevel=Potion}}{{school=Healing}}Specs=[Potion of Special Restoration,Potion,1H,Healing]{{components=M}}{{time=[[3]] rounds}}PotionData=[sp:30,rc:charged]{{range=Consumer}}{{duration=Permanent}}{{aoe=Consumer}}{{save=None}}{{effects=When this potion is consumed, the life energy level of the recipient creature is restored by one. This reverses any previous life energy level drain of the creature by a force or monster, including restoring all previously held experience and HP (unlike the spell). Thus, if a 10th-level character had been struck by a wight and drained to 9th level, the restoration spell would bring the character up to exactly as they were prior to the attack. Restoration is effective only if the potion is consumed within fourteen days of the recipient\'s loss of life energy (based on the minimum level of Priest needed to cast the equivalent spell). A restoration spell restores the intelligence of a creature affected by a feeblemind spell. It also negates all forms of insanity. Casting this spell ages both the caster and the recipient by two years.}}{{materials=Potion}}'},
						{name:'Potion-of-Spider-Climb',type:'Potion',ct:'2+1d4',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Potion of Super-Heroism}}{{splevel=Potion}}{{school=Alteration}}Specs=[Potion of Spider Climb,Potion,1H,Alteration]{{components=M}}{{time=[[1]]+[1d4+1](!\\amp#13;\\amp#47;r 1d4+2)}}PotionData=[sp:2+1d4,rc:charged]{{range=Consumer}}{{duration=[[3+@{selected|casting-level}}]] rounds}}{{aoe=Consumer}}{{save=None}}{{healing=[Become Spider-man](!rounds --target caster|@{selected|character_id}|Spider-climb|[[3+@{selected|casting-level}]]|-1|Spider-like climbing abilities|drink-me)}}{{effects=A spider climb potion enables the recipient to climb and travel upon vertical surfaces as well as a giant spider, or even hang upside down from ceilings, in a similar way to the spell of the same name. The affected creature must have bare hands and feet in order to climb in this manner, at a movement rate of [[6]] ([[3]] if at all encumbered). During the course of the spell, the recipient cannot handle objects that weigh less than a dagger (one pound), for such objects stick to his hands and feet. Thus, a wizard will find it virtually impossible to cast spells if under a spider climb spell. Sufficient force can pull the recipient free; the DM can assign a saving throw based on circumstances, the strength of the force, and so on. For example, a creature with a Strength of 12 might pull the subject free if the subject fails a saving throw vs. paralyzation (a moderately difficult saving throw).}}{{materials=Potion}}'},
						{name:'Potion-of-Super-Heroism',type:'Potion',ct:'2+1d4',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Potion of Super-Heroism}}{{splevel=Potion}}{{school=Alteration}}Specs=[Potion of Super Heroism,Potion,1H,Alteration]{{components=M}}{{time=[[1]]+[1d4+1](!\\amp#13;\\amp#47;r 1d4+2)}}PotionData=[sp:2+1d4,rc:charged]{{range=Consumer}}{{duration=5d6 rounds}}{{aoe=Consumer}}{{save=None}}{{healing=[Become Superhero](!rounds --target single|@{selected|character_id}|\\amp#64;{target|Select a target|token_id}|Super-heroism|\\amp#91;[\\amp#63;{Duration?|5d6}]\\amp#93;|-1|Superhero, level increase|strong)}}{{effects=This potion gives the individual a temporary increase in levels (see heroism potion) if he has fewer than 13 levels of experience. It is similar to the heroism potion, but more powerful, and its effects last just 5d6 melee rounds:\n...............Number of .Additonal\nLevel of ...Levels .......Temporary\nConsumer Bestowed ..Hit Dice\n0 ................6 ..........[5d10](!\\amp#13;\\amp#47;r 5d10)\n1st-3rd ........5 ..........[4d10+1](!\\amp#13;\\amp#47;r 4d10+1)\n4th-6th ........4 ..........[3d10+2](!\\amp#13;\\amp#47;r 3d10+2)\n7th-9th ........3 ..........[2d10+3](!\\amp#13;\\amp#47;r 2d10+3)\n10th-12th .....2 .........[1d10+4](!\\amp#13;\\amp#47;r 1d10+4)}}{{materials=Potion}}'},
						{name:'Potion-of-Universal-Antidote',type:'Potion',ct:'2+1d4',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Universal Antidote Potion}}{{splevel=Potion}}{{school=Healing}}Specs=[Universal Antidote,Potion,1H,Healing]{{components=M}}{{time=[[1]]+[1d4+1](!\\amp#13;\\amp#47;r 1d4+2)}}PotionData=[sp:2+1d4,rc:charged]{{range=Consumer}}{{duration=Permanent}}{{aoe=Consumer}}{{save=None}}{{healing=Antidote to all types of poison}}{{effects=By means of Universal Antidote potion, any sort of poison or venom in the creature consuming, or to which it is applied (for poisons in wounds) is neutralised (as per the 4th Level Priest spell *Neutralise Poison*). This potion can prevent death in a poisoned creature if administered before death occurs. The effects of the potion are permanent only with respect to poison existing in the consuming creature at the time of application; thus, creatures that suffer new poisonings are not permanently detoxified}}{{materials=Potion}}'},
						{name:'Potion-of-Water-Breathing',type:'Potion',ct:'2+1d4',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Potion of Water Breathing}}{{splevel=Potion}}{{school=Alteration}}Specs=[Potion of Water Breathing,Potion,1H,Alteration]{{components=M}}{{time=[[1]]+[1d4+1](!\\amp#13;\\amp#47;r 1d4+2)}}PotionData=[sp:2+1d4,rc:charged]{{range=Consumer}}{{duration=6 turns +1d10 rounds}}{{aoe=Consumer}}{{save=None}}{{healing=[Become a Fish](!rounds --target single|@{selected|token_id}|\\amp#63;{target|Select a target|token_id}|Water-breathing|\\amp#91;[\\amp#63{Duration?|60+1d10}]\\amp#93;|-1|Water breathing like a fish|drink-me)}}{{effects=The potion allows the character drinking it to breathe normally in liquids that contain suspended oxygen. This ability lasts for one full hour per dose of potion quaffed, with an additional 1d10 rounds (minutes) variable. Thus, a character who has consumed a water breathing potion could enter the depths of a river, lake, or even the ocean and not drown while the magical effects of the potion persisted.}}{{materials=Potion}}'},
						{name:'Soda',type:'Potion',ct:'100*1d4',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Soda}}{{splevel=Non-alchoholic}}{{school=Dull}}Specs=[Soda,Potion,1H,Inebriation]{{components=Bacteria}}{{time=[1d4](!\\amp#13;\\amp#47;r 1d4) rounds until imbibed}}PotionData=[sp:100*1d4,rc:charged]{{range=Consumer}} {{duration=Ill for [[1d3]]hours}}{{aoe=Consumer}}{{save=None}}{{effects=No alcohol means that this could be a very risky drink: I\'d not trust it, if I were you!}}{{materials=Water?}}'},
						{name:'Unknown-Potion',type:'Potion',ct:'2+1d4',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Unknown Potion}}{{splevel=Potion}}{{school=Unknown}}Specs=[Unknown Potion,Potion,1H,Any]{{components=M}}{{time=[[1]]+[1d4+1](!\\amp#13;\\amp#47;r 1d4+2)}}PotionData=[sp:2+1d4,rc:charged]{{range=Consumer}}{{duration=Unknown}}{{aoe=Consumer}}{{save=Unknown}}{{effects=The effects of this potion are unknown. In fact, is it a potion at all?}}{{materials=Potion}}'},
						{name:'Unknown-Potion-A',type:'Potion',ct:'2+1d4',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Unknown Potion}}{{splevel=Potion}}{{school=Unknown}}Specs=[Unknown Potion A,Potion,1H,Any]{{components=M}}{{time=[[1]]+[1d4+1](!\\amp#13;\\amp#47;r 1d4+2)}}PotionData=[sp:2+1d4,rc:charged]{{range=Consumer}}{{duration=Unknown}}{{aoe=Consumer}}{{save=Unknown}}{{effects=The effects of this potion are unknown. In fact, is it a potion at all?}}{{materials=Potion}}'},
						{name:'Unknown-Potion-B',type:'Potion',ct:'2+1d4',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Unknown Potion}}{{splevel=Potion}}{{school=Unknown}}Specs=[Unknown Potion B,Potion,1H,Any]{{components=M}}{{time=[[1]]+[1d4+1](!\\amp#13;\\amp#47;r 1d4+2)}}PotionData=[sp:2+1d4,rc:charged]{{range=Consumer}}{{duration=Unknown}}{{aoe=Consumer}}{{save=Unknown}}{{effects=The effects of this potion are unknown. In fact, is it a potion at all?}}{{materials=Potion}}'},
						{name:'Unknown-Potion-C',type:'Potion',ct:'2+1d4',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Unknown Potion}}{{splevel=Potion}}{{school=Unknown}}Specs=[Unknown Potion C,Potion,1H,Any]{{components=M}}{{time=[[1]]+[1d4+1](!\\amp#13;\\amp#47;r 1d4+2)}}PotionData=[sp:2+1d4,rc:charged]{{range=Consumer}}{{duration=Unknown}}{{aoe=Consumer}}{{save=Unknown}}{{effects=The effects of this potion are unknown. In fact, is it a potion at all?}}{{materials=Potion}}'},
						{name:'Unknown-Potion-D',type:'Potion',ct:'2+1d4',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Unknown Potion}}{{splevel=Potion}}{{school=Unknown}}Specs=[Unknown Potion D,Potion,1H,Any]{{components=M}}{{time=[[1]]+[1d4+1](!\\amp#13;\\amp#47;r 1d4+2)}}PotionData=[sp:2+1d4,rc:charged]{{range=Consumer}}{{duration=Unknown}}{{aoe=Consumer}}{{save=Unknown}}{{effects=The effects of this potion are unknown. In fact, is it a potion at all?}}{{materials=Potion}}'},
						{name:'Unknown-Potion-E',type:'Potion',ct:'2+1d4',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Unknown Potion}}{{splevel=Potion}}{{school=Unknown}}Specs=[Unknown Potion E,Potion,1H,Any]{{components=M}}{{time=[[1]]+[1d4+1](!\\amp#13;\\amp#47;r 1d4+2)}}PotionData=[sp:2+1d4,rc:charged]{{range=Consumer}}{{duration=Unknown}}{{aoe=Consumer}}{{save=Unknown}}{{effects=The effects of this potion are unknown. In fact, is it a potion at all?}}{{materials=Potion}}'},
						{name:'White-Plume-Pale-Ale',type:'Potion',ct:'100*1d4',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=White Plume Pale Ale}}{{splevel=Beer}}{{school=Inebriation}}Specs=[White Plume Pale Ale,Potion,1H,Inebriation]{{components=Alcohol}}{{time=[1d4](!\\amp#13;\\amp#47;r 1d4) turns until imbibed}}PotionData=[sp:100*1d4,rc:charged]{{range=Consumer}} {{duration=Drunk for [[1d3]]hours}}{{aoe=Consumer}}{{save=None}}{{effects=A reasonable beer, though it could be on the turn}}{{materials=Pint of beer}}'},
					]},
	MI_DB_Rings:	{bio:'<blockquote>Rings</blockquote><b>v5.6  01/01/2022</b><br><br>This Magic Item database holds definitions for all types of rings.',
					gmnotes:'<blockquote>Change Log:</blockquote>v5.6  01/01/2022  Updated to common release version<br><br>v5.2 - 5.5 Skipped to even up version numbers<br><br>v5.11  31/10/2021  Merged in Arc\'s Rings of Spell Storing<br><br>v5.1  31/10/2021  Encoded using machine readable data to support API databases<br><br>v5.0  01/10/2021  Split MI-DB into separate databases for different types of Item. See MI-DB for earlier Change Log.',
					root:'MI-DB',
					controlledby:'all',
					avatar:'https://s3.amazonaws.com/files.d20.io/images/8344/thumb.png?1336510825',
					version:5.6,
					db:[{name:'Cursed-Ring-of-Wishes',type:'Ring',ct:'-1',charge:'cursed-charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Cursed Ring of Wishes}}{{subtitle=Ring}}Specs=[Ring of Wishes,Ring,1H,Conjuration-Summoning]{{Speed=[[0-1]] - so fast, you can\'t change your mind, but the effect may take forever to happen}}RingData=[w:Ring of Wishes,sp:-1,rc:cursed-charged]{{Size=Tiny}}{{desc=The cursed Ring of Wishes is the same as a normal one, and will grant the wishes. Only after the last wish is used will this description appear. It cannot be removed by a *Remove Curse*, until a Wish (from the ring or elsewhere) is first used to wish that the next *Remove Curse* cast on it actually works.\nAs with any wish, the DM should be very judicious in handling the request. If players are greedy and grasping, interpret their wording exactly, twist the wording, or simply rule the request is beyond the power of the magic. In any case, the wish is used up, whether or not the wish was granted, and regardless of the DM\'s interpretation of the wisher\'s request. No wish can cancel the decrees of god-like beings, unless it comes from another such creature.\n**House rules:** Legitimate uses for a full wish with no splash\n1. Raise a single attribute to 16\n2. Raise a single attribute from 16 to 17, or 17 to 18, or 18 to 19, or 19 to 20. Cannot be raised above 20 using a single wish.\n3. Restore a party to full heath (even if some members dead/paralysed/etc)}}'},
						{name:'Death-Pact-Ring-of-Party-Wish',type:'Ring',ct:'1',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Death Pact Ring of 1 Party Wish}}{{subtitle=Ring}}Specs=[Ring of Party Wish,Ring,1H,Necromancy]{{Speed=[[1]]}}RingData=[w:Death Pact Ring of Party Wish,sp:1,rc:charged]{{Size=Tiny}}{{desc=Ring - Death Pact. Whoever wears the ring knows all of this… On wearing the ring you need to designate a place of saftey (which you must have visited), If you drop BELOW zero, the first charge automatically teleports you to the location and restored to 1HP but are week and feeble. The ring then changes into a Ring of Party Wish (1 charge). This enables a wish to restore / recover / ressurect party members. It is possible to use the Ring of Party Wish without having used the Death Pact, but the ring vanishes after the use of the wish.}}'},
						{name:'Hawk-Vision-0',type:'',ct:'0',charge:'uncharged',cost:'0',body:'!setattr --fb-from Magic Items --fb-header Ring of The Hawk - %{Magic-Items|Wearing-0} --fb-content _CHARNAME_ chooses to %{Magic-Items|Wearing-0} the ring --charid @{selected|character_id} --hawkeye|1|0 --Rangemod-PB|0 --Rangemod-S|0 --Rangemod-M|-2 --Rangemod-L|-4 --Rangemod-F|-6'},
						{name:'Hawk-Vision-1',type:'',ct:'0',charge:'uncharged',cost:'0',body:'!resetattr --fb-from Magic Items --fb-header Ring of The Hawk - %{Magic-Items|Wearing-1} --fb-content _CHARNAME_ chooses to %{Magic-Items|Wearing-1} the ring --charid @{selected|character_id} --hawkeye --Rangemod-PB --Rangemod-S --Rangemod-M --Rangemod-L --Rangemod-F'},
						{name:'Ring',type:'',ct:'0',charge:'uncharged',cost:'0',body:'%{MI-DB-Rings|Unknown-Ring}'},
						{name:'Ring-Protect-vs-Missiles',type:'Ring',ct:'0',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Ring of Protection vs Missiles}}{{subtitle=Ring}}Specs=[Ring Protect vs Missiles,Ring,1H,Abjuration-Protection]{{Speed=[[0]]}}RingData=[w:Ring Protect vs Missiles,sp:0,rc:charged]{{Duration=[[5]] rounds per charge}}{{Size=Tiny}}{{Immunity=[Become Immune](!rounds --target caster|@{selected|token_id}|Missile-immunity|5|-1|Immune to normal \\amp +1 missiles|bolt-shield) to normal \\amp +1 missiles}}{{Saves=None}}{{desc=A ring of protection vs. missiles gives total immunity to normal and +1 missile attacks for 5 rounds per charge expended}}'},
						{name:'Ring-of-Bless',type:'Ring',ct:'1',charge:'recharging',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Ring of Bless}}{{splevel=Ring}}{{school=Conjuration/Summoning (Reversable)}}{{sphere=All}}Specs=[Ring of Bless,Ring,1H,Conjuration-Summoning]{{components=S,M}}{{time=[[1]] round}}RingData=[w:Ring of Bless,sp:1,rc:recharging]{{range=[[60]] yards}}{{duration=[[6]] rounds}}{{aoe=[50ft cube](!rounds --aoe @{selected|token_id}|square|feet|180|50||light)}}{{save=None}}{{healing=[Bless them](!rounds --target area|@{selected|token_id}\\amp#64;{target|Select first target|token_id}|Bless|6|-1|Blessed, attk+1, save vs fear+1|angel-outfit)}}{{effects=Once per day, raises morale of friendly creatures *not yet in melee combat* adding +[[1]] to saves vs. fear effects and raises attack rolls by +[[1]]. Or can cast on a single object weighing no more than [[@{selected|Casting-Level}]] pounds and the plus lasts until the item is used or the duration ends}}{{marterial=Holy Water}}'},
						{name:'Ring-of-Chameleon-Power',type:'Ring',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Ring of Chameleon Power}}{{subtitle=Ring}}Specs=[Ring of Chameleon Power,Ring,1H,Illusion-Phantasm]{{Speed=[[0]]}}RingData=[w:Ring of Chameleon Power,sp:0,rc:uncharged]{{Size=Tiny}}{{desc=[Chameleon Power](!rounds --target caster|@{selected|token_id}|Chameleon-Power|1|+1|90% stealth in foliage, by walls etc, or seem same as others|ninja-mask)}}{{desc1=Whenever the wearer of this ring desires, he is able to magically blend in with the surroundings. This enables 90% invisibility in foliage, against walls, and so forth.\nIf the wearer is associating with creatures of Intelligence 4 or greater at a distance of 60 feet or less, the ring enables the wearer to seem to be one of those creatures, but each turn of such association carries a 5% cumulative chance that the creatures will detect the ring wearer for what he is. Thus, such an association can never persist for more than 20 turns without the wearer being detected—at the end of that time, the chance of detection has risen to 100%. Creatures with 16 or greater Intelligence use their Intelligence score as an addition to the base chance of detection. For example, a creature of Intelligence 16 would have a base chance of (16+5%) = 21% at the end of turn 1, 26% at the end of turn 2, and so forth. Creatures with 3 or lower Intelligence instinctively and automatically detect the wearer if they come within a 10-foot radius of him.}}'},
						{name:'Ring-of-Eloquence+2',type:'Ring',ct:'3',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Ring of Eloquence +2}}{{subtitle=Ring}}Specs=[Ring of Eloquence,Ring,1H,Enchantment-Charm]{{Speed=[[3]]}}RingData=[w:Ring of Eloquence,sp:3,rc:uncharged]{{Size=Tiny}{{desc=While worn, this ring increases the wearer\'s charisma by +2}}'},
						{name:'Ring-of-FeatherFall-MirrorImage-SpiderClimb-HypnoticPattern',type:'Ring',ct:'5',charge:'uncharged',cost:'0',body:'!setattr --silent --charid @{selected|character_id} --Casting-Name|Ring of Spell Storing\n/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Ring of Spell Storing}}{{subtitle=Ring}}Specs=[Ring of Spell Storing,Ring,1H,Conjuration-Summoning]{{Speed=[[5]] regardless of spell}}RingData=[w:Ring of Spell Storing,sp:5,rc:uncharged,ns:5],[cl:MU,w:Feather-Fall,lv:12],[cl:MU,w:Mirror-Image,lv:12],[cl:MU,w:Mirror-Image,lv:12],[cl:MU,w:Spider-Climb,lv:12],[cl:MU,w:Hypnotic-Pattern,lv:12]{{Size=Tiny}}{{Store spell=[Store Spell](!magic --mem-spell MI-MU|@{selected|token_id})}}{{Cast Spell=[View](!magic --view-spell mi-muspells|@{selected|token_id}) or [Cast](!magic --cast-spell MI|@{selected|token_id}) spells}}{{desc=A ring of spell storing contains 1d4+1 spells which the wearer can employ as if he were a spellcaster of the level required to use the stored spells.\nThe ring empathically imparts to the wearer the names of its spells. The properties of the ring are fixed and unchangeable. Once a spell is cast from the ring, it can be restored only by a character of appropriate class and level of experience (i.e., a 12th-level wizard is needed to restore a 6th-level magical spell to the ring). Stored spells have a casting time of [[5]].\nThe spells on this ring can be seen by pressing the [View] button above}}'},
						{name:'Ring-of-Fire-Resistance',type:'Ring',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Ring of Fire Resistance}}{{subtitle=Ring}}Specs=[Ring of Fire Resistance,Ring,1H,Alteration-Protection]{{Speed=[[0]]}}RingData=[w:Ring of Fire Resistance,sp:0,rc:uncharged]{{Size=Tiny}}{{Immunity=Normal Fires}}{{Resistance=V.large/hot fires cause 10HP/round}}{{Saves=Extremely hot fires save+[[4]] \\amp [[0-2]] per dice damage}}{{desc=The wearer of this ring is totally immune to the effects of normal fires—torches, flaming oil, bonfires, etc. Very large and hot fires, molten lava, hell-hound breath, or a wall of fire spell will cause 10 hit points of damage per round if the wearer is directly within the conflagration.\nExceptionally hot fires such as red-dragon breath, pyrohydra breath, fireballs, flame strike, fire storm, etc., are saved against with a +4 bonus to the die roll, and all damage dice are calculated at -2 per die, but each die is never less than 1 in any event. As a rule of thumb, consider very hot fires as those that have a maximum initial exposure of up to 24 hit points, those of exceptional heat (25 or more hit points)}}'},
						{name:'Ring-of-Free-Action',type:'Ring',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Ring of Free Action}}{{subtitle=Ring}}Specs=[Ring of Free Action,Ring,1H,Alteration]{{Speed=[[0]]}}RingData=[w:Ring of Free Action,sp:0,rc:uncharged]{{Size=Tiny}}{{desc=This ring enables the wearer to move and attack freely and normally even when attacked by a web, hold, or slow spell, or even while under water. The spells simply have no effect. While under water, the individual moves at normal (surface) speed and does full damage even with cutting weapons (like axes and scimitars) and with smashing weapons (like flails, hammers, and maces), insofar as the weapon used is held rather than hurled. This will not, however, enable breathing under water without further appropriate magic.}}'},
						{name:'Ring-of-HoldPerson-SlowPoison-Silence15ft',type:'Ring',ct:'5',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Ring of Spell Storing}}{{subtitle=Ring}}Specs=[Ring of Spell Storing,Ring,1H,Conjuration-Summoning]{{Speed=[[5]] regardless of spell}}RingData=[w:Ring of Spell Storing,sp:5,rc:uncharged,ns:5],[cl:PR,w:Hold-Person,sp:5,lv:3],[cl:PR,w:Hold-Person,sp:5,lv:3],[cl:PR,w:Hold-Person,sp:5,lv:3],[cl:PR,w:Slow-Poison,sp:1,lv:3],[cl:PR,w:Silence-15ft-radius,sp:5,lv:3]{{Size=Tiny}}{{Store spell=[Store Priest Spell](!magic --mem-spell MI-PR|@{selected|token_id})\n[Store Wizard Spell](!magic --mem-spell MI-MU|@{selected|token_id})}}{{Cast spell=[View](!magic --view-spell mi-muspells|@{selected|token_id}) or [Cast](!magic --cast-spell MI|@{selected|token_id}) spells}}{{desc=A ring of spell storing contains 1d4+1 spells which the wearer can employ as if he were a spellcaster of the level required to use the stored spells.\nThe ring empathically imparts to the wearer the names of its spells. The properties of the ring are fixed and unchangeable. Once a spell is cast from the ring, it can be restored only by a character of appropriate class and level of experience (i.e., a 12th-level wizard is needed to restore a 6th-level magical spell to the ring). Stored spells have a casting time of [[5]].\nThe spells on this ring can be seen by pressing the [View] button above}}'},
						{name:'Ring-of-Light+Dark',type:'',ct:'1',charge:'recharging',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Ring of Light \\amp Dark}}{{subtitle=Ring}}Specs=[Ring of Light+Dark,Ring,1H,Alteration]{{Speed=[[1]]}}RingData=[w:Ring of Light+Dark,sp:1,rc:recharging]{{Size=Tiny}}{{Immunity=None}}{{Action=[Cast Light](~PR-Spells-DB|Light) or [Cast Darkness](~PR-Spells-DB|Darkness)}}{{desc=This ring is always made of both ivory (or bone) \\amp ebony in a plat of the two twisted together. The ring has a number of charges, that recharge over a Long Rest. Use of 1 charge casts a *Light* spell or a *Darkness* spell. The spells are cast at 12th level}}\n!setattr --silent --charid @{selected|character_id} --casting-level|12 --casting-name|Ring of Light + Dark'},
						{name:'Ring-of-Many-Benefits',type:'Ring',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Ring of Many Benefits}}{{subtitle=Ring}}Specs=[Ring of Many Benefits,Ring,1H,Illusion-Phantasm]{{Speed=[[0]]}}RingData=[w:Ring of Many Benefits,sp:0,rc:uncharged]{{Size=Tiny}}{{Immunity=Charms}}{{Resistance=+[[2]] on AC}}{{Saves=+[[2]] on saves}}{{desc=I confer the following powers upon my wearer: [Invisibility](!rounds --target caster|@{selected|token_id}|Invisibility|99|-1|Invisible until attack, 4 bonus to AC \\amp saves|half-haze) 1/day, [Haste](!rounds --target caster|@{selected|token_id}|Haste|15|-1|Double speed +2 Initiative bonus|overdrive) 1/day, [Fly](!rounds --target caster|@{selected|token_id}|Fly150|-1|Flying|fluffy-wing) 1/day, [Detect Magic](~MU-Spells|Detect-Magic) 1/day, continuous immunity to *Charms*, and one *Wish*. I also provide the benefits of *Protection+2* and *Spell Turning*. The only drawback is that once a year I permanently eat a small part of your life. I must be worn before I can leave this room; merely carrying me away is not possible. If ever I am removed from my wearer\'s finger, however, all my powers are lost. So you must decide right now who will wear me forever.}}'},
						{name:'Ring-of-Protection+0',type:'Protection Ring',ct:'0',charge:'cursed',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Ring of Protection}}{{subtitle=Ring}}{{Speed=[[0]]}}{{Size=Tiny}}{{Immunity=None}}{{Protection=+[[0]] on AC}}Specs=[Ring of Protection,Protection Ring,1H,Abjuration-Protection]{{Saves=+[[0]] on saves}}ACData=[a:Ring of Protection+0,st:Ring,+:0,sz:T,wt:0,w:Ring of Protection+0,sp:0,rc:cursed]{{desc=A ring of protection improves the wearer\'s Armour Class value and saving throws versus all forms of attack. A ring +1 betters AC by 1 (say, from 10 to 9) and gives a bonus of +1 on saving throw die rolls. The magical properties of a ring of protection are cumulative with all other magical items of protection except as follows:\n1. The ring does not improve Armour Class if magical armour is worn, although it does add to saving throw die rolls.\n2. Multiple rings of protection operating on the same person, or in the same area, do not combine protection. Only one such ring—the strongest—functions, so a pair of protection rings +2 provides only +2 protection.}}'},
						{name:'Ring-of-Protection+1',type:'Protection Ring',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Ring of Protection}}{{subtitle=Ring}}{{Speed=[[0]]}}{{Size=Tiny}}{{Immunity=None}}{{Protection=+[[1]] on AC}}Specs=[Ring of Protection,Protection Ring,1H,Abjuration-Protection]{{Saves=+[[1]] on saves}}ACData=[a:Ring of Protection+1,w:Ring of Protection+1,st:Ring,+:1,sz:T,wt:0,sp:0,rc:uncharged]{{desc=A ring of protection improves the wearer\'s Armour Class value and saving throws versus all forms of attack. A ring +1 betters AC by 1 (say, from 10 to 9) and gives a bonus of +1 on saving throw die rolls. The magical properties of a ring of protection are cumulative with all other magical items of protection except as follows:\n1. The ring does not improve Armour Class if magical armour is worn, although it does add to saving throw die rolls.\n2. Multiple rings of protection operating on the same person, or in the same area, do not combine protection. Only one such ring—the strongest—functions, so a pair of protection rings +2 provides only +2 protection.}}'},
						{name:'Ring-of-Protection+2',type:'Protection Ring',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Ring of Protection}}{{subtitle=Ring}}{{Speed=[[0]]}}{{Size=Tiny}}{{Immunity=None}}{{Protection=+[[2]] on AC}}Specs=[Ring of Protection,Protection Ring,1H,Abjuration-Protection]{{Saves=+[[2]] on saves}}ACData=[a:Ring of Protection+2,st:Ring,+:2,sz:T,wt:0,w:Ring of Protection+2,sp:0,rc:uncharged]{{desc=A ring of protection improves the wearer\'s Armour Class value and saving throws versus all forms of attack. A ring +1 betters AC by 1 (say, from 10 to 9) and gives a bonus of +1 on saving throw die rolls. The magical properties of a ring of protection are cumulative with all other magical items of protection except as follows:\n1. The ring does not improve Armour Class if magical armour is worn, although it does add to saving throw die rolls.\n2. Multiple rings of protection operating on the same person, or in the same area, do not combine protection. Only one such ring—the strongest—functions, so a pair of protection rings +2 provides only +2 protection.}}'},
						{name:'Ring-of-Protection+3',type:'Protection Ring',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Ring of Protection}}{{subtitle=Ring}}{{Speed=[[0]]}}{{Size=Tiny}}{{Immunity=None}}{{Protection=+[[3]] on AC}}Specs=[Ring of Protection,Protection Ring,1H,Abjuration-Protection]{{Saves=+[[3]] on saves}}ACData=[a:Ring of Protection+3,st:Ring,+:3,sz:T,wt:0,w:Ring of Protection+3,sp:0,rc:uncharged]{{desc=A ring of protection improves the wearer\'s Armour Class value and saving throws versus all forms of attack. A ring +1 betters AC by 1 (say, from 10 to 9) and gives a bonus of +1 on saving throw die rolls. The magical properties of a ring of protection are cumulative with all other magical items of protection except as follows:\n1. The ring does not improve Armour Class if magical armour is worn, although it does add to saving throw die rolls.\n2. Multiple rings of protection operating on the same person, or in the same area, do not combine protection. Only one such ring—the strongest—functions, so a pair of protection rings +2 provides only +2 protection.\nTo determine the value of a protection ring, use the following table:\n\nD100 Roll / Level of Protection\n01-70 +1\n71-82 +2\n83 +2, 5-foot radius protection\n84-90 +3\n91 +3, 5-foot radius protection\n92-97 +4 on AC, +2 to saving throws\n98-00 +6 on AC, +1 to saving throws\n\nThe radius bonus of 5 feet extends to all creatures within its circle, but applies only to their saving throws (i.e., only the ring wearer gains Armor Class additions)}}'},
						{name:'Ring-of-Regeneration',type:'Ring',ct:'3',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Ring of Regeneration}}{{subtitle=Ring}}Specs=[Ring of Regeneration,Ring,1H,Healing]{{Speed=[[3]]}}RingData=[w:Ring of Regeneration,sp:3,rc:uncharged]{{Size=Tiny}{{desc=The standard ring of regeneration restores one point of damage per turn (and will eventually replace lost limbs or organs). It will bring its wearer back from death. (If death was caused by poison, however, a saving throw must be successfully rolled or the wearer dies again from the poison still in his system.) Only total destruction of all living tissue by fire or acid or similar means will prevent regeneration. Of course, the ring must be worn, and its removal stops the regeneration processes.}}'},
						{name:'Ring-of-Shielding',type:'Ring',ct:'1',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Ring of Shielding}}{{splevel=Ring}}{{school=Evocation}}Specs=[Ring of Shielding,Ring,1H,Evocation]{{components=M}}{{time=[[1]]}}RingData=[w:Ring of Shielding,sp:1,rc:charged]{{range=[[0]]}}{{duration=[[20]] rounds}}{{aoe=In front of caster}}{{healing=[Shield yourself](!rounds --target caster|@{selected|token_id}|Shield|20|-1|Shielded, bonus on AC vs. missiles, MM, frontal saving throws|bolt-shield)}}{{save=None}}{{effects=When this ring is activated, an invisible barrier comes into being in front of the wizard. This shield totally negates magic missile attacks. It provides the equivalent protection of AC [[2]] against hand-hurled missiles (axes, darts, javelins, spears, etc.), AC [[3]] against small device-propelled missiles (arrows, bolts, bullets, manticore spikes, sling stones, etc.), and AC [[4]] against all other forms of attack. The shield also adds a +[[1]] bonus to the wizard\'s saving throws against attacks that are basically frontal. Note that these benefits apply only if the attacks originate from in front of the wizard, where the shield can move to interpose itself.}}'},
						{name:'Ring-of-Shooting-Stars',type:'Ring',ct:'5',charge:'charged',cost:'0',body:'!setattr --silent --sel --casting-level|1 --casting-name|@{selected|token_name}\'s Ring of Shooting Stars\n/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Ring of Shooting Stars}}{{subtitle=Ring}}Specs=[Ring of Shooting Stars,Ring,1H,Evocation]{{Speed=[[5]]}}RingData=[w:Ring of Shooting Stars,sp:5,rc:charged,ns:6], [cl:PW,w:RoSS-Dancing-Lights,sp:5,pd:12], [cl:PW,w:RoSS-Light,sp:5,pd:2], [cl:PW,w:RoSS-Ball-Lightning,sp:5,pd:1], [cl:PW,w:RoSS-Shooting-Stars,sp:5,pd:3], [cl:PW,w:RoSS-Faerie-Fire,sp:5,pd:2], [cl:PW,w:RoSS-Spark-Shower,sp:5,pd:1] {{Size=Tiny}}{{Immunity=None}}{{Resistance=None}}{{Saves=None}}{{desc=This ring has two modes of operation—at night and underground—both of which work only in relative darkness. \n***During night hours, under the open sky***, the shooting stars ring will perform the following functions:\n• [*Dancing lights*](!magic --mi-power @{selected|token_id}|RoSS-Dancing-Lights|Ring-of-Shooting-Stars|1) as spell (once per hour).\n• [*Light*](!magic --mi-power @{selected|token_id}|RoSS-Light|Ring-of-Shooting-Stars|1), as spell (twice per night), 120-foot range.\n• [*Ball lightning*](!magic --mi-power @{selected|token_id}|RoSS-Ball-Lightning|Ring-of-Shooting-Stars|1), as power (once per night).\n• [*Shooting stars*](!magic --mi-power @{selected|token_id}|RoSS-Shooting-Stars|Ring-of-Shooting-Stars|1), as power (special).\n***Indoors at night, or underground***, the ring of shooting stars has the following properties:\n[*Faerie fire*](!magic --mi-power @{selected|token_id}|RoSS-Faerie-Fire|Ring-of-Shooting-Stars|1) (twice per day) as spell\n[*Spark shower*](!magic --mi-power @{selected|token_id}|RoSS-Spark-Shower|Ring-of-Shooting-Stars|1) (once per day) as power\nRange, duration, and area of effect of functions are the minimum for the comparable spell unless otherwise stated. Casting time is 5}}'},
						{name:'Ring-of-Spell-Learning+1',type:'Ring',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Ring of Spell Learning+1}}{{subtitle=Ring}}Specs=[Ring of Spell Learning,Ring,1H,Divination]{{Speed=[[0]]}}RingData=[w:Ring of Spell Learning+1,sp:0,rc:uncharged]{{Size=Tiny}}{{Immunity=None}}{{desc=Something to do with plusses on learning spells, but need specs from whomever\'s campaign it came from}}'},
						{name:'Ring-of-Spell-Storing',type:'Ring',ct:'5',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Ring of Spell Storing}}{{subtitle=Ring}}Specs=[Ring of Spell Storing,Ring,1H,Conjuration-Summoning]{{Speed=[[5]] regardless of spell}}RingData=[w:Ring of Spell Storing HHSLS,sp:5,rc:uncharged], [cl:MU,w:Haste,sp:5,lv:6], [cl:MU,w:Haste,sp:5,lv:6], [cl:MU,w:Slow,sp:5,lv:7], [cl:MU,w:Light,sp:5,lv:3], [cl:MU,w:Sleep,sp:5,lv:3] {{Size=Tiny}}{{Store spell=[Store Priest Spell](!magic --mem-spell MI-PR|@{selected|token_id})\n[Store Wizard Spell](!magic --mem-spell MI-MU|@{selected|token_id})}}{{Cast spell=[View](!magic --view-spell mi-muspells|@{selected|token_id}) or [Cast](!magic --cast-spell MI|@{selected|token_id}) spells}}{{desc=A ring of spell storing contains 1d4+1 spells which the wearer can employ as if he were a spellcaster of the level required to use the stored spells. The class of spells contained within the ring is determined in the same fashion as the spells on scrolls (see "Scrolls\'\'). The level of each spell is determined by rolling 1d6 (for priests) or 1d8 (for wizards). The number rolled is the level of the spell, as follows:\nPriest: 1d6, if 6 is rolled, roll 1d4 instead.\nWizard: 1d8, if 8 is rolled, roll 1d6 instead.\nWhich spell type of any given level is contained by the ring is also randomly determined.\nThe ring empathically imparts to the wearer the names of its spells. Once spell class, level, and type are determined, the properties of the ring are fixed and unchangeable. Once a spell is cast from the ring, it can be restored only by a character of appropriate class and level of experience (i.e., a 12th-level wizard is needed to restore a 6th-level magical spell to the ring). Stored spells have a casting time of [[5]].}}'},
						{name:'Ring-of-Spell-Targeting+2',type:'Ring',ct:'1',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Ring of Spell Targeting +2}}{{subtitle=Ring}}Specs=[Ring of Spell Targeting,Ring,1H,Evocation]{{Speed=[[1]]}}RingData=[w:Ring of Spell Targeting+2,sp:1,rc:uncharged]{{Size=Tiny}}{{desc=The wearer of this ring gains +2 on To-Hit rolls for spells that require a To-Hit roll to be made, for example *Melf\'s Acid Arrow"}}'},
						{name:'Ring-of-Spell-Turning',type:'Ring',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Ring of Spell Turning}}{{subtitle=Ring}}Specs=[Ring of Spell Turning,Ring,1H,Abjuration]{{Speed=[[0]]}}RingData=[w:Ring of Spell Turning,sp:0,rc:uncharged]{{Size=Tiny}}{{Reference=DMG p}}{{desc=Some spells immune to ring of spell turning:\n1. Area-effect Spells not cast directly at the ring wearer.\n2. Spells that are delivered by touch.\n3. Magic contained in devices triggered without spellcasting. A scroll spell is not considered a device.\n4. Spells affecting numbers of levels must affect enough levels for both target \\amp caster added together.\nRoll [1d10](!\\amp#13;\\amp#47;r 10*1d10 percent turned) multiplied by 10 percent turned. Saves gain + equal to die roll \\amp caster also must save at + of 10-dice roll.\nSave also allowed against spells that normally don\'t get one, at a modified save of 20, modifier being as above for each of target and caster.\nEffects divided proportionately as appropriate based on the d10 roll. Damage and durations are split proportionately. If both caster \\amp target wear *Rings of Spell Turning* see DMG description for effects}}'},
						{name:'Ring-of-The-Hawk',type:'Ring',ct:'3',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Ring of The Hawk}}{{subtitle=Ring}}Specs=[Ring of The Hawk,Ring,1H,Alteration]{{Speed=[[3]]}}RingData=[w:Ring of The Hawk,sp:3,rc:uncharged]{{Size=Tiny}}{{Activity=[%{Magic-Items|Wearing-@{selected|Hawkeye}}](~MI-DB|Hawk-Vision-@{selected|Hawkeye})}}{{desc=This ring grants distance vision at 4 times normal. Archery ranges change as follows:\n- No point blank.\n- Long range becomes -4 (usually -5),\n- Far range becomes 250 yards, -6 (usually -20)\n\nThis will also have more everyday effects, eg\n- If you can recognise someone at 200yds, you can now recognise them at 800\n- 4x better chance of spotting an ambush in the distance\n- Inability to read at normal close range\n+1 defence against long range missiles (can see them early and clearly to dodge)\nThink of it as wearing 4x binoculars instead of glasses.}}'},
						{name:'Ring-of-Water-Walking',type:'Ring',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Ring of Water Walking}}{{subtitle=Ring}}Specs=[Ring of Water Walking,Ring,1H,Alteration]{{Speed=[[0]]}}RingData=[w:Ring of Water Walking,sp:0,rc:uncharged]{{Size=Tiny}}{{Immunity=None}}{{desc=This ring enables the wearer to walk on any liquid without sinking into it—this includes mud, quicksand, oil, running water, and even snow. Up to 1,200 pounds can be supported by a ring of water walking. The ring wearer\'s feet do not actually contact the surface he is walking upon (but oval depressions about 1_ inches deep per 100 pounds of weight of the walker will be observed in hardening mud or set snow). The wearer moves at his standard movement rate.}}'},
						{name:'Ring-of-Wishes',type:'Ring',ct:'0',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Ring of Wishes}}{{subtitle=Ring}}Specs=[Ring of Wishes,Ring,1H,Conjuration-Summoning]{{Speed=[[0]] - so fast, you can\'t change your mind, but the effect may take forever to happen}}RingData=[w:Ring of Wishes,sp:0,rc:charged]{{Size=Tiny}}{{desc=As with any wish, the DM should be very judicious in handling the request. If players are greedy and grasping, interpret their wording exactly, twist the wording, or simply rule the request is beyond the power of the magic. In any case, the wish is used up, whether or not the wish was granted, and regardless of the DM\'s interpretation of the wisher\'s request. No wish can cancel the decrees of god-like beings, unless it comes from another such creature.\n**House rules:** Legitimate uses for a full wish with no splash\n1. Raise a single attribute to 16\n2. Raise a single attribute from 16 to 17, or 17 to 18, or 18 to 19, or 19 to 20. Cannot be raised above 20 using a single wish.\n3. Restore a party to full heath (even if some members dead/paralysed/etc)}}'},
						{name:'Ring-of-Wizardry',type:'Ring',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Ring of Wizardry}}{{subtitle=Ring}}Specs=[Ring of Wizardry,Ring,1H,Alteration]{{Speed=[[0]]}}RingData=[w:Ring of Wizardry,sp:0,rc:uncharged]{{Size=Tiny}}{{Immunity=None}}{{desc=This ring confers on the bearer double the number of 3rd level wizard spells that can be memorized per day, while it is worn. If it is removed, the possessor will loose those spells gained at random - i.e. roll a dice to determine which memorized spells are instantly forgotten.}}'},
						{name:'Unknown-Ring',type:'Ring',ct:'1',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Unknown Ring}}{{splevel=Ring}}{{school=Unknown}}Specs=[Unknown Ring,Ring,1H,Any]{{components=M}}{{time=Unknown}}RingData=[w:Unknown Ring,sp:1,rc:uncharged]{{range=Unknown}}{{duration=Unknown}}{{aoe=Unknown}}{{save=Unknown}}{{effects=The powers of this ring are unknown. In fact, is it a magical ring at all, or just one of fine quality and just treasure?}}{{materials=Ring}}'},
					]},
	MI_DB_Scrolls_Books:{bio:'<blockquote>Scrolls & Spellbooks</blockquote><b>v5.6  01/01/2022</b><br><br>This Magic Item database holds definitions for both Wizard and Priest Scrolls and Spellbooks.',
					gmnotes:'<blockquote>Change Log:</blockquote>v5.6  01/01/2022  Updated to common release version<br><br>v5.2 - 5.5 Skipped to even up version numbers<br><br>v5.11  31/10/2021  Merged in spellbooks from "The Undiscovered Caverns"<br><br>v5.1  31/10/2021  Encoded using machine readable data to support API databases, and corrected some typos<br><br>v5.0  01/10/2021  Split MI-DB into separate databases for different types of Item. See MI-DB for earlier Change Log.',
					root:'MI-DB',
					controlledby:'all',
					avatar:'https://s3.amazonaws.com/files.d20.io/images/5063/thumb.png?1336230370',
					version:5.6,
					db:[{name:'Keraptis-Spellbook-No4',type:'Miscellaneous',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Keraptis\' Spellbook No4}}{{subtitle=Spellbook}}Specs=[Spellbook,Miscellaneous,1H,Any]{{spells=[View](!magic --view-spell mi-muspells|@{selected|token_id}) or [Cast](!magic --cast-spell mi-muspells|@{selected|token_id})}}MiscData=[w:Keraptis-Spellbook-No4,sp:0,rc:uncharged,ns:15],[cl:MU,w:Invisibility-10ft-radius,sp:3,lv:11],[cl:MU,w:clairaudience,sp:3,lv:11],[cl:MU,w:gust-of-wind,sp:3,lv:11],[cl:MU,w:protection-from-evil-10ft-radius,sp:3,lv:11],[cl:MU,w:lightning-bolt,sp:3,lv:11],[cl:MU,w:fumble,sp:4,lv:11],[cl:MU,w:wall-of-fire,sp:4,lv:11],[cl:MU,w:detect-scrying,sp:3,lv:11],[cl:MU,w:extension-I,sp:2,lv:11],[cl:MU,w:phantasmal-killer,sp:4,lv:11],[cl:MU,w:cone-of-cold,sp:5,lv:11],[cl:MU,w:chaos,sp:5,lv:11],[cl:MU,w:dismissal,sp:10,lv:11],[cl:MU,w:feeblemind,sp:5,lv:11],[cl:MU,w:wall-of-force,sp:5,lv:11]{{desc=A waterproof spell book which is well worn. It has a physical lock that forms a seal all the way around the book. The designs on the outside and the title page make it clear this is the spell book of a very powerful mage of perhaps an evil persuasion. It looks old and the writing is faded - this is probably a discarded book from when the mage was building their powers and had still not reached their full potential, forgotten and left behind}}'},
						{name:'Scroll',type:'Scroll',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Unknown Scroll}}{{splevel=Unknown}}{{school=Unknown}}Specs=[Scroll of Spells,Scroll,1H,Any]{{components=Unknown}}{{time=Unknown}}{{range=Unknown}}{{duration=Unknown}}{{aoe=Unknown}}{{save=Unknown}}{{effects=The spells on this scroll are unknown. In fact, is it a scroll of spells at all, or a scroll of protection, a map, or just some piece of fine quality parchment with scribbled notes on it?}}'},
						{name:'Scroll-6-Impressive-Spells',type:'Scroll',ct:'3',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Scroll of 6 impressive MU Spells}}{{subtitle=Scroll}}Specs=[Scroll of Spells,Scroll,1H,Scroll]{{Speed=[[3]]}}ScrollData=[sp:3,rc:uncharged,ns:6MU],[w:Fly,sp:3,lv:6],[w:Find-Familiar,sp:2d12,lv:2],[w:Extension 1,sp:2,lv:8],[w:Disintegrate,sp:6,lv:13],[w:Phantom-Steed,sp:100,lv:6],[w:Dismissal,sp:10,lv:10]{{Size=Small}}{{spells=[View](!magic --view-spell mi-muspells|@{selected|token_id}) or [Cast](!magic --cast-spell mi-muspells|@{selected|token_id})}}{{desc=This is a scroll with 6 Wizard Spells of mixed level on it. These are:\n1. Fly\n2. Find Familiar\n3. Extension 1\n4. Disintegrate\n5. Phantom Steed\n6. Dismissal\nIn order to cast (or otherwise use) one of these, use the *Cast Spell* button above}}'},
						{name:'Scroll-6-Mixed-MU-Spells',type:'Scroll',ct:'3',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Scroll of 6 mixed MU Spells}}{{subtitle=Scroll}}Specs=[Scroll of Spells,Scroll,1H,Scroll]{{Speed=[[3]]}}ScrollData=[sp:3,rc:uncharged,ns:6MU],[w:Water-Breathing,sp:3,lv:6],[w:Invisibility,sp:2,lv:6],[w:Glitterdust,sp:2,lv:6],[w:Shocking-Grasp,sp:1,lv:6],[w:Grease,sp:1,lv:6],[w:Tongues,sp:3,lv:6]{{Size=Small}}{{Spells=[View](!magic --view-spell mi-muspells|@{selected|token_id}) or [Cast](!magic --cast-spell MI|@{selected|token_id}|6||Charged) spell from scroll}}{{desc=This is a scroll with 6 Wizard Spells of mixed level on it. These are:\n1. Water Breathing\n2. Invisibility\n3. Glitterdust\n4. Shocking Grasp\n5. Grease\n6. Tongues\nIn order to cast (or otherwise use) one of these, use the *Cast Spell* button above}}'},
						{name:'Scroll-of-4-L7-MU-Spells',type:'Scroll',ct:'7',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Scroll of 4 L7 MU Spells}}{{subtitle=Scroll}}Specs=[Scroll of Spells,Scroll,1H,Scroll]{{Speed=[[7]]}}ScrollData=[sp:7,rc:uncharged,ns:4MU],[w:Cacodemon,sp:360,lv:15],[w:Mass-Invisibility,sp:7,lv:15],[w:Phase-Door,sp:7,lv:15],[w:Vanish,sp:2,lv:15]{{Size=Small}}{{spells=[View](!magic --view-spell mi-muspells|@{selected|token_id}) or [Cast](!magic --cast-spell mi-muspells|@{selected|token_id})}}{{desc=This is a scroll with 4 Level 7 Wizard Spells on it. These are:\n1. Cacodemon\n2. Mass Invisibility\n3. Phase Door\n4. Vanish\nIn order to cast (or otherwise use) one of these, use the *Cast Spell* button above}}'},
						{name:'Scroll-of-6-L3-MU-spells',type:'Scroll',ct:'3',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Scroll of 6 L3 MU Spells}}{{subtitle=Scroll}}Specs=[Scroll of Spells,Scroll,1H,Scroll]{{Speed=[[3]]}}ScrollData=[sp:3,rc:uncharged,ns:6MU],[w:Water-Breathing,sp:3,lv:6],[w:Air-Breathing,sp:3,lv:6],[w:Suggestion,sp:3,lv:6],[w:Invisibility-10ft-radius,sp:3,lv:6],[w:Clairvoyance,sp:3,lv:6],[w:Infravision,sp:10,lv:6]{{Size=Small}}{{Cast Spell=[Cast Spell from Scroll](!magic --cast-spell MI|@{selected|token_id}|6|Scroll of 6 L3 MU Spells|charged)}}{{desc=This is a scroll with 6, 3rd Level Wizard Spells on it. These are:\n1. Water Breathing\n2. Air Breathing\n3. Suggestion\n4. Invisibility 10ft Radius\n5. Clairvoyance\n6. Infravision\nIn order to cast (or otherwise use) one of these, use the *Cast Spell* button above}}'},
						{name:'Scroll-of-Animate-Rock',type:'Scroll',ct:'10',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Scroll of Animate Rock}}{{splevel=as per Level 7 Priest spell}}{{school=Alteration}}Specs=[Scroll of Animate Rock,Scroll,1H,Alteration]{{components=V,S,M}}{{time=[[1]]round}}ScrollData=[sp:10,rc:charged]{{range=[40 yards](!rounds --aoe @{selected|token_id}|circle|yards|0|80||magic|true)}}{{duration=[[15]]rounds}}{{aoe=[[30]]cu.ft}}{{save=None}}{{effects=Same as 7th Level Priest spell, *Animate Rock* cast as if by a 15th level Priest. \nBy employing an animate rock spell, the caster causes a stone object of up to the indicated size to move (see the 6th-level *animate object* spell.). The animated stone object must be separate (not a part of a huge boulder or the like). It follows the desire of the caster--attacking, breaking objects, blocking--while the magic lasts. It has no intelligence or volition of its own, but it follows instructions exactly as spoken. Only one set of instructions for one single action can be given to the animated rock, and the directions must be brief, about a dozen words or so. The rock remains animated for one round per experience level of the caster. The volume of rock that can be animated is also based on the experience level of the caster--2 cubic feet of stone per level, such as 24 cubic feet, a mass of about man-sized, at 12th level.\nWhile the exact details of the animated rock are decided by the DM, its Armor Class is no worse than [[5]], and it has [1d3](!\\amp#13;\\amp#47;gmroll 30d3 hit points for the animated stone) hit points per cubic foot of volume. It uses the attack roll of the caster. The maximum damage it can inflict is [1d2](!\\amp#13;\\amp#47;r 15d2) points per caster level. Thus, a 12th-level caster\'s rock might inflict 12 to 24 points of damage. Movement for a mansized rock is 60 feet per round. A rock generally weighs from 100 to 300 pounds per cubic foot.}}{{material=The scroll, a stone and drop of the caster\'s blood.}}'},
						{name:'Scroll-of-Armour',type:'Scroll',ct:'10',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Scroll of Armour}}{{splevel=Level 1 Wizard}}{{school=Conjuration/Summoning}}Specs=[Scroll of Armour,Scroll,1H,Conjuration-Summoning]{{components=V, S, M}}{{time=[[1]] Round}}ScrollData=[sp:10,rc:charged]{{range=Touch}}{{duration=Lasts until the target takes [[8+({10,@{selected|casting-level}}kl1)]] points of damage}}{{aoe=Creature Touched}}{{save=None}}{{healing=[Armour yourself](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Select recipient|token_id}|Armour|99|0|Armoured AC6 plus Dex bonus|bolt-shield)}}{{effects=Bestows an AC of [[6]] No effect on armoured targets or creatures with AC [[6]] or better. It is not cumulative with the shield spell, but it does stack with Dexterity, and physical shields. Until it is dispelled, the armour spell grants the wearer full benefits of the Armour Class gained.}}{{materials=A piece of finely cured leather blessed by a Cleric}}'},
						{name:'Scroll-of-Augury',type:'Scroll',ct:'20',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Scroll of Augury}}{{splevel=Level 2 Priest}}{{school=Divination}}Specs=[Scroll of Augury,Scroll,1H,Divination]{{sphere=Divination}}{{components=V,S,M}}{{time=[[2]] rounds}}ScrollData=[sp:20,rc:charged]{{range=[[0]]}}{{duration=Special}}{{aoe=Special}}{{save=None}}{{effects=Asks divine guidance on whether action in next [[3]] turns will be for the benefit of or harmful to the party. If successful DM will reveal "weal" or "Woe" or perhaps some cryptic clue. Chance of success is [[70+@{selected|Casting-Level}]]% adjusted by DM for circumstances.}}{{materials=A set of gem-inlaid sticks, dragon bones, or similar tokens of at least 1,000gp value (which are ***not*** expended in casting and can be used again)}} '},
						{name:'Scroll-of-CLW',type:'Scroll',ct:'5',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Scroll of Cure Light Wounds}}{{splevel=Level 1 Priest}}{{school=Necromancy}}{{sphere=Healing}}Specs=[Scroll of CLW,Scroll,1H,Healing]{{components=V,S}}{{time=[[5]]}}ScrollData=[sp:5,rc:charged]{{range=Touch}}{{duration=Permanent}}{{aoe=Creature touched}}{{save=None}}{{healing=[1d8](!\\amp#13;\\amp#47;r 1d8) HP,\nor [1d8+3](!\\amp#13;\\amp#47;r 1d8+3) for a Priest of Life}}{{effects=Cannot cure non-corporeal or nonliving or extra-planar creatures.}}'},
						{name:'Scroll-of-Charm-Person',type:'Scroll',ct:'1',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Scroll of Charm Person}}{{splevel=Equivalent to Level 1 Wizard}}{{school=Enchantment/Charm}}Specs=[Scroll of Charm Person,Scroll,1H,Enchantment-Charm]{{components=V}}{{time=[[1]]}}ScrollData=[sp:1,rc:charged]{{range=[120 yards](!rounds --aoe @{selected|token_id}|circle|yards|0|240||magic)}}{{duration=Special, more than 1 day}}{{aoe=[[1]] person}}{{save=Negates}}{{damage=[Charm them](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Select a target|token_id}|Charm-Person|99|0|Charmed by scroll|chained-heart)}}{{effects=Cast as if by a 6th Level Wizard.\nThe person being targets must make a Save vs. Spell adjusted for Wisdom or become charmed by the spellcaster. A further bonus of +[[1]] for each point of damage the target has received is add to the Saving Throw if hurt by the caster\'s group. If the target fails, they consider the caster a trusted friend and ally that is to be heeded and protected. The target is allowed another Saving Throw on a periodic basis based on their Intelligence. If two or more charms effects hit the target simultaneously, it is up to the DM to decide what happens. It is important to note that the subject will have a full memory of the events that take place while they were charmed. \n[[3]] or less: [[3]] months \n[[4]]-[[6]]: [[2]] months \n[[7]]-[[9]]: [[1]] month \n[[10]]-[[12]]: [[3]] weeks \n[[13]]-[[14]]: [[2]] weeks \n[[15]]-[[16]]: [[1]] week \n[[17]]: [[3]] days \n[[18]]: [[2]] days \n[[19]] or more: [[1]] day}}'},
						{name:'Scroll-of-Command',type:'Scroll',ct:'1',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Scroll of Command}}{{splevel=Level 1 Priest}}{{school=Enchantment/Charm}}{{sphere=Charm}}Specs=[Scroll of Command,Scroll,1H,Enchantment-Charm]{{components=V}}{{time=[[1]]}}ScrollData=[sp:1,rc:charged]{{range=[30 yards](!rounds --aoe @{selected|token_id}|circle|yards|0|60||magic|true)}}{{duration=[[1]] round}}{{aoe=[[1]] creature}}{{save=[Special](!\\amp#13;\\amp#47;gmroll 1d20 saving throw)}}{{effects=Command another creature with a single word. Creatures with Intelligence 13 or more or 6HD or more save vs. spell adjusted by Wisdom to negate. No command affects a creature for more than 1 round and undead are not affected at all. Must be in language that creature understands. Will obey to best of ability as long as unequivocal and clear. Command to "Die" causes creature to faint for 1 round then revives alive and well. Typical commands are *back / halt / flee / run / stop / fall / go / leave / surrender / sleep / rest* etc.}}'},
						{name:'Scroll-of-Conjure-Elemental',type:'Scroll',ct:'100',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Scroll of Conjure Elemental}}{{splevel=Level 5 Wizard}}{{school=Conjuration/Summoning}}Specs=[Scroll of Conjure Elemental,Scroll,1H,Conjuration-Summoning]{{components=V, S}}{{time=[[1]] turn}}ScrollData=[sp:100,rc:charged]{{range=[60 yards](!rounds --aoe @{selected|token_id}|circle|yards|0|120||magic|true)}}{{duration=[[10]]turns}}{{aoe=Special}}{{save=None}}{{effects=There are actually four spells in the conjure elemental spell. The wizard is able to conjure an air, earth, fire, or water elemental with this spell--assuming he has the material component for the particular elemental. (A considerable fire source must be in range to conjure a fire elemental; a large amount of water must be available to conjure a water elemental.) Conjured elementals have 8 Hit Dice.\nIt is possible to conjure successive elementals of different types if the spellcaster has memorised two or more of these spells. The type of elemental to be conjured must be decided upon before memorising the spell. Each type of elemental can be conjured only once per day.\nThe conjured elemental must be controlled by the wizard--the spellcaster must concentrate on the elemental doing his commands--or it turns on the wizard and attacks. The elemental will not break off a combat to do so, but it will avoid creatures while seeking its conjurer. If the wizard is wounded or grappled, his concentration is broken. There is always a 5% chance that the elemental turns on its conjurer regardless of concentration. This check is made at the end of the second and each succeeding round. An elemental that breaks free of its control can be dispelled by the caster, but the chance of success is only 50%. The elemental can be controlled up to 30 yards away per level of the spellcaster. The elemental remains until its form on this plane is destroyed due to damage or until the spell\'s duration expires. Note that water elementals are destroyed if they are ever more than 60 yards from a large body of water.}}{{material=The scroll}}'},
						{name:'Scroll-of-Deeppockets',type:'Scroll',ct:'100',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Scroll of Deeppockets}}{{splevel=as per Level 2 Wizard spell}}{{school=Alteration,Enchantment}}Specs=[Scroll of Deeppockets,Scroll,1H,Alteration-Enchantment]{{components=V,S,M}}{{time=[[1]] turn}}ScrollData=[sp:100,rc:charged]{{range=Touch}}{{duration=[[18]] hours}}{{aoe=[[1]]garment}}{{save=None}}{{effects=Same as 2nd level Mage spell, *Deeppockets* cast as if by a 6th level Wizard. \nThis spell enables the wizard to specially prepare a garment so as to hold far more than it normally could. A finely sewn gown or robe of high-quality material (at least 50 gp value) is fashioned so as to contain numerous hand-sized pockets. One dozen is the minimum number. The deeppockets spell then enables these pockets to hold a total of 100 pounds (5 cubic feet in volume) as if it were only 10 pounds of weight. Furthermore, there are no discernible bulges where the special pockets are. At the time of casting, the caster can instead choose to have 10 pockets each holding 10 pounds (1/2 cubic foot volume each). If the robe or like garment is sewn with 100 or more pockets (200 gp minimum cost), 100 pockets can be created to contain one pound of weight and 1/6 cubic foot volume each. Each special pocket is actually an extradimensional holding space.\nIf the spell duration expires while there is material within the enchanted pockets, or if a successful dispel magic is cast upon the enchanted garment, all the material suddenly appears around the wearer and immediately falls to the ground. The caster can also cause all the pockets to empty with a single command.}}{{material=The scroll, the garment, which is reusable, a tiny golden needle and a strip of fine cloth given a half-twist and fastened at the ends.}}'},
						{name:'Scroll-of-Dispel-Magic',type:'Scroll',ct:'300',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Scroll of Dispel Magic}}{{splevel=Level 3 Wizard}}{{school=Abjuration}}Specs=[Scroll of Dispel Magic,Scroll,1H,Abjuration]{{components=V, S}}{{time=[[3]] turn}}ScrollData=[sp:300,rc:charged]{{range=[[120]]yds}}{{duration=Instantanious}}{{aoe=[30ft cube](!rounds --aoe @{selected|token_id}|square|yards|120|10||lightning)}}{{save=None}}{{effects=When a wizard casts this spell, it has a chance to neutralize or negate magic it comes in contact with, as follows:\nFirst, it removes spells and spell-like effects (including device effects and innate abilities) from creatures or objects. Second, it disrupts the casting or use of these in the area of effect at the instant the dispel is cast. Third, it destroys magical potions (which are treated as 12th level for purposes of this spell).\nEach effect or potion in the spell\'s area is checked to determine if it is dispelled. The caster can always dispel his own magic; otherwise, the chance to dispel depends on the difference in level between the magical effect and the caster. The base chance is 50% (11 or higher on 1d20 to dispel). If the caster is of higher level than the creator of the effect to be dispelled, the difference is subtracted from the number needed on 1d20 to dispel (making it more likely that the dispel succeeds); if the caster is of lower level, the difference is added to the number needed on 1d20 to dispel (making it less likely that the dispel succeeds). A roll of 20 always succeeds and a roll of 1 always fails. Thus, if a caster is 10 levels higher, only a roll of 1 prevents the effect from being dispelled. A dispel magic spell does not affect a specially enchanted item, such as a magical scroll, ring, wand, rod, staff, miscellaneous item, weapon, shield, or armor, unless it is cast directly upon the item. This renders the item nonoperational for 1d4 rounds. An item possessed and carried by a creature gains the creature\'s saving throw against this effect; otherwise, it is automatically rendered nonoperational. An interdimensional interface (such as a bag of holding) rendered nonoperational would be temporarily closed. Note that an item\'s physical properties are unchanged: A nonoperational magical sword is still a sword.\nArtifacts and relics are not subject to this spell; however, some of their spell-like effects may be, at the DM\'s option.\nNote that this spell can be very effective when used upon charmed and similarly beguiled creatures. Certain spells or effects cannot be dispelled; these are listed in the spell descriptions.}}'},
						{name:'Scroll-of-Explosive-Runes',type:'Scroll',ct:'3',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Scroll of Explosive Runes}}{{splevel=as per Level 3 Wizard spell}}{{school=Alteration}}Specs=[Scroll of Explosive Runes,Scroll,1H,Alteration]{{components=V,S}}{{time=[[3]]}}ScrollData=[sp:3,rc:charged]{{range=Touch}}{{duration=Special}}{{aoe=[10ft radius](!rounds --aoe @{selected|token_id}|circle|feet|0|20||fire|true)}}{{save=None or [Halves](\\amp#13;\\amp#47;gmroll 1d20 saving throw)}}{{damage=[6d4+6](!\\amp#13;\\amp#47;r 6d4+6 to reader, no save, to others in aoe save to half) to reader, no save, to others in aoe save to half}}{{effects=Same as 3rd level MU spell. By tracing these mystic runes upon a book, map, scroll, or similar object bearing written information, the wizard prevents unauthorized persons from reading his material. The explosive runes are difficult to detect--5% chance per level of magic use experience of the reader; thieves have only a 5% chance. But trap detection by spell or magical device always finds these runes.\nWhen read, the explosive runes detonate, delivering 6d4+6 points of damage to the reader, who gets no saving throw. A like amount, or half that if saving throws are made, is suffered by each creature within the blast radius. The wizard who cast the spell, as well as any he instructs, can read the protected writing without triggering the runes. Likewise, the wizard can remove the runes whenever desired. Others can remove them only with a successful dispel magic or erase spell. Explosive runes otherwise last until the spell is triggered. The item upon which the runes are placed is destroyed when the explosion takes place, unless it is not normally subject to destruction by magical fire (see the item saving throws in Chapter 6 of the Dungeon Master Guide).\n\nSummary of Dispel Magic Effects\nSource of Effect__Resists As_Result of Dispel\nCaster....................None.....Dispel automatic\nOther caster.........Level/HD..Effect negated\n/innate ability\nWand................ 6th level.........*\nStaff..................8th level.........*\nPotion..............12th level.....Potion destroyed\nOther magic...12th, unless special.....*\nArtifact.........DM discretion....DM discretion\n* Effect negated; if cast directly on item, item becomes non-operational for 1d4 rounds.}}'},
						{name:'Scroll-of-Fear',type:'Scroll',ct:'4',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Scroll of Fear}}{{splevel=as per Level 4 Wizard spell}}{{school=Illusion/Phantasm}}Specs=[Scroll of Fear,Scroll,1H,Illusion-Phantasm]{{components=V}}{{time=[[4]]}}ScrollData=[sp:4,rc:charged]{{range=[[0]]}}{{duration=Special}}{{aoe=[60ft. cone, 30ft. at end, 5ft. at base](!rounds --aoe @{selected|token_id}|cone|yards|0|20|10|magic)}}{{save=[Negates](!\\amp#13;\\amp#47gmroll 1d20 Save vs. Fear spell)}}{{damage=[Frighten Them](!rounds --target area|@{selected|character_id}|\\amp64;{target|Select first target|token_id}|Fear|8|-1|Fear|screaming)}}{{effects=Same as 4th Level Wizard spell, *Fear* cast as if by a 8th level mage. \nWhen a fear spell is cast, the wizard sends forth an invisible cone of terror that causes creatures within its area of effect to turn away from the caster and flee in panic. Affected creatures are likely to drop whatever they are holding when struck by the spell; the base chance of this is 60% at 1st level (or at 1 Hit Die), and each level (or Hit Die) above this reduces the probability by 5%. Thus, at 10th level there is only a 15% chance, and at 13th level no chance, of dropping items. Creatures affected by fear flee at their fastest rate for a number of melee rounds equal to the level of experience of the spellcaster. Undead and creatures that successfully roll their saving throws vs. spell are not affected}}'},
						{name:'Scroll-of-Find-Familiar',type:'Scroll',ct:'1000',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Find Familiar}}{{splevel=Scroll}}{{school=Conjuration/Summoning}}Specs=[Scroll of Find Familiar,Scroll,1H,Conjuration-Summoning]{{components=V,M}}{{time=[1d12](!\\amp#13;\\amp#47;r 1d12) hours}}ScrollData=[sp:1000,rc:charged]{{range=[[6]]miles}}{{duration=Special}}{{aoe=[[1]] creature}}{{save=[Special](!\\amp#13;\\amp#47;gmroll 1d20)}}{{effects=This scroll is the same as the 1st level Wizard spell, *Find Familiar*.}}{{materials=Scroll}}'},
						{name:'Scroll-of-Fireball',type:'Scroll',ct:'3',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Scroll of Fireball}}{{splevel=as per Level 3 Wizard spell}}{{school=Evocation}}Specs=[Scroll of Fireball,Scroll,1H,Evocation]{{components=V}}{{time=[[3]]}}ScrollData=[sp:3,rc:charged]{{range=[[70]] yds}}{{duration=Instantaneous}}{{aoe=[20ft. radius](!rounds --aoe @{selected|token_id}|circle|feet|210|40||fire)}}{{save=Halves}}{{effects=Same as 3rd Level Wizard spell, *Fireball* cast as if by a 6th level mage. \n A fireball is an explosive burst of flame, which detonates with a low roar and delivers damage proportional to the level of the wizard who cast it--6d6 points of damage for this scroll. The burst of the fireball creates little pressure and generally conforms to the shape of the area in which it occurs.\nThe fireball fills an area equal to its normal spherical volume (roughly 33,000 cubic feet--thirty-three 10-foot x 10-foot x 10-foot cubes). Besides causing damage to creatures, the\nfireball ignites all combustible materials within its burst radius, and the heat of the fireball melts soft metals such as gold, copper, silver, etc. Exposed items require saving throws vs. magical fire to determine if they are affected, but items in the possession of a creature that rolls a successful saving throw are unaffected by the fireball.\nThe wizard points his finger and speaks the range (distance and height) at which the fireball is to burst. A streak flashes from the pointing digit and, unless it impacts upon a material body or solid barrier prior to attaining the prescribed range, blossoms into the fireball (an early impact results in an early detonation). Creatures failing their saving throws each suffer full damage from the blast. Those who roll successful saving throws manage to dodge, fall flat, or roll aside, each receiving half damage (the DM rolls the damage and each affected creature suffers either full damage or half damage [round fractions down], depending on whether the creature saved or not)}}'},
						{name:'Scroll-of-Flame-Blade',type:'Scroll',ct:'4',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Scroll of Flame Blade}}{{splevel=Level 2 Priest}}{{school=Evocation}}{{sphere=Elemental (Fire)}}Specs=[Scroll of Flame Blade,Scroll,1H,Evocation]{{components=V,S,M}}{{time=[[4]]}}ScrollData=[sp:4,rc:charged]{{range=[[0]]}}{{duration=[[4+floor(@{selected|Casting-Level}/2)]] rounds}}{{aoe=[[3]]ft long blade}}{{save=None}}{{healing=[Gain Flameblade](!rounds --target caster|@{selected|token_id}|Flame-Blade|[[4+floor(@{selected|Casting-Level}/2)]]|-1|If hit, Flameblade does 1d4+4 dmg, +2 fire dmg|all-for-one)}}{{effects=With this spell, the caster causes a blazing ray of red-hot fire to spring forth from his hand. This bladelike ray is wielded as if it were a scimitar. If the caster successfully hits with the flame blade in melee combat, the creature struck suffers 1d4+4 points of damage, with a damage bonus of +2 (i. e., 7-10 points) if the creature is undead or is especially vulnerable to fire. If the creature is protected from fire, the damage inflicted is reduced by 2 (i.e., 1d4+2 points). Fire dwellers and those using fire as an innate attack form suffer no damage from the spell. The flame blade can ignite combustible materials such as parchment, straw, dry sticks, cloth, etc. However, it is not a magical weapon in the normal sense of the term, so creatures (other than undead) struck only by magical weapons are not harmed by it. This spell does not function under water}}{{materials=In addition to the caster\'s holy symbol, the spell requires a leaf of sumac}}'},
						{name:'Scroll-of-Glitterdust',type:'Scroll',ct:'2',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Scroll of Glitterdust}}{{splevel=as per Level 2 Wizard spell}}{{school=Conjuration/Summoning}}Specs=[Scroll of Glitterdust,Scroll,1H,Conjuration-Summoning]{{components=V,S,M}}{{time=[[2]]}}ScrollData=[sp:2,rc:charged]{{range=[[60]]yds}}{{duration=Blinding [1d4+1](!\\amp#13;\\amp#47;r 1d4+1) rounds, Glittered [1d4+6](!\\amp#13;\\amp#47;r 1d4+6) rounds}}{{aoe=[20ft cube](!rounds --aoe @{selected|token_id}|square|feet|180|20||light)}}{{save=[Special](!\\amp#13;\\amp#47;gmroll 1d20 save vs. Glitterdust scroll}}{{damage=[Blind them with Glitter](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Select first target|token_id}|Glitterdust|\\amp#63;{Duration?|\\amp#91;[1d4+1]\\amp#93;}|-1|Blinded by Glitterdust, 4 penalty on attk+AC|bleeding-eye)}}{{effects=Same as 2nd level Mage spell, *Glitterdust* cast as if by a 6th level Wizard. \nThis spell creates a cloud of glittering golden particles within the area of effect. Those in the area must roll a successful saving throw vs. spell or be blinded (-4 penalties to attack rolls, saving throws, and Armor Class) for 1d4+1 rounds. In addition, all within the area are covered by the dust, which cannot be removed and continues to sparkle until it fades. Note that this reveals invisible creatures. The dust fades in 1d4 rounds plus one round per caster level. Thus, glitterdust cast by a 3rd-level wizard lasts for four to seven rounds.}}{{material=Ground mica.}}'},
						{name:'Scroll-of-Grease',type:'Scroll',ct:'1',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}}{{title=Scroll of Grease}}{{splevel=Level 1 Wizard}}{{school=Conjuration}}Specs=[Scroll of Grease,Scroll,1H,Conjuration]{{components=V, S, M}}{{time=[[1]]}}ScrollData=[sp:1,rc:charged]{{range=[[10]]yds}}{{duration=[[3+@{selected|casting-level}]] Rounds}}{{aoe=[10ft by 10ft](!rounds --aoe @{selected|token_id}|square|feet|30|10|10|acid)}}{{save=[Reach](!\\amp#13;\\amp#47;gmroll 1d20 saving throw) safe ground by end of round}}{{effects=Save vs. spell or slip skid and fall. Save means exit area successfully at end of round, losing any other action. If still in then save each round. DM adjust effect by circumstance - e.g. incline means virtually impossible to stay upright, but assured of exiting! Greased objects in use save or are immediately dropped, and need successful save each round. Caster can end.}}{{materials=A bit of pork rind or butter}}'},
						{name:'Scroll-of-Heal',type:'Scroll',ct:'3',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Scroll of Heal}}{{splevel=as per Level 6 Priest spell}}{{school=Evocation}}Specs=[Scroll of Heal,Scroll,1H,Evocation]{{components=V}}{{time=[[3]]}}ScrollData=[sp:3,rc:charged]{{range=[[70]] yds}}{{duration=Instantaneous}}{{aoe=[20ft radius](!rounds --aoe @{selected|token_id}|circle|feet|210|40||light)}}{{save=Halves}}{{effects=Same as 6th Level Priest spell, *Heal* cast as if by a 12th level priest. \n The very potent heal spell enables the priest to wipe away disease and injury in the creature who receives the benefits of the spell. It completely cures all diseases or blindness of the recipient and heals all points of damage suffered due to wounds or injury. It dispels a feeblemind spell. It cures those mental disorders caused by spells or injury to the brain. Naturally, the effects can be negated by later wounds, injuries, and diseases.\nThe reverse, harm, infects the victim with a disease and causes loss of all but 1d4 hit points, if a successful touch is inflicted. For creatures that are not affected by the heal or harm spell, see the *cure light wounds* spell.}}'},
						{name:'Scroll-of-Heroes-Feast',type:'Scroll',ct:'100',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Heroes Feast}}{{splevel=Scroll}}{{school=Evocation}}{{sphere=Creation}}Specs=[Scroll of Heroes Feast,Scroll,1H,Evocation]{{components=V,M}}{{time=[[1]] turn}}ScrollData=[sp:100,rc:charged]{{range=[[10]] yds}}{{duration=[[1]] hour}}{{aoe=[[12]] creatures}}{{save=None}}{{healing=[Make Heroes](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Select first target|token_id}|Heroes-Feast|99|0|Blessed, +1 to attk, immune to fear, hopelessness, panic|angel-outfit)}}{{effects=This scroll enables the priest to bring forth a great feast that serves [[12]] creatures. The spell creates a magnificent table, chairs, service, and all the necessary food and drink. The feast takes one full hour to consume, and the beneficial effects do not set in until after this hour is over. Those partaking of the feast are cured of all diseases, are immune to poison for [[12]] hours, and are healed of [1d4+4](!\\amp#13;\\amp#47;r 1d4+4) points of damage after imbibing the nectarlike beverage that is part of the feast. The ambrosia-like food that is consumed is equal to a bless spell that lasts for 12 hours. Also, during this same period, the people who consumed the feast are immune to fear, hopelessness, and panic. If the feast is interrupted for any reason, the spell is ruined and all effects of the spell are negated}}{{materials=Scroll}}'},
						{name:'Scroll-of-Hold-Person',type:'Scroll',ct:'3',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Scroll of Hold Person}}{{splevel=Level 3 Wizard}}{{school=Enchantment/Charm}}Specs=[Scroll of Hold Person,Scroll,1H,Enchantment-Charm]{{components=V, S}}{{time=[[3]]}}ScrollData=[sp:3,rc:charged]{{range=[[120]] yards}}{{duration=[[12]] rounds}}{{aoe=[1d4](!\\amp#13;\\amp#47;r 1d4) persons in [20ft. cube](!rounds --aoe @{selected|token_id}|square|feet|360|20||magic)}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 saving throw)}}{{damage=[Hold](!rounds --target area|@{selected|character_id}|\\amp#64;{target|Select first target|token_id}|Hold-person|12|-1|Held|fishing-net)}}{{effects=This spell will hold humans, demihumans and humanoid creatures. The spell is centered on a point chosen by the caster and it affects all persons within the area of effect. If three or four persons are caught, they all get unmodified Saving Throws while if only two persons are caught, they suffer a [[0-1]] and if only one person is caught, they suffer a [[0-3]] to their Saving Throws. Wisdom adjustments can contribute to Saving Throws. Cannot hold undead}}'},
						{name:'Scroll-of-Inflict-Wounds',type:'Scroll',ct:'5',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Scroll of Inflict Wounds}}{{splevel=Level 1 Priest}}{{school=Necromancy}}Specs=[Scroll of Inflict Wounds,Scroll,1H,Necromancy]{{sphere=Healing}}{{components=V,S}}{{time=[[5]]}}ScrollData=[sp:5,rc:charged]{{range=Touch}}{{duration=Permanent}}{{aoe=Creature touched}}{{save=None}}{{healing=[1d8](!\\amp#13;\\amp#47;r 1d8) HP,\nor [1d8+3](!\\amp#13;\\amp#47;r 1d8+3) for a Priest of Life}}{{effects=Operates in the same manner as Cure Light Wounds, but inflicting 1d8 points of damage instead of curing. If a creature is avoiding this touch, an attack roll is needed to determine if the priest\'s hand strikes the opponent and causes such a wound.\nCaused wounds will heal--or can be cured--just as any normal injury. Cannot damage non-corporeal or nonliving or extra-planar creatures.}}'},
						{name:'Scroll-of-Invisibility',type:'Scroll',ct:'2',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Scroll of Invisibility}}{{splevel=Level 2 Wizard}}{{school=Illusion/Phantasm}}Specs=[Scroll of Invisibility,Scroll,1H,Illusion-Phantasm]{{components=V, S, M}}{{time=[[2]]}}ScrollData=[sp:2,rc:charged]{{range=Touch}}{{duration=Until attack or [[24]] hours}}{{aoe=Creature touched}}{{save=None}}{{healing=[Make them invisible](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Select Invisible One|token_id}|Invisibility|99|0|Invisible except slight haze, 4 bonus to AC \\amp saves, until attack|half-haze)}}{{effects=Creature touched vanishes from sight, undetectable by normal vision or infravision. Not magically silenced. Allies cannot see the invisible creature or gear, unless can normally see invisible things or employ magic to do so. Items put down become visible; items picked up disappear if tucked into the clothing or pouches. Light never becomes invisible, although source of light can become so.\nRemains in effect until magically broken or dispelled, until wizard or recipient cancels it, until recipient attacks any creature, or until [[24]] hours have passed. Thus, invisible being can open doors, talk, eat, climb stairs, etc., but if he attacks, immediately becomes visible, although the invisibility enables him to attack first. Note that priest spells bless, chant, and prayer are not attacks for this purpose. All Intelligence [[13]] or more creatures with \\gt [[10]] Hit Dice or Levels can roll saving throws vs. spell; success means they noticed the invisible object.}}{{materials=An eyelash and a bit of gum arabic, the former encased in the latter.}}'},
						{name:'Scroll-of-Knock',type:'Scroll',ct:'1',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Scroll of Knock}}{{splevel=Level 2 Wizard}}{{school=Alteration}}Specs=[Scroll of Knock,Scroll,1H,Alteration]{{components=V}}{{time=1}}ScrollData=[sp:1,rc:charged]{{range=60 yds.}}{{duration=Special}}{{aoe=[[[10*@{selected|Casting-Level}]] sq. ft.](!rounds --aoe @{selected|token_id}|rectangle|feet|180|||magic)}}{{save=None}}{{effects=The knock spell opens stuck, barred, locked, held, or wizard-locked doors. It opens secret doors, as well as locked or trick-opening boxes or chests. It also loosens welds, shackles, or chains - two types of lock on one door per cast}}'},
						{name:'Scroll-of-Magic-Mouth',type:'Scroll',ct:'2',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Scroll of Magic Mouth}}{{splevel=Level 2 Wizard}}{{school=Alteration}}Specs=[Scroll of Magic Mouth,Scroll,1H,Alteration]{{components=V, S}}{{time=[[2]]}}ScrollData=[sp:2,rc:charged]{{range=[10 yards](!rounds --aoe @{selected|token_id}|circle|yards|0|20||magic|true)}}{{duration=Special}}{{aoe=[[1]]Object}}{{save=None}}{{effects=When this spell is cast, the wizard imbues the chosen object with an enchanted mouth that suddenly appears and speaks its message when a specified event occurs. The message, which must be of 25 words or less, can be in any language known by the spellcaster, and can be delivered over a period of one turn. The mouth cannot speak magical spells or use command words. It does, however, move to the words articulated--if it is placed upon a statue, the mouth of the statue would actually move and appear to speak. Of course, the magic mouth can be placed upon a tree, rock, door, or any other object, excluding intelligent members of the animal or vegetable kingdoms.\nThe spell functions when specific conditions are fulfilled, according to the command of the spellcaster. Some examples are to speak "to the first creature that touches you," or "to the first creature that passes within 30 feet." Commands can be as general or as detailed as desired, although only visual and audible triggers can be used, such as the following: "Speak only when a venerable female human carrying a sack of groat clusters sits crosslegged within 1 foot." Such visual triggers can react to a character using the disguise ability. Command range is 5 yards per level of the wizard, so a 6th-level wizard can command the magic mouth to speak at a maximum encounter range of 30 yards ("Speak when a winged creature comes within 30 yards."). The spell lasts until the speak command can be fulfilled; thus, the spell duration is variable. A magic mouth cannot distinguish invisible creatures, alignments, level, Hit Dice, or class, except by external garb. If desired, the effect can be keyed to a specific noise or spoken word.}}'},
						{name:'Scroll-of-Protection-vs-Fiends',type:'Scroll',ct:'10',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Protection vs. Fiends}}{{splevel=Scroll}}{{school=Alteration}}{{sphere=Protection}}Specs=[Scroll of Protection vs Fiends,Scroll,1H,Alteration-Protection]{{components=V,M}}{{time=[[10]]}}ScrollData=[sp:10,rc:charged]{{range=[[0]]}}!setattr --silent --charid @{selected|character_id} --spell-duration|{{duration=5d4 = [[5d4]] rounds}}!!!{{aoe=[[10]]ft diameter sphere}}{{save=None}}{{healing=[Repel Fiends](!rounds --target caster|@{selected|token_id}|Protection-vs-Fiends|\\amp#91;[\\amp#64;{selected|spell-duration}]\\amp#93;|-1|Protected vs Demons, Devils \\amp other fiends|white-tower)}}{{effects=This scroll generates a 10-foot diameter sphere of protection centered on the reader. All within the area are immune to attacks or other effects caused by demons, devils or other Fiends from the lower planes. They may not enter the area of protection, but those inside can attack through the barrier. The barrier may not be used in any way offensively - trapping a fiend and forcing the barrier against it will end the protection.}}{{materials=Scroll}}'},
						{name:'Scroll-of-Protection-vs-Gas',type:'Scroll',ct:'3',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Protection vs. Gas}}{{splevel=Scroll}}{{school=Alteration}}{{sphere=Protection}}Specs=[Scroll of Protection vs Gas,Scroll,1H,Alteration-Protection]{{components=V,M}}{{time=[[3]]}}ScrollData=[sp:3,rc:charged]{{range=[[0]]}}{{duration=[1d4+4](!\\amp#13;\\amp#47;r 1d4+4) rounds}}{{aoe=[10ft diameter sphere](!rounds --aoe @{selected|token_id}|circle|feet|0|10||light|true)}}{{save=None}}{{healing=[Put on gas masks](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Select first target|token_id}|Protection-vs-Gas|\\amp#91;[\\amp#63;{Duration?|1d4+4}]\\amp#93;|-1|Protected vs Gas attacks|white-tower)}}{{effects=This scroll generates a 10-foot diameter sphere of protection centered on the reader. All within the area are immune to the effects of any gas—poison gas, gaseous breath weapons, spells that generate gas (such as stinking cloud and cloudkill), and all similar forms of noxious, toxic vapors. The protection lasts for [1d4+4](!\\amp#13;\\amp#47;r 1d4+4) rounds.)}}{{materials=Scroll}}'},
						{name:'Scroll-of-Protection-vs-Gaze-Attacks',type:'Scroll',ct:'5',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Protection from Gaze Attacks}}{{splevel=Scroll}}{{school=Alteration}}{{sphere=Protection}}Specs=[Scroll of Protection vs Gaze Attacks,Scroll,1H,Alteration-Protection]{{components=V,M}}{{time=[[5]]}}ScrollData=[sp:5,rc:charged]{{range=[[0]]}}{{duration=1d4+4 rounds}}{{aoe=Caster}}{{save=None}}{{healing=[Get Gaze Protection](!rounds --target caster|@{selected|token_id}|Protection-vs-Gaze|\\amp#91;[\\amp#63;{Duration?|1d4+4}]\\amp#93;|Protected vs Gaze attacks|white-tower)}}{{effects=This scroll generates a shimmering aura around the reader which disrupts the effect of gaze attacks. The reader is immune to the effects of any gaze attack, including those from basilisks or vampires, and MIs or spells that grant gaze attacks (such as *eyes of charming* and *eyebite*), and all similar effects. The protection lasts for 1d4+4 rounds.)}}{{materials=Scroll}}'},
						{name:'Scroll-of-Protection-vs-Magic',type:'Scroll',ct:'8',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Silence 15ft radius}}{{splevel=Scroll}}{{school=Abjuration}}{{sphere=Protection}}Specs=[Scroll of Protection vs Magic,Scroll,1H,Abjuration-Protection]{{components=V,M}}{{time=[[8]]}}ScrollData=[sp:8,rc:charged]{{range=Reader}}{{duration=[5d6](!\\amp#13;\\amp#47;r 5d6) rounds}}{{aoe=[5ft radius](!rounds --aoe @{selected|token_id}|circle|feet|0|10||magic|true)}}{{save=None}}{{healing=[Protect Them](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Select a target|token_id}|Protection-vs-Magic\\amp#91;[\\amp#63;{Duration?|5d6}]\\amp#93;|Protected from Magic|white-tower)}}{{effects=(Reading time—8) This scroll invokes a very powerful, invisible globe of antimagic in a 5-foot radius from the reader. No form of magic can pass into or out of it, but physical things are not restricted by the globe. As with other protections, the globe of antimagic moves with its invoker. The protection lasts for [5d6](!\\amp#13;\\amp#47;r 5d6) rounds.}}{{materials=Scroll}}'},
						{name:'Scroll-of-Shocking-Grasp',type:'Scroll',ct:'1',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Scroll of Shocking Grasp}}{{splevel=Level 1 Wizard}}{{school=Alteration}}Specs=[Scroll of Shocking Grasp,Scroll,1H,Alteration]{{components=V, S}}{{time=[[1]]}}ScrollData=[sp:1,rc:charged]{{range=Touch}}{{duration=[[@{selected|casting-level}]] rounds or until used}}{{aoe=Creature touched}}{{save=None}}{{damage=[1d8+level](!\\amp#13;\\amp#47;r 1d8+[[@{selected|casting-level}]]) HP}}{{damagetype=Electrical}}{{effects=Does electrical damage as above either by touching opponent (no To Hit roll necessary) or an electrical conductor the opponent is touching (e.g. sword, plate armour, metal bars). Does not discharge if caster hit or touched by opponent.}}'},
						{name:'Scroll-of-Silence-15ft-Radius',type:'Scroll',ct:'5',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Silence 15ft radius}}{{splevel=Scroll}}{{school=Alteration}}{{sphere=Guardian}}Specs=[Scroll of Silence 15ft Radius,Scroll,1H,Alteration-Guardian]{{components=V,M}}{{time=[[5]]}}ScrollData=[sp:5,rc:charged]{{range=[[120]] yds}}{{duration=[[12]] rounds}}{{aoe=[15ft radius sphere](!rounds --aoe @{selected|token_id}|circle|yards|120|10||dark)}}{{save=None}}{{damage=If casting on a creature [Silence Them](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Select a target|token_id}|Silence-15ft|12|-1|Silence 15ft radius|interdiction), otherwise draw a circle on the ground}}{{effects=Upon casting this spell, complete silence prevails in the affected area. All sound is stopped: Conversation is impossible, spells cannot be cast (or at least not those with verbal components, if the optional component rule is used), and no noise whatsoever issues from or enters the area. The spell can be cast into the air or upon an object, but the effect is stationary unless cast on a mobile object or creature. The spell lasts two rounds for each level of experience of the priest. The spell can be centered upon a creature, and the effect then radiates from the creature and moves as it moves. An unwilling creature receives a saving throw against the spell. If the saving throw is successful, the spell effect is centered about 1 foot behind the position of the subject creature at the instant of casting. This spell provides a defense against sound-based attacks, such as harpy singing, horn of blasting, etc.}}{{materials=Scroll}}'},
						{name:'Scroll-of-Spider-Climb',type:'Scroll',ct:'1',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Scroll of Spider Climb\nas a level @{selected|casting-level} caster}}{{splevel=Level 1 Wizard}}{{school=Alteration}}Specs=[Scroll of Spider Climb,Scroll,1H,Alteration]{{components=V, S, M}}{{time=[[1]]}}ScrollData=[sp:1,rc:charged]{{range=Touch}}{{duration=[[3+(3*@{selected|casting-level})]] rounds}}{{aoe=Creature touched}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 saving throw)}}{{healing=[Grant Spidy-powers!](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Select Spider-man|token_id}|Spider-climb|[[3+(3*@{selected|casting-level})]] |-1|Has Spidy-Powers to climb walls \\amp ceilings, move 6|strong)}}{{effects=Enables recipient to climb and travel on vertical surfaces like a giant spider, and upside down from ceilings. Unwilling victims must be touched, then allowed a saving throw vs. spell. Recipient must have bare hands and feet in order to climb, at a movement of 6 (3 if at all encumbered). During the spell, recipient cannot handle objects that weigh less than a dagger (one pound), for such objects stick to his hands and feet. A Wizard will find it virtually impossible to cast spells if under a spider climb spell. Sufficient force can pull recipient free; the DM can assign a saving throw based on circumstances, the strength of the force, and so on. E.g. a creature with Strength 12 might pull subject free if subject fails a saving throw vs. paralysation (a moderately difficult saving throw). The caster can end the spell effect with a word}}{{materials=A drop of bitumen and a live spider, both of which must be eaten by the spell recipient.}}'},
						{name:'Scroll-of-Spook',type:'Scroll',ct:'1',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Spook}}{{splevel=Scroll}}{{school=Illusion/Phantasm}}Specs=[Scroll of Spook,Scroll,1H,Illusion-Phantasm]{{components=V,M}}{{time=[[1]]}}ScrollData=[sp:1,rc:charged]{{range=[30 feet](!rounds --aoe @{selected|token_id}|circle|feet|0|60||lightning|true)}}{{duration=Special}}{{aoe=[[1]] creature}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20)}}{{damage=[Frighten them](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Select a target|token_id}|Spook|99|0|Spooked, 1d20 saving throw each round to stop fleeing|screaming)}}{{effects=A spook spell enables the wizard to play upon natural fears to cause the target creature to perceive the spellcaster as someone or something inimical. Without actually knowing what this is, the wizard merely advances threateningly upon the creature. If the creature does not make a successful saving throw vs. spell, it turns and flees at maximum speed as far from the wizard as possible, though items carried are not dropped. The creature has a saving throw penalty of -1 for every two experience levels of the caster, to a maximum of -6 at 12th level. Note that a natural (unmodified) roll of 20 automatically succeeds, regardless of saving throw penalties. Although the caster does not actually pursue the fleeing creature, a phantasm from its own mind does. Each round after the initial casting, the creature receives another saving throw, without penalty, until it successfully saves and the spell is broken. In any event, the spell functions only against creatures with Intelligences of 2 or more, and undead are not affected at all.}}{{materials=Scroll}}'},
						{name:'Scroll-of-Stone-to-Flesh',type:'Scroll',ct:'6',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Scroll of Stone to Flesh}}{{splevel=as per Level 6 Mage spell}}{{school=Alteration}}Specs=[Scroll of Stone to Flesh,Scroll,1H,Alteration]{{components=V,M}}{{time=[[6]]}}ScrollData=[sp:6,rc:charged]{{range=[130 yards](!rounds --aoe @{selected|token_id}|circle|yards|0|130||lightning|true)}}{{duration=Permanent}}{{aoe=[[1]] creature}}{{save=[Special](!\\amp#13;\\amp#47;gmroll 1d20 save vs. Stone to Flesh spell)}}{{effects=Same as 6th Level Mage spell, *Stone to Flesh* cast as if by a 13th level Wizard. \nThe stone to flesh spell turns any sort of stone into flesh. If the recipient stone object was formerly living, this spell restores life (and goods), although the survival of the creature is subject to the usual system shock survival roll. Any formerly living creature, regardless of size, can be thus returned to flesh. Ordinary stone can be turned to flesh in a volume of 9 cubic feet per level of experience of the spellcaster. Such flesh is inert, lacking a vital life force, unless a life force or magical energy is available (for example, this spell would turn a stone golem into a flesh golem, but an ordinary statue would become a body). If cast upon stone, the wizard can create a cylinder of fleshy material from 1 to 3 feet in diameter and up to 10 feet long, allowing a passage to be made.}}{{material=\nThe scroll and a pinch of earth and a drop of blood.}}'},
						{name:'Scroll-of-Summon-Swarm',type:'Scroll',ct:'2',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Scroll of Summon Swarm}}{{splevel=as per Level 2 Wizard spell}}{{school=Conjuration/Summoning}}Specs=[Scroll of Summon Swarm,Scroll,1H,Conjuration-Summoning]{{components=V}}{{time=[[2]]}}ScrollData=[sp:2,rc:charged]{{range=[[60]] yds}}{{duration=Until [[12]]HP of damage done to swarm}}{{aoe=[10ft cube](!rounds --aoe @{selected|token_id}|square|feet|180|10||acid)}}{{save=[Halves](\\amp#13;\\amp#47;gmroll 1d20 saving throw)}}{{damage=[[1]] defending, [1d4+4](!\\amp#13;\\amp#47;r 1d4+4) otherwise}}{{effects=Same as 2nd Level Wizard spell, *Summon Swarm* cast as if by a 6th level mage. \nThose in area take damage as above. Can\'t cast spells in swarm. Swarm only harmed by area effect or fire. To determine type of swarm roll [1d100](!\\amp#13;\\amp#47;r 1d100). 01-40 Rats / 41-70 Bats / 71-80 Spiders / 81-90 Centipedes and Beatles / 91-00 flying insects. *Protection from Evil* spell will keep swarm away and some area effects such as *Gust of Wind* or *Stinking Cloud* will disperse it as appropriate. The caster must remain stationary and concentrate or the swarm disperses and the swarm is immobile.}}'},
						{name:'Scroll-of-Tongues',type:'Scroll',ct:'3',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Scroll of Tongues}}{{splevel=Level 3 Wizard (reversable)}}{{school=Alteration}}Specs=[Scroll of Tongues,Scroll,1H,Alteration]{{components=V, M}}{{time=[[3]]}}ScrollData=[sp:3,rc:charged]{{range=[[0]]}}{{duration=[[@{selected|casting-level}]] rounds}}{{aoe=[30ft. radius](!rounds --aoe @{selected|token_id}|circle|feet|0|60||light)}}{{save=None}}{{healing=[Universal Translator](!rounds --target caster|@{selected|token_id}|Tongues-Translate|[[@{selected|casting-level}]]|-1|Speaks your language|Strong)}}{{damage=[Speak in Tongues](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Speak Gobbledegook|token_id}|ReverseTongues|[[@{selected|casting-level}]]|-1|Do not understand - reverse Tongues|edge-crack)}}{{effects=This spell enables the wizard to speak and understand additional languages, whether they are racial tongues or regional dialects. This does not enable the caster to speak with animals. The spell enables the caster to be understood by all creatures of that type within hearing distance, usually 60 feet. This spell does not predispose the subject toward the caster in any way. The wizard can speak one additional tongue for every three levels of experience.\nThe reverse of the spell cancels the effect of the tongues spell or confuses verbal communication of any sort within the area of effect.}}{{materials=A small clay model of a ziggurat, which shatters when the spell is pronounced.}}'},
						{name:'Scroll-of-Water-Breathing',type:'Scroll',ct:'3',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Scroll of Water Breathing\nas a level @{selected|casting-level} caster}}{{splevel=Level 3 Wizard}}{{school=Alteration}}Specs=[Scroll of Water Breathing,Scroll,1H,Alteration]{{components=V, S, M}}{{time=3}}ScrollData=[sp:3,rc:charged]{{range=Touch}}{{duration=[1d4+@{selected|casting-level}](!\\amp#13;\\amp#47;gmroll 1d4+@{selected|casting-level} hours duration) hours}}{{aoe=Creatures touched}}{{save=None}}{{healing=[Cast water breathing](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Select first fish|token_id}|Water-Breathing|99|0|Comfortably breathe underwater|strong)}}{{effects=The recipient of a water breathing spell is able to breathe water freely for the duration of the spell. The caster can touch more than one creature with a single casting; in this case the duration is divided by the number of creatures touched. The reverse, air breathing enables water-breathing creatures to comfortably survive in the atmosphere for an equal duration.}}{{materials=A short reed or piece of straw.}}'},
						{name:'Spellbook-10-MU-Spells',type:'Scroll',ct:'3',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Spellbook of 10 mixed MU Spells}}{{subtitle=Spellbook}}Specs=[Spellbook,Scroll,1H,Any]{{Size=Medium}}ScrollData=[sp:3,rc:uncharged,ns:10MU],[w:Fireball,sp:3,lv:6],[w:Burning-Hands,sp:1,lv:6],[w:Fire-Charm,sp:4,lv:8],[w:Flame-Arrow,sp:3,lv:6],[w:Slow,sp:3,lv:6],[w:Magic-Missile,sp:1,lv:6],[w:Flaming-Sphere,sp:2,lv:6],[w:Glitterdust,sp:2,lv:6],[w:Invisibility,sp:2,lv:6],[w:Identify,sp:100,lv:6]{{Spell=[View](!magic --view-spell mi-muspells|@{selected|token_id}) or [Cast](!magic --cast-spell MI|@{selected|token_id}|6||Charged) spell from Spellbook}}{{desc=This is a spellbook with 10 Wizard Spells of mixed level on it. These are:\n1. Fireball\n2. Burning-Hands\n3. Fire-Charm\n4. Flaming Arrow\n5. Slow\n6. Magic Missile\n7. Flaming Sphere\n8. Glitterdust\n9. Invisibility\n10.Identify\nIn order to cast (or otherwise use) one of these, use the *Cast Spell* button above}}'},
						{name:'Tome-of-Math-Mathonwy',type:'Miscellaneous',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Tome of Math Mathonwy}}{{subtitle=Tome}}Specs=[Tome of Math Mathonwy,Miscellaneous,2H,Any]{{Rituals=[View](!magic --view-spell mi-power|@{selected|token_id}) [Perform](!magic --cast-spell mi-power|@{selected|token_id})}}MiscData=[w:Tome of Math Mathonwy,sp:0,rc:uncharged,ns:6],[cl:PW,w:Rite-of-Arcs-Dilemma,lv:15,pd:1,sp:100],[cl:PW,w:Keraptis-Soul-Trap,lv:20,pd:1,sp:100],[cl:PW,w:Dream,lv:10,pd:1,sp:100],[cl:PW,w:Permanency,lv:15,pd:1,sp:20],[cl:PW,w:Steal-Enchantment,lv:17,pd:1,sp:600],[cl:PW,w:Animate-Dead,lv:15,pd:1,sp:50]{{desc=This leather-and-platinum-bound book is indistinguishable from any normal book. It has a physical lock. There are several Tomes of Math Mathonwy known to exist. Each is a Tome containing 2+1d4 tested and experimental rites and rituals, some of which might work but many of which are disastrous to attempt - there are also always an additional 4+1d8 blank pages. The Tome can only hold and retain rituals to cast MU spells with Casting Times of 2 or more Rounds - though often the rituals will take Turns to perform. If spells of shorter casting times are written into the Tome, they are absorbed into the page and disappear. Each Tome is fireproof (but only gains a save at +4 vs. magical fire) and proof against Dispel Magic, Disintegration and similar magical destruction (other than magical fire). They all have some type of lock on them, most often a magical lock such as a Glyph of Warding but sometimes just a physical lock.\nWizards of any level can use the Tome, and even attempt to perform any of the Rituals therein. Tried and tested Rituals (i.e. to cast defined spells as from the PHB, the Complete Wizard\'s Handbook or the Tome of Magic) can be cast from the Tome with a success rate never greater than 90% minus 5% for each level between the casting MU and the level required to cast the spell. Success means the ritual has the described effect: failure has a chance of summoning an avatar of Math Mathonwy (see AD\\ampD Legends \\amp Lore - Celtic Mythos for details of the avatar), 20% plus 5% per level of the Ritual being performed. The avatar will endeavour to recover the Tome and return immediately to the plane of the Celtic Gods.\nExperimental rituals (researched and devised by the Wizard as per DMG, or by the DM) will have chances of success or failure as determined by the DM and appropriate to the ritual concerned. Failure may incur additional penalties but will always have a chance of an avatar of Math Mathonwy appearing to be determined based on an equivalent level of the ritual as determined by the DM.\nWizards cannot transfer rituals from the Tome into their spell books - for some reason they never seem to transcribe correctly. However, Wizards of any level do not have to do any other check to use the rituals other than described above.}}{{materials=Book}}'},
						{name:'Unknown-Scroll',type:'Scroll',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Unknown Scroll}}{{splevel=Unknown}}{{school=Unknown}}Specs=[Scroll of Spells,Scroll,1H,Any]{{components=Unknown}}{{time=Unknown}}{{range=Unknown}}{{duration=Unknown}}{{aoe=Unknown}}{{save=Unknown}}{{effects=The spells on this scroll are unknown. In fact, is it a scroll of spells at all, or a scroll of protection, a map, or just some piece of fine quality parchment with scribbled notes on it?}}'},
					]},
	MI_DB_Wands_Staves_Rods:{bio:'<blockquote>Wands, Staves & Rods</blockquote><b>v5.6  01/101/2022</b><br><br>This Magic Item database holds definitions for Wands, Staves and Rods, except for those such as Dancing Quarterstaffs that are considered weapons, and can be found in the MI-DB-Weapons database',
					gmnotes:'<blockquote>Change Log:</blockquote>v5.6  01/01/2022  Updated to common release version<br><br>v5.2 - 5.5 Skipped to even up version numbers<br><br>v5.11  31/10/2021  Merged in Rod of Revitalisation from "The Undiscovered Caverns"<br><br>v5.1  31/10/2021  Encoded using machine readable data to support API databases<br><br>v5.0  01/10/2021  Split MI-DB into separate databases for different types of Item. See MI-DB for earlier Change Log.',
					root:'MI-DB',
					controlledby:'all',
					avatar:'https://s3.amazonaws.com/files.d20.io/images/2796029/tJUjL-ilXyG-Ohu6T2Ykvg/thumb.png?1390103367',
					version:5.8,
					db:[{name:'Glass-Staff',type:'Staff',ct:'1',charge:'recharging',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Glass Staff}}{{splevel=Magic Item}}{{school=Protection}}Specs=[Glass Staff,Staff,1H,Staff]{{components=The Staff}}{{time=[[1]]}}StaffData=[w:Glass Staff,wt:6,sp:1,rc:recharging]{{range=[[0]]}}{{duration=Recharges [1d6+4](!\\amp#13;\\amp#47; 1d6+4) per night, max [[10]] charges}}{{aoe=Creature holding}}{{save=None}}{{effects=The staff seems to be made of clear, blueish/greenish glass, but is as strong as oak. It can have a maximum of [[10]] charges, and uses [[1]] if the wielder casts the spell [*Armour*](!rounds --target caster|@{selected|token_id}|Armour|99|0|Glass Staff Armour, AC6, for \\amp#91;[16]\\amp#93;HP|bolt-shield --mi-charges @{selected|token_id}|+\\amp#91;[1d6+4]\\amp#93;|Glass-Staff|10) on themselves, or [[2]] for [*Shield*](!rounds --target caster|@{selected|token_id}|Shield|40|-1|Glass Staff Shield, AC2,3,4|bolt-shield --mi-charges @{selected|token_id}|+\\amp#91;[1d6+4]\\amp#93;|Glass-Staff|10). It regains upto 1d6+4 charges each midnight, but never exceeds its maximum 10}}\n!setattr --charid @{selected|character_id} --silent --casting-level|8 --casting-name|Glass Staff'},
						{name:'Rod-of-Revitalisation',type:'Rod|Melee|Rod',ct:'2',charge:'rechargeable',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Rod of Revitalisation}}Specs=[Rod of Revitalisation,Rod|Melee,1H,Innate],[Rod of Revitalisation,Rod,1H,Alteration]{{subtitle=Rod}}ToHitData=[w:Rod of Revitalisation,sb:0,+:1,n:1,ch:20,cm:1,sz:S,ty:B,r:3,sp:2,rc:rechargeable]{{Speed=[[2]]}}DmgData=[w:Rod of Revitalisation,sb:0,+:0,SM:0,L:0]{{desc=Restores 1,000 XP per charge expended up to original XP (cannot increase beyond earned XP using charges), can be recharged at a sacrifice of 500 XP per charge (which reduces the maximum XP of the person doing the charging, and cannot be regained using the Rod). Excess experience from campaigns can thus be stored as charges in the Rod (at 500 XP per charge). Can be (but does not have to be) used as a weapon to drain 1,000 XP on a successful hit (as a +1 weapon) which adds 1 charge up to the maximum 20 charges, but only works on creatures that have XP (i.e. NPCs, Characters, or intelligent monsters that the DM judges as having XP, and can work out XP for e.g. equate Hit Dice to Levels and use the Character XP table to determine). Can hold a maximum of 20 charges. This Rod can be used by anyone.}}'},
						{name:'SoP-GoI',type:'',ct:'0',charge:'uncharged',cost:'0',body:'!magic --mi-charges @{selected|token_id}|-1\n%{MU-Spells-DB|Globe-of-Invulnerability}'},
						{name:'SoP-RoP',type:'',ct:'0',charge:'uncharged',cost:'0',body:'!magic --mi-charges @{selected|token_id}|-1\n/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Ray of Paralysation}}{{splevel=Wand}}{{school=Evocation}}{{components=V,M}}{{time=[[3]]}}{{range=[60 feet](!rounds --aoe @{selected|token_id}|cone|feet|0|60|5|lightning|true)}}{{duration=[5d4](!\\amp#13;\\amp#47;r 5d4) rounds}}{{aoe=1 creature}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 Save vs. Wand of Paralysation)}}{{damage=[Zap them!](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Who to zap?|token_id}|Paralyse|\\amp#91;[5d4]\\amp#93;|-1|Paralysed|fishing-net)}}{{effects=This wand shoots forth a thin ray of bluish colour to a maximum range of 60 feet. Any creature touched by the ray must roll successful saving throw vs. wand or be rendered rigidly immobile for 5d4 rounds. A save indicates the ray missed, and there is no effect. As soon as the ray touches one creature, it stops—the wand can attack only one target per round. The wand has an initiative modifier of +3 , and each use costs one charge. The wand may operate once per round. It may be recharged.}}{{materials=Wand}}'},
						{name:'SoP-Shield',type:'',ct:'0',charge:'uncharged',cost:'0',body:'!magic --mi-charges @{selected|token_id}|-1\n%{MU-Spells-DB|Shield}'},
						{name:'SoP-casting-level',type:'',ct:'0',charge:'uncharged',cost:'0',body:'!setattr --silent --charid @{selected|character_id} --casting-level|%{MI-DB-Wands-Staves-Rods|SoP-indirect}@{selected|MIct}}\n/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Staff of Power}}{{subtitle=Magic Weapon}}{{Speed=[[4]]}}{{Size=Large}}{{To-hit=+[[2]]}}{{damage=+[[2]],damage x2 if use charge, x3 critical hit}}{{desc=This staff can be used as a standard +2 quarterstaff to inflict damage in melee combat. However, it has the following additional powers:\n**Do double damage, x3 on critical hit:** Expend 1 charge by using the staff on the Use MI menu then attack with it using the appropriate weapon entry.\n**Cast spells at L3 to L9:** The following spells can be cast as an MU of a level determined by a d20 dice roll: *Casting level is %{MI-DB-Wands-Staves-Rods|SoP-indirect}@{selected|MIct}}*\n***1 charge***:\n[Cone of Cold](~MU-Spells-DB|Cone-of-Cold)[Continual Light](~MU-Spells-DB|Continual-Light)[Darkness 5ft radius](~MU-Spells-DB|Darkness-15ft-radius)[Fireball](~MU-Spells-DB|Fireball)[Levitation](~MU-Spells-DB|Levitation)[Lightning Bolt](~MU-Spells-DB|Lightning-Bolt)[Magic-Missile](~MU-Spells-DB|Magic-Missile)[Ray of Enfeeblement](~MU-Spells-DB|Ray-of-Enfeeblement)\n***2 charges***:\n[Globe of Invulnerability](~SoP-GoI)[Ray of Paralysation](~SoP-RoP)[Shield 5ft radius](~SoP-Shield)}}'},
						{name:'SoP-indirect',type:'',ct:'0',charge:'uncharged',cost:'0',body:'@{MI-DB-Wands-Staves-Rods|SoP-level'},
						{name:'Staff-of-Power',type:'Staff|Melee',ct:'4',charge:'charged',cost:'0',body:'!setattr --silent --charid @{selected|character_id} --casting-name|@{selected|token_name}s Staff of Power --casting-level|6 --MIct|[[?{Roll for spell level|1d20}]]\n/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Staff of Power}}{{subtitle=Magic Weapon}}{{Speed=[[4]]}}{{Size=Large}}{{Weapon=2-handed melee staff}}Specs=[Staff of Power,Staff|Melee,2H,Staff]{{To-hit=+[[2]]}}ToHitData=[w:Staff of Power,sb:1,+:2,n:1,ch:20,cm:1,sz:L,ty:B,r:5,sp:4,wt:4,rc:charged]{{damage=+[[2]],damage x2 if use charge, x3 critical hit}}DmgData=[w:Staff of Power,sb:1,+:2,SM:1d6,L:1d6]{{desc=This staff can be used as a standard +2 quarterstaff to inflict damage in melee combat. However, it has the following additional powers:\n[Do double damage](!attk --attk-hit @{selected|token_id}), x3 on critical hit: **Expends 1 charge** to use this power.\n[Cast spells at L3 to L9](~SoP-casting-level) The following spells can be cast as an MU of a level determined by a d20 dice roll\n***1 charge***:\nCone of Cold, Continual Light, Darkness 5ft radius, Fireball, Levitation, Lightning Bolt, Magic-Missile, Ray of Enfeeblement\n***2 charges***:\nGlobe of Invulnerability, Ray of Paralysation, Shield 5ft radius}}'},
						{name:'Staff-of-the-Spider',type:'Staff|Melee',ct:'4',charge:'recharging',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Staff of the Spider}}{{subtitle=Magic Item}}{{Weapon=2-handed melee staff}}Specs=[Staff of the Spider,Staff|Melee,2H,Staff]{{To-hit==+0 + Str bonus}}ToHitData=[w:Staff of the Spider,sb:1,+:0,n:1,ch:20,cm:1,sz:L,ty:B,r:5,wt:4,sp:4,rc:recharging]{{Attacks=1 per round + level \\amp specialisation}}{{Damage=+1d6, vs SM:1d6, L:1d6, + Str bonus}}DmgData=[w:Staff of the Spider,sb:1,+:1d6,SM:1d6,L:1d6]{{school=Alteration,Evocation}}{{Speed=[[4]]}}{{range=As per spell}}{{Charges=Recharges 1d6+4 per night, max [[10]] charges}}{{desc=The top of this black, adamantine staff is shaped like a spider. The staff weighs 6 pounds.\nThe staff can be wielded as a quarterstaff. It deals 1d6 extra poison damage on a hit when used to make a weapon attack.\nThe staff has 10 charges, which are used to fuel the spells within it. With the staff in hand, you can use your action to cast one of the following spells from the staff if the spell is on your class\'s spell list: [Spider Climb](!magic --mi-charges @{selected|token_id}|+\\amp#91;[3+1d6]\\amp#93|Staff-of-the-Spider|10\\amp#13;\\amp#37;{MU-Spells-DB|Spider-Climb}) (1 charge) or [Web](!magic --mi-charges @{selected|token_id}|-1 --mi-charges @{selected|token_id}|+\\amp#91;[3+1d6]\\amp#93;|Staff-of-the-Spider|10\\amp#13;\\amp#37;{MU-Spells-DB|Web}) (2 charges). No components are required.\nThe staff regains 1d6 + 4 expended charges each day at\ndusk. If you expend the staff\'s last charge, roll a [d20](!\\amp#13;\\amp#47;r 1d20cs\\gt2cf\\lt1 On a 1 staff crumbles to dust). On a 1, the staff crumbles to dust and is destroyed.}}\n!setattr --charid @{selected|character_id} --silent --casting-level|8 --casting-name|Staff of the Spider\n!magic --mi-charges @{selected|token_id}|[[4+1d6]]|Staff-of-the-Spider|10'},
						{name:'To-hit-Wand-PolyTouch',type:'',ct:'0',charge:'uncharged',cost:'0',body:'**@{selected|token_name} hits AC [[( [[0]] - [[1d20]] + (@{selected|thac0}) )]] with their Wand of Polymorph in touch mode.**\n/w "@{selected|character_name}" [Success](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Select a target|token_id}|Poly-touch|16|-1|Polymorphed by Poly-Touch|snail)'},
						{name:'Unknown-Wand',type:'Wand',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Unknown Wand}}{{splevel=Wand}}{{school=Unknown}}Specs=[Unknown Wand,Wand,1H,Any]{{components=M}}{{time=Unknown}}{{range=Unknown}}{{duration=Unknown}}{{aoe=Unknown}}{{save=Unknown}}{{effects=The effects of this wandare unknown. In fact, is it a wandat all?}}'},
						{name:'Unknown-staff',type:'Staff',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Unknown Staff}}{{splevel=Staff}}{{school=Unknown}}Specs=[Unknown Staff,Staff,2H,Any]{{components=M}}{{time=Unknown}}{{range=Unknown}}{{duration=Unknown}}{{aoe=Unknown}}{{save=Unknown}}{{effects=The powers of this staff are unknown. In fact, is it a magical staff at all, or just one of fine quality and just treasure?}}{{materials=Staff}}'},
						{name:'Wand',type:'',ct:'0',charge:'uncharged',cost:'0',body:'%{MI-DB-Wands-Staves-Rods|Unknown-Wand}'},
						{name:'Wand-MM-1',type:'',ct:'0',charge:'uncharged',cost:'0',body:'\\amp{template:'+fields.defaultTemplate+'}{{name=Wand of Magic Missiles\nfires 1 missile}}{{desc=One missile does [[?{Roll missile damage|1+1d4}]] damage to the target creature}}'},
						{name:'Wand-MM-2',type:'',ct:'0',charge:'uncharged',cost:'0',body:'\\amp{template:'+fields.defaultTemplate+'}{{name=Wand of Magic Missiles\nfires 2 missiles}}{{desc=Missile 1 does [[?{Roll missile 1 damage|1+1d4}]] HP damage to the target creature.\nMissile 2 does [[?{Roll missile 2 damage|1+1d4}]] HP damage to the target creature.}}\n!magic --mi-charges @{selected|token_id}|-1'},
						{name:'Wand-MM-3',type:'',ct:'0',charge:'uncharged',cost:'0',body:'\\amp{template:'+fields.defaultTemplate+'}{{name=Wand of Magic Missiles\nfires 3 missiles}}{{desc=Missile 1 does [[?{Roll missile 1 damage|1+1d4}]] HP damage to the target creature.\nMissile 2 does [[?{Roll missile 2 damage|1+1d4}]] HP damage to the target creature.\nMissile 3 does [[?{Roll missile 3 damage|1+1d4}]] HP damage to the target creature.}}\n!magic --mi-charges @{selected|token_id}|-2'},
						{name:'Wand-of-Fire',type:'Wand',ct:'2',charge:'rechargeable',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Wand of Fire}}{{splevel=Wand}}{{school=Evocation}}Specs=[Wand of Fire,Wand,1H,Evocation]{{components=V,M}}{{time=[[2]]}}WandData=[w:Wand of Fire,wt:1,sp:2,rc:rechargeable]{{range=Special}}{{duration=Special}}{{aoe=Special}}{{save=[Special](!\\amp#13;\\amp#47;gmroll 1d20 save vs. Wand of Fire)}}{{effects=This wand can function like the following wizard spells, cast as if by a L[[6]] Wizard:\n• [Burning hands](~MU-Spells-DB|Burning-Hands): **Note: specs different from spell**. The wand emits a [[120]]degree fan-shaped sheet of fire [[10]] feet wide at its end and [[12]] feet long. Each creature touched suffers [[6]] points of damage. The sheet of fire appears instantly, shoots forth dark red flames, and snuffs out in less than one second. It expends [[1]] charge.\n• [Pyrotechnics](~MU-Spells-DB|Pyrotechnics): This function duplicates the spell of the same name. It has an initiative modifier of +2 and expends [[1]] charge.\n• [Fireball](~Wand-of-Fire-Fireball): **Note: specs different from spell.** The wand coughs forth a pea-sized sphere that streaks out to the desired range (to a maximum of 160 feet) and bursts in a fiery, violet-red blast, just like the fireball spell. The initiative modifier is +2, and this expends [[2]] charges. The fireball inflicts [6d6 min 2/dice](!\\amp#13;\\amp#47;r {1d6,2+0d0}k1+{1d6,2+0d0}k1+{1d6,2+0d0}k1+{1d6,2+0d0}k1+{1d6,2+0d0}k1+{1d6,2+0d0}k1 points of fireball damage, save to half) points of damage, but all 1s rolled are counted as 2s (i.e., the burst causes 12-36 points). A saving throw vs. wand is applicable.\n• [Wall of fire](~Wand-of-Fire-Wall): The wand can be used to draw a fiery curtain of purplish-red flames 1200 feet square (10\' x 120\', 20\' x 60\', 30\' x 40\', etc.). The flames last for six rounds and cause 2d6+6 points damage if touched (2d4 points if within 10 feet of the fire, 1d4 if within 20 feet). The flames can also be shaped into a ring around the wand user (but the circle is 25 feet in diameter). The initiative modifier is +3, and its use expends [[2]] charges.\nThe wand of fire can operate just once per round. It can be recharged.}}{{materials=Wand}}\n!setattr --silent --charid @{selected|character_id} --casting-level|6 --casting-name|Wand of Fire'},
						{name:'Wand-of-Fire-Fireball',type:'',ct:'0',charge:'uncharged',cost:'0',body:'!magic --mi-charges @{selected|token_id}|-1\n%{MU-Spells-DB|Fireball}'},
						{name:'Wand-of-Fire-Wall',type:'',ct:'0',charge:'uncharged',cost:'0',body:'!magic --mi-charges @{selected|token_id}|-1\n%{MU-Spells-DB|Wall-of-Fire}'},
						{name:'Wand-of-Illumination',type:'Wand',ct:'6',charge:'rechargeable',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Wand of Illumination}}{{splevel=Wand}}{{school=Evocation}}Specs=[Wand of Illumination,Wand,1H,Evocation]{{components=V,M}}{{time=[[6]]}}WandData=[w:Wand of Illumination,wt:1,sp:6,rc:rechargeable]{{range=Special}}{{duration=Instantaneous}}{{aoe=Special}}{{save=[Special](!\\amp#13;\\amp#47;gmroll 1d20 Save vs. Wand of Illumination)}}{{effects=This wand has four separate functions, three of which approximate wizard spells, and one of which is unique:\n• [Dancing lights:](~MU-Spells-DB|Dancing-Lights) One charge.\n• [Light:](~MU-Spells-DB|Light) One charge.\n• [Continual light:](~WoI-Continual-Light) This function require two charges.\n• [Sunburst:](~WoI-Sunburst) When this effect is called forth, the wand delivers a sudden flash of brilliant, greenish-white light, with blazing golden rays. The range of this sunburst is [[120]] yards maximum, and its duration is 1/10 of a second. Its area of effect is a globe of 40-foot diameter. Any undead within this globe suffer 6d6 points of damage, with no saving throw. Creatures within or facing the burst must roll successful saving throws vs. wands or be blinded for one round and be unable to do anything during that period. (Of course, the creatures in question must have sight organs sensitive to the visible light spectrum). The function requires three charges.\nThe wand can be recharged.}}{{materials=Wand}}\n!setattr --silent --charid @{selected|character_id} --casting-level|6 --casting-name|@{selected|token_name}s Wand of Illumination'},
						{name:'Wand-of-MM',type:'Wand',ct:'3',charge:'rechargeable',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Wand of Magic Missiles}}{{splevel=Wand}}{{school=Evocation}}Specs=[Wand of Magic Missiles,Wand,1H,Evocation]{{components=V,M}}{{time=[[3]]}}WandData=[w:Wand of Magic Missiles,wt:1,sp:3,rc:rechargeable]{{range=[120 yards](!rounds --aoe @{selected|token_id}|circle|yards|0|240||lightning|true)}}{{duration=Instantanious}}{{aoe=1 or more creatures in [[10]]ft cube}}{{save=None}}{{damage=\n[1 missile](~Wand-MM-1) [2 missiles](~Wand-MM-2) [3 missiles](~Wand-MM-3)}}{{effects=This wand discharges magic missiles similar to those of the 1st-level wizard spell of the same name. The missile causes [1d4+1](!\\amp#13;\\amp#47;r 1d4+1) points of damage. It always hits its target when the wand is wielded by a wizard, otherwise an attack roll is required. The wand has an initiative modifier of +3, and each missile costs one charge. A maximum of three may be expended in one round. The wand may be recharged.}}{{materials=Wand}}'},
						{name:'Wand-of-Paralysation',type:'Wand',ct:'3',charge:'rechargeable',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Wand of Paralysation}}{{splevel=Wand}}{{school=Evocation}}Specs=[Wand of Paralysation,Wand,1H,Evocation]{{components=V,M}}{{time=[[3]]}}WandData=[w:Wand of Paralysation,wt:1,sp:3,rc:rechargeable]{{range=[60 feet](!rounds --aoe @{selected|token_id}|cone|feet|0|60|5|lightning|true)}}{{duration=5d4 rounds}}{{aoe=1 creature}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 Save vs. Wand of Paralysation)}}{{damage=[Zap them!](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Select a target|token_id}|Paralyse|\\amp#91;[\\amp#63;{Duration?|5d4}]\\amp#93;|-1|Paralysed|fishing-net)}}{{effects=This wand shoots forth a thin ray of bluish colour to a maximum range of 60 feet. Any creature touched by the ray must roll successful saving throw vs. wand or be rendered rigidly immobile for 5d4 rounds. A save indicates the ray missed, and there is no effect. As soon as the ray touches one creature, it stops—the wand can attack only one target per round. The wand has an initiative modifier of +3 , and each use costs one charge. The wand may operate once per round. It may be recharged.}}{{materials=Wand}}'},
						{name:'Wand-of-Polymorphing',type:'Wand',ct:'3',charge:'rechargeable',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Wand of Polymorphing}}{{splevel=Wand}}{{school=Evocation}}Specs=[Wand of Polymorphing,Wand,1H,Evocation]{{components=V,M}}{{time=[[3]]}}WandData=[w:Wand of Fire,wt:1,sp:3,rc:rechargeable]{{range=[60 yards](!rounds --aoe @{selected|token_id}|bolt|yards|0|60|2|green|true), or Touch}}{{duration=Permanent or [[16]] turns}}{{aoe=Special}}{{save=[Special](!\\amp#13;\\amp#47;gmroll 1d20 Save vs. Wand of Polymorphing)}}{{effects=This wand has two possible effects.\n[Poly-Other](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Select a target|token_id}|Poly-other|99|0|Polymorphed by Poly-Other|snail) emits a thin, green beam that darts forth a maximum distance of [[60]] yards. Any creature touched by this beam must make a saving throw vs. wands (success indicating a miss) or be polymorphed (as the polymorph others spell). The wielder may opt to turn the victim into a snail, frog, insect, etc., as long as the result is a small and inoffensive creature.\n[Poly-touch Roll to Hit](~To-hit-Wand-PolyTouch) The possessor of the wand may elect to touch a creature with the device instead. Unwilling creatures must be hit and are also entitled to a saving throw. If the touch is successful, the recipient is surrounded by dancing motes of sparkling emerald light, and then transforms into whatever creature-shape the wielder wants. This is the same magical effect as the polymorph self spell.\nEither function has an initiative modifier of +3. Each draws one charge. Only one function per round is possible. The wand may be recharged.}}{{materials=Wand}}\n!setattr --silent --charid @{selected|character_id} --casting-level|8 --casting-name|@{selected|token_name}s Wand of Polymorphing'},
						{name:'WoI-Continual-Light',type:'',ct:'0',charge:'uncharged',cost:'0',body:'!magic --mi-charges @{selected|token_id}|-1\n%{MU-Spells-DB|Continual-Light}'},
						{name:'WoI-Sunburst',type:'',ct:'0',charge:'uncharged',cost:'0',body:'!magic --mi-charges @{selected|token_id}|-2\n/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Token_name} uses Wand of Illumination to cast\na Sunburst}}{{splevel=Magic Item}}{{school=Alteration (Reversable)}}{{components=M}}{{time=[[3]]}}{{range=[[120]] yds.}}{{duration=Instantaneous}}{{aoe=[40ft diameter globe](!rounds --aoe @{selected|token_id}|circle|feet|360|40||light)}}{{save=[Special](!\\amp#13;\\amp#47;gmroll 1d20 save vs. Sunburst from wand)}}{{effects=When this effect is called forth, the wand delivers a sudden flash of brilliant, greenish-white light, with blazing golden rays. The range of this sunburst is [[120]] yards maximum, and its duration is 1/10 of a second. Its area of effect is a globe of 40-foot diameter. Any undead within this globe suffer 6d6 points of damage, with no saving throw. Creatures within or facing the burst must roll successful saving throws vs. wands or be blinded for one round and be unable to do anything during that period. (Of course, the creatures in question must have sight organs sensitive to the visible light spectrum).}}'},
					]},
	MI_DB:			{bio:'<blockquote>Miscellaneous Items</blockquote><b>v5.7  04/02/2022</b><br><br>This Magic Item database holds definitions for all other Magic Items that do not easily fall into any other category',
					gmnotes:'<blockquote>Change Log</blockquote>v5.7  04/02/2022  Shocking Bracers updated to fix errors on first use<br><br>v5.6  01/01/2022  Updated to common release version<br><br>v5.2 - 5.5 Skipped to even up version numbers<br><br>v5.1  31/10/2021  Encoded using machine readable data to support API databases<br><br>v5.0  01/10/2021  Split MI-DB into separate databases for different types of Item<br><br>v4.3.3  09/06/2021  Bug fix for Red Ioun Stone<br><br>v4.3.2  06/05/2021  Added some magic items from the Dungeon of Death<br><br>v4.3.1 09/04/2021   Fixed a couple of Magic Item macro bugs<br><br>v4.3    02/04/2021  Changed spell targeting to use MagicMaster API<br><br>v4.2.1  24/03/2021  Added new MIs for Dungeon of Death<br><br>v4.2 07/03/2021  Added DM-only list of Magic Items as Priest Level 3 - does not appear for Players.  Also changed Magic Item powers to use the !magic API<br><br>v4.1.11  04/03/2021  Added in a few MIs from Simon\'s dungeon & added 5 unknown potions, A to E<br><br>v4.1.10  25/02/2021  Unfroze the MI Powers table by duplication<br><br>v4.1.9  23/02/2021  Added more MIs from Simon\'s Dungeon of Death<br><br>v4.1.8  17/02/2021  Added MIs from Simon\'s Dungeon of Death<br><br>v4.1.7  29/01/2021  Added MIs held by characters that somehow seem to have got lost in this version of the MI-DB<br><br>v4.1.6  21/01/2021  Added new MIs from Simon\'s Dungeon of Death<br><br>v4.1.5  19/01/2021  Added missing MI Power of Clairaudience for the Robe of Ears<br><br>v4.1.4   08/01/2021 Added missing entry for Ointment of Flying in Potions list<br><br>v4.1.3  16/12/2020  Fixed issue with Wand of Paralysation duration when targeting, plus some other small bugs<br><br>v4.1.2  29/11/2020  New magic items created for Jacob & Solar (Steve L.\'s characters)<br><br>v4.1.1  09/11/2020 Sorted the MI-DB, compressed some item descriptions so fit better in chat window, and also replaced long descriptions with linked Handouts where possible.<br><br>v4.1  08/11/2020  Introduction of Magic Item powers for unique MIs, which are stored in the MI-DB rather than player character sheets.  This allows them to not need loading into a character\'s powers, but to automatically be available once the MI is acquired.<br><br>v4.0  29/10/2020  Same as v3.3.1, but aligned version number with v4 Macro Library release<br><br>v3.3.1 20/10/2020  Updated all embedded macro calls to deal with separation of database from macro library, and also set casting levels & names for various MI spell effects.<br><br>v3.3  16/10/2020 Split the database of Magic Items from the macro workings so that the MI database can be shared with other macro systems.<br><br>v3.2.2 14/10/2020  Added Ring of The Hawk, supported by Attacks macro library v3.6<br><br>v3.2.1 14/10/2020  Added Magic Items for both Lost Mines & The High Dungeon<br><br>v3.2 19/09/2020  Updated to deal more effectively with lag, adjusted some menus, and added support for multi-status effects.  Developed and then abandoned the use of Dusts for rechargable MIs, but totally changed this approach in later version.<br><br>v3.1 25/08/2020  Added the ability to deduct multiple charges of a Magic Item when using it.  Player specified, and not linked to what they are using it for.<br><br>v3.0 25/08/2020  Vetted & updated ready for Roger\'s campaign.  Also changed all calls to !tj to take \'--\' as the command introducer and allow multiple commands in one call and forcing execution in order, so as to overcome asynchronous processing issues.<br><br>v2.0 Jumped this major version number entirely, to bring in line with other library releases.<br><br>v1.3 22/08/2020   Added Magic Items gained in various recent quests<br><br>v1.2 08/08/2020   Changed whispers /w using Token_name to instead use Character_name, as if they were different, errors occurred.<br><br>v1.1 06/08/2020   Loaded all known character-held MIs from current campaigns.  Coordinated all markers and effects across all MIs & Spell libraries.<br><br>v1.0 01/08/2020   Testing went fine in Alpha and Beta, so applying first wave of enhancements.<br><br>v0.1 19/07/2020   Initial creation for testing',
					root:'MI-DB',
					controlledby:'all',
					avatar:'https://s3.amazonaws.com/files.d20.io/images/255019818/RIYjLxZ2bkSCIibdZ7yMhw/thumb.jpg?1636631849',
					version:5.7,
					db:[{name:'Amulet-Proof-vs-Detection+Location',type:'',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Amulet of Proof Against Detection and Location}}{{subtitle=Magic Item}}Specs=[Amulet Proof vs Detection+Location,Miscellaneous,1H,Abjuration]{{Size=Small}}MiscData=[w:Amulet Proof vs Detection+Location,sp:0,rc:uncharged]{{Powers=Can\'t be located by magic}}{{desc=This device protects the wearer against all divination and magical location and detection. The wearer cannot be detected through *clairaudience, clairvoyance, ESP, crystal balls,* or any other scrying devices. No aura is discernible on the wearer, and predictions cannot be made regarding him unless a powerful being is consulted.}}'},
						{name:'Amulet-of-Teleport-to-Safety',type:'Miscellaneous',ct:'2',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Amulet of Teleport to Safety}}Specs=[Amulet of Teleport to Safety,Miscellaneous,1H,Alteration]{{subtitle=Ring}}{{Speed=[[2]]}}MiscData=[w:Amulet of Teleport to Safety,sp:2,rc:charged]{{Size=Tiny}}{{Immunity=None}}{{desc=Activation takes whole Party to Temple in Neverwinter}}'},
						{name:'Amulet-of-polymorph-self',type:'Miscellaneous',ct:'4',charge:'recharging',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Amulet of Polymorph Self}}{{splevel=Magic Item}}{{school=Alteration}}Specs=[Amulet of Polymorph Self,Miscellaneous,1H,Alteration]{{components=M}}{{time=[[4]]}}MiscData=[w:Amulet of Polymorph Self,sp:4,rc:recharging]{{range=[[0]]}}{{duration=[[14]]}}{{aoe=Wearer}}{{save=None}}{{healing=[Change Form](!rounds --target caster|Amulet-Polymorph-Self|@{selected|casting-level}|-1|Polymorphed, with motion+breathing+physical dmg, but own attk+HP|Three-leaves)}}{{effects=When this amulet is used, the user is able to assume the form of any creature, save those that are noncorporeal, from as small as a wren to as large as a hippopotamus. Furthermore, they gain its physical mode of locomotion and breathing as well. No system shock roll is required. The amulet does not give the new form\'s other abilities (attack, magic, special movement, etc.), nor does it run the risk of the user changing personality and mentality.\nWhen the polymorph occurs, the user\'s equipment, if any, melds into the new form (in particularly challenging campaigns, the DM may allow protective devices, such as a ring of protection, to continue operating effectively). The user retains all mental abilities, including spell use, assuming the new form allows completion of the proper verbal and somatic components and the material components are available. A user not used to a new form might be penalised at the DM\'s option (for example, -2 penalty to attack rolls) until they practice sufficiently to master it.\nThus, a user changed into an owl could fly, but his vision would be human; a change to a black pudding would enable movement under doors or along halls and ceilings, but not the pudding\'s offensive (acid) or defensive capabilities. Naturally, the strength of the new form is sufficient to enable normal movement. The user retains their own hit points, attack rolls, and saving throws. The user can end the effect at any time; when voluntarily returning to their own form and ending the effect, they regain [1d12](!\\amp#13;\\amp#47;r 1d12) hit points. The user also will return to their own form when slain or when the effect is dispelled, but no hit points are restored in these cases.}}{{materials=The amulet}}\n!setattr --charid @{selected|character_id} --silent --MI-used|Amulet of Polymorph Self'},
						{name:'Amulet-vs-Undead',type:'Miscellaneous',ct:'10',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Amulet vs Undead}}{{subtitle=Magic Item}}Specs=[Amulet vs Undead,Miscellaneous,1H,Necromantic]{{Size=Small}}MiscData=[w:Amulet vs Undead,sp:10,rc:uncharged]{{Powers=Turn or Control Undead}}{{desc=Allows the wearer of any class to Turn (or Control) Undead as an 8th level priest. If not worn must be worn for 7 days after putting on before becomes effective.}}'},
						{name:'Ankheg-Shell',type:'Miscellaneous',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Ankheg-Shell}}{{subtitle=Useful Item}}Specs=[Ankheg Shell,Miscellaneous,1H,Treasure]{{Speed=[[0]]}}{{Size=Large}}{{desc=A shell from an Ankheg that has the potential to be made into ultra-light AC0 armour}}'},
						{name:'Bag-of-Gold-Coins',type:'Miscellaneous',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Bank of Bildeth bag of 100gp}}{{subtitle=Treasure}}Specs=[Bag of Gold Coins,Miscellaneous,1H,Treasure]{{Size=Small but Heavy}}{{desc=A cloth bag clearly marked on the outside with "Property of Bank of Bildeth - 100 Gold Pieces" and containing just that.}}'},
						{name:'Bag-of-Holding',type:'Miscellaneous',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Bag of Holding}}{{subtitle=Magic Item}}Specs=[Bag of Holding,Miscellaneous,1H,Alteration]{{Size=[[15]]/[[250]]lbs, 30cu.ft}}MiscData=[w:Bag of Holding,sp:0,rc:uncharged]{{Access=Drag the *Bag of Holding* token onto the map and use your MI menu *Search* function (to retrieve stuff from it) or *Store* function (to put stuff in it)}}{{desc=As with other magical bags, this one appears to be a common cloth sack of about 2 feet by 4 feet size. The bag of holding opens into a nondimensional space, and its inside is larger than its outside dimensions. Regardless of what is put into this item, the bag always weighs a fixed amount. This weight, the bag\'s weight limit in contents, and its volume limit are 15 lbs. 250 lbs. 30 cu. ft.\nIf overloaded, or if sharp objects pierce it (from inside or outside), the bag will rupture and be ruined. The contents will be lost forever in the vortices of nilspace.}}'},
						{name:'Bag-of-Lead-Coins',type:'Miscellaneous',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Bag of 100 lead coins}}{{subtitle=Treasure}}Specs=[Bag of Lead Coins,Miscellaneous,1H,Treasure]{{Size=Small but Very Heavy}}{{desc=A cloth bag containing 100 lead coins. These weigh double the weight of normal coins}}'},
						{name:'Bag-of-Silver-Coins',type:'Miscellaneous',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Bank of Bildeth bag of 100sp}}{{subtitle=Treasure}}Specs=[Bag of Silver Coins,Miscellaneous,1H,Treasure]{{Size=Small but Heavy}}{{desc=A cloth bag clearly marked on the outside with "Property of Bank of Bildeth - 100 Silver Pieces" and containing just that.}}'},
						{name:'Bead-of-Force',type:'Miscellaneous',ct:'0',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Bead of Force}}{{subtitle=Magic Item}}Specs=[Bead of Force,Miscellaneous,1H,Evocation]{{Speed=[[0]]}}MiscData=[w:Bead of Force,sp:0,rc:charged]{{Size=Tiny}}{{Range=[Up to 30yds](!rounds --aoe @{selected|token_id}|circle|yards|0|60||dark|true)}}{{damage=[5d4](!\\amp#13;\\amp#47;gmroll 5d4 damage from Bead of Force in 10ft redius) damage in 10ft radius}}{{duration=3d4 rounds}}{{Save=[To escape sphere](!\\amp#13;\\amp#47;gmroll 1d20 Save vs. spell or captured in *Sphere of Force*)}}{{Effect=[Trapped in Sphere](!rounds --target area|@{selected|token_id}|Bead-of-Force|8|-1|\'Held in Sphere of Force\'|fishing-net)}}{{desc=These small, black spheres might be mistaken for common beads, marbles, or unusually black but lusterless pearls. From 5-8 of these beads are usually found at one time. Each is about three-quarters of an inch in diameter and quite heavy, weighing almost an ounce. One can be hurled up to 30 yards.\nUpon impact, the bead sends forth a burst of force that inflicts 5d4 points of damage upon all creatures within a 10-foot radius of its center. Each victim is allowed a saving throw vs. spell. Those who save will be thrown out of the blast area, but those who fail to save will be encapsulated by a sphere of force after taking damage.\nThe sphere will form around any and all such creatures in the 10-foot-radius area, even those of large size, and will persist for 3d4 rounds. Victims will be unable to escape except by the same means and used to bring down a wall of force spell.}}'},
						{name:'Black-Stone',type:'Miscellaneous',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Unknown Black Shiny Stone}}{{subtitle=Magic Item}}Specs=[Black Stone,Miscellaneous,1H,Any]{{Size=Small}}MiscData=[w:Black Stone,sp:0,rc:uncharged]{{Powers=Unknown}}{{desc=This stone seems to be glistening and have flecks of something on its surface - or is that just reflected light. Even just looking at it, you feel optimistic about it}}'},
						{name:'Book-of-Changes',type:'Miscellaneous',ct:'0',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Book of Changes}}{{splevel=Tome}}{{school=Alteration}}Specs=[Book of Changes,Miscellaneous,1H,Alteration]{{components=V,M}}{{time=[[48]] hours}}MiscData=[w:Book of Changes,sp:0,rc:charged]{{range=Reader}}{{duration=Permanent}}{{aoe=Reader}}{{save=None}}{{effects=The Book of Changes - lets a character change any/all of their classes / alignment / race / gender / weapon proficiencies / non-weapon proficiencies. If the same size hit dice are used no re-rolling is required but it may be necessary if the character changes some of their levels to a class that has different size hit dice. On the cover it says: ***“Do you suffer from a crisis of identity? Do you wish that you were someone else? If so, this book is for you!”***. The changes as a result of changed class mean that the user can change weapon proficiencies and specialisation, and non-weapon proficiencies. The user may not ***add*** levels as result of using this book.}}{{materials=Book}}'},
						{name:'Boots-of-Striding+Springing',type:'',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Boots of Striding \\amp Springing}}{{splevel=Magic Item}}{{school=Alteration}}Specs=[Boots of Striding+Springing,Miscellaneous,1H,Alteration]{{components=M}}{{time=[[0]]}}MiscData=[w:Boots of Striding+Springing,sp:0,rc:uncharged]{{range=Wearer}}{{duration=While worn}}{{aoe=Wearer}}{{save=None}}{{effects=The wearer of these magical boots has a base movement rate of 15, regardless of size or weight. This speed can be maintained tirelessly for up to 12 hours per day, but thereafter the boots no longer function for 12 hours—they need that long to "recharge."\nIn addition to the striding ability, these boots allow the wearer to make great leaps. While "normal\'\' paces for the individual wearing this type of footgear are three feet long, the boots also enable forward jumps of up to 30 feet, backward leaps of 9 feet, and vertical springs of 15 feet.\nIf circumstances permit the use of such movement in combat, the wearer can effectively strike and spring away when he has the initiative during a melee round. However, such activity involves a degree of danger—there is a base 20% chance that the wearer of the boots will stumble and be stunned on the following round. Adjust the 20% chance downward by 3% for each point of Dexterity the wearer has above 12 (i.e., 17% at Dexterity, 14% at 14, 11% at 15, 8% at 16, 5% at 17, and only 2% at 18 Dexterity). In any event, the boots better Armor Class by 1 due to the quickness of movement they allow, so Armor Class 2 becomes 1, Armor Class 1 becomes 0, etc.}}'},
						{name:'Boots-of-Varied-Tracks',type:'Miscellaneous',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Boots of Varied Tracks}}{{splevel=Magic Item}}{{school=Alteration}}Specs=[Boots of Varied Tracks,Miscellaneous,1H,Alteration]{{components=M}}{{time=[[0]]}}MiscData=[w:Boots of Varied Tracks,sp:0,rc:uncharged]{{range=Wearer}}{{duration=While worn}}{{aoe=Wearer}}{{save=None}}{{effects=The wearer of these ordinary-looking boots is able, on command, to alter the tracks he leaves. The footprints of the wearer can be made as small as those of a halfling or as large as those of an ogre, bare or shod as desired. In addition, each pair of these boots has four additional track-making capabilities. This pair these are: Goat, Dog, Boar, Tiger}}'},
						{name:'Boots-of-the-North',type:'Miscellaneous',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Boots of The North}}{{splevel=Magic Item}}{{school=Alteration}}Specs=[Boots of the North,Miscellaneous,1H,Alteration]{{components=M}}{{time=[[0]]}}MiscData=[w:Boots of the North,sp:0,rc:uncharged]{{range=Wearer}}{{duration=While worn}}{{aoe=Wearer}}{{save=None}}{{effects=This footgear bestows many powers upon the wearer. First, he is able to travel across snow at normal rate of movement, leaving no tracks. The boots also enable the wearer to travel at half normal movement rate across the most slippery ice (horizontal surfaces only, not vertical or sharply slanted ones) without falling or slipping. Boots of the north warm the wearer, so that even in a temperature as low as -50 degrees F., he is comfortable with only scant clothing—a loin of cloth and cloak, for instance. If the wearer of the boots is fully dressed in cold-weather clothing, he can withstand temperatures as low as -100 degrees F.}}'},
						{name:'Bracers-of-Brachiation',type:'Miscellaneous',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Bracers of Brachiation}}{{splevel=Magic Item}}{{school=Alteration}}Specs=[Bracers of Brachiation,Miscellaneous,1H,Alteration]{{components=M}}{{time=[[0]]}}MiscData=[w:Bracers of Brachiation,sp:0,rc:uncharged]{{range=Wearer}}{{duration=While worn}}{{aoe=Wearer}}{{save=None}}{{effects=These wrist bands appear to be of the ordinary sort, but they enable the wearer to move by swinging from one tree limb, vine, etc., to another to get from place to place. The power can be employed only in locales where these sorts of hand-holds can be found. Movement is at a rate of 3, 6, or 9—the more jungle-like the conditions, the greater the movement rate.\nThe wearer is also able to climb trees, vines, poles, ropes, etc., at a rate of 6, and can swing on a rope, vine, or other dangling, flexible object as if he were an ape. The wearer can also jump as if wearing *boots of striding and springing*, but the jump must culminate in the grasping of a rope or vine, movement through the upper portion of trees, the climbing of a tree or pole, or some other activity associated with brachiation.}}'},
						{name:'Campaign-Bed',type:'Miscellaneous',ct:'10',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Campaign Bed}}{{subtitle=Magic Item}}Specs=[Campaign Bed,Miscellaneous,1H,Alteration]{{Size=Small/Large}}MiscData=[w:Campaign Bed,wt:10,sp:10,rc:uncharged]{{Powers=5HP overnight + comfort}}{{desc=A switch on the headboard will shrink it down to the size of a pack of cigarettes, so it can be slipped in a pocket. Anyone sleeping on the bed overnight will gain an extra 5 hit points of healing, and be warm and comfortable in all conditions - even outdoors in snow!}}'},
						{name:'Candle-of-Translation',type:'Miscellaneous',ct:'100',charge:'rechargeable',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Candle of Translation}}{{splevel=Magic Item}}{{school=Alteration}}Specs=[Candle of Translation,Miscellaneous,1H,Alteration]{{components=M}}{{time=[[100]]}}MiscData=[w:Candle of Translation,wt:1,sp:100,rc:rechargeable]{{range=[[0]]}}{{duration=As long as candle lasts}}{{aoe=Creature lighting candle in area illuminated}}{{save=None}}{{effects=Similar to the L3 MU spell and L4 Priest spell *Tongues* (but not exactly the same), this magic candle imbues the creature lighting the candle, breathing in the smell of the hot wax, and reading by its light with the ability to read any language (but not magic runes). The user does not have to know what language the text is in, and does not provide this information. The candle does not provide the ability to understand spoken language, only that which is written, and does not help with interpretation of what is written - the reader must work that out for themselves!\nThe candle burns at [[1]] use per round - a round is about the time needed to read one full page of dense handwriting. It can be recharged with wax gathered from the nests of Giant Hornets}}{{materials=Candle,Flint \\amp tinder or other means of lighting candle}}'},
						{name:'Cauldron-of-Reheated-Stew',type:'Miscellaneous',ct:'100',charge:'recharging',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Cauldron of Reheated Stew}}MiscData=[w:Cauldron of Reheated Stew,wt:10,sp:100,rc:recharging]{{subtitle=Magic Item}}Specs=[Caldron of Reheated Stew,Miscellaneous,1H,Conjuration-Summoning]{{desc=Cauldron contains a tasty and nourishing stew, sufficient for a good meal for 6 or 7 persons (say 1.5 gallons). It will magically refill itself once a day when heated.}}'},
						{name:'Chime-of-Opening',type:'Miscellaneous',ct:'10',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Chime of Opening}}{{subtitle=Magic Item}}Specs=[Chime of Opening,Miscellaneous,1H,Alteration]{{Speed=[[10]]}}MiscData=[w:Chime of Opening,wt:1,sp:10,rc:charged]{{Size=S}}{{desc=A chime of opening is a hollow mithral tube about 1 foot long. When it is struck, it sends forth magical vibrations that cause locks, lids, doors, valves, and portals to open. The device functions against normal bars, shackles, chains, bolts, etc. The chime of opening also destroys the magic of a hold portal spell or even a wizard lock cast by a wizard of less than 15th level.\nThe chime must be pointed at the area of the item or gate which is to be loosed or opened. It is then struck, a clear chiming ring sounds (which may attract monsters), and in one round the target lock is unlocked, the shackle is loosed, the secret door is opened, or the lid of the chest is lifted. If a chest is chained, padlocked, locked, and wizard locked, it will take four soundings of the chime of opening to get it open. A silence spell negates the power of the device. The chime has 1d8 x 10 charges before it cracks and becomes useless.}}'},
						{name:'Cloak-of-Stealthy-Movement',type:'Miscellaneous',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Cloak of Stealthy Movement}}{{splevel=Magic Item}}{{school=Alteration}}Specs=[Cloak of Stealthy Movement,Miscellaneous,1H,Alteration]{{components=M}}{{time=[[0]]}}MiscData=[w:Cloak of Stealthy Movement,sp:0,rc:uncharged]{{range=Wearer}}{{duration=While worn}}{{aoe=Wearer}}{{save=Special}}{{effects=A cloak that allows the wearer to move stealthily. Refer to the DM who created it for the specs! (Possibly the same as a Thief moving silently of the level of the wearer?}}{{materials=The cloak}}'},
						{name:'Continual-Light-Jewel',type:'Miscellaneous',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Jewel with Continual Light}}{{subtitle=Magic Item}}Specs=[Continual Light Jewel,Miscellaneous,1H,Alteration-Sun]{{Size=Tiny}}MiscData=[w:Continual Light Jewel,sp:0,rc:uncharged]{{desc=This is an ordinary jewel with a Continual Light spell cast on it. It will shine brightly whenever it is outside of any containment}}'},
						{name:'Cube-of-Force',type:'Miscellaneous',ct:'1',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Cube of Force}}{{splevel=Magic Item}}{{school=Alteration/Invocation}}Specs=[Cube of Force,Miscellaneous,1H,Alteration-Invocation]{{components=M}}{{time=[[1]]}}MiscData=[w:Cube of Force,sp:1,rc:charged]{{range=[[0]]}}{{duration=Special}}{{aoe=[10ft cube](!rounds --aoe @{selected|token_id}|square|feet|0|10||magic}}{{save=None}}{{effects=This device can be made of ivory, bone, or any hard mineral. It is about the size of a large die—perhaps 3/4 of an inch across—and enables its possessor to put up a wall of force 10 feet per side around his person. This cubic screen is impervious to the attack forms shown on the table below. The cube has 36 charges, and this energy is restored each day. The holder presses one face of the cube to activate or deactivate the field. See the ***Cube of Force character sheet*** for details of Faces, Charges \\amp Movement Rates}}'},
						{name:'Eyes-of-the-Eagle',type:'Miscellaneous',ct:'10',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Eyes of the Eagle}}{{subtitle=Magic Item}}Specs=[Eyes of the Eagle,Miscellaneous,1H,Alteration]{{Speed=[[10]]}}MiscData=[w:Eyes of the Eagle,sp:10,rc:uncharged]{{Size=Tiny}}{{Activity=[Wear the Eyes](!rounds --target caster|@{selected|token_id}|Eyes-of-the-Eagle|99|0|Can see 100x better|overdrive\\amp#13;@{selected|token_name} dons some odd crystals into their eyes, now has a piercing stare, and looks far into the distance)\n[Remove the Eyes](!rounds --removetargetstatus @{selected|token_id}|Eyes-of-the-Eagle\\amp#13;@{selected|token_name} removes the strange crystals from their eyes, and their glance is now less piercing)}}{{desc=These items are made of special crystal and fit over the eyes of the wearer. They give vision 100 times greater than normal at distances of 1 foot or more (i.e., the wearer can see at 2,000 feet what a person could normally see at 20 feet). It takes 1 round to put the crystal in each eye, and 1 round to take each out again.\nWearing only one of the pair causes a character to become dizzy and, in effect, stunned, for one round. Thereafter, one eye must always be covered to avoid this sensation of vertigo.}}'},
						{name:'Firedrake-Egg',type:'Miscellaneous',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Firedrake Egg}}{{subtitle=Potential Pet}}Specs=[Firedrake Egg,Miscellaneous,1H,Treasure]{{desc=Firedrake egg, which is glowing red-hot (and must be kept so if it is to hatch). If a character is present when the egg hatches, it will imprint on the character, and be a companion for 6 months, at which time it will leave to find a territory - but will remember the character favourably if they meet again. It will hatch in [1D4+1](!\\amp#13;\\amp#47;r 1d4+1 months until the Firedrake Egg hatches) months.}}'},
						{name:'Fireproof-Scrollcase',type:'Miscellaneous',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Fireproof Scrollcase}}{{subtitle=Useful Item}}Specs=[Fireproof Scrollcase,Miscellaneous,1H,Treasure]{{Size=Small}}{{Powers=Fireproof storage}}{{desc=A standard sized scroll case which will protect the contents from damage by normal or magical fire or, conversely, allow something inside to burn without the outside getting hot.}}'},
						{name:'Fireproof-Spellbook',type:'Miscellaneous',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Fireproof Spellbook}}{{subtitle=Useful Item}}Specs=[Fireproof Spellbook,Miscellaneous,1H,Treasure]{{Size=Small}}{{Powers=Fireproof}}{{desc=A spellbook which will protect the pages from damage by normal or magical fire}}'},
						{name:'Folding-Boat',type:'Miscellaneous',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Folding Boat}}{{splevel=Magic Item}}{{school=Alteration}}Specs=[Folding Boat,Miscellaneous,1H,Alteration]{{components=M}}{{time=[[0]]}}MiscData=[w:Folding Boat,wt:10,sp:0,rc:uncharged]{{range=0}}{{duration=Until command word spoken}}{{aoe=N/A}}{{save=None}}{{effects=A folding boat will always be discovered as a small wooden "box\'\'—about one foot long, one-half foot wide, and one-half foot deep. It will, of course, radiate magic if subjected to magical detection. The "box\'\' can be used to store items like any other box. If a command word is given, however, the box will unfold itself to form a boat of 10 feet length, four feet width and two feet depth. A second (different) command word will cause it to unfold to a 24-foot long, 8-foot-wide, and 6-foot deep ship.\nIn its smaller form, the boat has one pair of oars, an anchor, a mast, and lateen sail. In its larger form, the boat is decked, has single rowing seats, five sets of oars, a steering oar, anchor, a deck cabin, a mast, and square sail. The first can hold three or four people comfortably, the second will carry fifteen with ease.\nA third word of command causes the boat to fold itself into a box once again. The words of command may be inscribed visibly or invisibly on the box, or they may be written elsewhere—perhaps on an item within the box. The words might have been lost, making the boat useless (except as a small box) until the finder discovers the words himself (via legend lore, consulting a sage, physical search of a dungeon, etc.).}}'},
						{name:'Gauntlets-of-Hill-Giant-Strength',type:'Miscellaneous',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Gauntlets of Hill Giant Strength}}{{splevel=Magic Item}}{{school=Alteration}}Specs=[Gauntlets of Hill Giant Strength,Miscellaneous,1H,Alteration]{{components=M}}{{time=[[0]]}}MiscData=[w:Gauntlets of Hill Giant Strength,sp:0,rc:uncharged]{{range=Wearer}}{{duration=While worn}}{{aoe=Wearer}}{{save=None}}{{effects=These appear the same as typical hand-wear for armour. The wearer of these gloves, however, is imbued with 19 Strength in his hands, arms, and shoulders. When striking with the hand or with a weapon hurled or held, the gauntlets add a +3 bonus to attack rolls and a +7 bonus to damage inflicted when a hit is made. The wearer can also hurl rocks up to 80yds to inflict 1d6 base damage. They grow or shrink to fit human to halfling-sized hands.}}'},
						{name:'Gauntlets-of-Swimming+Climbing',type:'',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Gloves of Swimming \\amp Climbing}}{{splevel=Magic Item}}{{school=Alteration}}Specs=[Gauntlets of Swimming+Climbing,Miscellaneous,1H,Alteration]{{components=M}}{{time=[[0]]}}MiscData=[w:Gauntlets of Swimming+Climbing,sp:0,rc:uncharged]{{range=Wearer}}{{duration=While worn}}{{aoe=Wearer}}{{save=None}}{{effects=A pair of these gloves appear to be normal light-weight handwear, but they radiate magic if a detection is attempted. The wearer can have hands of large (human) or small (halfling) size. The wearer can swim as fast as a triton (movement of 15) underwater, and as fast as a merman (movement 18) on the surface. These gauntlets do not empower the wearer to breathe in water.\nThese gloves give the wearer a very strong gripping ability with respect to climbing. He can climb vertical or nearly vertical surfaces, upward or downward, with a 95% chance of success. If the wearer is a thief, the gauntlets increase success probability to 99%.}}'},
						{name:'Gloves-of-Stealthy-Pilfering',type:'Miscellaneous',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Gloves of Stealthy Pilfering}}{{splevel=Magic Item}}{{school=Alteration}}Specs=[Gloves of Stealthy Pilfering,Miscellaneous,1H,Alteration]{{components=M}}{{time=[[0]]}}MiscData=[w:Gloves of Stealthy Pilfering,sp:0,rc:uncharged]{{range=Wearer}}{{duration=While worn}}{{aoe=Wearer}}{{save=None}}{{effects=These gloves are made of the finest material, so fine that when worn the wearer does not even feel that they are wearing gloves. They automatically tighten onto the shape of any hand (however misshapen) to become a second skin - though they are equally easy to take off.\nWhile worn, the hands will slip lightly into any pocket, bag, or other unlocked container, increasing the chance of successful pickpocketing by 25% (maximum 95%) for any character or class. Even if the attempt is not deemed successful, the attempt will never be noticed by the target.}}'},
						{name:'Goggles',type:'Miscellaneous',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Goggles}}{{subtitle=Perhaps a Magic Item?}}Specs=[Goggles,Miscellaneous,1H,Treasure]{{Size=Small}}{{Powers=Unknown}}{{desc=These goggles appear to be of fine quality, and might be magical, but their powers (if they have any) are unknown.}}'},
						{name:'Goggles-of-the-Night',type:'Miscellaneous',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Goggles of the Night}}MiscData=[w:Goggles of the Night,sp:0,rc:uncharged]{{subtitle=Magic Item}}Specs=[Goggles of the Night,Miscellaneous,1H,Alteration]{{desc=While wearing these dark lenses, you have *darkvision* out to a range of [[60]] feet. If you already have *darkvision*. wearing the goggles increases its range by [[60]] feet.}}'},
						{name:'Happy-the-Dummy',type:'Miscellaneous',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=\'Happy\', the Ventriloquist\'s Dummy}}{{subtitle=Magic Item}}Specs=[Happy the Dummy,Miscellaneous,1H,Alteration]{{Speed=[[10]]}}MiscData=[w:Happy the Dummy,sp:0,rc:uncharged]{{Size=Large}}{{desc=Happy is not a happy boy... This is a sentient Magic Item with powers. See separate Character Sheet}}'},
						{name:'Hat',type:'Miscellaneous',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Hat of Stupidity}}{{subtitle=Magic Item?}}Specs=[Hat,Miscellaneous,1H,Treasure]{{Speed=[[0]]}}MiscData=[w:Hat,sp:0,rc:uncharged]{{Size=Small}}{{Immunity=?}}{{desc=This hat is possibly a magical item, but what it does is currently unknown.}}'},
						{name:'Hat-of-Stupidity',type:'Miscellaneous',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Hat of Stupidity}}{{subtitle=Cursed Magic Item}}Specs=[Hat of Stupidity,Miscellaneous,1H,Alteration]{{Speed=[[0]]}}MiscData=[w:Hat of Stupidity,sp:0,rc:uncharged]{{Size=Small}}{{Immunity=None}}{{desc=This hat is indistinguishable from any other magical hat, even when most carefully detected by magical means. Only by placing it upon the head can its powers be determined. Of course, once on the head, the wearer will believe that the hat is a beneficial item, for he will be overcome by stupidity. Intelligence is lowered to 7, or by -1 if the wearer has a 7 or lower Intelligence normally. The wearer will always desire to have the hat on—especially when he is engaged in any activity which requires thinking, spellcasting, etc. Without the benefit of a remove curse spell or similar magic, the wearer will never be free from the magic of the hat. If released, the wearer\'s Intelligence returns to its normal level.}}'},
						{name:'Headband-of-Intelligence',type:'Miscellaneous',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Headband of Intelligence +1}}{{subtitle=Ring}}Specs=[Headband of Intelligence,Miscellaneous,1H,Alteration]{{Acivity=[%{Magic-Items|Wearing-@{selected|HoI}}](!setattr --fb-from Magic Items --fb-header Headband of Intelligence - %{Magic-Items|Wearing-@{selected|HoI}} --charid @{selected|character_id} --HoI|[[1-@{selected|HoI}]] --intelligence|[[@{selected|intelligence}+([[(2*(1-@{selected|HoI}))-1]]) ]])}}MiscData=[w:Headband of Intelligence,sp:0,rc:uncharged]{{desc=When worn, this magic headband (somewhat like a sports sweat-band) raises Intelligence by 1. When removed, Intelligence reduces by 1. \n If Intelligence is changed by other means, the change due to the wearing or removal of the headband is additional to such changes}}'},
						{name:'Hot-Dog-biscuits',type:'Miscellaneous',ct:'4',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Hot Dog biscuits}}{{subtitle=Magic Item}}Specs=[Hot Dog Biscuits,Miscellaneous,1H,Evocation]{{Size=Small}}MiscData=[w:Hot Dog Biscuits,sp:4,rc:charged]{{Powers=Dog can breath fire}}{{desc=Label says "Hot Dog - our dog biscuits enable your dog to breath fire!" One biscuit will give 3 fire breaths over a period of 1 turn otherwise in accordance with the Fire Breath Potion.\n**Fire Breath:** This potion allows the imbiber to spew a tongue of flame. One biscuit allows the consumer to breathe a cone of fire [10ft wide, up to 20ft long](!rounds --aoe @{selected|token_id}|cone|feet|0|20|10|fire|true) that inflicts [1d10 + 2](!\\amp#13;\\amp#47;r 2+1d10) points of damage (d10 + 2). Eating both doubles the range and damage. Saving throws vs. breath weapon for half damage apply in all cases. If the flame is not expelled before the turn expires, the biscuit fails, with a 10% chance that the flames erupt in the imbiber\'s system, inflicting double damage upon him, with no saving throw allowed.}}'},
						{name:'Key-of-Unlocking',type:'Miscellaneous',ct:'4',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Key of Unlocking}}{{subtitle=Magic Item}}Specs=[Key of Unlocking,Miscellaneous,1H,Alteration]{{Size=Tiny}}MiscData=[w:Key of Unlocking,sp:4,rc:uncharged]{{desc=This key is small and made of dull metal. It does not seem of high quality at all. However, for any door or lock that has a keyhole, it will resize itself to fit, and has an [80%](!\\amp#13;\\amp#47;r 1d100cs\\lt80cf\\gt81\\amp#13;\\lt=80% opens the lock) chance of opening any and all physical, non-magical lock without setting off any associated trap (roll once for all physical locks). Failure does not open the lock and definitely sets off any associated traps. If the door also has one or more magical locks, it has a [40%](!\\amp#13;\\amp#47;r 1d100cs\\lt40cf\\gt41 \\amp#13;\\lt=40% opens one magic lock) chance of opening each of these without setting off any associated trap (roll separately for each magical trap). Failure sets off the associated trap.}}'},
						{name:'Magic-Item',type:'Miscellaneous',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Unknown Item, possibly magical}}Specs=[Magic Item,Miscellaneous,1H,Any]{{Powers=Unknown}}{{desc=This is a fine quality item, certainly of a quality fine enough to be enchanted, and it might be a *magic* item.}}'},
						{name:'Magic-feedbowl',type:'Miscellaneous',ct:'600',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Magic Feedbowl}}{{splevel=Magic Item}}{{school=Enchantment/Charm}}Specs=[Magic Feedbowl,Miscellaneous,1H,Enchantment-Charm]{{Sphere=Animal}}{{components=M}}{{time=[[1]] hour}}MiscData=[w:Magic Feedbowl,sp:600,rc:uncharged]{{range=[[0]]}}{{duration=Permanent}}{{aoe=Creature eating or drinking from the bowl}}{{save=Negates}}{{effects=This bowl act with the same effect as an *Animal Friendship* spell for any natural animal eating from it.}}{{materials=The feedbowl, and food or water the animal likes}}'},
						{name:'Magical-Boots',type:'Miscellaneous',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Unknown Magical Boots}}{{subtitle=Magic Item}}Specs=[Magical Boots,Miscellaneous,1H,Any]{{Size=Medium}}{{Powers=Unknown}}{{desc=These definitely appear to be magical boots, but as yet it is unclear what their powers are.}}'},
						{name:'Magical-Key',type:'Miscellaneous',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Magical Key}}{{subtitle=Magic Item}}Specs=[Magical Key,Miscellaneous,1H,Any]{{Size=Tiny}}{{Powers=Unknown}}{{desc=This key is small and made of dull metal. It does not seem of high quality at all. But something about it seems to make it stand out}}'},
						{name:'Manual-of-Skill-at-Arms',type:'Miscellaneous',ct:'0',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Manual of Puissant Skill at Arms}}{{splevel=Tome}}{{school=Alteration}}Specs=[Manual of Skill at Arms,Miscellaneous,1H,Alteration]{{components=V,M}}{{time=[[48]] hours}}MiscData=[w:Manual of Skill at Arms,sp:0,rc:charged]{{range=Reader}}{{duration=Permanent}}{{aoe=Reader}}{{save=None}}{{effects=Any Bard, Fighter or Barbarian who reads will move to the midpoint of the next highest level (so always gains a level). Cover says (For Bard Fighter or Barbarian NOT Ranger or Paladin)}}{{materials=Book}}'},
						{name:'Medallion-of-flyswatting',type:'Miscellaneous',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Medallion of Flyswatting}}{{subtitle=Magic Item}}Specs=[Medallion of Flyswatting,Miscellaneous,1H,Alteration]{{Speed=By type of weapon}}MiscData=[w:Medallion of Flyswatting,sp:0,rc:uncharged]{{Size=Tiny}}{{To-hit=+[[1]], +[[3]] vs Insectoids}}{{damage=+[[1]], +[[3]] vs Insectoids}}{{Other Powers=Turn Undead PR-L+1}}{{desc=When attached to any type of weapon, will turn it into +1, +3 vs Insectoids - any existing plusses and powers are "overwritten" while this medallion is attached. On examination it will be found to display the holy symbol of the holder (changes with holder), and may be used to turn undead at +1 level, cumulative with other turning undead items or powers. If used by a holder with no power to turn, gives power as a 1st level cleric.}}'},
						{name:'Necklace-of-MM',type:'Miscellaneous',ct:'3',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Necklace of Magic Missiles}}{{splevel=Magic Item}}{{school=Evocation}}Specs=[Necklace of Magic Missiles,Miscellaneous,1H,Evocation]{{components=M}}{{time=[[3]]}}MiscData=[w:Necklace of Magic Missiles,sp:3,rc:charged]{{range=[[120]] yds}}{{duration=Instantanious}}{{aoe=1 or more creatures in [[10]]ft cube}}{{save=None}}{{effects=This necklace discharges magic missiles similar to those of the 1st-level wizard spell of the same name. The missile causes [1d4+1](!\\amp#13;\\amp#47;r 1d4+1) points of damage. It always hits its target when the necklace is used by a wizard, otherwise an attack roll is required. The necklace has an initiative modifier of +3, and each missile costs one charge. A maximum of two may be expended in one round. The necklace may be recharged.}}{{materials=Necklace}}'},
						{name:'Overshoes-of-Silent-Treading',type:'Miscellaneous',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Overshoes of Silent Treading}}{{splevel=Magic Item}}{{school=Alteration}}Specs=[Overshoes of Silent Treading,Miscellaneous,1H,Alteration]{{components=M}}{{time=[[0]]}}MiscData=[w:Overshoes of Silent Treading,sp:0,rc:uncharged]{{range=Wearer}}{{duration=While worn}}{{aoe=Wearer}}{{save=None}}{{effects=This pair of overshoes are elasticated covers for a character\'s normal footwear. When worn any properties of the footwear so covered do not function, but the wearer can tread silently even over the squeakiest wooden floor or any other surface.\nThe overshoes do not silence the rest of the wearer\'s movement, only sound that might occur from anything trodden on such as twigs breaking, or water splashing.\nThe overshoes do wear out with use, and the number of charges depends on the material used to make them, and the skill of the creator.}}'},
						{name:'Pacman',type:'Miscellaneous',ct:'10',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Pacman Animating Figurine}}{{subtitle=Magic Item}}Specs=[Pacman,Miscellaneous,1H,Conjuration-Summoning]{{Speed=[[10]]}}MiscData=[w:Pacman,sp:10,rc:charged]{{Size=Small}}{{desc=Placing this figurine on the floor and speaking one of 4 commands causes this figure to grow to a full-sized human, fully equipped as one of the 4 different classes as specified by the command chosen: Fighter, Priest, Mage, or Thief. Each is of 8th level, with (53HP and AC2?). The fighter uses a Longsword, the Priest a Mace, the Mage a Quarterstaff and the Thief a Shortsword. The Priest and Mage have appropriately filled memorised spells. The figurine is charged, and uses one charge per round of use. Once all charges are used, the igurine becomes just a fine quality treasure item, worth (?). (Is it rechargable?)}}'},
						{name:'Pearly-White-Ioun-Stone',type:'Miscellaneous',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Pearly White Ioun Stone}}{{splevel=Magic Item}}{{school=Necromancy}}Specs=[Ioun Stone,Miscellaneous,1H,Necromancy]{{components=M}}{{time=Continuous}}MiscData=[w:Pearly White Ioun Stone,sp:0,rc:uncharged]{{range=[[0]]}}{{duration=Permanent}}{{aoe=Wearer}}{{save=None}}{{effects=These magical stones always float in the air and must be within 3 feet of their owner to be of any use. When a character first acquires the stones, he must hold each and then release it, so it takes up a circling orbit, whirling and trailing, circling [1d3](!\\amp#13;\\amp#47;r 1d3) feet from his head. Thereafter, the stones must be grasped or netted to separate them their owner. The owner may voluntarily seize and stow the stones (at night, for example) to keep them safe, but he loses the benefits of the stones during that time. Whenever ioun stones are exposed to attack, they are treated as Armor Class [[0-4]] and take [[10]] points of damage to destroy. They save as if they were of hard metal—+[[3]] bonus.\nThis **Pearly White Ioun Stone** allows the wearer to regain [[1]]HP *per turn*, up to their normal maximum HP}}{{materials=The Ioun stone}}'},
						{name:'Periapt-of-Wound-Closure',type:'Miscellaneous',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Periapt of Wound Closure}{{splevel=Magic Item}}{{school=Necromancy}}{{sphere=Healing}}Specs=[Periapt of Wound Closure,Miscellaneous,1H,Healing]{{components=M}}{{time=[[0]]}}MiscData=[w:Periapt of Wound Closure,sp:0,rc:uncharged]{{range=[[0]]}}{{duration=Permanent}}{{aoe=Holder}}{{save=None}}{{effects=This magical stone looks exactly the same as the others of this ilk. The person possessing it need never fear open, bleeding wounds because the periapt prevents them. In addition, the periapt doubles the normal rate of healing, or allows normal healing of wounds that would not do so normally.}}'},
						{name:'Portable-Hole',type:'Miscellaneous',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Portable Hole}}{{subtitle=Magic Item}}Specs=[Portable Hole,Miscellaneous,1H,Alteration]{{Size=Small to Tiny}}MiscData=[w:Portable Hole,sp:0,rc:uncharged]{{Powers=Interdimensional Storage}}{{Access=Drag the *Bag of Holding* token onto the map and use your MI menu *Search* function (to retrieve stuff from it) or *Store* function (to put stuff in it)}}{{desc=A portable hole is a circle of magical cloth spun from the webs of a phase spider interwoven with strands of ether and beams of Astral plane luminaries. When opened fully, a portable hole is 6 feet in diameter, but it can be folded as small as a pocket handkerchief. When spread upon any surface, it causes an extra-dimensional hole 10 feet deep to come into being. This hole can be "picked up" from inside or out by simply taking hold of the edges of the magical cloth and folding it up. Either way, the entrance disappears, but anything inside the hole remains.\nThe only oxygen in the hole is that allowed by creation of the space, so creatures requiring the gas cannot remain inside for more than a turn or so without opening the space again by means of the magical cloth. The cloth does not accumulate weight even if its hole is filled (with gold, for example). Each *portable hole* opens on its own particular non-dimensional space. If a *bag of holding* is placed within a *portable hole*, a rift to the Astral Plane is torn in the space, and the bag and the cloth are sucked into the void and forever lost. If a *portable hole* is placed within a *bag of holding*, it opens a gate to another plane, and the hole, bag, and any creatures within a 10-foot radius are drawn to the Astral Plane, the *portable hole* and bag of holding being destroyed in the process.}}'},
						{name:'Quaals-Feather-Tree-Token',type:'Miscellaneous',ct:'10',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Quaal\'s Feather Token}}{{splevel=Magic Item}}{{school=Conjuration/Summoning}}Specs=[Quaals Feather Token,Miscellaneous,1H,Conjuration-Summoning]{{components=M}}{{time=[[10]]}}MiscData=[w:Quaals Feather Tree Token,sp:10,rc:charged]{{range=[[0]]}}{{duration=Permanent}}{{aoe=Special}}{{save=None}}{{effects=Feather tokens are small magical devices of various forms to suit special needs. Each token is usable once.\n**Tree Token**: a token that causes a great oak to spring into being (6-foot diameter trunk, 60-foot height, 40-foot top diameter).}}'},
						{name:'Red-ioun-stone',type:'Miscellaneous',ct:'4',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Light Red Ioun Stone}}{{splevel=Magic Item}}{{school=Illusion/Phantasm}}Specs=[Ioun Stone,Miscellaneous,1H,Illusion-Phantasm]{{components=M}}{{time=[[4]]}}MiscData=[w:Red Ioun Stone,sp:4,rc:uncharged]{{range=[[0]]}}{{duration=[[8]] rounds}}{{aoe=[60ft cone, 30ft at end, 5ft base](!rounds --aoe @{selected|token_id}|cone|feet|0|60|30|acid)}}{{save=Negates}}{{damage=[Frighten them](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Select first target|token_id}|Red-Ioun-Stone|8|-1|Fear|screaming)}}{{effects=These magical stones always float in the air and must be within 3 feet of their owner to be of any use. When a character first acquires the stones, he must hold each and then release it, so it takes up a circling orbit, whirling and trailing, circling [1d3](!\\amp#13;\\amp#47;r 1d3) feet from his head. Thereafter, the stones must be grasped or netted to separate them their owner. The owner may voluntarily seize and stow the stones (at night, for example) to keep them safe, but he loses the benefits of the stones during that time. Whenever ioun stones are exposed to attack, they are treated as Armor Class [[0-4]] and take [[10]] points of damage to destroy. They save as if they were of hard metal—+[[3]] bonus.\nThis Red Ioun stone is able to cast *Fear* once per day, as per the 4th level Wizard spell. When a fear spell is cast, the wizard sends forth an invisible cone of terror that causes creatures within its area of effect to turn away from the caster and flee in panic. Affected creatures are likely to drop whatever they are holding when struck by the spell; the base\nchance of this is 60% at 1st level (or at 1 Hit Die), and each level (or Hit Die) above this reduces the probability by 5%. Thus, at 10th level there is only a 15% chance, and at 13th\nlevel no chance, of dropping items. Creatures affected by fear flee at their fastest rate for a number of melee rounds equal to the level of experience of the user. Undead and creatures that successfully roll their saving throws vs. spell are not affected.}}{{materials=The Ioun stone}}'},
						{name:'Robe-of-Ears',type:'Miscellaneous',ct:'3',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Robe of Ears}}{{splevel=Magic Item}}{{school=Alteration}}Specs=[Robe of Ears,Miscellaneous,1H,Alteration]{{components=M}}{{time=[[3]]}}MiscData=[w:Robe of Ears,sp:3,rc:uncharged,ns:1],[cl:PW,w:ROE-Clairaudience,sp:3,pd:2,lv:12]{{range=Wearer}}{{duration=While worn}}{{aoe=Wearer}}{{save=Special}}{{effects=This robe grants the wearer the ability to hear anything that they are listening for despite other distracting noises, even the merest pin drop in a crowded room, if that is what they are listening for. If they know a crowd contains a particular person or creature, they will know exactly where they are if they move, even if the target is invisible, hiding in shadows, or surrounded by crowds - however, the wearer will not necessarily be able to see them. Specific sounds listened for can be heard even through thin to medium barriers such as doors made of wood or metal without fail (but not thick stone walls). The wearer cannot be snuck up upon, as they will hear any approach, so it is impossible to surprise them. Wearing the robe also grants [*Clairaudience*](!magic --mi-power @{selected|token_id}|ROE-Clairaudience|Robe-of-Ears|12) twice per day, and +4 on any saves related to causing deafness. Attacks against invisible, or otherwise unseen (such as in magical darkness), moving creatures will suffer no more than a -1 penalty to hit, as the wearer tracks the sounds of their movement, however slight.\nThe Robe of Ears cannot function in an area of a magical Silence, and the wearer will suffer double maximum damage and be deafened for four times as long from a Shout spell, including if it is cast by them while wearing the robe.}}'},
						{name:'Robe-of-Protection+2',type:'Protection Robe',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Robe of Protection}}{{subtitle=Robe}}{{Speed=[[0]]}}{{Size=Large}}{{Immunity=None}}{{Protection=+[[2]] on AC}}Specs=[Cloak of Protection,Protection Cloak,1H,Abjuration-Protection]{{Saves=+[[2]] on saves}}ACData=[a:Robe of Protection+2,st:Robe,+:2,sz:L,wt:0,w:Robe of Protection+2,sp:0,rc:uncharged]{{desc=A robe of protection improves the wearer\'s Armour Class value and saving throws versus all forms of attack. A robe +1 betters AC by 1 (say, from 10 to 9) and gives a bonus of +1 on saving throw die rolls. The magical properties of a robe of protection are cumulative with all other magical items of protection except as follows:\n1. The robe does not improve Armour Class if magical armour is worn, although it does add to saving throw die rolls.\n2. Robes and Rings of protection operating on the same person, or in the same area, do not combine protection. Only one such ring or robe—the strongest—functions, so a pair of protection rings +2 provides only +2 protection.}}'},
						{name:'Scabbard-of-Enchanting',type:'Miscellaneous',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Scabbard of Enchanting}}{{subtitle=Magic Item}}Specs=[Scabbard of Enchanting,Miscellaneous,1H,Alteration]{{Speed=[[0]]}}MiscData=[w:Scabbard of Enchanting,sp:0,rc:uncharged]{{Size=Medium}}{{Immunity=None}}{{Resistance=None}}{{Saves=No effect}}{{desc=[Sheath Blade](!rounds --target caster|@{selected|token_id}|Scabbard-of-Enchanting|10|-1|The blade in the scabbard is being enchanted|stopwatch)\n[Draw Blade](!rounds --target caster|@{selected|token_id}|Scabbard-Enchanting-draw|1|-1|Drawing the blade from the Scabbard|all-for-one)}}{{desc1=This scabbard will magically resize to fit any blade. If left in the scabbard for [[1]]turn, the blade is enhanced by +1 (adding to any existing enchantment)}}'},
						{name:'Shocking-Bracers',type:'Miscellaneous',ct:'1',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Shocking Bracers}}{{splevel=Magic Item}}{{school=Evocation}}Specs=[Shocking Bracers,Miscellaneous,1H,Evocation]{{components=V,S,M}}{{time=[[1]]}}MiscData=[w:Shocking Bracers,sp:1,rc:uncharged]{{range=[[100]] yds}}{{duration=Instantanious}}{{aoe=[[5]]ft wide x [[40]]ft long}}{{save=[Halves](!\\amp#13;\\amp#47gmroll 1d20 save vs wand for 1/2 Shocking Bracers damage)}}{{effects=Marked L \\amp R in dwarvish runes, and with a lightning bolt symbol. Pick them up with the wrong hands and take [1D6](!\\amp#13;\\amp#47;r 1d6 damage picking up bracers incorrectly) damage. When worn, if an attack succeeds with both hands (eg 2 weapons, 2 bare hands), opponent will take [1D10](!\\amp#13;\\amp#47;r 1d10 electrical damage from double hit by bracers - save vs wands to halve damage?) of electrical damage. If hit by electricity (e.g. Lightning Bolt) while wearing them, they will [absorb damage](~Shocking-Bracers-Absorb-HP) up to **2d10** of power, currently [[0+@{selected|Shocking-Bracers-HP} @{noerror}]]HP which can be re-flashed at will as a [lightning bolt weapon](~Shocking-Bracers-LB), 5\' wide x 40\' long. Speed 1, uses up one attack per hand of a multi attack character.}}{{materials=Bracers}}'},
						{name:'Shocking-Bracers-Absorb-HP',type:'',ct:'0',charge:'uncharged',cost:'0',body:'!modattr --fb-public --fb-from Shocking Bracers --fb-header Absorbing Damage --fb-content _CHARNAME_\'s Shocking Bracers absorb _TCUR0_ HP of electrical damage, and now store _CUR0_ HP --charid @{selected|character_id} --Shocking-Bracers-HP|[[{{[[2d10]]},{?{HP Electrical damage taken?}}}kl1]]'},
						{name:'Shocking-Bracers-LB',type:'',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nLightning Bolt\nfrom their Shocking Bracers}}{{school=Evocation}}{{splevel=Magic Item Power}}{{components=S,M}}{{time=[[1]]}}{{range=[[0]]}}{{duration=Instantaneous}}{{aoe=[40ft x 5ft](!rounds --aoe @{selected|token_id}|bolt|feet|0|40|10|lightning)}}{{save=[Half damage](!&#13;&#47;gmroll 1d20 saving throw)}}{{damage=[[0+@{selected|Shocking-Bracers-HP} \\amp{noerror}]] HP}}{{damagetype=Lightning}}{{effects=Releases a powerful stroke of electrical energy damaging each creature within its area of effect (Save vs. spell for half). Begins at fingertips of both hands and streaks out in a line from the casting wizard. May set fire to combustibles, and melt metals with a low melting point. Objects struck must save vs Lightning or be destroyed. If damage to interposing barrier breaks through it, bolt continues. Can breach up to [[{{12},{[[ceil([[0+@{selected|shocking-bracers-hp} \\amp{noerror}]]/10)]]}}kl1]] inches of wood or [[{{6}, {[[ceil([[0+@{selected|shocking-bracers-hp} \\amp{noerror}]]/10)]]}}kl1]] inches of stone. If bolt cannot reach full length, because of an unyielding barrier (such as a stone wall), the bolt rebounds toward its caster or reflects (DM decision) from the barrier, if barrier not breached, ending only when it reaches its full length.}}'},
						{name:'Stone-of-Good-Luck+1',type:'Miscellaneous',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Stone of Good Luck}}{{subtitle=Magic Item}}Specs=[Stone of Good Luck,Miscellaneous,1H,Alteration]{{Speed=[[0]]}}MiscData=[w:Stone of Good Luck+1,sp:0,rc:uncharged]{{Size=Tiny}}{{Immunity=None}}{{Damage=+[[1]] on To-Hit rolls}}{{Saves=+[[1] on saves and NWP checks}}{{desc=While this polished agate is on your person, you gain a +1 bonus to ability checks and saving throws.)}}'},
						{name:'Tome-of-Leadership+Influence',type:'',ct:'0',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Tome of Leadership + Influence}}{{splevel=Tome}}{{school=Alteration}}Specs=[Tome of Leadership+Influence,Miscellaneous,1H,Alteration]{{components=V,M}}{{time=[[48]] hours}}MiscData=[w:Tome of Leadership+Influence,sp:0,rc:charged]{{range=Reader}}{{duration=Permanent}}{{aoe=Reader}}{{save=None}}{{effects=This leather-and-brass-bound book is A work of this nature is indistinguishable from any normal book. Any single character who reads a *tome of leadership \\amp influence* will be able to practice exercises that will increase their Charisma by one point. Reading a work of this nature takes 48 hours time over six days, and immediately thereafter the book disappears. The reader must begin a program of concentration and mental discipline within one week of reading the tome. After a month of such exercise, Charisma goes up. The knowledge gained from reading the work can never be recorded or articulated. Any further perusal of the tome will be of no benefit to the character.}}{{materials=Book}}'},
						{name:'Unknown-boots',type:'Miscellaneous',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Unknown Boots}}{{splevel=Boots}}{{school=Unknown}}Specs=[Unknown Boots,Miscellaneous,1H,Any]{{components=M}}{{time=Unknown}}MiscData=[w:Unknown Boots,sp:0,rc:uncharged]{{range=Unknown}}{{duration=Unknown}}{{aoe=Unknown}}{{save=Unknown}}{{effects=The powers of these boots are unknown. In fact, are they magical boots at all, or just of fine quality and just treasure?}}{{materials=Boots}}'},
						{name:'Wearing-0',type:'',ct:'0',charge:'uncharged',cost:'0',body:'Put on'},
						{name:'Wearing-1',type:'',ct:'0',charge:'uncharged',cost:'0',body:'Take off'},
						{name:'Whistle-an-Air-Elemental',type:'Miscellaneous',ct:'10',charge:'charged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Whistle of Air Elemental summoning}}{{splevel=Magic Item}}{{school=Conjuration/Summoning}}Specs=[Whistle an Air Elemental,Miscellaneous,1H,Conjuration-Summoning]{{components=M}}{{time=[[10]]}}MiscData=[w:Whistle an Air Elemental,sp:10,rc:charged]{{range=[40 yards](!rounds --aoe @{selected|token_id}|circle|yards|0|80||magic|true)}}{{duration=[[1]] turn}}{{aoe=1 8HD Air Elemental}}{{save=None}}{{effects=Conjures 1 [8HD](!\\amp#13;\\amp#47;r 8d8 HP for Air Elemental) Air Elemental, which does not have a whirlwind attack, but has 1 attack doing 2d10 damage from an air blast}}'},
						{name:'Wyvern-Skin',type:'Miscellaneous',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Wyvern Skin}}{{subtitle=Useful Item}}Specs=[Wyvern Skin,Miscellaneous,1H,Treasure]{{Speed=[[0]]}}MiscData=[w:Wyvern Skin,sp:0,rc:uncharged]{{Size=Large}}{{desc=A skin from a Wyvern that has the potential to be made into +1 leather armour}}'},
					]},
	MI_DB_Weapons:	{bio:'<blockquote>Weapons Database</blockquote><b>v5.8  04/02/2022</b><br><br>This sheet holds definitions of weapons that can be used in the redMaster API system.  They are defined in such a way as to be lootable and usable magic items for MagicMaster and also usable weapons in attackMaster.',
					gmnotes:'<blockquote>Change Log:</blockquote>v5.8  04/02/2022  Added Scimitar+3<br><br>v5.7  17/01/2022  Corrected multiple weapon definitions to ensure consistency.<br><br>v5.6  01/01/2022  Added summoned weapons needed for spells, such as Rainbow & Ice Knife<br><br>v5.5  05/11/2021  Split the Ammo and Weapons databases<br><br>v5.4  31/10/2021  Further encoded using machine readable data to support API databases<br><br>v5.3.4  21/08/2021  Fixed incorrect damage for all types of Two-handed Sword<br><br>v5.3.3  07/06/2021  Added the missing Scimitar macro<br><br>v5.3.2  31/05/2021  Cleaned ranged weapon ranges, as specifying a range for the weapon in the {{To-Hit=...}} section will now adjust the range of the ammo by that amount (for extended range weapons).  Self-ammoed weapons (like thrown daggers) should specify their range in the {{Range=...}} section.<br><br>v5.3.1  19/05/2021  Fixed a couple of bugs, missing weapons in the transfer from MI-DB<br><br>v5.3  14/05/2021  All standard weapons from the PHB now encoded.<br><br>v5.2  12/05/2021  Added support for weapon types (S,P,B), and more standard weapons<br><br>v5.1  06/05/2021  Added a number of standard and magical weapons<br><br>v5.0  28/04/2021  Initial separation of weapons listings from the main MI-DB',
					root:'MI-DB',
					controlledby:'all',
					avatar:'https://s3.amazonaws.com/files.d20.io/images/52530/max.png?1340359343',
					version:5.8,
					db:[{name:'Acorn-Fire-Seed',type:'Ranged',ct:'2',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Acorn Fire Seed (spell)}}{{subtitle=Thrown magical seed}}{{Speed=[[2]]}}{{Size=Tiny}}{{Weapon=1-handed ranged dart}}Specs=[Acorn-Fire-Seed,Ranged,1H,Dart]{{To-hit=+0, + Dex bonuses}}ToHitData=[w:Acorn Fire Seed,sb:0,db:1,+:0,n:1,ch:20,cm:1,sz:T,ty:B,sp:2,rc:uncharged]{{Attacks=1 per round, + specialisation \\amp level, Fire burst}}{{Ammo=+0, vs. SM:2d8, L:2d8 in 10ft dia. from fire}}AmmoData=[w:Acorn Fire Seed,t:Acorn Fire Seed,st:Dart,sb:0,+:0,SM:2d8,L:2d8,]{{Range=S:40, M:40, L:40}}RangeData=[t:Acorn Fire Seed,+:0,r:40]{{desc=The Fire Seed spell turns up to four acorns into special grenadelike missiles that can be hurled up to 40 yards. An attack roll is required to strike the intended target, and proficiency penalties are considered. Each acorn bursts upon striking any hard surface, causing 2d8 points of damage and igniting any combustible materials within a [10-foot diameter](!rounds --aoe @{selected|token_id}|circle|feet|120|10||fire) of the point of impact. If a successful saving throw vs. spell is made, a creature within the burst area receives only one-half damage, but a creature struck directly suffers full damage (i.e., no saving throw)}}'},
						{name:'Awl-Pike',type:'Melee',ct:'13',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Awl Pike}}{{subtitle=Polearm}}{{Speed=[[13]]}}Speed=[13,uncharged]{{Size=Large}}{{Weapon=2-handed melee polearm}}Specs=[Awl Pike,Melee,2H,Polearm]{{To-hit=+0 + Str Bonus}}ToHitData=[w:Awl Pike,sb:1,+:0,n:1,ch:20,cm:1,sz:L,ty:P,r:12-20,sp:13,rc:uncharged]{{Attacks=1 per 2 rounds + specialisation \\amp level, Piercing}}{{Damage=SM:1d6, L:1d12, + Str Bonus}}DmgData=[w:Awl Pike,sb:1,+:0,SM:1d6,L:1d12]{{desc=This is a normal Awl Pike, a type of Polearm. The point is sharp and keen, but nothing special. However, it still does double damage when set to receive a charge.\nEssentially this is a long spear 12 to 20 feet long ending in a spike point of tapered spear head. It was a popular weapon during the Renaissance. Since the pike stuck out in front, men could be packed side-by-side in dense formations, and several rows of men could fight. Large blocks of pikemen made formidable troops. However, once the pikemen engaged in close combat, they normally dropped their clumsy awl pikes and fought hand-to-hand with short swords.}}'},
						{name:'Bardiche',type:'Melee',ct:'9',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Bardiche}}{{subtitle=Polearm}}{{Speed=[[9]]}}{{Size=Large}}{{Weapon=2-handed melee polearm}}Specs=[Bardiche,Melee,2H,Polearm]{{To-hit=+0 + Str Bonus}}ToHitData=[w:Bardiche,sb:1,+:0,n:1,ch:20,cm:1,sz:L,ty:S,r:5-8,sp:9,rc:uncharged]{{Attacks=1 per round + specialisation \\amp level, Slashing}}{{Damage=+0, SM:1d6, L:1d12, + Str Bonus}}DmgData=[w:Awl Pike,sb:1,+:0,SM:1d6,L:1d12]{{desc=This is a normal Bardiche, a type of Polearm. The point is sharp and keen, but nothing special.\nOne of the simplest of polearms, the bardiche is an elongated battle axe. A large curving axe-head is mounted on the end of a shaft 5 to 8 feet long. It probably grew out of common peasant tools and was popular with them. One relative disadvantage is that the bardiche required more space to wield than a pike or a spear.}}'},
						{name:'Bastard-Sword',type:'Melee|Melee',ct:'6',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Bastard Sword}}{{subtitle=Sword}}{{Speed=1H [[6]], 2H [[8]]}}{{Size=Medium}}{{Weapon=1 or 2-handed melee long blade}}Specs=[Bastard-sword, Melee, 1H, Long-blade],[Bastard-sword, Melee, 2H, Long-blade]{{To-hit=+0 + Str Bonus}}ToHitData=[w:Bastard-Sword, sb:1,+:0,n:1,ch:20,cm:1,sz:M,ty:S,r:5,sp:6,rc:uncharged],[w:Bastard-Sword 2H,sb:1,+:0,n:1,ch:20,cm:1,sz:M,ty:S,r:5,sp:8]}}{{Attacks=1 per round + specialisation \\amp level, Slashing}}{{Damage=1-handed SM:1d8 L:1d12, 2-handed SM:2d4 L:2d8}}DmgData=[w:Bastard-Sword,sb:1,+:0,SM:1d8,L:1d12],[w:Bastard-Sword 2H,sb:1,+:0,SM:2d4,L:2d8]}}{{desc=This is a normal sword. The blade is sharp and keen, but nothing out of the ordinary.}}'},
						{name:'Bastard-Sword+1',type:'Melee|Melee',ct:'6',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Bastard Sword+1}}{{subtitle=Magic Sword}}{{Speed=[[5]]}}{{Size=Medium}}{{Weapon=1 or 2-handed melee long blade}}Specs=[Bastard-sword,Melee,1H,Long-blade],[Bastard-sword,Melee,2H,Long-blade]{{To-hit=+1 + Str Bonus}}ToHitData=[w:Bastard Sword+1, sb:1, +:1, n:1, ch:20, cm:1, sz:M, ty:S, r:5, sp:6,rc:uncharged],[w:Bastard Sword 2H+1, sb:1, +:1, n:1, ch:20, cm:1, sz:M, ty:S, r:5, sp:8,,rc:uncharged]{{Attacks=1 per round + specialisation \\amp level, Slashing}}{{Damage=+1, 1-handed SM:1d8 L:1d12, 2-handed SM:2d4 L:2d8}}DmgData=[w:Bastard Sword+1,sb:1,+:1,SM:1d8,L:1d12],[w:Bastard Sword 2H+1,sb:1,+:1,SM:2d4,L:2d8]{{desc=This is a normal magical sword. The blade is sharp and keen, and is a +[[1]] magical weapon at all times.}}'},
						{name:'Bastardsword-of-Adaptation+1',type:'Melee|Melee',ct:'6',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Bastardsword of Adaptation+1}}{{subtitle=Magic Sword}}{{Speed=[[5]]}}{{Size=Medium}}{{Weapon=1- or 2-handed melee long-blade}}Specs=[Bastard-sword,Melee,1H,Long-blade],[Bastard-sword,Melee,2H,Long-blade]{{To-hit=+1 + Str bonus}}ToHitData=[w:Bastardsword of Adapt+1, sb:1, +:1, n:1, ch:20, cm:1, sz:M, ty:S, r:5, sp:6],[w:Bastardsword of Adapt 2H+1, sb:1, +:1, n:1, ch:20, cm:1, sz:M, ty:S, r:5, sp:8]{{Attacks=1 per round + level \\amp specialisation, Slashing}}{{Damage=+1,\n **1H:** SM:1d8, L:1d12\n**2H:** SM:2d4, L:2d8\n+ Str bonus}}DmgData=[w:Bastardsword of Adapt+1,sb:1,+:1,SM:1d8,L:1d12],[w:Bastardsword of Adapt 2H+1,sb:1,+:1,SM:2d4,L:2d8]{{desc=This is an exceptional magical sword. The blade is sharp and keen, and is a +[[1]] magical weapon at all times. However, it can adapt to be a sword of any type the wielder desires (and is proficient with). It will take [[1]] round to change shape to a different type of sword.}}'},
						{name:'Battle-Axe',type:'Melee',ct:'7',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Battle Axe}}{{subtitle=Axe}}{{Speed=[[7]]}}{{Size=Medium}}{{Weapon=1-handed melee axe}}Specs=[Battle-Axe,Melee,1H,Axe]{{To-hit=+0 + Str Bonus}}ToHitData=[w:Battle Axe,sb:1,+:0,n:1,ch:20,cm:1,sz:M,ty:S,r:5,sp:7,rc:uncharged]{{Attacks=1 per round + specialisation \\amp level, Slashing}}{{Damage=+0, SM:1d8, L:1d12 + Str Bonus}}DmgData=[w:Battle Axe,sb:1,+:0,SM:1d8,L:1d12]{{desc=A standard Battle Axe of good quality, but nothing special}}'},
						{name:'Battle-Axe+1',type:'Melee',ct:'7',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Battle Axe+1}}{{subtitle=Magic Weapon}}{{Speed=[[7]]}}{{Size=Medium}}{{Weapon=1-handed melee axe}}Specs=[Battle-Axe,Melee,1H,Axe]{{To-hit=+1 + Str Bonus}}ToHitData=[w:Battle Axe+1,sb:1,+:1,n:1,ch:20,cm:1,sz:M,ty:S,r:5,sp:7,rc:uncharged]{{Attacks=1 per round + specialisation \\amp level, Slashing}}{{Damage=+1, SM:1d8, L:1d12 + Str Bonus}}DmgData=[w:Battle Axe,sb:1,+:1,SM:1d8,L:1d12]{{desc=A standard Battle Axe of fine quality, good enough to be enchanted to be a +1 magical weapon}}'},
						{name:'Bec-de-Corbin',type:'Melee',ct:'9',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Bec de Corbin}}{{subtitle=Polearm}}{{Speed=[[9]]}}{{Size=Large}}{{Weapon=2-handed melee pole arm}}Specs=[Bec de Corbin,Melee,2H,Polearm]{{To-hit=+0 + Str Bonus}}ToHitData=[w:Bec de Corbin,sb:1,+:0,n:1,ch:20,cm:1,sz:L,ty:PB,r:8,sp:9,rc:uncharged]{{Attacks=1 per round + specialisation \\amp level, piercing \\amp bludgeoning}}{{Damage=+0+Str Bonus, SM:1d8, L:1d6}}DmgData=[w:Bec de Corbin,sb:1,+:0,SM:1d8,L:1d6]{{desc=This is a normal Bec de Corbin, a type of Polearm, especially good against politicians of a certain persuasion. The point is sharp and keen, but nothing special.\nThis was a highly specialized weapon of the upper classes during the Late Middle Ages and the early Renaissance. It is an early can-opener designed specifically to deal with plate armor. The pick or beak is made to punch through plate, while the hammer side can be used to give a stiff blow. The end is fitted with a short blade for dealing with unarmored or helpless foes. The weapon is about eight feet long. Since the weapon relies on impact, a great deal of swinging space is needed.}}'},
						{name:'Bill-guisarme',type:'Melee',ct:'10',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Bill-guisarme}}{{subtitle=Polearm}}{{Speed=[[10]]}}{{Size=Large}}{{Weapon=2-handed melee pole arm}}Specs=[Bill-guisarme,Melee,2H,Polearm]{{To-hit=+0 + Str Bonus}}ToHitData=[w:Bill-guisarme,sb:1,+:0,n:1,ch:20,cm:1,sz:L,ty:PS,r:7-8,sp:10,rc:uncharged]{{Attacks=1 per round + specialisation \\amp level, Piercing \\amp Slashing}}{{Damage=+0+Str Bonus, SM:2d4, L:1d10}}DmgData=[w:Bill-guisarme,sb:1,+:0,SM:2d4,L:1d10]{{desc=This is a normal Bill-guisarme, a type of Polearm. The point is sharp and keen, but nothing special.\nA particularly bizarre-looking combination weapon, the bill-guisarme is an outgrowth of the common bill hook. Mounted on a seven- to eight-foot-long pole, it has a combination of a heavy cleaver blade, a jutting back spike, and a hook or spike on the end. Thus, it can be used in several different ways. Like most polearms, it requires lots of room to use.}}'},
						{name:'Blackrazor',type:'Melee|Melee',ct:'8',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Blackrazor\nIntelligent, Chaotic Neutral}}{{subtitle=Magic Sword}}{{Speed=[[8]]}}{{Size=M}}{{Weapon=2-handed melee Greatsword}}Specs=[Greatsword,Melee,2H,Long-blade],[Greatsword,Melee,2H,Long-blade]{{To-hit=+3 + Str Bonus}}ToHitData=[w:Blackrazor, sb:1,+:3,n:1,ch:20,cm:1,sz:L,ty:S,r:5,sp:8,rc:uncharged],[w: Blackrazor vs Undead,sb:1,+:3,n:1,ch:20,cm:1,sz:L,ty:S,r:5,sp:8,rc:uncharged]{{Attacks=1 per round + specialisation \\amp level, Slashing}}{{Damage=+3 + Str Bonus, SM:2d6, L:2d10, drain HP on kill, -ve vs. Undead}}DmgData=[w:Blackrazor,sb:1,+:3,SM:2d6,L:2d10],[[w:Blackrazor vs Undead,sb:1,SM:0-1d10,L:0-1d10]{{resistance=Charm \\amp Fright (e.g. *Spook, Fear*)}}WeapData=[w:Blackrazor,ns:1][cl:PW,w:Blackrazor-Haste,sp:3,lv:12,pd:1]{{saves=Advantage on To-Hit, Saves \\amp NWP roles}}{{desc=**Blackrazor:** Weapon (greatsword), legendary (requires attunement by a creature of non-lawful alignment)\n\n**Attacks:** +3 on attack and damage\n**Devour Soul:** If reduce target to [[0]] HP, you get temporary HP equal to slain creature\'s HP max (subsequent kills overwrite). HP fade after Long Rest. While have temporary HP and *Blackrazor* is in hand, have advantage on attacks, saves, and NWP checks - roll d20 twice \\amp take best roll.\n**Undead:** If hit undead, you take [1d10](!\\amp#13;\\amp#47;r 1d10) necrotic damage, target regains the HP you loose. If this necrotic damage reduces you to 0 hit points, *Blackrazor* devours your soul.\n**Soul Hunter:** While held, you are aware of Tiny or larger creatures within [[60]] feet, not constructs or undead.\n**Immunity:** Can\'t be *charmed* or *frightened*.\n[Haste](!magic --mi-power @{selected|token_id}|Blackrazor-Haste|Blackrazor|12) 1/day ***It*** decides to cast and maintains concentration on it so that you don\'t have to.\n\nFor full detail, **[click here to see Blackrazor](http://journal.roll20.net/handout/-Kdm2Y9fzQXxv-4v6a-G)** handout}}'},
						{name:'Blowgun',type:'Ranged',ct:'5',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Blowgun}}{{Speed=[[5]]}}{{Size=Medium}}{{Weapon=1-handed ranged blowgun}}Specs=[Blowgun,Ranged,1H,Blowgun]{{To-hit=+0 +Dex Bonus}}ToHitData=[w:Blowgun,sb:0,db:1,+:0,n:2,ch:20,cm:1,sz:M,ty:P,sp:5,rc:uncharged]{{Attacks=2 per round + specialisation \\amp level, Piercing}}{{desc=This is a normal blowgun. The tube is clean and smooth, but nothing special.}}'},
						{name:'Broadsword',type:'Melee',ct:'5',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Broadsword}}{{subtitle=Sword}}{{Speed=[[5]]}}{{Size=Medium}}{{Weapon=1-handled melee long blade}}Specs=[Broad sword,Melee,1H,Long-blade]{{To-hit=+0 + Str Bonus}}ToHitData=[w:Broadsword,sb:1,+:0,n:1,ch:20,cm:1,sz:M,ty:S,r:5,sp:5,rc:uncharged]{{Attack=1 per round + specialisation \\amp level, Slashing}}{{Damage=+0 + Str Bonus, \nvs. SM:2d4, L:1+1d6}}DmgData=[w:Broadsword,sb:1,+:0,SM:2d4,L:1+1d6]{{desc=This is a normal sword. The blade is sharp and keen, but nothing special.}}'},
						{name:'Club',type:'Melee',ct:'4',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Club}}{{subtitle=Bludgeoning Weapon}}{{Speed=[[4]]}}{{Size=Medium}}{{Weapon=1-handed melee club}}Specs=[Club,Melee,1H,Club]{{To-hit=+0 + Str Bonus}}ToHitData=[w:Club,sb:1,+:0,n:1,ch:20,cm:1,sz:M,ty:B,r:5,sp:4,rc:uncharged]{{Attacks=1 per round + specialisation \\amp level, Bludgeoning}}{{Damage=+0 + Str Bonus, vs SM:1d6, L:1d3}}DmgData=[w:Club,sb:1,+:0,SM:1d6,L:1d3]{{desc=This is a good but ordinary club. The wood is hard and heavy, but somewhat dull with smears of something brown.}}'},
						{name:'Club+1',type:'Melee',ct:'4',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Club+1}}{{subtitle=Magic Weapon}}{{Speed=[[4]]}}{{Size=Medium}}{{Weapon=1-handed melee club}}Specs=[Club,Melee,1H,Club]{{To-hit=+1 + Str Bonus}}ToHitData=[w:Club,sb:1,+:1,n:1,ch:20,cm:1,sz:M,ty:B,r:5,sp:4,rc:uncharged]{{Attacks=1 per round + specialisation \\amp level, Bludgeoning}}{{Damage=+1 + Str Bonus, vs SM:1d6, L:1d3}}DmgData=[w:Club,sb:1,+:1,SM:1d6,L:1d3]{{desc=This is a magical club. The wood is hard and heavy with a silvery sheen, and is a +[[1]] magical weapon at all times.}}'},
						{name:'Composite-Longbow',type:'Ranged',ct:'7',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Composite Longbow}}{{subtitle=Bow}}{{Speed=[[7]]}}{{Size=Large}}{{Weapon=2-handed ranged bow}}Specs=[Composite-Longbow,Ranged,2H,Bow]{{To-hit=+0 + any ammo, Dex and Str bonuses}}ToHitData=[w:Composite Longbow,sb:1,db:1,+:0,n:2,ch:20,cm:1,sz:L,ty:P,sp:7,rc:uncharged]{{Attacks=2 per round regardless of level or specialisation}}{{desc=This is a composite longbow (otherwise known as a Recurve Bow). The limbs have well-bonded laminations of good quality wood, which make it strong and flexible, but nothing special}}'},
						{name:'Composite-Longbow+1',type:'Ranged',ct:'8',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Composite Longbow+1}}{{subtitle=Magic Bow}}{{Speed=[[8]]}}{{Size=Large}}{{Weapon=2-handed ranged bow}}Specs=[Composite-Longbow,Ranged,2H,Bow]{{To-hit=+1 + any ammo, Dex \\amp Str bonuses}}ToHitData=[w:Composite Longbow+1,sb:1,db:1,+:1,n:2,ch:20,cm:1,sz:L,ty:P,r:=+0/+2/+2/+2,sp:8,rc:uncharged]{{Attacks=2 per round regardless of level or specialisation}}{{desc=This is a magical longbow. The limbs are strong enough to add strength bonuses, and increase Short, Medium and Long range for each type of ammunition by 20 (PB remains at 30). Any bow string that is strung immediately seems like fine silver, and is a delight to draw. It is a +[[1]] magical weapon at all times, which counts even if using normal arrows.}}'},
						{name:'Composite-Shortbow',type:'Ranged',ct:'6',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Composite Shortbow}}{{subtitle=Bow}}{{Speed=[[6]]}}{{Size=Medium}}{{Weapon=2-handed ranged bow}}Specs=[Composite-Shortbow,Ranged,2H,Bow]{{To-hit=+0 + any ammo, Dex \\amp Str bonuses}}ToHitData=[w:Composite Shortbow,sb:1,db:1,+:0,n:2,ch:20,cm:1,sz:M,ty:P,sp:6,rc:uncharged]{{Attacks=2 per round regardless of level or specialisation}}{{desc=This is a composite shortbow (otherwise known as a Recurve Bow). The limbs have well-bonded laminations of good quality wood, which make it strong and flexible, but nothing special}}'},
						{name:'Dagger',type:'Melee|Ranged',ct:'2',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Dagger}}{{subtitle=Weapon}}{{Speed=[[2]]}}{{Size=Small}}{{Weapon=1-handed melee or ranged short-bladed}}Specs=[Dagger,Melee,1H,Short-blade],[Dagger,Ranged,1H,Throwing-blade]{{To-hit=+0 + Str Bonus (and Dex if thrown)}}ToHitData=[w:Dagger,sb:1,+:0,n:2,ch:20,cm:1,sz:S,ty:P,r:5,sp:2,rc:uncharged],[w:Dagger,sb:1,db:1,+:0,n:2,ch:20,cm:1,sz:S,ty:P,sp:2,rc:uncharged]{{Attacks=2 per round, + specialisation \\amp level, Piercing}}{{Damage=+0, vs. SM:1d4, L:1d3, + Str Bonus}}DmgData=[w:Dagger,sb:1,+:0,SM:1d4,L:1d3],[ ]}}{{Ammo=+0, vs. SM:1d4, L:1d3 + Str bonus}}AmmoData=[w:Dagger,t:Dagger,st:Dagger,sb:1,+:0,SM:1d4,L:1d3,]}}{{Range=S:10, M:20, L:30}}RangeData=[t:Dagger,+:0,r:1/2/3]{{desc=A standard Dagger of good quality, but otherwise ordinary}}'},
						{name:'Dagger+1',type:'Melee|Ranged',ct:'2',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Dagger+1}}{{subtitle=Magic Weapon}}{{Speed=[[2]]}}{{Size=Small}}{{Weapon=1-handed melee or ranged short-bladed}}Specs=[Dagger,Melee,1H,Short-blade],[Dagger,Ranged,1H,Throwing-blade]{{To-hit=+1 + Str Bonus (and Dex if thrown)}}ToHitData=[w:Dagger+1,sb:1,+:1,n:2,ch:20,cm:1,sz:S,ty:P,r:5,sp:2,rc:uncharged],[w:Dagger+1,sb:1,db:1,+:1,n:2,ch:20,cm:1,sz:S,ty:P,sp:2,rc:uncharged]{{Attacks=2 per round, + specialisation \\amp level, Piercing}}{{Damage=+1, vs. SM:1d4, L:1d3, + Str Bonus}}DmgData=[w:Dagger+1,sb:1,+:1,SM:1d4,L:1d3],[]}}{{Ammo=+1, vs. SM:1d4, L:1d3 + Str bonus}}AmmoData=[w:Dagger+1,t:Dagger,st:Dagger,sb:1,+:1,SM:1d4,L:1d3]{{Range=S:10, M:20, L:30}}RangeData=[t:dagger,+:1,r:-/1/2/3]{{desc=A standard Dagger of fine quality, good enough to be enchanted to be a +1 magical weapon}}'},
						{name:'Dagger+2',type:'Melee|Ranged',ct:'2',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Dagger+2}}{{subtitle=Magic Weapon}}{{Speed=[[2]]}}{{Size=Small}}{{Weapon=1-handed melee or ranged short-bladed}}Specs=[Dagger,Melee,1H,Short-blade],[Dagger,Ranged,1H,Throwing-blade]{{To-hit=+2 + Str Bonus (and Dex if thrown)}}ToHitData=[w:Dagger+2,sb:1,+:2,n:2,ch:20,cm:1,sz:S,ty:P,r:5,sp:2,rc:uncharged],[w:Dagger+2,sb:1,db:1,+:2,n:2,ch:20,cm:1,sz:S,ty:P,sp:2,rc:uncharged]{{Attacks=2 per round, + specialisation \\amp level, Piercing}}{{Damage=+2, vs. SM:1d4, L:1d3, + Str Bonus}}DmgData=[w:Dagger+2,sb:1,+:2,SM:1d4,L:1d3],[]{{Ammo=+2, vs. SM:1d4, L:1d3 + Str bonus}}AmmoData=[w:Dagger+2,t:Dagger,st:Dagger,sb:1,+:2,SM:1d4,L:1d3]}}{{Range=S:10, M:20, L:30}}RangeData=[t:dagger,+:2,r:-/1/2/3]{{desc=A standard Dagger Axe of fine quality, good enough to be enchanted to be a +2 magical weapon}}'},
						{name:'Dagger+3',type:'Melee|Ranged',ct:'2',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Dagger+3}}{{subtitle=Magic Weapon}}{{Speed=[[2]]}}{{Size=Small}}{{Weapon=1-handed melee or ranged short-bladed}}Specs=[Dagger,Melee,1H,Short-blade],[Dagger,Ranged,1H,Throwing-blade]{{To-hit=+3 + Str Bonus (or Dex if thrown)}}ToHitData=[w:Dagger+3,sb:1,+:3,n:2,ch:20,cm:1,sz:S,ty:P,r:5,sp:2,rc:uncharged],[w:Dagger+3,sb:1,db:1,+:3,n:2,ch:20,cm:1,sz:S,ty:P,sp:2,rc:uncharged]}}{{Attacks=2 per round, + specialisation \\amp level, Piercing}}{{Damage=+3, vs. SM:1d4, L:1d3, + Str Bonus}}DmgData=[w:Dagger+3,sb:1,+:3,SM:1d4,L:1d3],[]{{Ammo=+3, vs. SM:1d4, L:1d3 + Str bonus}}AmmoData=[w:Dagger+3,t:Dagger,st:Dagger,sb:1,+:3,SM:1d4,L:1d3]{{Range=S:10, M:20, L:30}}RangeData=[t:dagger,+:3,r:-/1/2/3]{{desc=A standard Dagger Axe of fine quality, good enough to be enchanted to be a +3 magical weapon}}'},
						{name:'Dagger-Elf-Slayer',type:'Melee|Melee|Ranged|Ranged',ct:'2',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Dagger+2 +4 vs Elves}}{{subtitle=Magic Weapon}}{{Speed=[[2]]}}{{Size=Small}}{{Weapon=1-handed melee or ranged short-bladed}}Specs=[Dagger,Melee,1H,Short-blade],[Dagger,Melee,1H,Short-blade],[Dagger,Ranged,1H,Throwing-blade],[Dagger,Ranged,1H,Throwing-blade]}}{{To-hit=+2, +4 vs Elves + Str Bonus (and Dex if thrown)}}ToHitData=[w:Dagger+2,sb:1,+:2,n:2,ch:20,cm:1,sz:S,ty:P,r:5,sp:2,rc:uncharged],[w:Dagger+4 vs Elves,sb:1,+:4,n:2,ch:20,cm:1,sz:S,ty:P,r:5,sp:2,rc:uncharged],[w:Dagger+2,sb:1,db:1,+:2,n:2,ch:20,cm:1,sz:S,ty:P,sp:2,rc:uncharged],[w:Dagger+4 vs Elves,sb:1,db:1,+:4,n:2,ch:20,cm:1,sz:S,ty:P,sp:2,rc:uncharged]{{Attacks=2 per round, + specialisation \\amp level, Piercing}}{{Damage=+2, +4 vs Elves, vs. SM:1d4, L:1d3, + Str Bonus}}DmgData=[w:Dagger+2,sb:1,+:2,SM:1d4,L:1d3],[w:Dagger+2,sb:1,+:2,SM:1d4,L:1d3],[],[]}}{{Ammo=+2 +4 vs Elves, vs. SM:1d4, L:1d3 + Str bonus}}AmmoData=[w:Dagger+2,t:Dagger,st:Dagger,sb:1,+:2,SM:1d4,L:1d3],[w:Dagger+4 vs Elves,t:Dagger,st:Dagger,sb:1,+:4,SM:1d4,L:1d3]{{Range=S:10, M:20, L:30}}RangeData=[t:dagger,+:2,r:-/1/2/3],[t:dagger,+:4,r:-/1/2/3]{{desc=A Dagger of extra-fine quality, with an engraving of a lying sleeping (or dead?) Elf in the blade. It is enchanted to be a +2 magical weapon, but +4 when used against Elves}}'},
						{name:'Dagger-of-Throwing',type:'Melee|Ranged',ct:'2',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Dagger of Throwing}}{{subtitle=Magic Weapon}}{{Speed=[[2]]}}{{Size=Small}}{{Weapon=1-handed melee or ranged short-bladed}}Specs=[Dagger,Melee,1H,Short-blade],[Dagger,Ranged,1H,Short-blade]{{To-hit=+2 + Str Bonus (and Dex if thrown)}}ToHitData=[w:Dagger of Throwing+2,sb:1,+:2,n:2,ch:20,cm:1,sz:S,ty:P,r:5,sp:2,rc:uncharged],[w:Dagger of Throwing+2,sb:1,db:1,+:2,n:2,ch:20,cm:1,sz:S,ty:P,sp:2,rc:uncharged]{{Attacks=2 per round, + specialisation \\amp level, Piercing}}{{Damage=+2, melee vs. SM:1d4, L:1d3, + Str Bonus}}DmgData=[w:+2,sb:1,+:2,SM:1d4,L:2d3],[]{{Ammo=+2, vs. SM:2d4, L:2d3 when thrown + Str bonus}}AmmoData=[w:Dagger of Throwing,t:Dagger,st:Dagger,sb:1,+:2,SM:2d4,L:2d3]{{Range=PB: 30, S:60, M:120, L:180}}RangeData=[t:dagger,+:2,r:3/6/12/18]}}{{desc=This appears to be a normal weapon but will radiate strongly of magic when this is checked for. The balance of this sturdy blade is perfect, such that when it is thrown by anyone, the dagger will demonstrate superb characteristics as a ranged weapon. The magic of the dagger enables it to be hurled up to 180 feet. A successful hit when it is thrown will inflict twice normal dagger damage, plus the bonus provided by the blade, which will range from +1 to +4.}}'},
						{name:'Dagger-of-Throwing+2',type:'Melee|Ranged',ct:'2',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Dagger of Throwing}}{{subtitle=Magic Weapon}}{{Speed=[[2]]}}{{Size=Small}}{{Weapon=1-handed melee or ranged short-bladed}}Specs=[Dagger,Melee,1H,Short-blade],[Dagger,Ranged,1H,Short-blade]{{To-hit=+2 + Str Bonus (or Dex if thrown)}}ToHitData=[w:Dagger of Throwing+2,sb:1,+:2,n:2,ch:20,cm:1,sz:S,ty:P,r:5,sp:2,rc:uncharged],[w:Dagger of Throwing+2,sb:1,db:1,+:2,n:2,ch:20,cm:1,sz:S,ty:P,sp:2,rc:uncharged]{{Attacks=2 per round, + specialisation \\amp level, Piercing}}{{Damage=+2, melee vs. SM:1d4, L:1d3, + Str Bonus}}DmgData=[w:+2,sb:1,+:2,SM:1d4,L:2d3],[]{{Ammo=+2, vs. SM:2d4, L:2d3 when thrown + Str bonus}}AmmoData=[w:Dagger of Throwing,t:Dagger,st:Dagger,sb:1,+:2,SM:2d4,L:2d3]{{Range=PB: 30, S:60, M:120, L:180}}RangeData=[t:dagger,+:2,r:3/6/12/18]}}{{desc=This appears to be a normal weapon but will radiate strongly of magic when this is checked for. The balance of this sturdy blade is perfect, such that when it is thrown by anyone, the dagger will demonstrate superb characteristics as a ranged weapon. The magic of the dagger enables it to be hurled up to 180 feet. A successful hit when it is thrown will inflict twice normal dagger damage, plus the bonus provided by the blade, which will range from +1 to +4.}}'},
						{name:'Dancing-Longbow',type:'Ranged',ct:'8',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Dancing Longbow}}{{subtitle=Bow}}{{Speed=[[8]]}}{{Size=Medium}}{{Weapon=2-handed ranged dancing bow}}Specs=[Longbow,Ranged,2H,Bow]{{To-hit=+0 + Dex bonus (only when held)}}ToHitData=[w:Dancing Longbow,sb:0,db:1,+:1,n:2,ch:20,cm:1,sz:L,ty:P,sp:8]{{Attacks=2 per round, Piercing}}{{desc=This is a dancing longbow. Use it in hand for 4 rounds, and it will improve your aim by 1, then 2 then 3, then 4 points. Then it will dance for 1, 2, 3, 4 rounds before returning to your side.}}'},
						{name:'Dart',type:'Ranged',ct:'2',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Dart}}{{subtitle=Thrown weapon}}{{Speed=[[2]]}}{{Size=Tiny}}{{Weapon=1-handed ranged dart}}Specs=[Dart,Ranged,1H,Dart]{{To-hit=+0, + Str \\amp Dex bonuses}}ToHitData=[w:Dart,sb:1,db:1,+:0,n:3,ch:20,cm:1,sz:T,ty:P,sp:2,rc:uncharged]{{Attacks=3 per round, + specialisation \\amp level, Piercing}}{{Ammo=+0, vs. SM:1d3, L:1d2 + Str Bonus}}AmmoData=[w:Dart,t:Dart,st:Dart,sb:1,+:0,SM:1d3,L:1d2,]{{Range=S:10, M:20, L:40}}RangeData=[t:Dart,+:0,r:1/2/4]{{desc=A standard Dart of good quality, but otherwise ordinary}}'},
						{name:'Dart+3',type:'Ranged',ct:'2',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Dart+3}}{{subtitle=Thrown weapon}}{{Speed=[[2]]}}{{Size=Tiny}}{{Weapon=1-handed ranged dart}}Specs=[Dart,Ranged,1H,Dart]{{To-hit=+3, + Str \\amp Dex bonuses}}ToHitData=[w:Dart,sb:1,db:1,+:3,n:3,ch:20,cm:1,sz:T,ty:P,sp:2,rc:uncharged]}}{{Attacks=3 per round, + specialisation \\amp level, Piercing}}{{Ammo=+3, vs. SM:1d3, L:1d2, + Str Bonus}}AmmoData=[w:Dart,t:Dart,st:Dart,sb:1,+:3,SM:1d3,L:1d2]{{Range=S:10, M:20, L:40}}RangeData=[t:Dart,+:3,r:1/2/4]{{desc=A Dart of exceptionally fine quality, with a sparkling tip and glowing flight feathers of many colours. A +3 weapon at all times}}'},
						{name:'Dragonslayer-Broadsword',type:'Melee|Melee',ct:'5',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Dragonslayer Broadsword}}{{subtitle=Sword}}{{Speed=[[5]]}}{{Size=Medium}}{{Weapon=1-handed slashing melee long blade}}Specs=[Broadsword,Melee,1H,Long-blade],[Broadsword,Melee,1H,Long-blade]{{To-hit=+2, +4 vs. Dragons, + Str Bonus}}ToHitData=[w:Dragonslayer+2,sb:1,+:2,n:1,ch:20,cm:1,sz:M,ty:S,r:5,sp:5,rc:uncharged],[w:Dragonslayer vs. Dragon,sb:1,+:4,n:1,ch:20,cm:1,sz:M,ty:S,r:5,sp:5]{{Attks per round=[[1]] per round}}{{Damage=+2, +4 vs Dragons, + Str bonus. Kills 1 type - or does triple damage}}DmgData=[w:Dragonslayer+2,sb:1,+:2,SM:2d4,L:1+1d6][w:Dragonslayer vs Dragon,sb:1,+:4,SM:2d4,L:1+1d6]{{desc=This +2 sword has a +4 bonus against any sort of true dragon. It either inflicts triple damage against one sort of dragon (i.e., 3d6+3+4), or might be of a type that slays the dragon in 1 blow and immediately disintegrates. It will only act as a normal +2 sword against a dragon of a diametrically different colour (e.g. if a Black Dragonslayer, then will only be ordinary vs. a Silver dragon). Note that an unusual sword with intelligence and alignment will not be made to slay dragons of the same alignment. Determine dragon type (excluding unique ones like Bahamut and Tiamat) by rolling 1d10:\n1 black (CE)\n2 blue (LE)\n3 brass (CG)\n4 bronze (LG)\n5 copper (CG)\n6 gold (LG)\n7 green (LE)\n8 red (CE)\n9 silver (LG)\n10 white (CE)}}'},
						{name:'Extended-Range-Longbow',type:'Ranged',ct:'8',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Extended Range Longbow}}{{subtitle=Bow}}{{Speed=[[8]]}}{{Size=Large}}{{Weapon=2-handed ranged bow}}Specs=[Longbow,Ranged,2H,Bow]{{To-hit=+0 + Dex and Str bonuses}}ToHitData=[w:X-range Longbow,sb:1,db:1,+:0,n:2,ch:20,cm:1,sz:L,ty:P,r:+0/+2/+2/+2,sp:8,rc:uncharged]{{Attacks=2 per round regardless of specialisation or level}}{{Range=Range of Ammo +20 at each of S, M \\amp L}}{{desc=This is a strong longbow which imparts extra range to its ammunition. The wood is polished, the string taut, and the limbs seem both stronger and more springy than the average bow. As a result, it can both impart the bowyer\'s strength bonus and 20 extra yards per range category (except PB)}}'},
						{name:'Fauchard',type:'Melee',ct:'8',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Fauchard}}{{subtitle=Polearm}}{{Speed=[[8]]}}{{Size=Large}}{{Weapon=2-handed melee polearm}}Specs=[Fauchard,Melee,2H,Polearm]{{To-hit=+0 + Str bonus}}ToHitData=[w:Fauchard,sb:1,+:0,n:1,ch:20,cm:1,sz:L,ty:PS,r:6-8,sp:8,rc:uncharged]{{Attacks=1 per round + level \\amp specialisation, Piercing \\amp Slashing}}{{Damage=+0, vs. SM:1d6, L:1d8, + Str Bonus}}DmgData=[w:Fauchard,sb:1,+:0,SM:1d6,L:1d8]{{desc=This is a normal Fauchard, a type of Polearm. The point is sharp and keen, but nothing special.\nAn outgrowth of the sickle and scythe, the fauchard is a long, inward curving blade mounted on a shaft six to eight feet long. It can slash or thrust, although the inward curving point makes thrusting rather ineffective. Its advantage is that a peasant can easily convert his common scythe into this weapon of war.}}'},
						{name:'Fauchard-Fork',type:'Melee',ct:'8',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Fauchard-Fork}}{{subtitle=Polearm}}{{Speed=[[8]]}}{{Size=Large}}{{Weapon=2-handed melee polearm}}Specs=[Fauchard,Melee,2H,Polearm]{{To-hit=+0 + Str Bonus}}ToHitData=[w:Fauchard-Fork,sb:1,+:0,n:1,ch:20,cm:1,sz:L,ty:PS,r:6-8,sp:8,rc:uncharged]{{Attacks=1 per round + level \\amp specialisation, Piercing \\amp Slashing}}{{Damage=+0, vs. SM:1d8, L1d10, + Str bonus}}DmgData=[w:Fauchard-Fork,sb:1,+:0,SM:1d8,L:1d10]{{desc=This is a normal Fauchard-Fork, a type of Polearm. The blade is sharp and keen, but nothing special.\nThis is an attempted improvement on the fauchard, adding a long spike or fork to the back of the blade. Supposedly this improves the thrusting ability of the weapon. It is still an inefficient weapon.}}'},
						{name:'Felling-Axe',type:'Melee|Ranged',ct:'7',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Felling Axe}}{{subtitle=Magic Weapon}}{{Speed=[[7]]}}{{Size=M}}{{Weapon=2-handed melee axe or 1-handed ranged throwing axe}}Specs=[Felling-Axe,Melee,2H,Axe],[Throwing-Axe,Ranged,1H,Throwing-blade]{{To-hit=+1 + Str \\amp Dex bonuses}}ToHitData=[w:Felling Axe,sb:1,+:1,n:1,ch:20,cm:1,sz:M,ty:S,r:5,sp:7,rc:uncharged],[w:Felling Axe,sb:1,db:1,+:1,n:1,ch:20,cm:1,sz:M,ty:S,r:-/1/2/3,sp:7,rc:uncharged]{{Attacks=1 per round + level \\amp specialisation, Slashing}}{{Damage=As melee weapon +1, vs. SM:2d6, L:2d6 + Str bonus}}DmgData=[w:Felling Axe,sb:1,+:1,SM:2d6,L:2d6],[]{{Ammo=As ranged weapon +1, SM:1d6, L1d4 + Str Bonus}}AmmoData=[w:Felling Axe,t:Felling-Axe,st:Felling-Axe,sb:1,+:1,SM1d6,L:1d4]{{Range=S:10, M:20, L:30}}[t:Felling-Axe,+:1,r:-/1/2/3]{{desc=Axe of unsurpassed balance and sharpness. Used as a Weapon it is +1, 2D6+1, but if used as a felling axe any individual of 12 or greater strength can fell a 2\' diameter tree in one round (pro-rate to other trees on ratio of diameters). A character of 17 strength can use it as a throwing axe.}}'},
						{name:'Flail+1',type:'Melee',ct:'7',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Footman\'s Flail+1}}{{subtitle=Flail}}{{Speed=[[7]]}}{{Size=Medium}}{{Weapon=1-handed melee flail}}Specs=[Footmans Flail,Melee,1H,Flail]{{To-hit=+1 + Str Bonus}}ToHitData=[w:Footmans Flail+1,sb:1,+:1,n:1,ch:20,cm:1,sz:M,ty:B,r:5,sp:7,rc:uncharged]{{Attacks=1 per round + level \\amp specialisation, Bludgeoning}}{{Damage=+1 vs. SM:1d6+1, L:2d4 + Str bonus}}DmgData=[w:Footmans Flail+1,sb:1,+:1,SM:1+1d6,L:2d4]{{desc=A Footman\'s Flail of very good quality, which has shiny chain, very supple and strong leather, and has a slight silvery glow about it. At all times, it is a +[[1]] weapon}}'},
						{name:'Flaming-Scimitar',type:'Melee|Melee',ct:'5',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Flaming Scimitar}}{{subtitle=Magic Sword}}{{Speed=[[5]]}}{{Size=Medium}}{{Weapon=1-handed melee long-blade}}Specs=[Scimitar,Melee,1H,Long-blade],[Scimitar,Melee,1H,Long-blade]{{To-hit=+1 + Str bonus}}ToHitData=[w:Scimitar+1,sb:1,+:1,n:1,ch:20,cm:1,sz:M,ty:S,r:5,sp:5,rc:uncharged],[w:Scimitar+1 Flaming,sb:1,+:1,n:1,ch:20,cm:1,sz:M,ty:S,r:5,sp:5,rc:uncharged]{{Attacks=1 per round + level \\amp specialisation, Slashing}}{{Damage=+1, normally SM:1d8, L:1d8, + Str bonus, when flaming add 1d6}}DmgData=[w:Scimitar+1,sb:1,+:1,SM:1d8,L:1d8],[w:Scimitar+1 Flaming,sb:1,+:1,SM:1d8+1d6,L:1d8+1d6]{{desc=This sword flames upon the command of the wielder, causing flame to appear all along the blade as if fed from some invisible magical oil channels running from the hilt. The flame easily ignites oil, burns webs, or sets fire to paper, parchment, dry wood, etc. For creatures who take flame damage, does an additional 1d6 of flaming damage}}'},
						{name:'Footmans-flail',type:'Melee',ct:'7',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Footman\'s Flail}}{{subtitle=Flail}}{{Speed=[[7]]}}{{Size=Medium}}{{Weapon=1-handed melee flail}}Specs=[Footmans Flail,Melee,1H,Flail]{{To-hit=+0, + Str bonus}}ToHitData=[w:Footmans Flail,sb:1,+:0,n:1,ch:20,cm:1,sz:M,ty:B,r:5,sp:7]{{Attacks=1 per round, + level \\amp specialisation, Bludgeoning}}{{Damage=+0, vs SM:1d6+1, L:2d4, + Str bonus}}DmgData=[w:Footmans Flail,sb:1,+:0,SM:1+1d6,L:2d4]{{desc=A standard Footman\'s Flail of good quality, but nothing special}}'},
						{name:'Footmans-mace',type:'Melee',ct:'7',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Footman\'s Mace}}{{subtitle=Mace}}{{Speed=[[7]]}}{{Size=Medium}}{{Weapon=1-handed melee club}}Specs=[Footmans Mace,Melee,1H,Club]{{To-hit=+0, + Str bonus}}ToHitData=[w:Footmans Mace,sb:1,+:0,n:1,ch:20,cm:1,sz:M,ty:B,r:5,sp:7]{{Attacks=1 per round + level \\amp specialisation, Bludgeoning}}{{Damage=+0, vs SM:1d6+1, L:1d6, + Str bonus}}DmgData=[w:Footmans Mace,sb:1,+:0,SM:1+1d6,L:1d6]{{desc=This is a normal Footman\'s Mace. The business end is extra hard, but nothing special.}}'},
						{name:'Footmans-pick',type:'Melee',ct:'7',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Footman\'s Pick}}{{subtitle=Pick}}{{Speed=[[7]]}}{{Size=Medium}}{{Weapon=1-handed melee pick}}Specs=[Footmans Pick,Melee,1H,Pick]{{To-hit=+0, + Str bonus}}ToHitData=[w:Footmans Pick,sb:1,+:0,n:1,ch:20,cm:1,sz:M,ty:P,r:5,sp:7]{{Attacks=1 per round, + level \\amp specialisation, Piercing}}{{Damage=+0, vs. SM:1d6+1, L:2d4, + Str bonus}}DmgData=[w:Footmans Pick,sb:1,+:0,SM:1+1d6,L:2d4]}}{{desc=This is a normal Footman\'s Pick. The business end is wickedly pointed, but nothing special.}}'},
						{name:'Gaff',type:'Melee',ct:'2',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Gaff}}{{subtitle=Hook}}{{Speed=[[2]]}}{{Size=Small}}{{Weapon=1-handed melee hook}}Specs=[Gaff,Melee,1H,Hook]{{To-hit=+0 + Str bonus}}ToHitData=[w:Gaff,sb:1,+:0,n:1,ch:20,cm:1,sz:S,ty:P,r:4,sp:2]{{Attacks=1 per round + level \\amp specialisation}}{{Damage=+0, vs SM:1d4, L:1d3, + Str bonus}}DmgData=[w:Gaff,sb:1,+:0,SM:1d4,L:1d3]{{desc=The gaff or hook is actually a tool used to hook and land fish. It is commonly found where fishing boats are encountered, and the hooks are in plentiful supply, affording the disarmed adventurer a weapon of last resort.\nA successful hit with the Gaff or Hook will grapple the target as well as doing damage. A Dexterity check next round escapes without additional damage, a Strength check -3 escapes with damage.\nThe gaff consists of a metal hook with a wooden or metal crossbar at the base. A onehanded tool, the hook protrudes from between the middle and ring fingers. Some sailors who have lost a hand have a cup with a gaff hook attached to the stump, guaranteeing that they are never without a weapon.}}'},
						{name:'Glaive',type:'Melee',ct:'8',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Glaive}}{{subtitle=Polearm}}{{Speed=[[8]]}}{{Size=Large}}{{Weapon=2-handed melee polearm}}Specs=[Glaive,Melee,2H,Polearm]{{To-hit=+0, + Str bonus}}ToHitData=[w:Glaive,sb:1,+:0,n:1,ch:20,cm:1,sz:L,ty:S,r:8-10,sp:8]{{Attacks=1 per round, + level \\amp specialisation, Slashing}}{{Damage=+0, vs SM:1d6, L:1d10, + Str bonus}}DmgData=[w:Glaive,sb:1,+:0,SM:1d6,L:1d10]{{desc=This is a normal Glaive, a type of Polearm. The blade is sharp and keen, but nothing special. **Inflicts double damage against charging creatures of Large or greater size**.\nOne of the most basic polearms, the glaive is a single-edged blade mounted on an eight- to ten-foot-long shaft. While not the most efficient weapon, it is relatively easy to make and use. Normally the blade turns outward to increase the cutting area until it almost resembles a cleaver or axe.}}'},
						{name:'Glaive-guisarme',type:'Melee',ct:'9',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Glaive-guisarme}}{{subtitle=Polearm}}{{Speed=[[9]]}}{{Size=Large}}{{Weapon=2-handed melee polearm}}Specs=[Glaive,Melee,2H,Polearm]{{To-hit=+0 + Str bonus}}ToHitData=[w:Glaive-guisarme,sb:1,+:0,n:1,ch:20,cm:1,sz:L,ty:PS,r:8-10,sp:9]{{Attacks=1 per round, + level \\amp specialisation, Piercing \\amp Slashing}}{{Damage=+0, vs SM:2d4, L:2d6 + Str bonus}}DmgData=[w:Glaive-guisarme,sb:1,+:0,SM:2d4,L:2d6]{{desc=This is a normal Glaive-guisarme, a type of Polearm. The blade is sharp and keen, but nothing special. **Inflicts double damage against charging creatures of Large or greater size**.\nAnother combination weapon, this one takes the basic glaive and adds a spike or hook to the back of the blade. In theory, this increases the usefulness of the weapon although its actual application is somewhat questionable.}}'},
						{name:'Great-Axe',type:'Melee',ct:'9',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Great Axe}}{{subtitle=Axe}}{{Speed=[[9]]}}{{Size=Medium}}{{Weapon=2-handed melee axe}}Specs=[Great Axe,Melee,2H,Axe]{{To-hit=+0 + Str bonus}}ToHitData=[w:Great Axe,sb:1,+:0,n:1,ch:20,cm:1,sz:M,ty:S,r:5,sp:9]{{Attacks=1 per round + level \\amp specialisation, Slashing}}{{Damage=+0, vs. SM:1d10, L:2d8, + Str bonus}}DmgData=[w:Great Axe,sb:1,+:0,SM:1d10,L:2d8]{{desc=This is an impressive Great Axe. The blade is sharp and keen, but nothing special.}}'},
						{name:'Great-Axe+1',type:'Melee',ct:'9',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Great Axe+1}}{{subtitle=Axe}}{{Speed=[[9]]}}{{Size=Medium}}{{Weapon=2-handed melee axe}}Specs=[Great Axe,Melee,2H,Axe]{{To-hit=+1 + Str bonus}}ToHitData=[w:Great Axe+1,sb:1,+:1,n:1,ch:20,cm:1,sz:M,ty:S,r:5,sp:9]{{Attacks=1 per round + level \\amp specialisation, Slashing}}{{Damage=+1, vs SM:1d10, L:2d8, + Str bonus}}DmgData=[w:Great Axe+1,sb:1,+:1,SM:1d10,L:2d8]{{desc=This is an impressive Great Axe. The blade is sharp and keen, and gleams with an impossibly sharp edge.}}'},
						{name:'Greatsword',type:'Melee',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Greatsword}}{{subtitle=Sword}}{{Speed=[[9]]}}{{Size=Medium}}{{Weapon=2-handed melee great-blade}}Specs=[Greatsword, Melee, 2H, Great-blade]{{To-hit=+0 + Str bonus}}ToHitData=[w:Greatsword,Str Bonus sb:1,Attk +:0,No per round n:1,Crit hit ch:20,Crit Miss cm:1,Size sz:M,Type ty:S,Range r:6,Speed sp:9]{{Attacks=1 per round + level \\amp specialisation}}{{Damage=+0, vs SM:2d6, L:2d10, + Str bonus}}DmgData=[w:Greatsword,Str Bonus sb:1,Dmg +:0,Dmg SM:2d6,Dmg L:2d10]{{desc=This is a normal sword. The blade is sharp and keen, but nothing special.}}'},
						{name:'Guisarme',type:'Melee',ct:'8',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Guisarme}}{{subtitle=Polearm}}{{Speed=[[8]]}}{{Size=Large}}{{Weapon=2-handed melee polearm}}Specs=[Guisarme,Melee,2H,Polearm]{{To-hit=+0 + Str bonus}}ToHitData=[w:Guisarme,sb:1,+:0,n:1,ch:20,cm:1,sz:L,ty:S,r:8,sp:8]{{Attacks=1 per round + level \\amp specialisation, Slashing}}{{Damage=+0, vs SM:2d4, L:1d8, + Str bonus}}DmgData=[w:Guisarme,sb:1,+:0,SM:2d4,L:1d8]{{desc=This is a normal Guisarme, a type of Polearm. The blade is sharp and keen, but nothing special.\nThought to have derived from a pruning hook, this is an elaborately curved heavy blade. While convenient and handy, it is not very effective.}}'},
						{name:'Guisarme-voulge',type:'Melee',ct:'10',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Guisarme-voulge}}{{subtitle=Polearm}}{{Speed=[[10]]}}{{Size=Large}}{{Weapon=2-handed melee polearm}}Specs=[Guisarme,Melee,2H,Polearm]{{To-hit=+0 + Str bonus}}ToHitData=[w:Guisarme-voulge,sb:1,+:0,n:1,ch:20,cm:1,sz:L,ty:PS,r:8,sp:10]{{Attacks=1 per round + level \\amp specialisation, Piercing \\amp Slashing}}{{Damage=+0, vs SM:2d4, L:2d4, + Str bonus}}DmgData=[w:Guisarme-voulge,sb:1,+:0,SM:2d4,L:2d4]{{desc=This is a normal Guisarme-voulge a type of Polearm. The blade is sharp and keen, but nothing special.\nThis weapon has a modified axe blade mounted on an eight-foot long shaft. The end of the blade tapers to a point for thrusting and a back spike is fitted for punching through armor. Sometimes this spike is replaced by a sharpened hook for dismounting riders.}}'},
						{name:'Halberd',type:'Melee',ct:'9',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Halberd}}{{subtitle=Polearm}}{{Speed=[[9]]}}{{Size=Large}}{{Weapon=2-handed melee polearm}}Specs=[Halberd,Melee,2H,Polearm]}}{{To-hit=+0 + Str bonus}}ToHitData=[w:Halberd,sb:1,+:0,n:1,ch:20,cm:1,sz:L,ty:PS,r:5-8,sp:9]{{Attacks=1 per round + level \\amp specialisation, Piercing \\amp Slashing}}{{Damage=+0, vs SM:1d10, L:2d6, + Str bonus}}DmgData=[w:Halberd,sb:1,+:0,SM:1d10,L:2d6]{{desc=This is a normal Halberd, a type of Polearm. The blade is sharp and keen, but nothing special.\nAfter the awl pike and the bill, this was one of the most popular weapons of the Middle Ages. Fixed on a shaft five to eight feet long is a large axe blade, angled for maximum impact. The end of the blade tapers to a long spear point or awl pike. On the back is a hook for attacking armor or dismounting riders. Originally intended to defeat cavalry, it is not tremendously successful in that role since it lacks the reach of the pike and needs considerable room to swing. It found new life against blocks of pikemen. Should the advance of the main attack stall, halberdiers issue out of the formation and attack the flanks of the enemy. The pikemen with their overlong weapons are nearly defenseless in such close combat.}}'},
						{name:'Hand-Axe',type:'Melee|Ranged',ct:'4',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Hand Axe}}{{subtitle=Axe}}{{Speed=[[4]]}}{{Size=Medium}}{{Weapon=1-handed melee or thrown axe}}Specs=[Hand Axe,Melee,1H,Axe],[Hand Axe,Ranged,1H,Axe]{{To-hit=+0 + Str \\amp Dex bonuses}}ToHitData=[w:Hand Axe,sb:1,+:0,n:1,ch:20,cm:1,sz:M,ty:S,r:5,sp:4],[w:Hand Axe,sb:1,db:1,+:0,n:1,ch:20,cm:1,sz:M,ty:S,r:1/2/3,sp:4]{{Attacks=1 per round + level \\amp specialisation, Slashing}}{{Damage=+0, vs SM:1d6, L:1d4, + Str bonus}}DmgData=[w:Hand Axe,sb:1,+:0,SM:1d6,L:1d4],[]{{Ammo=+0, + Str bonus}}AmmoData=[w:Hand Axe,t:Hand Axe,st:Hand Axe,sb:1,+:0,SM:1d6,L:1d4]{{Range=S:10, M:20, L:30}}[t:Hand Axe,+:0,r:1/2/3]{{desc=This is a normal Hand- or Throwing-Axe. The blade is extra sharp and it is well balanced, but nothing special.}}'},
						{name:'Hand-Crossbow',type:'Ranged',ct:'5',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Hand Crossbow}}{{subtitle=Crossbow}}{{Speed=[[5]]}}{{Size=Small}}{{Weapon=1-handed ranged crossbow}}Specs=[Hand Crossbow,Ranged,1H,Crossbow]{{To-hit=+0 + Dex bonus}}ToHitData=[w:Hand Crossbow,sb:0,db:1,+:0,n:1,ch:20,cm:1,sz:S,ty:P,sp:5]{{Attacks=1 per round + level \\amp specialisation, Piercing}}{{desc=This is a hand crossbow, small enough to use in 1 hand, with a magazine of 10 quarrels requiring reloading. Made of good quality wood and various metals, it is portable and easy to hold, but it is nothing special}}'},
						{name:'Harpoon',type:'Melee|Ranged',ct:'7',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Harpoon}}{{subtitle=Spear}}{{Speed=[[7]]}}{{Size=Large}}{{Weapon=1-handed melee or thrown weapon}}Specs=[Harpoon,Melee,1H,Spear],[Harpoon,Ranged,1H,Spear]{{To-hit=+0, + Dex (if thrown) \\amp Str bonuses}}ToHitData=[w:Harpoon,sb:1,+:0,n:1,ch:20,cm:1,sz:L,ty:P,r:5,sp:7],[w:Harpoon,sb:1,db:1,+:0,n:1,ch:20,cm:1,sz:L,ty:P,sp:7]{{Attacks=1 per round, + level \\amp specialisation, Piercing}}{{Damage=+0, vs SM:2d4, L:2d6, + Str bonus}}DmgData=[w:Harpoon,sb:1,+:0,SM:2d4,L:2d6],[]{{Ammo=+0, vs SM:2d4, L:2d6 + Str bonus}}AmmoData=[w:Harpoon,t:Harpoon,st:Spear,sb:1,+:0,SM:2d4,L:2d6]{{Range=S:10, M:20, L:30}}RangeData=[t:Harpoon,+:0,r:1/2/3]{{desc=This is a normal Harpoon. The point is extra sharp and it is well balanced, but nothing special.}}'},
						{name:'Heavy-Crossbow',type:'Ranged',ct:'10',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Heavy Crossbow}}{{subtitle=Crossbow}}{{Speed=[[10]]}}{{Size=Medium}}{{Weapon=2-handed ranged crossbow}}Specs=[Heavy Crossbow,Ranged,2H,Crossbow]{{To-hit=+0 + Dex bonus}}ToHitData=[w:Heavy Crossbow,sb:0,db:1,+:0,n:1/2,ch:20,cm:1,sz:M,ty:P,sp:10]{{Attacks=1 per 2 rounds + level \\amp specialisation, Piercing}}{{desc=This is a heavy crossbow, large and somewhat cumbersome. Made of good quality wood and various metals, it is somewhat difficult to hold and reload, and is nothing special}}'},
						{name:'Heavy-Horse-Lance',type:'Melee',ct:'8',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Heavy Horse Lance}}{{subtitle=Lance}}{{Speed=[[8]]}}{{Size=Huge}}{{Weapon=1-handed mounted melee lance}}Specs=[Lance,Melee,1H,Lance]{{To-hit=+0, + Str bonus (Heavy War Horse only)}}ToHitData=[w:Heavy Horse Lance,sb:1,+:0,n:1,ch:20,cm:1,sz:L,ty:P,r:10,sp:8]{{Attacks=1 per round (unless jousting), Piercing}}{{Damage=+0, vs SM:1d8+1, L:3d6, + Str bonus (Heavy War Horse only)}}DmgData=[w:Heavy Horse Lance,sb:1,+:0,SM:1+1d8,L:3d6]{{desc=This is a normal lance for use with a heavy war horse. The point is well hardened and the shaft in good condition, but nothing special.}}'},
						{name:'Heavy-Xbow-Bolt+2',type:'Ammo',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Magic Crossbow Bolts}}{{subtitle=Magic Ammo}}{{Size=Tiny}}Specs=[Heavy-Quarrel,Ammo,1H,Quarrel]{{Ammo=+2, vs SM:1d4+1, L:1d6+1, no other bonuses}}AmmoData=[t:heavy-crossbow,st:heavy-crossbow,sb:0,+:2,SM:1+1d4,L:1+1d6]{{Range=PB:30 S:80 M:160 L:240}}RangeData=[t:heavy-crossbow,+:2,r:3/8/16/24]{{desc=Fine quality heavy crossbow bolts which are +2 on to-hit and damage. The tips are sharp and keen, and are very shiny.}}'},
						{name:'Hook',type:'Melee',ct:'2',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Hook}}{{subtitle=Hook}}{{Speed=[[2]]}}{{Size=Small}}{{Weapon=1-handed melee hook}}Specs=[Hook,Melee,1H,Hook]{{To-hit=+0, + Str bonus}}ToHitData=[w:Hook,sb:1,+:0,n:1,ch:20,cm:1,sz:S,ty:P,r:4,sp:2]{{Attacks=1 per round + level \\amp specialisation}}{{Damage=+0 vs SM:1d4, L:1d3, + Str bonus}}DmgData=[w:Hook,sb:1,+:0,SM:1d4,L:1d3]{{desc=The gaff or hook is actually a tool used to hook and land fish. It is commonly found where fishing boats are encountered, and the hooks are in plentiful supply, affording the disarmed adventurer a weapon of last resort.\nA successful hit with the Gaff or Hook will grapple the target as well as doing damage. A Dexterity check next round escapes without additional damage, a Strength check -3 escapes with damage.\nThe gaff consists of a metal hook with a wooden or metal crossbar at the base. A onehanded tool, the hook protrudes from between the middle and ring fingers. Some sailors who have lost a hand have a cup with a gaff hook attached to the stump, guaranteeing that they are never without a weapon.}}'},
						{name:'Hook-Fauchard',type:'Melee',ct:'9',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Hook Fauchard}}{{subtitle=Polearm}}{{Speed=[[9]]}}{{Size=Large}}{{Weapon=2-handed melee polearm}}Specs=[Fauchard,Melee,2H,Polearm]{{To-hit=+0 + Str bonus}}ToHitData=[w:Hook Fauchard,sb:1,+:0,n:1,ch:20,cm:1,sz:L,ty:PS,r:6-8,sp:9]{{Attacks=1 per round, + level \\amp specialisation, Piercing \\amp Slashing}}{{Damage=+0, vs SM:1d4, L:1d4, + Str bonus}}DmgData=[w:Hook Fauchard,sb:1,+:0,SM:1d4,L:1d4]{{desc=This is a normal Hook Fauchard, a type of Polearm. The blade is sharp and keen, but nothing special.\nThis combination weapon is another attempted improvement to the fauchard. A back hook is fitted to the back of the blade, supposedly to dismount horsemen. Like the fauchard, this is not a tremendously successful weapon.}}'},
						{name:'Horeshoes-of-Strength',type:'Melee',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Horseshoes of Strength}}{{subtitle=Magic Item}}{{Speed=No effect}}{{Size=Small}}{{Weapon=1-hooved melee horseshoe}}Specs=[Horseshoes,Melee,1H,Horseshoes]{{To-hit=+1}}ToHitData=[w:Horseshoes+1,+:1,n:1,ch:20,cm:1,sz:S,ty:SB,r:5,sp:0]{{Attacks=2 per round (front kicks or rear kicks, Bludgeoning)}}{{Damage=+1, vs SM:1d3, L:1d3, for War Horse}}DmgData=[w:Horseshoes+1,+:1,SM:1d3,L:1d3]{{Reference=House Rules / Prices / Horses}}{{desc=Enable a horse to carry loads as if one level of horse higher. If a Heavy War Horse already, add 50% extra load. Also act as +1 weapon when horse attacks with hooves.}}'},
						{name:'Horsemans-Flail',type:'Melee',ct:'6',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Horseman\'s Flail}}{{subtitle=Flail}}{{Speed=[[6]]}}{{Size=Medium}}{{Weapon=1-handed mounted melee flail}}Specs=[Horsemans Flail,Melee,1H,Flail]{{To-hit=+0, + Str bonus}}ToHitData=[w:Horsemans Flail,sb:1,+:0,n:1,ch:20,cm:1,sz:M,ty:B,r:5,sp:6]{{Attacks=1 per round + level \\amp specialisation, Bludgeoning}}{{Damage=+0, vs SM:1d4+1, L:1d4+1, + Str bonus}}DmgData=[w:Horsemans Flail,sb:1,+:0,SM:1+1d4,L:1+1d4]{{desc=This is a normal Horseman\'s Flail. The business end is made of vicious steel chain and thick leather, but is nothing special.}}'},
						{name:'Horsemans-Mace',type:'Melee',ct:'6',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Horseman\'s Mace}}{{subtitle=Club}}{{Speed=[[6]]}}{{Size=Medium}}{{Weapon=1-handed mounted melee club}}Specs=[Horsemans Mace,Melee,1H,Club]{{To-hit=+0 + Str bonus}}ToHitData=[w:Horsemans Mace, sb:1, +:0,n:1,ch:20,cm:1,sz:M, ty:B,r:5, sp:6]{{Attacks=1 per round + level + specialisation, Bludgeoning}}{{Damage=+0, vs SM:1d6, L:1d4, + Str bonus}}DmgData=[w:Horsemans Mace,sb:1,+:0,SM:1d6,L:1d4]}}{{desc=This is a normal Horseman\'s Mace. The business end is hardened wood and steel, but is nothing special.}}'},
						{name:'Horsemans-pick',type:'Melee',ct:'6',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Horseman\'s Pick}}{{subtitle=Pick}}{{Speed=[[5]]}}{{Size=Medium}}{{Weapon=1-handed mounted melee pick}}Specs=[Horsemans Pick,Melee,1H,Pick]{{To-hit=+0 + Str bonus}}ToHitData=[w:Horsemans Pick,sb:1,+:0,n:1,ch:20,cm:1,sz:M,ty:P,r:5, sp:6]{{Attacks=1 per round + level \\amp specialisation, Piercing}}{{Damage=+0, vs SM:1d4+1, L:1d4}}DmgData=[w:Horsemans Pick,sb:1,+:0,SM:1+1d4,L:1d4]{{desc=This is a normal Horseman\'s Pick. The business end is hard and sharp, but is nothing special.}}'},
						{name:'Huge-Flaming-Scimitar',type:'Melee|Melee',ct:'8',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Huge Flaming Scimitar}}{{subtitle=Magic Sword}}{{Speed=[[8]]}}{{Size=Large}}{{Weapon=2-handed melee long-blade}}Specs=[Huge Scimitar,Melee,2H,Great-blade],[Huge Scimitar,Melee,2H,Great-blade]{{To-hit=+1 + Str bonus}}ToHitData=[w:Huge Scimitar+1,sb:1,+:1,n:1,ch:20,cm:1,sz:L,ty:S,r:5,sp:8,rc:uncharged],[w:Huge Scimitar+1 Flaming,sb:1,+:1,n:1,ch:20,cm:1,sz:L,ty:S,r:5,sp:8,rc:uncharged]{{Attacks=1 per round + level \\amp specialisation, Slashing}}{{Damage=+1, normally SM:2d8, L:2d8, + Str bonus, when flaming add 1d8}}DmgData=[w:Huge Scimitar+1,sb:1,+:1,SM:2d8,L:2d8],[w:Huge Scimitar+1 Flaming,sb:1,+:1,SM:3d8,L:3d8]{{desc=This sword is a huge 2-handed version of a Flaming Scimitar+1, normally wielded by creatures from the elemental plane of fire, or other flame-oriented magical creatures. It requires at least *Hill Giant Strength* (Strength 19 or greater) in order to wield it. It flames upon the command of the wielder, causing flame to appear all along the blade as if fed from some invisible magical oil channels running from the hilt. The flame easily ignites oil, burns webs, or sets fire to paper, parchment, dry wood, etc. For creatures who take flame damage, does an additional 1d8 of flaming damage}}'},
						{name:'Ice-Knife',type:'Innate-Ranged',ct:'2',charge:'recharging',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Ice Knife (spell)}}{{subtitle=Thrown magical knife}}{{Speed=[[2]]}}{{Size=Small}}{{Weapon=1-handed ranged throwing-blade}}Specs=[Ice Knife,Innate-Ranged,1H,Innate]{{To-hit=+0, + Dex bonuses}}ToHitData=[w:Ice Knife,sb:0,db:1,+:0,n:1,ch:20,cm:1,sz:S,ty:P,sp:2,rc:recharging]{{Attacks=1 per round, + specialisation \\amp level, Piercing}}{{Ammo=+0, vs. SM:2d8, L:2d8 or shatters for grenade-like cold damage (see spell)}}AmmoData=[w:Ice Knife,t:Ice Knife,st:Throwing-Blade,sb:0,+:0,SM:2d8,L:2d8]{{Range=S:10, M:20, L:30}}RangeData=[t:Ice Knife,+:0,r:1/2/3]{{desc=The Ice Knife spell fires a dagger of ice at the target. If misses, check the spell details for the grnade-like effect.}}'},
						{name:'Javelin',type:'Melee|Ranged',ct:'4',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Javelin}}{{subtitle=Spear}}{{Speed=[[4]]}}{{Size=Medium}}{{Weapon=1-handed melee or thrown spear}}Specs=[Javelin,Melee,1H,Spear],[Javelin,Ranged,1H,Spear]{{To-hit=+0 + Str Bonus}}ToHitData=[w:Javelin,sb:1,+:0,n:1,ch:20,cm:1,sz:M,ty:P,r:5,sp:4],[w:Javelin,sb:1,db:1,+:0,n:1,ch:20,cm:1,sz:M,ty:P,sp:4]{{Attacks=1 per round + level \\amp specialisation, Piercing}}{{Damage=+0, vs SM:1d6, L:1d6 + Str bonus}}DmgData=[w:Javelin,sb:1,+:0,SM:1d6,L:1d6],[]{{Ammo=+0, vs SM:1d6, L:1d6 + Str bonus}}AmmoData=[w:Javelin,t:Javelin,st:Spear,sb:1,+:0,SM:1d6,L:1d6,]{{Range=PB:20 S:30 M:40 L:60}}RangeData=[t:Javelin,+:0,r:2/3/4/6]{{desc=This is a normal Javelin. It is light, the point is extra sharp and it is well balanced, but nothing special.}}'},
						{name:'Jim-the-Sun-Blade',type:'Melee|Melee|Melee|Melee',ct:'100',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Jim the Sun Blade\nIntelligent, Neutral}}{{subtitle=Magic Sword}}{{Speed=[[3]]}}WeapData=[w:Jim the Sun Blade,ns:5][cl:PW,w:Jims-Locate-Object,sp:100,lv:6,pd:1],[cl:PW,w:Jims-Find-Traps,sp:5,lv:6,pd:2],[cl:PW,w:Jims-Levitation,sp:2,lv:1,pd:3],[cl:PW,w:Jims-Sunlight,sp:3,lv:6,pd:1],[cl:PW,w:Jims-Fear,sp:4,lv:6,pd:2]{{Size=Special (feels like a Shortsword)}}{{Weapon=1 or 2 handed melee Long or Short blade}}Specs=[Bastard-sword|Short-sword,Melee,1H,Long-blade|Short-blade],[Bastard-sword|Short-sword,Melee,1H,Long-blade|Short-blade],[Bastard-sword,Melee,2H,Long-blade],[Bastard-sword,Melee,2H,Long-blade]{{To-hit=+2, +4 vs Evil + Str Bonus}}ToHitData=[w:Jim +2,sb:1,+:2,n:1,ch:20,cm:1,sz:M,ty:S,r:5,sp:3],[w:Jim vs Evil+4,sb:1,+:4,n:1,ch:20,cm:1,sz:M,ty:S,r:5,sp:3],[w:Jim 2H +2,sb:1,+:2,n:1,ch:20,cm:1,sz:M,ty:S,r:5,sp:3],[w:Jim 2H vs Evil+4,sb:1,+:4,n:1,ch:20,cm:1,sz:M,ty:S,r:5,sp:3]{{Attacks=1 per round}}{{Damage=+2, +4 vs Evil, + 1-handed SM:1d8 L:1d12, 2-handed SM:2d4 L:2d8}}DmgData=[w:Jim+2,sb:1,+:2,SM:1d8,L:1d12],[w:Jim vs Evil+4,sb:1,+:4,SM:2d4,L:2d8],[w:Jim 2H +2,sb:1,+:2,SM:1d8,L:1d12],[w:Jim 2H vs Evil+4,sb:1,+:4,SM:2d4,L:2d8]{{desc=An intelligent weapon: A Sun Blade called Jim (DMs Guide Page 185). It is Neutral. It needs its owner to be proficient with either a Short or Bastard Sword or promise to get such proficiency as soon as possible. It cannot be used by someone who is not proficient. It requires its owner to be Neutral on at least one of its axis, and may not be Evil. NG LN CN and of cause true N are all ok. Abilities:\n**1:** It is +2 normally, or +4 against evil creatures, and does Bastard sword damage.\n**2:** It feels and react as if it is a short sword and uses short sword striking time.\n**3:** [Locate Object](!magic --mi-power @{selected|token_id}|Jims-Locate-Object|Jim-the-Sun-Blade|6) at [[6]]th Level in 120\' radius (1x day). \n**4:** [Detect traps](!magic --mi-power @{selected|token_id}|Jims-Find-Traps|Jim-the-Sun-Blade|6) of large size in 10\' radius (2xday). \n**5:** [Levitation](!magic --mi-power @{selected|token_id}|Jims-Levitation|Jim-the-Sun-Blade|1) 3x a day for 1 turn (cast at 1st Level).\n**6:** [Sunlight](!magic --mi-power @{selected|token_id}|Jims-Sunlight|Jim-the-Sun-Blade|6)Once a day, upon command, the blade can be swung vigorously above the head, and it will shed a bright yellow radiance that is like full daylight. The radiance begins shining in a 10-foot radius around the sword-wielder, spreading outward at 5 feet per round for 10 rounds thereafter, creating a globe of light with a 60-foot radius. When the swinging stops, the radiance fades to a dim glow that persists for another turn before disappearing entirely.\n**7:** It has a special purpose namely Defeat Evil. \n**8:** On hitting an Evil being it causes [Fear](!magic --mi-power @{selected|token_id}|Jims-Fear|Jim-the-Sun-Blade|6) for 1d4 rounds (unless saving throw is made). It can do this **twice a day** when the wielder desires.\n**9:** It speaks Common and its name is Jim. It will talk to the party.\n**10:** It has an ego of 16 and is from Yorkshire. \n**11:** It will insist on having a Neutral wielder. (See Intelligent weapons on page 187 in DMG). \n**12:** If picked by a player, it will be keen to become the players main weapon.\n**13:** If picked up by a player who is not Neutral it will do them 16 points of damage}}'},
						{name:'Jousting-Lance',type:'Melee',ct:'8',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Jousting Lance}}{{subtitle=Lance}}{{Speed=[[8]]}}{{Size=Large}}{{Weapon=1-handed mounted melee lance}}Specs=[Jousting Lance,Melee,1H,Lance]{{To-hit=+0 + Str bonus (when mounted only)}}ToHitData=[w:Jousting Lance,sb:1,+:0,n:1,ch:20,cm:1,sz:L,ty:P,r:10,sp:8]{{Attacks=1 per round + level \\amp specialisation (while mounted \\amp except when Jousting), Piercing}}{{Damage=+0, vs SM:1d3-1, L:1, + Str bonus}}DmgData=[w:Jousting Lance,sb:1,+:0,SM:0-1+1d3,L:0-1+1d2]{{desc=This is a normal lance for use with a heavy war horse or charger trained in the competition of jousting. The point is well hardened but blunted to reduce damage in the competition, and the shaft in good condition, but nothing special.}}'},
						{name:'Khopesh',type:'Melee',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Khopesh}}{{subtitle=Sword}}{{Speed=[[9]]}}{{Size=Medium}}{{Weapon=1-handed melee medium-length blade}}Specs=[Khopesh,Melee,1H,Medium-blade]{{To-hit=+0 + Str bonus}}ToHitData=[name w:Khopesh,strength bonus sb:1,magic+:0,attks per round n:1,crit hit ch:20,crit miss cm:1,size sz:M, type ty:S, range r:5,speed sp:9]{{Attacks=1 per round + level \\amp specialisation, Slashing}}{{Damage=+0, vs SM:2d4, L:1d6, + Str bonus}}DmgData=[name w:Khopesh,strength bonus sb:1,magic+:0,vs SM:2d4,vs L:1d6]{{desc=This is a normal sword. The blade is sharp and keen, but nothing special.\nThis is an Egyptian weapon. A khopesh has about six inches of handle and quillons. Its blade is then straight from the quillons for about two feet. The blade becomes sickle-shaped at this point, being about two additional feet long but effectively extending the overall length of the sword by only 1.5 feet. This makes the khopesh both heavy and unwieldy, difficult to employ properly, and slow to recover, particularly after a badly missed blow. Its sickle-like portion can snag an opponent or an opposing weapon.}}'},
						{name:'Knife',type:'Melee|Ranged',ct:'2',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Knife}}{{subtitle=Blade}}{{Speed=[[2]]}}{{Size=Small}}{{Weapon=1-handed melee fencing-blade or short-blade, or ranged throwing-blade}}Specs=[Knife,Melee,1H,Fencing-blade|Short-blade],[Knife,Ranged,1H,Throwing-blade]{{To-hit=+0 + Str \\amp Dex bonuses}}ToHitData=[w:Knife,sb:1,+:0,n:2,ch:20,cm:1,sz:S,ty:SP,r:5,sp:2],[w:Knife,sb:1,db:1,+:0,n:2,ch:20,cm:1,sz:S,ty:P,sp:2]{{Attacks=2 per round + level \\amp specialisation, Slashing \\amp Piercing}}{{Damage=+0, vs SM: 1d3, L:1d2, + Str bonus}}DmgData=[w:Knife,sb:1,+:0,SM:1d3,L:1d2],[ ]{{Ammo=+0, vs SM:1d3, L:1d2 + Str bonus}}AmmoData=[w:Knife,t:Knife,st:Knife,sb:1,+:0,SM:1d3,L:1d2]{{Range=S:10, M:20, L:30}}[t:Knife,+:0,r:1/2/3]{{desc=A standard Knife of good quality, versatile in combat, but otherwise ordinary}}'},
						{name:'Light-Crossbow',type:'Ranged',ct:'7',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Light Crossbow}}{{subtitle=Crossbow}}{{Speed=[[7]]}}{{Size=Medium}}{{Weapon=2-handed ranged crossbow}}Specs=[Light Crossbow,Ranged,2H,Crossbow]{{To-hit=+0 + Dex bonus only}}ToHitData=[w:Light Crossbow,sb:0,db:1,+:0,n:1,ch:20,cm:1,sz:M,ty:P,sp:7]{{Attacks=1 per round + level \\amp specialisation, Piercing}}{{desc=This is a heavy crossbow, large and somewhat cumbersome. Made of good quality wood and various metals, it is somewhat difficult to hold and reload, and is nothing special}}'},
						{name:'Light-Horse-Lance',type:'Melee',ct:'6',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Light Horse Lance}}{{subtitle=Lance}}{{Speed=[[6]]}}{{Size=Large}}{{Weapon=1-handed mounted melee lance}}Specs=[Lance,Melee,1H,Lance]{{To-hit=+0 + Str bonus}}ToHitData=[w:Light Horse Lance,sb:1,+:0,n:1,ch:20,cm:1,sz:L,ty:P,r:10,sp:6]{{Attacks=1 per round when mounted (except if jousting)}}{{Damage=+0, vs SM:1d6, L:1d8, + Str bonus (when mounted)}}DmgData=[w:Light Horse Lance,sb:1,+:0,SM:1d6,L:1d8]{{desc=This is a normal lance for use with a light war horse. The point is well hardened and the shaft in good condition, but nothing special.}}'},
						{name:'LightBringer-Mace',type:'Melee|Melee',ct:'7',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=LightBringer Mace+1}}{{subtitle=Magical Weapon}}{{Speed=7}}{{Size=Medium}}{{Weapon=1-handed melee club}}Specs=[Footmans-Mace,Melee,1H,Club],[Footmans-Mace,Melee,1H,Club]{{To-hit=+1 + Str bonus}}ToHitData=[w:Lightbringer Mace+1,sb:1,+:1,n:1,ch:20,cm:1,sz:M,ty:B,r:5,sp:7],[w:Lightbringer vs Undead,sb:1,+:1,n:1,ch:20,cm:1,sz:M,ty:B,r:5,sp:7]{{Attacks=1 per round + level \\amp specialisation, Bludgeoning}}{{Damage=+1\n**vs Undead** SM:2d6+1, L:2d6,\n**vs other** SM:1d6+1, L:1d6}}DmgData=[w:Lightbringer Mace+1,sb:1,+:1,SM:1+1d6,L:1d6],[w:Lightbringer vs Undead,sb:1,+:1,SM:1+2d6,L:2d6]{{Other Powers=Torch [On](!rounds --target caster|@{selected|token_id}|Lightbringer-mace|99|0|Lightbringer is lit|aura) or [Off](!tj --removestatus lightbringer-mace) \\amp [Light burst](!\\amp#13;\\amp#47;r 1d6 radient damage vs undead) vs undead}}{{desc= This +1 mace was made for a cleric of Lathander, the god of dawn. The head of the mace is shaped like a sunburst and made of solid brass. Named Lightbringer, this weapon glows as bright as a torch when its wielder commands. While glowing, the mace deals an extra 1d6 radiant damage to undead creatures.\nIt can be used by anyone.\nIt glows on command without limitation as brightly as a torch}}'},
						{name:'Longbow',type:'Ranged',ct:'8',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Longbow}}{{subtitle=Bow}}{{Speed=[[8]]}}{{Size=Medium}}{{Weapon=Ranged 2-handed Bow}}Specs=[Longbow,Ranged,2H,Bow]{{To-hit=+0 + Dex Bonus}}ToHitData=[w:Longbow,sb:0,db:1,+:0,n:2,ch:20,cm:1,sz:L,ty:P,sp:8]{{Attacks=Piercing, 2 per round}}{{desc=This is a normal longbow. The wood is polished, the string taut, but nothing special.}}'},
						{name:'Longsword',type:'Melee',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Longsword}}{{subtitle=Sword}}{{Speed=[[5]]}}{{Size=Medium}}{{Weapon=1-handed melee long-blade}}Specs=[Longsword,Melee,1H,Long-blade]{{To-hit=+0 + Str bonus}}ToHitData=[name w:Longsword,strength bonus sb:1,magic+:0,attks per round n:1,crit hit ch:20,crit miss cm:1,size sz:M, type ty:S, range r:5,speed sp:5]{{Attacks=1 per round + level \\amp specialisation, Slashing}}{{Damage=+0, vs SM:1d8, L:1d12, + Str bonus}}DmgData=[name w:Longsword,strength bonus sb:1,magic+:0,vs SM:1d8,vs L:1d12]}}{{desc=This is a normal sword. The blade is sharp and keen, but nothing special.}}'},
						{name:'Longsword+1',type:'Melee',ct:'5',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Longsword+1}}{{subtitle=Magic Sword}}{{Speed=[[5]]}}{{Size=Medium}}{{Weapon=1-handed melee long-blade}}Specs=[Longsword,Melee,1H,Long-blade]{{To-hit=+1 + Str bonus}}ToHitData=[w:Longsword+1,sb:1,+:1,n:1,ch:20,cm:1,sz:M,ty:S,r:5,sp:5]{{Attacks=1 per round + level \\amp specialisation}}{{Damage=+1, vs SM:1d8, L:1d12, + Str bonus}}DmgData=[w:Longsword+1,sb:1,+:1,SM:1d8,L:1d12]{{desc=This is a magical sword. The blade is sharp and keen, and is a +[[1]] magical weapon at all times.}}'},
						{name:'Longsword+1+2-vs-Orcs',type:'Melee|Melee',ct:'5',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Longsword Orc-slayer}}{{subtitle=Magic Sword}}{{Speed=[[5]]}}{{Size=Medium}}{{Weapon=1-handed melee long-blade}}Specs=[Longsword,Melee,1H,Long-blade],[Longsword,Melee,1H,Long-blade]{{To-Hit=+1, +2 vs Orcs, + Str bonus}}ToHitData=[w:Longsword+1,sb:1,+:1,n:1,ch:20,cm:1,sz:M,ty:S,r:5,sp:5],[w:Longsword vs Orcs+2,sb:1,+:2,n:1,ch:20,cm:1,sz:M,ty:S,r:5,sp:5]{{Attacks=1 per round + level \\amp specialisation, Slashing}}{{Damage=+1, +2 vs Orcs, vs SM:1d8, L:1d12, + Str bonus}}DmgData=[w:Longsword+1,sb:1,+:1,SM:1d8,L:1d12],[w:Longsword vs Orcs+2,sb:1,+:2,SM:1d8,L:1d12]{{desc=This sword has a hilt guard with a centre boss of a sculpted Orc\'s face, scowling. The blade is sharp and keen, and is a +[[1]] magical weapon at all times. When facing Orcs, its blade seems to glisten, and the increasing sharpness can almost be seen by the wielder. \n It is +[[2]] on attack and damage vs. Orcs}}'},
						{name:'Longsword+1+3-vs-Regenerating',type:'Melee|Melee',ct:'5',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Longsword +1,+3 vs Regenerating (charged)}}{{subtitle=Magic Sword}}{{Speed=[[5]]}}{{Size=Medium}}{{Weapon=1-handed melee long-blade}}Specs=[Longsword,Melee,1H,Long-blade],[Longsword,Melee,1H,Long-blade]{{To-Hit=+1, +3 vs Regenerating (uses 1 charge), + Str bonus}}ToHitData=[w:Longsword+1,sb:1,+:1,n:1,ch:20,cm:1,sz:M,ty:S,r:5,sp:5],[w:Longsword vs Regen+3,sb:1,+:3,n:1,ch:20,cm:1,sz:M,ty:S,r:5,sp:5]{{Attacks=1 per round + level \\amp specialisation, Slashing}}{{Damage=+1, +3 vs Regenerating (uses 1 charge), vs SM:1d8, L:1d12, + Str bonus}}DmgData=[w:Longsword+1,sb:1,+:1,SM:1d8,L:1d12],[w:Longsword vs Regen+3,sb:1,+:3,SM:1d8,L:1d12]{{desc=This sword has a hilt guard with a centre boss of a sculpted Troll. The blade is sharp and keen, and is a +[[1]] magical weapon at all times. When facing Regenerating creatures, its blade seems to turn blood red, and the increasing sharpness can almost be seen by the wielder. \n It is +[[3]] on attack and damage vs. Regenerating creatures, but each hit will use a charge if the sword has charges}}'},
						{name:'Longsword+1+3-vs-undead',type:'Melee|Melee',ct:'5',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Longsword +1,+3 vs Undead}}{{subtitle=Magic Sword}}{{Speed=[[5]]}}{{Size=Medium}}{{Weapon=1-handed melee long-blade}}Specs=[Longsword,Melee,1H,Long-blade],[Longsword,Melee,1H,Long-blade]{{To-Hit=+1, +3 vs Undead, + Str bonus}}ToHitData=[w:Longsword+1,sb:1,+:1,n:1,ch:20,cm:1,sz:M,ty:S,r:5,sp:5],[w:Longsword vs Undead+3,sb:1,+:3,n:1,ch:20,cm:1,sz:M,ty:S,r:5,sp:5]{{Attacks=1 per round +level \\amp specialisation, Slashing}}{{Damage=+1, +3 vs Undead, vs SM:1d8, L:1d12, + Str bonus}}DmgData=[w:Longsword+1,sb:1,+:1,SM:1d8,L:1d12],[w:Longsword vs Undead+3,sb:1,+:3,SM:1d8,L:1d12]{{desc=This sword has a hilt guard with a centre boss of a sculpted Skull. The blade is sharp and keen, and is a +[[1]] magical weapon at all times. When facing Undead, its blade seems to darken, and the increasing sharpness can almost be seen by the wielder. \n It is +[[3]] on attack and damage vs. Undead}}'},
						{name:'Longsword+2',type:'Melee',ct:'5',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Longsword+2}}{{subtitle=Magic Sword}}{{Speed=[[5]]}}{{Size=Medium}}{{Weapon=1-handed melee long-blade}}Specs=[Longsword,Melee,1H,Long-blade]{{To-hit=+2 + Str bonus}}ToHitData=[w:Longsword+2,sb:1,+:2,n:1,ch:20,cm:1,sz:M,ty:S,r:5,sp:5]{{Attacks=1 per round + level \\amp specialisation}}{{Damage=+2 + Str bonus}}DmgData=[w:Longsword+2,sb:1,+:2,SM:1d8,L:1d12]{{desc=This is a fine magical sword. The blade is very sharp and keen, and is a +[[2]] magical weapon at all times.}}'},
						{name:'Longsword+2-Planteater',type:'Melee|Melee',ct:'5',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Longsword+2, Planteater}}{{subtitle=Magic Sword}}{{Speed=[[5]]}}{{Size=Medium}}{{Weapon=1-handed melee long-blade}}Specs=[Longsword,Melee,1H,Long-blade],[Longsword,Melee,1H,Long-blade]{{To-hit=+2 + Str bonus}}ToHitData=[w:Longsword+2,sb:1,+:2,n:1,ch:20,cm:1,sz:M,ty:S,r:5,sp:5],[w:Longsword vs Plant+2,sb:1,+:2,n:1,ch:20,cm:1,sz:M,ty:S,r:5,sp:5]{{Attacks=1 per round + level \\amp specialisation, Slashing}}{{Damage=+2, vs SM:1d8, L:1d12, + Str bonus. Always max damage vs plants}}DmgData=[w:Longsword+2,sb:1,+:2,SM:1d8,L:1d12],[w:Longsword vs Plant+2,sb:1,+:2,SM:8,L:12]{{desc=This is an extra fine magical sword. The blade is very sharp and keen with a greenish hue and engraved with pictures of vines, leaves, branches, plants and plant-based monsters. It is a +[[2]] magical weapon at all times, and does automatic ***maximum*** damage if it hits plant-based material.}}'},
						{name:'Longsword-of-Adaptation+1',type:'Melee',ct:'5',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Longsword of Adaptation+1}}{{subtitle=Magic Sword}}{{Speed=[[5]]}}{{Size=Medium}}{{Weapon=1-handed melee long-blade}}Specs=[Longsword,Melee,1H,Long-blade]{{To-hit=+1 + Str bonus}}ToHitData=[w:Longsword of Adapt+1,sb:1,+:1,n:1,ch:20,cm:1,sz:M,ty:S,r:5,sp:5]{{Attacks=1 per round + level \\amp specialisation, Slashing}}{{Damage=+1, vs SM:1d8, L:1d12, + Str bonus}}DmgData=[w:Longsword of Adapt+1,sb:1,+:1,SM:1d8,L:1d12]{{desc=This is an exceptional magical sword. The blade is sharp and keen, and is a +[[1]] magical weapon at all times. However, it can adapt to be a sword of any type the wielder desires (and is proficient with). It will take [[1]] round to change shape to a different type of sword.}}'},
						{name:'Lucern-Hammer',type:'Melee|Melee',ct:'9',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Lucern Hammer}}{{subtitle=Polearm}}{{Speed=[[9]]}}{{Size=Large}}{{Weapon=2-handed melee polearm}}Specs=[Lucern Hammer|Bec de Corbin,Melee,2H,Polearm],[Lucern Hammer|Bec de Corbin,Melee,2H,Polearm]}}{{To-hit=+0 + Str bonus}}ToHitData=[w:Lucern Hammer,sb:1,+:0,n:1,ch:20,cm:1,sz:L,ty:PB,r:8-10,sp:9],[w:Lucern Hammer set vs charge,sb:1,+:0,n:1,ch:20,cm:1,sz:L,ty:PB,r:8-10,sp:9]{{Attacks=1 per round + level \\amp specialisation, Piercing \\amp Bludgeoning}}{{Damage=+0, vs SM:2d4, L:1d6 (if set vs charge SM:4d4, L:2d6) + Str bonus}}DmgData=[w:Lucern Hammer,sb:1,+:0,SM:2d4,L:1d6],[w:Lucern Hammer vs charge,sb:1,+:0,SM:4d4,L:2d6]{{desc=This is a normal Lucern Hammer, a type of Polearm. The blade is sharp and keen, but nothing special. **Inflicts double damage when set firmly vs. charge.**\nThis weapon is similar to the bec de corbin. Fitted with a shaft up to ten feet long, it is usually found in the hands of the common soldier. Like the bec de corbin, its main purpose is to punch through armor. The end is fitted with the long point of an awl pike to hold off enemy cavalry.}}'},
						{name:'Magic-Quarterstaff',type:'Melee',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Magic Quarterstaff}}{{subtitle=Magic Weapon}}{{Speed=[[4]]}}{{Size=Large}}{{Weapon=Quarterstaff,Melee,2H,Staff}}Specs=[Quarterstaff,Melee,1H,Staff]{{To-hit=+ as per weapon}}{{damage=+ as per weapon}}{{desc=A standard Quarterstaff of fine quality, good enough to be enchanted}}'},
						{name:'Magical-1H-Sword',type:'Melee',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Unknown Magical Sword}}{{subtitle=Magic Sword}}{{Speed=By type}}{{Size=Medium}}{{Weapon=[Sword,Melee,1H,Sword]}}{{To-hit=+?}}Specs=[Magic-Sword,Melee,1H,Long-blade|Short-blade]{{damage=+?}}{{Other Powers=Unknown}}{{desc=This definitely appears to be a magical sword, and the DM will tell you what basic type of sword it is.}}'},
						{name:'Magical-Stone',type:'Innate-Ranged',ct:'1',charge:'recharging',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Magical Stone (spell)}}{{subtitle=Thrown or slung ammo}}{{Speed=[[1]] if thrown\nor as per sling}}{{Size=Tiny}}{{Weapon=1-handed ranged stone, usable as sling ammo}}Specs=[Magical Stone,Innate-Ranged,1H,Magical Stone]{{To-hit=+0, + Dex bonuses}}ToHitData=[w:Magical Stone,sb:0,db:1,+:0,n:3,ch:20,cm:1,sz:T,ty:B,sp:1,rc:recharging]{{Ammo=+0, no bonuses, but acts as if +1 ammo}}AmmoData=[w:Magical Stone,st:Magical Stone,+:0,SM:1d4,L:1d4],[w:Magical Stone vs Undead,st:Magical Stone,+:0,SM:2d4,L:2d4],[w:Magical Sling Stone,st:Sling,+:0,SM:1d4,L:1d4],[w:Magical Sling Stone vs Undead,st:Sling,+:0,SM:2d4,L:2d4]{{Range=30yds or as sling stone}}RangeData=[t:Magical Stone,+:0,r:3],[t:Magical Stone vs Undead,+:0,r:30],[t:sling,+:0,r:2/3/6/12]}}{{desc=A magically endowed stone made magical by the *Magical Stone* spell, which is +0, but hits creatures that need at least a +1 weapon. Can be thrown with range 30yds, or used as ammo for a sling.}}'},
						{name:'Magical-Weapon',type:'Melee',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Unknown Magical Weapon}}{{subtitle=Magic Weapon}}{{Speed=By type}}{{Size=Medium}}{{Weapon=A magical weapon on some type that is unclear for some reason. Magical obscurement?}}Specs=[Magic-Weapon,Melee,1H,Any]{{To-hit=+?}}{{damage=+?}}{{Other Powers=Unknown}}{{desc=This definitely appears to be a magical weapon, and the DM will tell you what basic type of weapon it is.}}'},
						{name:'Mancatcher',type:'Melee',ct:'7',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Mancatcher}}{{subtitle=Polearm}}{{Speed=[[7]]}}{{Size=Large}}{{Weapon=1-handed melee polearm}}Specs=[Mancatcher,Melee,1H,Polearm]{{To-hit=+0 + *Dex* bonus}}ToHitData=[w:Mancatcher,db:1,+:0,n:1,ch:20,cm:1,sz:L,ty:N,r:10,sp:7]{{Attacks=1 per round, automatic once caught}}{{Damage=+0, vs SM:1d2, L:1d2, automatic each round, no other bonuses}}DmgData=[w:Mancatcher,sb:1,+:0,SM:1d2,L:1d2]{{desc=This item is a highly specialized type of polearm designed to capture without killing a victim. It consists of a long pole with a spring-loaded set of sharpened jaws at the end. The victim is caught between the arms, which then snap shut. The mancatcher is effective only on man-sized creatures. The target is always treated as AC 10, modified for Dexterity. If a hit is scored, the character is caught. The caught victim loses all shield and Dexterity bonuses and can be pushed and pulled about. This causes an automatic 1d2 points of damage per round and gives a 25% chance of pulling the victim to the ground. The victim can escape on a successful bend bars/lift gates roll, although this results in 1d2 points more damage. A common tactic is to use the weapon to pull horsemen off their mounts, then pin them to the ground.}}'},
						{name:'Manticore-tail',type:'Ranged',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Manticore Tail}}{{subtitle=Ranged Weapon}}{{Speed=[[0]] Innate Weapon}}{{Size=Large}}{{Weapon=Body part with projectile spikes}}Specs=[Manticore Tail,Ranged,1H,Innate]{{To-hit=+0 + Dex bonus}}ToHitData=[w:Manticore-tail,sb:1,db:0,+:0,n:1d6,ch:20,cm:1,sz:L,ty:P,sp:0,r:6/12/18]{{Attacks=1d6/round, Piercing}}{{desc=The tail of a Manticore is covered in spikes. In total, the typical Manticore tail has a total of 4d6 tail spikes which can be fired in upto 4 volleys. Each spike does 1d6 damage if it hits.}}'},
						{name:'Medium-Horse-Lance',type:'Melee',ct:'7',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Medium Horse Lance}}{{subtitle=Lance}}{{Speed=[[7]]}}{{Size=Large}}{{Weapon=1-handed mounted melee lance}}Specs=[Lance,Melee,1H,Lance]{{To-hit=+0 + Str bonus when mounted}}ToHitData=[w:Medium Horse Lance,sb:1,+:0,n:1,ch:20,cm:1,sz:L,ty:P,r:10,sp:7]{{Attacks=1 per round + level \\amp specialisation (when mounted), Piercing}}{{Damage=+0, vs SM:1d6+1, L:2d6, + Str bonus when mounted}}DmgData=[w:Medium Horse Lance,sb:1,+:0,SM:1+1d6,L:2d6]{{desc=This is a normal lance for use with a medium war horse. The point is well hardened and the shaft in good condition, but nothing special.}}'},
						{name:'Military-Fork',type:'Melee',ct:'7',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Military Fork}}{{subtitle=Polearm}}{{Speed=[[7]]}}{{Size=Large}}{{Weapon=2-handed melee polearm}}Specs=[Military Fork,Melee,2H,Polearm]{{To-hit=+0 + Str bonus}}ToHitData=[w:Military Fork,sb:1,+:0,n:1,ch:20,cm:1,sz:L,ty:P,r:8-10,sp:7]{{Attacks=1 per round + level \\amp specialisation, Piercing}}{{Damage=+0, vs SM:1d8, L:2d4, + Str bonus}}DmgData=[w:Military Fork,sb:1,+:0,SM:1d8,L:2d4]{{desc=This is a normal Military Fork, a type of Polearm. The points are sharp and keen, but nothing special. **Inflicts double damage against charging creatures of Large or greater size.**\nThis is one of the simplest modifications of a peasant\'s tool since it is little more than a pitchfork fixed to a longer shaft. With tines strengthened and straightened, the military fork serves well. The need for cutting and cleaving eventually often results in combining the fork with other weapons.}}'},
						{name:'Mongol-Horse-Bow',type:'Ranged',ct:'7',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Mongol Horse Bow}}{{subtitle=Bow}}{{Speed=[[7]]}}{{Size=Medium}}{{Weapon=2-handed ranged bow}}Specs=[Shortbow,Ranged,2H,Bow]{{To-hit=+0 + Dex bonus}}ToHitData=[w:Mongol Horse Bow,sb:1,db:1,+:0,n:2,ch:20,cm:1,sz:M,ty:P,sp:7]{{Attacks=2 per round, no increases, Piercing}}{{desc=Very similar to a shortbow, the Mongol Horse Bow is designed to work really well from the back of a horse, but works identically to a shortbow at all times.}}'},
						{name:'Mordenkainens-Sword',type:'Innate-Melee',ct:'7',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Mordenkainen\'s Sword (spell)}}{{subtitle=Summoned Sword}}{{Speed=[[7]]}}{{Size=Medium}}{{Weapon=1-handed melee long-blade}}Specs=[Mordenkainens-Sword,Innate-Melee,1H,Long-blade]{{To-hit=+0 no Str bonus}}ToHitData=[w:Mordenkainens Sword,sb:0,+:0,n:1,ch:19,cm:1,sz:M,ty:S,r:5,sp:7]{{Attacks=1 per round + level as Fighter of [[ceil(@{selected|casting-level}/2)]], Slashing}}{{Damage=+0, vs SM:5d4, vs L:5d6, no Str bonus}}DmgData=[w:Mordenkainens Sword,sb:0,+:0,SM:5d4,L:5d6]}}{{desc=This sword is called into being by a *Mordenkainen\'s Sword* spell. The sword has no magical attack bonuses, but it can hit nearly any sort of opponent, even those normally struck only by +3 weapons or those who are astral, ethereal, or out of phase. It hits any Armor Class on a roll of 19 or 20. It inflicts 5d4 points of damage to opponents of man size or smaller, and 5d6 points of damage to opponents larger than man size}}'},
						{name:'Morningstar',type:'Melee',ct:'7',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Morning Star +2}}{{subtitle=Mace/Club}}{{Speed=[[7]]}}{{Size=Medium}}{{Weapon=1-handed melee club}}Specs=[Morningstar,Melee,1H,Club]{{To-hit=+0 + Str bonus}}ToHitData=[w:Morning Star,sb:1,+:0,n:1,ch:20,cm:1,sz:M,ty:B,r:5,sp:7]{{Attacks=1 per round + level \\amp specialisation, Bludgeoning}}{{Damage=+0, vs SM:2d4, L:1d6+1, + Str bonus}}DmgData=[w:Morning Star,sb:1,+:0,SM:2d4,L:1+1d6]{{desc=This is a good Morning Star. The knobbly bit on the chain has sharp spikes, but otherwise it is an ordinary weapon.}}'},
						{name:'Morningstar+2',type:'Melee',ct:'7',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Morning Star +2}}{{subtitle=Magic Weapon}}{{Speed=[[7]]}}{{Size=Medium}}{{Weapon=1-handed melee club}}Specs=[Morningstar,Melee,1H,Club]{{To-hit=+2 + Str bonus}}ToHitData=[w:Morning Star+2,sb:1,+:2,n:1,ch:20,cm:1,sz:M,ty:B,r:5,sp:7]{{Attacks=1 per round + level \\amp specialisation, Bludgeoning}}{{Damage=+2, vs SM:2d4, L:1d6+1, + Str bonus}}DmgData=[w:Morning Star+2,sb:1,+:2,SM:2d4,L:1+1d6]{{desc=This is a fine magical Morning Star. The knobbly bit on the chain has very sharp spikes that seem extra pointy, and is a +[[2]] magical weapon at all times.}}'},
						{name:'Ogre-Club-Flyswatter+2+4',type:'Melee|Melee',ct:'4',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Ogre Club of Flyswatting +2,+4}}{{subtitle=Magic Weapon}}{{Speed=[[4]]}}{{Size=Medium}}{{Weapon=1-handed melee club}}Specs=[Ogre-Club,Melee,1H,Club],[Ogre-Club,Melee,1H,Club]{{To-hit=+2, +4 vs insectoids, + Str bonus, requires Str 18 to wield}}ToHitData=[w:Ogre-Club+2,sb:1,+:2,n:1,ch:20,cm:1,sz:M,ty:B,r:5,sp:4],[w:Ogre-Club+4 vs insectoids,sb:1,+:4,n:1,ch:20,cm:1,sz:M,ty:B,r:5,sp:4]{{Attacks=1 per round + level \\amp specialisation if strong enough, Bludgeoning}}{{Damage=+2, +4 vs insectoids, vs SM:2d8, L:2d8, + Str bonus}}DmgData=[w:Ogre-Club+2,sb:1,+:2,SM:2d8,L:2d8],[w:Ogre-Club+4 vs Insectoids,sb:1,+:4,SM:2d8,L:2d8]{{desc=This is a large, heavy club needing a strength of at least 18 to wield, originally used by an Ogre. A [Medallion of Flyswatting](~MI-DB|Medallion-of-Flyswatting) has been attached. When attached to any type of weapon, will turn it into +2, +4 vs Insectoids - any existing plusses and powers are "overwritten" while this medallion is attached. On examination it will be found to display the holy symbol of the holder (changes with holder), and may be used to turn undead at +1 level, cumulative with other turning undead items or powers. If used by a holder with no power to turn, gives power as a 1st level cleric}}'},
						{name:'Ogre-club+0',type:'Melee',ct:'4',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Ogre Club +0}}{{subtitle=Magic Weapon}}{{Speed=[[4]]}}{{Size=Medium}}{{Weapon=1-handed melee club}}Specs=[Ogre-Club,Melee,1H,Club]{{To-hit=+0 + Str bonus, requires Str 18 to wield}}ToHitData=[w:Ogre-Club+0,sb:1,+:0,n:1,ch:20,cm:1,sz:M,ty:B,r:5,sp:4]{{Attacks=1 per round + level \\amp specialisation if strong enough, Bludgeoning}}{{Damage=+0, vs SM:2d8, L:2d8, + Str bonus}}DmgData=[w:Ogre-Club+0,sb:1,+:0,SM:2d8,L:2d8]{{desc=This is a large, heavy club needing a strength of at least 18 to wield, which hits as a magic weapon but at +[[0]]. The wood is incredibly dense but still heavily blood-stained, and is a +[[0]] magical weapon at all times.}}'},
						{name:'Partisan',type:'Melee',ct:'9',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Partisan}}{{subtitle=Polearm}}{{Speed=[[9]]}}{{Size=Large}}{{Weapon=2-handed melee polearm}}Specs=[Partisan,Melee,2H,Polearm]{{To-hit=+0 + Str bonus}}ToHitData=[w:Partisan,sb:1,+:0,n:1,ch:20,cm:1,sz:L,ty:P,r:10-14,sp:9]{{Attacks=1 per round + level \\amp specialisation, Piercing}}{{Damage=+0, vs SM:1d6, L:1d6+1, + Str bonus}}DmgData=[w:Partisan,sb:1,+:0,SM:1d6,L:1+1d6]{{desc=This is a normal Partisan, a type of Polearm. The point is sharp and keen, but nothing special. **Inflicts double damage when set firmly vs. charge.**\nShorter than the awl pike but longer than the spear, the partisan is a broad spear-head mounted on an eight-foot-long shaft. Two smaller blades project out from the base of the main blade, just to increase damage and trap weapons. Since it is a thrusting weapon, it can be used in closely packed formations.}}'},
						{name:'Powerful-Longsword+2',type:'Melee',ct:'5',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Powerful Longsword+2}}{{subtitle=Magic Sword}}{{Speed=[[5]]}}{{Size=Medium}}{{Weapon=1-handed melee long-blade}}Specs=[Longsword,Melee,1H,Long-blade]{{To-hit=+2 + Str bonus}}ToHitData=[w:Longsword+2,sb:1,+:2,n:1,ch:20,cm:1,sz:M,ty:S,r:5,sp:5]{{Attacks=1 per round + level \\amp specialisation}}{{Damage=+2 + Str bonus}}DmgData=[w:Longsword+2,sb:1,+:2,SM:1d8,L:1d12]{{Powers=[View](!magic --view-spell mi-power|@{selected|token_id}|6) or [Use](!magic --cast-spell mi-power|@{selected|token_id}|6) powers}}{{desc=This is a very fine magical sword, perhaps with some personality. The blade is very sharp and keen, and is a +[[2]] magical weapon at all times, and it also seems to exude power! Use the *View* and *Use* buttons to see what it does.}}'},
						{name:'Quarterstaff',type:'Melee',ct:'4',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Quarterstaff}}{{subtitle=Staff}}{{Speed=[[4]]}}{{Size=Large}}{{Weapon=2-handed melee staff}}Specs=[Quarterstaff,Melee,2H,Staff]{{To-hit=+0 + Str bonus}}ToHitData=[w:Quarterstaff,sb:1,+:0,n:1,ch:20,cm:1,sz:L,ty:B,r:5,sp:4,wt:4]{{Attacks=1 per round + level \\amp specialisation}}{{Damage=+0, vs SM:1d6, L:1d6, + Str bonus}}DmgData=[w:Quarterstaff,sb:1,+:0,SM:1d6,L:1d6]{{desc=A good, hardwood quarterstaff that is well balanced but nothing out of the ordinary}}'},
						{name:'Quarterstaff+1',type:'Melee',ct:'4',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Quarterstaff+1}}{{subtitle=Staff}}{{Speed=[[4]]}}{{Size=Large}}{{Weapon=2-handed melee staff}}Specs=[Quarterstaff,Melee,2H,Staff]{{To-hit=+1 + Str bonus}}ToHitData=[w:Quarterstaff,sb:1,+:1,n:1,ch:20,cm:1,sz:L,ty:B,r:5,sp:4]{{Attacks=1 per round + level \\amp specialisation}}{{Damage=+1, vs SM:1d6, L:1d6, + Str bonus}}DmgData=[w:Quarterstaff,sb:1,+:1,SM:1d6,L:1d6]{{desc=An excellent hardwood quarterstaff that is exceptionally well balanced and has a slight warm shine to the wood. A +[[1]] weapon at all times}}'},
						{name:'Quarterstaff-of-Dancing',type:'Melee',ct:'4',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Quarterstaff-of-Dancing}}{{subtitle=Magic Weapon}}{{Speed=[[4]]}}{{Size=Large}}{{Weapon=2-handed \\amp dancing melee staff}}Specs=[Quarterstaff,Melee,2H,Staff]{{To-hit=+1/2/3/4 increasing over 4 rounds, + Str bonus (no bonus when dancing)}}ToHitData=[w:Quarterstaff-of-Dancing,sb:1,+:1,n:1,ch:20,cm:1,sz:L,ty:B,r:5,sp:4]{{Attacks=1 per round + level \\amp specialisation, even when dancing, Bludgeoning}}{{Damage=+1/2/3/4 increasing over 4 rounds, vs SM: 1d6, L:1d6, + Str bonus (no bonus when dancing)}}DmgData=[w:Quarterstaff-of-Dancing,sb:1,+:1,SM:1d6,L:1d6]{{desc=This quarterstaff acts the same as a standard Sword of Dancing. Round one weapon is +1, on the second +2, on the third +3, and on the fourth it is +4. On the fifth round, it drops back to +1 and the cycle begins again. In addition, after four rounds of melee its wielder can opt to allow it to "dance."\nDancing consists of loosing the staff on any round (after the first) when its bonus is +1. The staff then fights on its own at the same level of experience as its wielder. After four rounds of dancing, the staff returns to its wielder, who must hold it (and use it) for four rounds before it can dance again. When dancing, the staff will leave its owner\'s hand and may go up to [[30]] feet distant. At the end of its fourth round of solo combat, it will move to its possessor\'s hand automatically. Note that when dancing the staff cannot be physically hit, although certain magical attacks such as a fireball, lightning bolt, or transmute metal to wood spell could affect it.\nFinally, remember that the dancing staff fights alone exactly the same; if a 7th-level thief is the wielder, the staff will so fight when dancing. Relieved of his weapon for four melee rounds, the possessor may act in virtually any manner desired—resting, discharging missiles, drawing another weapon and engaging in hand-to-hand combat, etc.—as long as he remains within [[30]] feet of the staff. If he moves more than 30 feet from the weapon, it falls lifeless to the ground and is a +1 weapon when again grasped.}}'},
						{name:'Rainbow-Bow',type:'Innate-Ranged',ct:'6',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Rainbow Shortbow}}{{subtitle=Bow}}{{Speed=[[6]]}}{{Size=Medium}}{{Weapon=2-handed ranged magical bow conjured by the *Rainbow* spell}}Specs=[Rainbow-Bow,Innate-Ranged,2H,Rainbow-bow]{{To-hit=Use only Rainbow arrows to gain Dex \\amp Str bonuses}}ToHitData=[w:Rainbow Bow,sb:1,db:1,+:0,n:4,ch:20,cm:1,sz:M,ty:P,sp:6,rc:uncharged]{{Attacks=Up to 4 per round regardless of level or specialisation}}{{desc=This is a magical composite shortbow (otherwise known as a Recurve Bow) conjured by the Rainbow spell. The limbs appear to be made from the light of a rainbow!}}'},
						{name:'Ranseur',type:'Melee|Melee',ct:'8',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Ranseur}}{{subtitle=Polearm}}{{Speed=[[8]]}}{{Size=Large}}{{Weapon=2-handed melee polearm}}Specs=[Ranseur,Melee,2H,Polearm],[Ranseur,Melee,2H,Polearm]{{To-hit=+0 + Str bonus}}ToHitData=[w:Ranseur,sb:1,+:0,n:1,ch:20,cm:1,sz:L,ty:P,r:10-14,sp:8],[w:Ranseur set vs charge,sb:1,+:0,n:1,ch:20,cm:1,sz:L,ty:P,r:10-14,sp:8]{{Attacks=1 per round + level \\amp specialisation, Piercing}}{{Damage=+0, vs SM:2d4, L:2d4, if set vs charge SM:4d4, L:4d4, + Str bonus}}DmgData=[w:Ranseur,sb:1,+:0,SM:2d4,L:2d4],[w:Ranseur vs charge,sb:1,+:0,SM:4d4,L:4d4]{{desc=This is a normal Ranseurn, a type of Polearm. The point is sharp and keen, but nothing special. **Inflicts double damage when set firmly vs. charge.**\nVery much like the partisan, the Ranseur differs in that the main blade is thinner and the projecting blades extended more like tines of a fork. These can trap a weapon and sometimes punch through armor.}}'},
						{name:'Rapier',type:'Melee',ct:'2',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Rapier}}{{subtitle=Sword}}{{Speed=[[2]]}}{{Size=Medium}}{{Weapon=1-handed melee fencing-blade}}Specs=[Rapier,Melee,1H,Fencing-blade]{{To-hit=+0 no bonuses}}ToHitData=[w:Rapier,sb:0,+:0,n:2,ch:20,cm:1,sz:M,ty:P,r:5,sp:2]{{Attacks=2 per round + level \\amp specialisation, Piercing}}{{Damage=+0, vs SM:1d4+2, L:1d4, no bonuses}}DmgData=[w:Rapier,sb:0,+:0,SM:2+1d4,L:1d4]{{desc=This is a normal fencing sword. The blade is sharp but is otherwise unremarkable.}}'},
						{name:'Rapier-for-Thieves',type:'Melee',ct:'2',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Thieves Rapier}}{{subtitle=Sword}}{{Speed=[[2]]}}{{Size=Medium}}{{Weapon=1-handed melee fencing-blade}}Specs=[Thieves-Rapier,Melee,1H,Fencing-blade]{{To-hit=+1 + Str bonus}}ToHitData=[w:Rapier,sb:1,+:1,n:2,ch:20,cm:1,sz:M,ty:P,r:5,sp:2]{{Attacks=2 per round + level, Piercing}}{{Damage=+1, vs SM:1d4+2, L:1d4, + Str bonus}}DmgData=[w:Rapier,sb:1,+:1,SM:2+1d4,L:1d4]{{desc=This is a normal fencing sword, but extra-effective in the hands of a thief. The blade is sharp but is otherwise unremarkable.}}'},
						{name:'Scimitar',type:'Melee',ct:'5',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Scimitar}}{{subtitle=Sword}}{{Speed=[[5]]}}{{Size=Medium}}{{Weapon=1-handed melee long-blade}}Specs=[Scimitar,Melee,1H,Long-blade]{{To-hit=+0 + Str bonus}}ToHitData=[w:Scimitar,sb:1,+:0,n:1,ch:20,cm:1,sz:M,ty:S,r:5,sp:5]{{Attacks=1 per round + level \\amp specialisation}}{{Damage=+0, vs SM:1d8, L:1d8, + Str bonus}}DmgData=[w:Scimitar,sb:1,+:0,SM:1d8,L:1d8]{{desc=This is a normal sword. The blade is sharp but is otherwise unremarkable.}}'},
						{name:'Scimitar+',type:'Melee',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Unknown Scimitar}}{{subtitle=Magic Sword}}{{Speed=[[5]]}}{{Size=Medium}}Specs=[Scimitar,Melee,1H,Long-blade]{{To-hit=+?}}{{damage=+?}}{{Normal=[TSM:1d8+?](!\\amp#13;\\amp#47;r 1d8+0)[LH:1d8+?](!\\amp#13;\\amp#47;r 1d8+0)}}{{desc=This is an unknown, fine-quality scimitar}}'},
						{name:'Scimitar+1',type:'Melee',ct:'5',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Scimitar+1}}{{subtitle=Magic Sword}}{{Speed=[[5]]}}{{Size=Medium}}{{Weapon=1-handed melee long-blade}}Specs=[Scimitar,Melee,1H,Long-blade]{{To-hit=+1 + Str bonus}}ToHitData=[w:Scimitar+1,sb:1,+:1,n:1,ch:20,cm:1,sz:M,ty:S,r:5,sp:5]{{Attacks=1 per round + level \\amp specialisation, Slashing}}{{Damage=+1, vs SM:1d8, L:1d8, + Str bonus}}DmgData=[w:Scimitar+1,sb:1,+:1,SM:1d8,L:1d8]{{desc=This is a normal magical sword. The blade is very sharp and shimmers with a silvery hue, and is a +[[1]] magical weapon at all times.}}'},
						{name:'Scimitar+2',type:'Melee',ct:'5',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Scimitar+2}}{{subtitle=Magic Sword}}{{Speed=[[5]]}}{{Size=Medium}}{{Weapon=1-handed melee long-blade}}Specs=[Scimitar,Melee,1H,Long-blade]{{To-hit=+2 + Str bonus}}ToHitData=[w:Scimitar+2,sb:1,+:2,n:1,ch:20,cm:1,sz:M,ty:S,r:5,sp:5]{{Attacks=1 per round + level \\amp specialisation, Slashing}}{{Damage=+2, vs SM:1d8, L:1d8, + Str bonus}}DmgData=[w:Scimitar+2,sb:1,+:2,SM:1d8,L:1d8]{{desc=This is a normal magical sword. The blade is very sharp and shimmers with a silvery hue, and is a +[[2]] magical weapon at all times.}}'},
						{name:'Scimitar+3',type:'Melee',ct:'5',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Scimitar+3}}{{subtitle=Magic Sword}}{{Speed=[[5]]}}{{Size=Medium}}{{Weapon=1-handed melee long-blade}}Specs=[Scimitar,Melee,1H,Long-blade]{{To-hit=+3 + Str bonus}}ToHitData=[w:Scimitar+3,sb:1,+:3,n:1,ch:20,cm:1,sz:M,ty:S,r:5,sp:5]{{Attacks=1 per round + level \\amp specialisation, Slashing}}{{Damage=+3, vs SM:1d8, L:1d8, + Str bonus}}DmgData=[w:Scimitar+3,sb:1,+:3,SM:1d8,L:1d8]{{desc=This is a normal magical sword. The blade is very sharp and shimmers with a silvery hue, and is a +[[3]] magical weapon at all times.}}'},
						{name:'Scimitar-of-Adaptation+1',type:'Melee',ct:'5',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Scimitar of Adaptation +1}}{{subtitle=Magic Sword}}{{Speed=[[5]]}}{{Size=Medium}}{{Weapon=1-handed melee long-blade}}Specs=[Scimitar,Melee,1H,Long-blade]{{To-hit=+1 + Str bonus}}ToHitData=[w:Scimitar of Adapt+1,sb:1,+:1,n:1,ch:20,cm:1,sz:M,ty:S,r:5,sp:5]{{Attacks=1 per round + level \\amp specialisation, Slashing}}{{Damage=+1, vs SM:1d8, L:1d8, + Str bonus}}DmgData=[w:Scimitar of Adapt+1,sb:1,+:1,SM:1d8,L:1d8]{{desc=This is an exceptional magical sword. The blade is sharp and keen, and is a +[[1]] magical weapon at all times. However, it can adapt to be a sword of any type the wielder desires (and is proficient with). It will take [[1]] round to change shape to a different type of sword.}}'},
						{name:'Scourge',type:'Melee',ct:'5',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Scourge}}{{subtitle=Whip}}{{Speed=[[5]]}}{{Size=Small}}{{Weapon=1-handed melee whip}}Specs=[Scourge,Melee,1H,Whip]{{To-hit=+0 + Str bonus}}ToHitData=[w:Scourge,sb:1,+:0,n:1,ch:20,cm:1,sz:S,ty:N,r:5,sp:5]{{Attacks=1 per round + level \\amp specialisation}}{{Damage=+0, vs SM:1d4, L:1d2, + Str bonus}}DmgData=[w:Scourge,sb:1,+:0,SM:1d4,L:1d2]{{desc=A standard Scourge of good quality, but nothing special.\nThis wicked weapon is a short whip with several thongs or tails. Each thong is studded with metal barbs, resulting in a terrible lash. It is sometimes used as an instrument of execution.}}'},
						{name:'Shadowbane-Broadsword',type:'Melee|Melee|Melee|Melee',ct:'5',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Sword +2, Dragon Slayer (special)}}{{subtitle=Magic Sword}}{{Speed=[[5]] or by sword}}{{Size=Medium}}{{Weapon=1-handed melee long-blade}}Specs=[Broad-sword,Melee,1H,Long-blade],[Broad-sword,Melee,1H,Long-blade],[Broad-sword,Melee,1H,Long-blade],[Broad-sword,Melee,1H,Long-blade]{{To-hit=+2, +4 vs dragons, + Str bonus}}ToHitData=[w:Shadowbane+2,sb:1,+:2,n:1,ch:20,cm:1,sz:M,ty:S,r:5,sp:5],[w:Shadowbane vs Dragon,sb:1,+:4,n:1,ch:20,cm:1,sz:M,ty:S,r:5,sp:5],[w:Shadowbane vs Silver,sb:1,+:4,n:1,ch:20,cm:1,sz:M,ty:S,r:5,sp:5],[w:Shadowbane vs Black,sb:1,+:4,n:1,ch:20,cm:1,sz:M,ty:S,r:5,sp:5]{{Attacks=1 per round + level \\amp specialisation, Slashing}}{{Damage=+2, +4 vs dragons except Silver \\amp Black}}DmgData=[w:Shadowbane+2,sb:1,+:2,SM:2d4,L:1+1d6],[w:Shadowbane vs Dragon,sb:1,+:4,SM:1d12,L:1d12],[w:Shadowbane vs Silver,sb:1,+:2,SM:2d4,L:1+1d6],[w:Shadowbane vs Black,sb:1,+:4,SM:2000,L:2000]{{Special=vs. Black Dragon, a hit kills, then sword disintegrates\nvs. Silver Dragon normal damage}}{{desc=This has a +[[4]] bonus against any sort of true dragon. It automatically kills one sort of dragon but then immediately disintegrates and can no longer be used. Note that an unusual sword with intelligence and alignment will not be made to slay dragons of the same alignment. Determine dragon type (excluding unique ones like Bahamut and Tiamat) by rolling 1d10:\n1 black (CE) 6 gold (LG)\n2 blue (LE) 7 green (LE)\n3 brass (CG) 8 red (CE)\n4 bronze (LG) 9 silver (LG)\n5 copper (CG) 10 white (CE)}}'},
						{name:'Shortbow',type:'Ranged',ct:'7',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Shortbow}}{{subtitle=Bow}}{{Speed=[[7]]}}{{Size=Medium}}{{Weapon=2-handed ranged bow}}Specs=[Shortbow,Ranged,2H,Bow]{{To-hit=+0 + Dex bonus}}ToHitData=[w:Shortbow,sb:0,db:1,+:0,n:2,ch:20,cm:1,sz:M,ty:P,sp:7]{{Attacks=2 per round, no increases, Piercing}}{{desc=This is a normal shortbow. The wood is polished, the string taut, but nothing special.}}'},
						{name:'Shortsword',type:'Melee',ct:'3',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Shortsword}}{{subtitle=Sword}}{{Speed=[[3]]}}{{Size=Medium}}{{Weapon=1-handed melee short-blade}}Specs=[Short-sword,Melee,1H,Short-blade]{{To-hit=+0 + Str bonus}}ToHitData=[w:Shortsword,sb:1,+:0,n:1,ch:20,cm:1,sz:M,ty:P,r:5,sp:3]{{Attacks=1 per round + level \\amp specialisation, Piercing}}{{Damage=+0, vs SM:1d6, L:1d8, + Str bonus}}DmgData=[w:Shortsword,sb:1,+:0,SM:1d6,L:1d8]{{desc=This is a normal sword. The blade is sharp and keen, but nothing special.}}'},
						{name:'Shortsword+1',type:'Melee',ct:'5',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Shortsword+1}}{{subtitle=Magic Sword}}{{Speed=[[3]]}}{{Size=Medium}}{{Weapon=1-handed melee short-blade}}Specs=[Short-sword,Melee,1H,Short-blade]{{To-hit=+1 + Str bonus}}ToHitData=[w:Shortsword+1,sb:1,+:1,n:1,ch:20,cm:1,sz:M,ty:P,r:5,sp:5]{{Damage=+1 + Str Bonus}}DmgData=[w:Shortsword+1,sb:1,+:1,SM:1d6,L:1d8]{{desc=This is a normal magical sword. The blade is sharp and keen, and is a +[[1]] magical weapon at all times.}}'},
						{name:'Shortsword-of-Adaptation+1',type:'Melee',ct:'5',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Shortsword of Adaptation +1}}{{subtitle=Magic Sword}}{{Speed=[[3]]}}{{Size=Medium}}{{Weapon=1-handed melee short-blade}}Specs=[Short-sword,Melee,1H,Short-blade]{{To-hit=+1 + Str bonus}}ToHitData=[w:Shortsword of Adapt+1,sb:1,+:1,n:1,ch:20,cm:1,sz:M,ty:P,r:5,sp:5]{{Attacks=1 per round + level \\amp specialisation, Piercing}}{{Damage=+1, vs SM:1d6, L:1d8, + Str bonus}}DmgData=[w:Shortsword of Adapt+1,sb:1,+:1,SM:1d6,L:1d8]{{desc=This is an exceptional magical sword. The blade is sharp and keen, and is a +[[1]] magical weapon at all times. However, it can adapt to be a sword of any type the wielder desires (and is proficient with). It will take [[1]] round to change shape to a different type of sword.}}'},
						{name:'Sickle',type:'Melee',ct:'5',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Sickle}}{{subtitle=Short Blade}}{{Speed=[[5]]}}{{Size=Small}}{{Weapon=1-handed melee short-blade}}Specs=[Sickle,Melee,1H,Short-blade]{{To-hit=+0 + Str bonus}}ToHitData=[w:Sickle,sb:1,+:0,n:1,ch:20,cm:1,sz:M,ty:S,r:5,sp:5]{{Attacks=1 per round + level \\amp specialisation, Slashing}}{{Damage=+0, vs SM:1d4+1, L:1d4}}DmgData=[w:Sickle,sb:1,+:0,SM:1+1d4,L:1d4]{{desc=This is a normal Sickle. The blade is sharp and keen, but nothing special.}}'},
						{name:'Sling',type:'Ranged|Ranged',ct:'7',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Sling}}{{subtitle=Ranged Weapon}}{{Speed=2H [[6]]/1H [[7]]}}{{Size=Small}}{{Weapon=1- or 2-handed ranged sling}}Specs=[Sling,Ranged,1H,Sling],[Sling,Ranged,2H,Sling]}}{{To-hit=+0 + Dex bonus}}ToHitData=[w:Sling,sb:0,db:1,+:0,n:1,ch:20,cm:1,sz:S,ty:B,sp:7,r:Varies by ammo],[w:Sling,sb:0,db:1,+:0,n:2,ch:20,cm:1,sz:S,ty:B,sp:6,r:Varies by ammo]{{Attacks=1-handed=1/round, 2-handed=2/round, Bludgeoning}}{{desc=A sling, made of supple leather. Can be either 1-handed or 2-handed. However, 1-handed is slightly slower to load and fire and requires more coordination, and thus can only get 1 shot per round. 2-handed gets 2 shots per round}}'},
						{name:'Spear',type:'Melee|Ranged',ct:'6',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Spear}}{{subtitle=Spear}}{{Speed=[[6]]}}{{Size=Medium}}{{Weapon=1-handed melee or thrown spear}}Specs=[Spear,Melee,1H,Spear],[Spear,Ranged,1H,Spear]{{To-hit=+0 + Str \\amp Dex bonuses}}ToHitData=[w:Spear,sb:1,+:0,n:1,ch:20,cm:1,sz:M,ty:P,r:8,sp:6],[w:Spear,sb:1,db:1,+:0,n:1,ch:20,cm:1,sz:M,ty:P,sp:6]{{Attacks=1 per round + level \\amp specialisation, Piercing}}{{Damage=+0, vs SM:1d6, L:1d8, + Str bonus}}DmgData=[w:Spear,sb:1,+:0,SM:1d6,L:1d8],[]{{Ammo=+0, vs SM:1d6, L:1d8, + Str bonus}}AmmoData=[w:Spear,t:Spear,st:Spear,sb:1,+:0,SM:1d6,L:1d8]}}{{Range=S:10, M:20, L:30}}RangeData=[t:Spear,+:0,r:1/2/3]{{desc=This is a normal Spear. The point is sharp and it is well balanced, but nothing special.}}'},
						{name:'Spetum',type:'Melee|Melee',ct:'8',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Spetum}}{{subtitle=Polearm}}{{Speed=[[8]]}}{{Size=Large}}{{Weapon=2-handed melee polearm}}Specs=[Spetum,Melee,2H,Polearm],[Spetum,Melee,2H,Polearm]}}{{To-hit=+0 + Str bonus}}ToHitData=[w:Spetum,sb:1,+:0,n:1,ch:20,cm:1,sz:L,ty:P,r:8-10,sp:8],[w:Spetum set vs charge,sb:1,+:0,n:1,ch:20,cm:1,sz:L,ty:P,r:8-10,sp:8]((Attacks=1 per round + level \\amp specialisation}}{{Damage=+0, vs SM:1d6+1, L:2d6, if set vs charge SM:2d6+2, L:4d6, + Str bonus}}DmgData=[w:Spetum,sb:1,+:0,SM:1+1d6,L:2d6],[w:Spetum vs charge,sb:1,+:0,SM:2+2d6,L:4d6]{{desc=This is a normal Spetum, a type of Polearm. The point is sharp and keen, but nothing special. **Inflicts double damage when set firmly vs. charge.**\nThe spetum is a modification of the normal spear. The shaft increases to eight to ten feet and side blades are added. Some have blades that angle back, increasing the damage when pulling the weapon out of a wound. These blades can also trap and block weapons or catch and hold an opponent.}}'},
						{name:'Spiritual-Hammer+1',type:'Innate-Melee',ct:'5',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Spiritual Hammer+1}}{{subtitle=Hammer/Club}}{{Speed=[[5]]}}{{Size=Medium}}{{Weapon=1-handed magically remote melee club}}Specs=[Spiritual Hammer,Innate-Melee,1H,Innate]{{To-hit=+1, no other bonuses}}ToHitData=[w:Spiritual-Hammer+1,sb:0,+:1,n:1,ch:20,cm:1,sz:M, ty:B, r:Varies,sp:5],{{Attacks=1 per round, no effect from level or specialisation, Bludgeoning}}{{Damage=+1, vs SM:1d4+1, L:1d4, no Str bonus}}DmgData=[w:Spiritual-Hammer+1,sb:0,+:1,SM:1+1d4,vs L:1d4]{{desc=A hammer conjured by a priest using a Spiritual Hammer spell. Base Thac0 same as caster [[@{selected|thac0-base}]] without strength bonus plus magical plus of +[[{{(ceil(@{selected|Casting-Level}/6)),3}kl1}]]. Damage is plus magical bonus but no others. Hits are in the direction caster is facing, allowing rear attacks. Dispel Magic on caster or hammer can dispel. Stopping concentrating dispels. Magic Resistance checked in 1st round and spell lost if made or full effect if not.}}'},
						{name:'Spiritual-Hammer+2',type:'Innate-Melee',ct:'5',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Spiritual Hammer+1}}{{subtitle=Hammer/Club}}{{Speed=[[5]]}}{{Size=Medium}}{{Weapon=1-handed magically remote melee club}}Specs=[Spiritual Hammer,Innate-Melee,1H,Innate]{{To-hit=+2, no other bonuses}}ToHitData=[w:Spiritual-Hammer+2,sb:0,+:2,n:1,ch:20,cm:1,sz:M, ty:B, r:Varies,sp:5],{{Attacks=1 per round, no effect from level or specialisation, Bludgeoning}}{{Damage=+2, vs SM:1d4+1, L:1d4, no Str bonus}}DmgData=[w:Spiritual-Hammer+2,sb:0,+:2,SM:1+1d4,vs L:1d4]{{desc=A hammer conjured by a priest using a Spiritual Hammer spell. Base Thac0 same as caster [[@{selected|thac0-base}]] without strength bonus plus magical plus of +[[{{(ceil(@{selected|Casting-Level}/6)),3}kl1}]]. Damage is plus magical bonus but no others. Hits are in the direction caster is facing, allowing rear attacks. Dispel Magic on caster or hammer can dispel. Stopping concentrating dispels. Magic Resistance checked in 1st round and spell lost if made or full effect if not.}}'},
						{name:'Spiritual-Hammer+3',type:'Innate-Melee',ct:'5',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Spiritual Hammer+1}}{{subtitle=Hammer/Club}}{{Speed=[[5]]}}{{Size=Medium}}{{Weapon=1-handed magically remote melee club}}Specs=[Spiritual Hammer,Innate-Melee,1H,Innate]{{To-hit=+3, no other bonuses}}ToHitData=[w:Spiritual-Hammer+3,sb:0,+:3,n:1,ch:20,cm:1,sz:M, ty:B, r:Varies,sp:5],{{Attacks=1 per round, no effect from level or specialisation, Bludgeoning}}{{Damage=+3, vs SM:1d4+1, L:1d4, no Str bonus}}DmgData=[w:Spiritual-Hammer+3,sb:0,+:3,SM:1+1d4,vs L:1d4]{{desc=A hammer conjured by a priest using a Spiritual Hammer spell. Base Thac0 same as caster [[@{selected|thac0-base}]] without strength bonus plus magical plus of +[[{{(ceil(@{selected|Casting-Level}/6)),3}kl1}]]. Damage is plus magical bonus but no others. Hits are in the direction caster is facing, allowing rear attacks. Dispel Magic on caster or hammer can dispel. Stopping concentrating dispels. Magic Resistance checked in 1st round and spell lost if made or full effect if not.}}'},
						{name:'Staff-Sling',type:'Ranged',ct:'6',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Staff-Sling}}{{subtitle=Ranged Weapon}}{{Speed=[[11]]}}{{Size=Medium}}{{Weapon=2-handed ranged sling}}Specs=[Staff-Sling,Ranged,2H,Sling]{{To-hit=+0 no bonuses}}ToHitData=[w:Staff-Sling,sb:0,+:0,n:2,ch:20,cm:1,sz:S,ty:B,r:+2/+3/+4,sp:6]{{Attacks=2 per round + level \\amp specialisation, Bludgeoning}}{{desc=A staff sling, made of supple leather and a sturdy pole. Ideal for slinging balls for dogs to fetch...}}'},
						{name:'Strong-Longbow',type:'Ranged',ct:'8',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Strong Longbow}}{{subtitle=Bow}}{{Speed=[[8]]}}{{Size=Large}}{{Weapon=2-handed ranged bow}}Specs=[Longbow,Ranged,2H,Bow]{{To-hit=+0, + Str \\amp Dex bonuses}}ToHitData=[w:Longbow,sb:1,db:1,+:0,n:2,ch:20,cm:1,sz:L,ty:P,sp:8]{{Attacks=2 per round + level \\amp specialisation, Piercing}}{{desc=This is a longbow with strong limbs, able to be drawn by a very strong bowyer, incorporating strength bonuses. The wood is polished, the limbs flexible, the string taut, but nothing special.}}'},
						{name:'Sword-of-adaptation+1',type:'Melee',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Sword of Adaptation+1}}{{subtitle=Magic Sword}}{{Speed=[[5]]}}{{Size=Medium}}Specs=[Sword of Adaptation,Melee,1H,Sword]{{To-hit=+[[1]]}}{{damage=+[[1]]}}{{Roll=Varies by use}}{{desc=This is an exceptional magical sword. The blade is sharp and keen, and is a +[[1]] magical weapon at all times. However, it can adapt to be a sword of any type the wielder desires (and is proficient with). It will take [[1]] round to change shape to a different type of sword.}}'},
						{name:'Throwing-Axe',type:'Melee|Ranged',ct:'4',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Throwing Axe}}{{subtitle=Axe}}{{Speed=[[4]]}}{{Size=Medium}}{{Weapon=1-handed melee \\amp thrown axe}}Specs=[Throwing Axe,Melee,1H,Axe],[Throwing Axe,Ranged,1H,Axe]{{To-hit=+0, + Str \\amp Dex bonuses}}ToHitData=[w:Throwing Axe,sb:1,+:0,n:1,ch:20,cm:1,sz:M,ty:S,r:5,sp:4],[w:Throwing Axe,sb:1,db:1,+:0,n:1,ch:20,cm:1,sz:M,ty:S,sp:4]{{Attacks=1 per round + level \\amp specialisation, Slashing}}{{Damage=+0, vs SM:1d6, L:1d4, + Str bonus}}DmgData=[w:Throwing Axe,sb:1,+:0,SM:1d6,L:1d4],[]{{Ammo=+0, SM:1d6, L:1d4, + Str bonus}}AmmoData=[w:Throwing Axe,t:Throwing Axe,st:Axe,sb:1,+:0,SM:1d6,L:1d4]}}{{Range=S:10, M:20, L:30}}RangeData=[t:Throwing Axe,+:0,r:1/2/3]{{desc=This is a normal Hand- or Throwing-Axe. The blade is extra sharp and it is well balanced, but nothing special.}}'},
						{name:'Throwing-Dagger+4',type:'Melee|Ranged',ct:'2',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Throwing Dagger +0/+4}}{{subtitle=Magic Weapon}}{{Speed=[[2]]}}{{Size=Small}}{{Weapon=1-handed melee or thrown short-blade}}Specs=[Dagger,Melee,1H,Short-blade],[Dagger,Ranged,1H,Throwing-blade]{{To-hit=+0, +4 when thrown, + Str \\amp Dex bonus}}ToHitData=[w:Throwing Dagger+0,sb:1,+:0,n:2,ch:20,cm:1,sz:S,ty:S,r:5,sp:2],[w:Throwing-Dagger+4,sb:1,db:1,+:4,n:2,ch:20,cm:1,sz:S,ty:P,sp:2]{{Attacks=2 per round + level \\amp specialisation, Slashing \\amp Piercing}}{{Damage=+0, vs SM:1d4, L:1d3, + Str bonus}}DmgData=[w:Throwing Dagger+0,sb:1,+:0,SM:1d4,L:1d3],[ ]}}{{Ammo=+4, vs SM:1d4, L:1d3, + Str bonus}}AmmoData=[w:Throwing Dagger+4,t:Dagger,st:Dagger,sb:1,+:4,SM:1d4,L:1d3]{{Range=S:10, M:20, L:30}}RangeData=[t:Dagger,+:4,r:1/2/3]{{desc=This is a finely balanced throwing dagger, which is +4 to hit and for damage when thrown (though it has no bonuses if used in the hand)}}'},
						{name:'Throwing-axe+1',type:'Melee|Ranged',ct:'4',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Throwing Axe+1}}{{subtitle=Magic Weapon}}{{Speed=[[4]]}}{{Size=Medium}}{{Weapon=1-handed melee or thrown axe}}Specs=[Throwing-Axe,Melee,1H,Axe],[Throwing-Axe,Ranged,1H,Throwing-blade]{{To-hit=+1 + Str \\amp Dex bonuses}}ToHitData=[w:Throwing Axe+1,sb:1,+:1,n:1,ch:20,cm:1,sz:M,ty:S,r:3,sp:4],[w:Throwing Axe+1,sb:1,db:1,+:1,n:1,ch:20,cm:1,sz:M,ty:S,sp:4,r:-/1/2/3]{{Attacks=1 per round + level \\amp specialisation}}{{Damage=+1, vs SM:1d6, L:1d4, + Str bonus}}DmgData=[w:Throwing Axe+1,sb:1,+:1,SM:1d6,L:1d4],[]}}{{Ammo=+1, vs SM:1d6, L:1d4, + Str bonus}}AmmoData=[w:Throwing Axe,t:Throwing-Axe,sb:1,+:1,SM:1d6,L:1d4]{{Range=S:10, M:20, L:30}}RangeData=[t:Throwing-Axe,+:1,r:-/1/2/3]{{desc=A standard Throwing Axe of fine quality, good enough to be enchanted to be a +1 magical weapon}}'},
						{name:'Touch',type:'Melee|Melee',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Touch}}{{subtitle=Innate Action}}{{Speed=[[0]]}}{{Size=None}}{{Weapon=1- or 2-handed melee innate ability}}Specs=[Innate,Melee,1H,Innate],[Innate,Melee,2H,Innate]{{To-hit=+0 + Str bonus}}ToHitData=[w:Touch,sb:1,+:0,n:1,ch:20,cm:1,sz:T,ty:B,r:5,sp:0],[w:Touch,sb:1,+:0,n:1,ch:20,cm:1,sz:T,ty:B,r:5,sp:0]{{Attacks=1 per round + level}}{{Damage=None}}DmgData=[w:Touch,sb:0,+:0,SM:0,L:0],[w:Touch,sb:0,+:0,SM:0,L:0]}}{{desc=Touching with a hand or other limb not containing a weapon. Typically a spell caster\'s ability which they select as a weapon when aiming to use a Touch spell}}'},
						{name:'Trident',type:'Melee|Ranged',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Fine quality Trident}}{{subtitle=Weapon}}{{Speed=By type}}{{Size=Medium}}Specs=[Trident,Melee,1H,Spear],[Trident,Ranged,1H,Spear]{{To-hit=+?}}{{damage=+?}}{{Other Powers=Unknown}}{{desc=This definitely appears to be a trident, and the DM will describe it more if you pick it up to look closely at it}}'},
						{name:'Trident-of-Fish-Command',type:'Melee|Ranged',ct:'7',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Trident of Fish Command}}{{subtitle=Weapon}}{{Speed=7}}{{Size=Large}}{{Weapon=1-handed melee or thrown spear}}Specs=[Trident,Melee,1H,Spear],[Trident,Ranged,1H,Spear]{{To-hit=+3 + Str \\amp Dex bonuses}}ToHitData=[w:Trident Fish Command,sb:1,+:3,n:1,ch:20,cm:1,sz:L,ty:P,r:8,sp:7],[w:Trident Fish Command,sb:1,db:1,+:3,n:1,ch:20,cm:1,sz:L,ty:P,sp:7]{{Attacks=1 per round + level \\amp specialisation, Piercing}}{{Damage=+3, vs SM:1d6+1, L:3d4, + Str bonus}}DmgData=[w:Trident Fish Command,sb:1,+:3,SM:1+1d6,L:3d4],[]{{Ammo=+3, vs SM:1d6+1, L:3d4, + Str bonus}}[w:Trident Fish Command,t:Trident,st:Spear,sb:1,+:3,SM:1+1d6,L:3d4]{{Range=S:10, L:20}}RangeData=[t:Trident,+:3,r:1/1/2]{{Other Powers=Fish Command}}{{desc=This three-tined fork atop a stout 6-foot long rod appears to be a barbed military fork of some sort. However, its magical properties enable its wielder to cause all fish within a 60-foot radius to roll saving throws vs. spell. This uses one charge of the trident. Fish failing this throw are completely under empathic command and will not attack the possessor of the trident nor any creature within 10 feet of him. The wielder of the device can cause fish to move in whatever direction is desired and can convey messages of emotion (i.e., fear, hunger, anger, indifference, repletion, etc.). Fish making their saving throw are free of empathic control, but they will not approach within 10 feet of the trident.\nIn addition to ordinary fish, the trident affects sharks and eels. It doesn\'t affect molluscs, crustaceans, amphibians, reptiles, mammals, and similar sorts of non-piscine marine creatures. A school of fish should be checked as a single entity.\nA trident of this type contains 1d4+16 charges. It is otherwise a +1 magical weapon.}}'},
						{name:'Trident-of-Warning',type:'Melee|Ranged',ct:'7',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Trident of Warning}}{{subtitle=Weapon}}{{Speed=7}}{{Size=Large}}{{Weapon=1-handed melee or thrown spear}}Specs=[Trident,Melee,1H,Spear],[Trident,Ranged,1H,Spear]{{To-hit=+3 + Str \\amp Dex bonuses}}ToHitData=[w:Trident of Warning,sb:1,+:3,n:1,ch:20,cm:1,sz:L,ty:P,r:8,sp:7],[w:Trident of Warning,sb:1,db:1,+:3,n:1,ch:20,cm:1,sz:L,ty:P,sp:7]{{Attacks=1 per round + level \\amp specialisation, Piercing}}{{Damage=+3, vs SM:1d6+1, L:3d4, + Str bonus}}DmgData=[w:Trident of Warning,sb:1,+:3,SM:1+1d6,L:3d4],[]{{Ammo=+3, vs SM:1d6+1, L:3d4, + Str bonus}}AmmoData=[w:Trident of Warning,t:Trident,st:Spear,sb:1,+:3,SM:1+1d6,L:3d4]{{Range=S:10, L:20}}RangeData=[t:Trident,+:3,r:1/1/2]{{Other Powers=Aquatic Hostiles detection}}{{desc=A weapon of this type enables its wielder to determine the location, depth, species, and number of hostile or hungry marine predators within 240 feet. A trident of warning must be grasped and pointed in order for the person using it to gain such information, and it requires one round to scan a hemisphere with a radius of 240 feet. There are 19-24 charges in a trident of this type, each charge sufficient to last for two rounds of scanning. The weapon is otherwise a +2 magical weapon}}'},
						{name:'Two-Handed-Sword',type:'Melee',ct:'10',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Two Handed Sword}}{{subtitle=Sword}}{{Speed=[[10]]}}{{Size=Medium}}{{Weapon=2-handed melee long-blade}}Specs=[Two-Handed-Sword,Melee,2H,long-blade|great-blade]{{To-hit=+0 + Str bonus}}ToHitData=[w:Two-Handed-Sword,sb:1,+:0,n:1,ch:20,cm:1,sz:M,ty:S,r:5,sp:10]{{Attacks=1 per round + level \\amp specialisation, Slashing}}{{Damage=+0, vs SM:1d10, L:3d6, + Str bonus}}DmgData=[w:Two-Handed-Sword,sb:1,+:0,SM:1d10,L:3d6]{{desc=This is a normal sword. The blade is sharp and keen, but nothing special.}}'},
						{name:'Two-Handed-Sword+1',type:'Melee',ct:'10',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Two Handed Sword+1}}{{subtitle=Magic Sword}}{{Speed=[[10]]}}{{Size=Medium}}{{Weapon=2-handed melee long-blade}}Specs=[Two-Handed-Sword,Melee,2H,Long-blade|Great-blade]{{To-hit=+1 + Str bonus}}ToHitData=[w:Two-Handed-Sword+1,sb:1,+:1,n:1,ch:20,cm:1,sz:M,ty:S,r:5,sp:10]{{Attacks=1 per round + level \\amp specialisation, Slashing}}{{Damage=+1, vs SM:1d10, L:3d6, + Str bonus}}DmgData=[w:Two-Handed-Sword,sb:1,+:1,SM:1d10,L:3d6]{{desc=This is a really well balanced sword. The blade is extra sharp and keen, and has a magical glint.}}'},
						{name:'Two-Handed-Sword-of-Adaptation+1',type:'Melee',ct:'10',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Two Handed Sword of Adaptation+1}}{{subtitle=Magic Sword}}{{Speed=[[10]]}}{{Size=Medium}}{{Weapon=2-handed melee long-blade}}Specs=[Two-Handed-Sword,Melee,2H,Long-blade]{{To-hit=+1 + Str bonus}}ToHitData=[w:Two-Handed Sword of Adapt+1,sb:1,+:1,n:1,ch:20,cm:1,sz:M,ty:S,r:5,sp:10]{{Attacks=1 per round + level \\amp specialisation, Slashing}}{{Damage=+1, vs SM:1d10, L:3d6, + Str bonus}}DmgData=[w:Two-Handed Sword of Adapt+1,sb:1,+:1,SM:1d10,L:3d6]{{desc=This is an exceptional magical sword. The blade is sharp and keen, and is a +[[1]] magical weapon at all times. However, it can adapt to be a sword of any type the wielder desires (and is proficient with). It will take [[1]] round to change shape to a different type of sword.}}'},
						{name:'Voulge',type:'Melee',ct:'10',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Voulge}}{{subtitle=Polearm}}{{Speed=[[10]]}}{{Size=Large}}{{Weapon=2-handed melee polearm}}Specs=[Voulge,Melee,2H,Polearm]{{To-hit=+0 + Str bonus}}ToHitData=[w:Voulge,sb:1,+:0,n:1,ch:20,cm:1,sz:L,ty:S,r:7-8,sp:10]{{Attacks=1 per round + level \\amp specialisation}}{{Damage=+0 vs SM:2d4, L:2d4}}DmgData=[w:Voulge,sb:1,+:0,SM:2d4,L:2d4]{{desc=This is a normal Voulge a type of Polearm. The blade is sharp and keen, but nothing special.\nThe voulge, like the bardich, is a variation on the axe and the cleaver. The voulge is little more than a cleaver on the end of a long (seven- to eight-foot) pole. It is a popular weapon, easy to make and simple to learn. It is also called the Lochaber axe.}}'},
						{name:'Warhammer',type:'Melee|Ranged',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Warhammer}}{{subtitle=Hammer/Club}}{{Speed=[[4]]}}{{Size=Medium}}{{Weapon=1-handed melee or thrown club}}Specs=[Warhammer,Melee,1H,Club],[Warhammer,Ranged,1H,Club]{{To-hit=+0 + Str \\amp Dex bonus}}ToHitData=[name w:Warhammer,strength bonus sb:1,magic+:0,attks per round n:1,crit hit ch:20,crit miss cm:1,size sz:M, type ty:B, range r:5,speed sp:4],[name w:Warhammer,strength bonus sb:1,dexterity bonus db:1,magic+:0,attks per round n:1,crit hit ch:20,crit miss cm:1,size sz:M, type ty:B, speed sp:4]{{Attacks=1 per round + level \\amp specialisation, Bludgeoning}}{{Damage=+0, vs SM:1d4+1, L:1d4, + Str bonus}}DmgData=[name w:Warhammer,strength bonus sb:1,magic+:0,vs SM:1+1d4,vs L:1d4][]{{Ammo=+0, vs SM:1d4+1, L:1d4, + Str bonus}}AmmoData=[w:Warhammer,t:Warhammer,st:Throwing-club,sb:1,+:0,SM:1+1d4,L:1d4]{{Range=S:10, M:20, L:30}}RangeData=[t:Warhammer,+:0,r:1/2/3]{{desc=This is a normal warhammer. The blade is sharp and keen, but nothing special.}}'},
						{name:'Wave',type:'Melee|Ranged',ct:'7',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Wave\nIntelligent, Neutral}}{{subtitle=Magic Trident}}{{Speed=[[7]]}}{{Size=M}}{{Weapon=1-handed melee or thrown spear}}Specs=[Trident,Melee,1H,Spear],[Trident,Ranged,1H,Spear]{{To-hit=+3 + Str bonus}}ToHitData=[w:Wave,sb:1,+:3,n:1,ch:20,cm:1,sz:L,ty:P,r:8,sp:7],[w:Wave,sb:1,db:1,+:3,n:1,ch:20,cm:1,sz:L,ty:P,sp:7]{{Attacks=1 per round + level \\amp specialisation, Piercing}}{{Damage=+3, vs SM:1d6+1, L:3d4, + Str bonus}}DmgData=[w:Wave,sb:1,+:3,SM:1+1d6,L:3d4],[]{{Ammo=+3, vs SM:1d6+1, L:3d4, + Str bonus}}AmmoData=[w:Wave,t:Trident,st:Spear,sb:1,+:3,SM:1+1d6,L:3d4]{{Range=S:10, L:20}}RangeData=[t:Trident,+:3,r:1/1/2]{{desc=**Wave**\nWeapon (trident), legendary (requires attunement by a creature that worships a god of the sea)\n\n**Powers**\n+3 bonus to attack and damage rolls\nCritical hit causes extra damage of half target\'s HP maximum.\nFunctions as\n[Trident of Fish Command](~Trident-of-Fish-Command)\n[Weapon of Warning](~Trident-of-Warning)\n[Cap of Water Breathing](~Magic-Items|Target-User)\n[Cube of Force](~MI-DB|Cube-of-Force)\n[Squeak with Aquatic Animals](~PR-Spells-DB|Speak-with-Animals)\n\n***Sentience:*** Neutral alignment, Int 14, Wisdom 10, Chr 18. Hearing and *darkvision* range [[120]] feet. Telepathic with wielder, can speak, read, and understand Aquan\n\n**[Click here to see Wave handout for *Personality* and *Purpose*](http://journal.roll20.net/handout/-KdlsAAepzd1bKBYW_v3)**}}\n!setattr --charid @{selected|character_id} --silent --MI-used|Wave doing Water Breathing --MI-cast|Wave-Breath --MI-duration|99 --MI-direction|0 --MI-msg|Breathing under water --MI-marker|strong --casting-level|12 --casting-name|Wave'},
						{name:'Whelm',type:'Melee|Ranged',ct:'10',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Whelm\nIntelligent, Lawful Neutral}}{{subtitle=Magic Warhammer}}{{Speed=[[10]]}}{{Size=M}}WeapData=[w:Whelm,ns:4][cl:PW,w:Whelm-Shockwave,sp:10,pd:1,lv:12],[cl:PW,w:Whelm-Detect-Evil,sp:10,pd:1,lv:12],[cl:PW,w:Whelm-Detect-Good,sp:10,pd:1,lv:12],[cl:PW,w:Whelm-Locate-Object,sp:100,pd:1,lv:12]{{Weapon=1-handed melee or thrown club}}Specs=[Warhammer,Melee,1H,Club],[Warhammer,Ranged,1H,Throwing-Club]{{To-hit=+3 + Str \\amp Dex bonuses}}ToHitData=[w:Whelm,sb:1,+:3,n:1,ch:20,cm:1,sz:M,ty:B,r:5,sp:4],[w:Whelm,sb:1,db:1,+:3,n:1,ch:20,cm:1,sz:M,ty:B,sp:4]{{Attacks=1 per round + level \\amp specialisation, Bludgeoning}}{{Damage=+3, vs SM:1d4+1, L:1d4, + Str bonus}}DmgData=[w:Whelm,sb:1,+:3,SM:1+1d4,L:1d4],[]{{Ammo=+3, vs SM:1d4+1d8+1, L:1d4+2d8, + Str Bonus, and automatically returns}}AmmoData=[w:Whelm,t:Warhammer,st:Throwing-club,+:3,ru:1,SM:1+1d4+1d8,L:1d4+2d8]{{Range=S:20, M:40, L:60}}RangeData=[t:Warhammer,+:3,r:2/4/6]{{desc=**Whelm:** Weapon (warhammer), legendary. Powerful war-hammer forged by dwarves.\n\n**Attacks:** +3 attack and damage rolls.\n**Disadvantage:** Wielder has fear of being outdoors. Disadvantage (roll twice and take the worse outcome) on attack, saves, and ability checks under daytime sky.\n**Thrown Weapon:** range 20/40/60 feet. extra 1d8 (TSM) 2d8 (LG) bludgeoning damage when thrown. Flies back to your hand after attack. If don\'t have hand free, weapon lands at your feet.\n[Shock Wave](!magic --mi-power @{selected|token_id}|Whelm-Shock-Wave|Whelm|12): Strike the ground with *Whelm* and send out *Shock Wave* (1 per day). Creatures of your choice within [[60]]ft of impact point must save vs. Staves or stunned for [[1]] turn (additional save each round)\n[Detect Evil](!magic --mi-power @{selected|token_id}|Whelm-Detect-Evil|Whelm|12) 1/day\n[Detect Good](!magic --mi-power @{selected|token_id}|Whelm-Detect-Good|Whelm|12) 1/day\n[Locate Object](!magic --mi-power @{selected|token_id}|Whelm-Locate-Object|Whelm|12) 1/day\n\n***Sentience:*** Lawful Neutral weapon, Int 15, Wisdom 12, Chr 15.Hearing and *darkvision* range 120 ft, uses powers at L12. Communicates telepathically with wielder and can speak, read, and understand Dwarvish. Giant, and Goblin. It shouts battle cries in Dwarvish when used in combat.\n\n**[Click here to see Whelm handout for *Personality* and *Purpose*](http://journal.roll20.net/handout/-KdlOvcft0A5MZUR1Quv)**}}\n!setattr --charid @{selected|character_id} --silent --MI-used|Whelm doing Shock Wave --MI-cast|Whelm-Stunned --MI-duration|10 --MI-direction|-1 --MI-msg|Stunned roll save vs Staves again --MI-marker|fishing-net --casting-level|12 --casting-name|Whelm'},
						{name:'Whip',type:'Melee',ct:'8',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Whip}}{{subtitle=Whip}}{{Speed=[[8]]}}{{Size=Medium}}{{Weapon=1-handed melee whip}}Specs=[Whip,Melee,1H,Whip]{{To-hit=+0 + Str bonus}}ToHitData=[w:Whip,sb:1,+:0,n:1,ch:20,cm:1,sz:M,ty:N,r:10,sp:8]{{Attacks=1 per round + level \\amp specialisation}}{{Damage=+0, vs SM:1d2, L:1 + Str bonus \\amp entangle}}DmgData=[w:Whip,sb:1,+:0,SM:1d2,L:1]{{desc=A standard Whip of good quality, but nothing special.\nTo inflict damage, the whip must strike exposed or lightly covered flesh. Heavy clothing, thick hair, or fur gives considerable protection until torn away by repeated lashing. The type of armor determines how long it takes the whip to begin doing damage. With heavy clothing, damage begins on the third successful blow; thick hair or fur, on the second; padded armor, on the fourth; leather armor, on the fifth; hide armor, on the sixth. The whip can do no harm through armor heavier than that. Thick hide, such as that of an elephant or rhinoceros, will allow a slight sting at best, with no real damage inflicted.\nWhips can be up to 25ft long, and are useful for Entanglement, with various percentages for achieving this: success = 5% per level for proficient wielders, and if successful, roll 1d100 for result (1-50: a non-weapon limb, 51-60: two limbs, 61-80 weapon wielding limb, 81-00 head). You can use a called shot at -10% on success roll to be able to vary the outcome roll by 20% either way (e.g. so if successful, you could make a 35 into a 55 and entangle 2 limbs instead of one)}}'},
					]},
	MI_DB_Ammo:		{bio:'<blockquote><h2>Weapons Database</h2></blockquote><b>v5.6  01/01/2022</b><br><br>This sheet holds definitions of weapons that can be used in the redMaster API system.  They are defined in such a way as to be lootable and usable magic items for MagicMaster and also usable weapons in attackMaster.',
					gmnotes:'<blockquote>Change Log:</blockquote>v5.6  01/01/2022  Added summoned Rainbow Sheaf Arrows for Rainbow spell<br><br>v5.5  05/11/2021  Split the Weapon and Ammo databases<br><br>v5.4  31/10/2021  Further encoded using machine readable data to support API databases<br><br>v5.3.4  21/08/2021  Fixed incorrect damage for all types of Two-handed Sword<br><br>v5.3.3  07/06/2021  Added the missing Scimitar macro<br><br>v5.3.2  31/05/2021  Cleaned ranged weapon ranges, as specifying a range for the weapon in the {{To-Hit=...}} section will now adjust the range of the ammo by that amount (for extended range weapons).  Self-ammoed weapons (like thrown daggers) should specify their range in the {{Range=...}} section.<br><br>v5.3.1  19/05/2021  Fixed a couple of bugs, missing weapons in the transfer from MI-DB<br><br>v5.3  14/05/2021  All standard weapons from the PHB now encoded.<br><br>v5.2  12/05/2021  Added support for weapon types (S,P,B), and more standard weapons<br><br>v5.1  06/05/2021  Added a number of standard and magical weapons<br><br>v5.0  28/04/2021  Initial separation of weapons listings from the main MI-DB',
					root:'MI-DB',
					controlledby:'all',
					avatar:'https://s3.amazonaws.com/files.d20.io/images/52530/max.png?1340359343',
					version:5.6,
					db:[{name:'-',type:'',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" This is a blank slot in your Magic Item bag. Go search out some new Magic Items to fill it up!'},
						{name:'Barbed-dart',type:'Ammo',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Barbed Dart}}{{subtitle=Ammo for Blowgun}}{{Speed=As per blowgun}}{{Size=Tiny}}Specs=[Barbed Dart,Ammo,1H,Blowgun]{{Ammo=For Blowgun, SM:1d3, L:1d2}}AmmoData=[w:Barbed Dart,t:Blowgun,+:0,SM:1d3,L:1d2,rc:uncharged]{{Range=1/2/3}}RangeData=[t:Blowgun,+:0,r:1/2/3]{{desc=A Blowgun dart, barbed and of good quality but otherwise ordinary}}'},
						{name:'Bullet',type:'Ammo',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Sling Bullet}}{{subtitle=Ammo}}{{Speed=As per sling}}{{Size=Tiny}}Specs=[Bullet,Ammo,1H,Bullet]{{Ammo=+0, vs SM:1+1d4, L:1+1d6}}AmmoData=[w:Bullet,st:Sling,+:0,SM:1+1d4,L:1+1d6],{{Range=Point Blank 6-30,\nShort 31-40,\nMedium 41-80,\nLong 81-160}}RangeData=[t:sling,+:0,r:3/4/8/16]{{desc=A Sling Bullet of good quality but otherwise ordinary}}'},
						{name:'Chalk',type:'Ammo',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Chalk Stone}}{{subtitle=Ammo}}{{Speed=As per sling}}{{Size=Tiny}}Specs=[Chalk,Ammo,1H,Bullet]{{Ammo=+2, vs SM:1+1d4, L:1+1d6}}AmmoData=[w:Chalk,st:Sling,+:2,SM:1+1d4,L:1+1d6]{{Range=Point Blank 6-30,\nShort 31-50,\nMedium 51-100,\nLong 101-200}}RangeData=[t:sling,+:0,r:3/5/10/20]}}{{desc=A piece of teacher\'s chalk, which can be used to great effect in a sling (though teachers can possibly just throw it with the same effect!)}}'},
						{name:'Flight-Arrow+1',type:'Ammo|Ammo',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Flight Arrow+1}}{{subtitle=Magic Weapon}}{{Speed=As per bow}}{{Size=Small}}Specs=[Flight-Arrow,Ammo,1H,Arrow],[Flight-Arrow,Ammo,1H,Arrow]{{Ammo=+1,\n**Warbow** vs. SM:1d8, L:1d8,\n**Other Bows** vs. SM:1d6, L:1d6, Piercing}}AmmoData=[w:Flight Arrow+1,st:Bow,+:1,SM:1d6,L:1d6,rc:uncharged],[w:Warbow Flight Arrow+1,t:warbow,+:1,SM:1d8,L:1d8,rc:uncharged]{{Range=PB:30, others vary by bow\n**Shortbow:**\nS:50, M:100, L150,\n**Longbow:**\nS:60, M:120, L:210,\n**Warbow:**\nS90, M:160, L:250,\n**Composite Sbow:**\nS:50, M:100, L:180,\n**Composite Lbow:**\nS:70, M:140, L:210}}RangeData=[t:longbow,sb:1,+:1,r:3/6/12/21],[t:shortbow,sb:1,+:1,r:3/5/10/15],[t:warbow,+:1,r:3/9/16/25],[t:compositelongbow,sb:1,+:1,r:3/7/14/21],[t:compositeshortbow,sb:1,+:1,r:3/5/10/18]}}{{desc=A magical Flight Arrow of fine quality}}'},
						{name:'Flight-Arrow+2',type:'Ammo|Ammo',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Flight Arrow+2}}{{subtitle=Magic Weapon}}{{Speed=As per bow}}{{Size=Small}}Specs=[Flight-Arrow,Ammo,1H,Arrow],[Flight-Arrow,Ammo,1H,Arrow]{{Ammo=+2,\n**Warbow** vs. SM:1d8, L:1d8,\n**Other Bows** vs. SM:1d6, L:1d6, Piercing}}AmmoData=[w:Flight Arrow+2,st:Bow,sb:1,+:2,SM:1d6,L:1d6],[w:Warbow Flight Arrow+2,t:warbow,sb:1,+:2,SM:1d8,L:1d8]{{Range=PB:30, others vary by bow\n**Shortbow:**\nS:50, M:100, L150,\n**Longbow:**\nS:60, M:120, L:210,\n**Warbow:**\nS90, M:160, L:250,\n**Composite Sbow:**\nS:50, M:100, L:180,\n**Composite Lbow:**\nS:70, M:140, L:210}}RangeData=[t:longbow,+:2,r:3/6/12/21],[t:shortbow,+:2,r:3/5/10/15],[t:warbow,+:2,r:3/9/16/25],[t:compositelongbow,+:2,r:3/7/14/21],[t:compositeshortbow,+:2,r:3/5/10/18]}}{{desc=A magical Flight Arrow of very fine quality}}'},
						{name:'Flight-Arrows',type:'Ammo|Ammo',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Flight Arrow}}{{subtitle=Ammo}}{{Speed=As per bow}}{{Size=Small}}Specs=[Flight-Arrow,Ammo,1H,Arrow],[Flight-Arrow,Ammo,1H,Arrow]{{Ammo=+0,\n**Warbow** vs. SM:1d8, L:1d8,\n**Other Bows** vs. SM:1d6, L:1d6, Piercing}}AmmoData=[w:Flight Arrow,st:Bow,+:0,SM:1d6,L:1d6,rc:uncharged],[w:Warbow Flight Arrow,t:warbow,+:0,SM:1d8,L:1d8,rc:uncharged]{{Range=PB:30, others vary by bow\n**Shortbow:**\nS:50, M:100, L150,\n**Longbow:**\nS:60, M:120, L:210,\n**Warbow:**\nS90, M:160, L:250,\n**Composite Sbow:**\nS:50, M:100, L:180,\n**Composite Lbow:**\nS:70, M:140, L:210}}RangeData=[t:longbow,sb:1,+:0,r:3/6/12/21],[t:shortbow,+:0,r:3/5/10/15],[t:warbow,sb:1,+:0,r:3/9/16/25],[t:compositelongbow,sb:1,+:0,r:3/7/14/21],[t:compositeshortbow,sb:1,+:0,r:3/5/10/18]}}{{desc=A Flight Arrow of good quality but otherwise ordinary}}'},
						{name:'Flight-arrow+?',type:'Ammo',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Flight Arrow+?}}{{subtitle=Magic Weapon}}{{Speed=As per bow}}{{Size=Small}}Specs=[Flight-Arrow,Ammo,1H,Arrow]{{To-hit=Unknown}}{{damage=Unknown}}{{desc=A magical Flight Arrow of very fine quality, but with unknown plusses}}'},
						{name:'Glass-Arrow+3',type:'Ammo|Ammo',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Glass Sheaf Arrow+3}}{{subtitle=Magic Weapon}}{{Speed=As per bow}}{{Size=Small}}Specs=[Glass Arrow,Ammo,1H,Arrow],[Glass Arrow,Ammo,1H,Arrow]{{Ammo=+3 Piercing,\n**Warbow** vs\nSM:1d10, L:1d10\n**Other Bows** vs\nSM:1d8, L:1d8,\nbreaks on use}}AmmoData=[w:Glass Arrow+3,st:Bow,+:3,ru:-1,SM:1d8,L:1d8],[w:Glass Arrow+3,t:warbow,+:3,ru:-1,SM:1d10,L:1d10]{{Range=Varies by bow:\n**Longbow**\nPB:30 S:50 M:100 L:170\n**Shortbow**\nPB:30 S:40 M:80 L:150\n**Warbow**\nPB:30 S:70 M:120 L:210\n**Composite Lbow**\nPB:30 S:50 M:100 L:180\n**Composite Sbow**\nPB:30 S:50 M:100 L:150}}RangeData=[t:longbow,+:3,r:3/5/10/17],[t:shortbow,+:3,r:3/4/8/15],[t:warbow,+:3,r:3/7/12/21],[t:compositelongbow,+:3,r:3/5/10/18],[t:compositeshortbow:,+:3,r:3/5/10/17]{{desc=A magical Sheaf Arrow made of ultra-sharp glass. The arrows always shatter on use.}}'},
						{name:'Glass-arrow+10',type:'Ammo|Ammo',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Glass Sheaf Arrow+3}}{{subtitle=Magic Weapon}}{{Speed=As per bow}}{{Size=Small}}Specs=[Glass Arrow,Ammo,1H,Arrow],[Glass Arrow,Ammo,1H,Arrow]{{Ammo=+10 Piercing,\n**Warbow** vs\nSM:1d10, L:1d10\n**Other Bows** vs\nSM:1d8, L:1d8,\nbreaks on use}}AmmoData=[w:Glass Arrow+10,st:Bow,+:10,ru:-1,SM:1d8,L:1d8],[w:Glass Arrow+10,t:warbow,+:10,ru:-1,SM:1d10,L:1d10]{{Range=Varies by bow:\n**Longbow**\nPB:30 S:50 M:100 L:170\n**Shortbow**\nPB:30 S:40 M:80 L:150\n**Warbow**\nPB:30 S:70 M:120 L:210\n**Composite Lbow**\nPB:30 S:50 M:100 L:180\n**Composite Sbow**\nPB:30 S:50 M:100 L:150}}RangeData=[t:longbow,+:10,r:3/5/10/17],[t:shortbow,+:10,r:3/4/8/15],[t:warbow,+:10,r:3/7/12/21],[t:compositelongbow,+:10,r:3/5/10/18],[t:compositeshortbow:,+:10,r:3/5/10/17]{{desc=A magical Sheaf Arrow made of ultra-sharp glass. The arrows always shatter on use.}}'},
						{name:'Hand-Quarrel',type:'Ammo',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Hand Quarrel}}{{subtitle=Ammo}}{{Speed=As per crossbow}}{{Size=Tiny}}Specs=[Hand-Quarrel,Ammo,1H,Quarrel]{{Ammo=+0, vs SM:1d3, L:1d2, Piercing}}AmmoData=[w:Hand Quarrel,t:Hand Crossbow,+:0,SM:1d3,L:1d2]{{Range=PB:20, S:20, M:40, L:60}}RangeData=[t:Hand Crossbow,+:0,r:2/2/4/6]{{desc=A quarrel for a hand crossbow, of good quality but otherwise ordinary}}'},
						{name:'Heavy-Quarrel',type:'Ammo',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Heavy Quarrel}}{{subtitle=Ammo}}{{Speed=As per crossbow}}{{Size=Tiny}}Specs=[Heavy-Quarrel,Ammo,1H,Quarrel]{{Ammo=+0, vs SM:1d4+1, L:1d6+1, Piercing}}AmmoData=[w:Heavy Quarrel,t:Heavy Crossbow,+:0,SM:1+1d4,L:1+1d6],{{Range=PB:30 S:80 M:160 L:240}}RangeData=[t:Heavy Crossbow,+:0,r:3/8/16/24]{{desc=A quarrel for a heavy crossbow, of good quality but otherwise ordinary}}'},
						{name:'Heavy-Xbow-Bolt+2',type:'Ammo',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Magic Crossbow Bolts}}{{subtitle=Magic Ammo}}{{Size=Tiny}}Specs=[Heavy-Quarrel,Ammo,1H,Quarrel]{{Ammo=+2, vs SM:1d4+1, L:1d6+1, no other bonuses}}AmmoData=[t:heavy-crossbow,st:heavy-crossbow,sb:0,+:2,SM:1+1d4,L:1+1d6]{{Range=PB:30 S:80 M:160 L:240}}RangeData=[t:heavy-crossbow,+:2,r:3/8/16/24]{{desc=Fine quality heavy crossbow bolts which are +2 on to-hit and damage. The tips are sharp and keen, and are very shiny.}}'},
						{name:'Indirect',type:'',ct:'0',charge:'uncharged',cost:'0',body:'@{'},
						{name:'Light-Quarrel',type:'Ammo',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Light Quarrel}}{{subtitle=Ammo}}{{Speed=As per crossbow}}{{Size=Tiny}}Specs=[Light Quarrel,Ammo,1H,Quarrel]{{Ammo=+0, vs SM:1d4, L:1d4}}AmmoData=[w:Light Quarrel,t:Light Crossbow,+:0,SM:1d4,L:1d4]{{Range=PB:30 S:60 M:120 L:180}}RangeData=[t:Light Crossbow,+:0,r:3/6/12/18]{{desc=A quarrel for a light crossbow, of good quality but otherwise ordinary}}'},
						{name:'Magic-Ammo',type:'Ammo',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Unknown Magical Ammo}}{{subtitle=Magic Ammo}}{{Speed=As per ranged weapon?}}{{Size=Small}}Specs=[Magic-Ammo,Ammo,1H,Ammo]{{To-hit=Unknown}}{{damage=Unknown}}{{desc=Magical Ammo of fine quality}}'},
						{name:'Magic-Heavy-Xbow-Bolts',type:'Ammo',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Magic Crossbow Bolts}}{{subtitle=Magic Ammo}}{{Size=Tiny}}Specs=[Magic-Ammo,Ammo,1H,Ammo]{{Ammo=[t:heavy-xbow,st:heavy-xbow,sb:0,+:2,SM:1+1d4,L:1+1d6]}}{{desc=Fine quality heavy crossbow bolts. The tips are sharp and keen, and are very shiny.}}'},
						{name:'Magical-Sheaf-Arrows',type:'Ammo',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Unknown Magical Sheaf Arrow}}{{subtitle=Magic Ammo}}{{Speed=As per bow?}}{{Size=Small}}Specs=[Magic-Ammo,Ammo,1H,Ammo]{{To-hit=Unknown}}{{damage=Unknown}}{{desc=A magical Sheaf Arrow of fine quality}}'},
						{name:'Manticore-Tail-Spikes',type:'Ranged',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Manticore Tail Spikes}}{{subtitle=Ammo}}{{Size=Tiny}}Specs=[Manticore Tail Spikes,Ranged,1H,Quarrel]{{Ammo=+1, vs SM:1d6, L:1d6, for a light crossbow with no other bonuses}}AmmoData=[t:light-crossbow,st:light-crossbow,sb:0,+:1,SM:1d6,L:1d6]{{Range=PB:30 S:60 M:120 L:180}}RangeData=[t:light-crossbow,+:2,r:3/6/12/18]{{desc=These Manticore Tail Spikes can be used as ammunition for a light crossbow with a +1 to hit \\amp on damage}}'},
						{name:'Needle',type:'Ammo',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Needle}}{{subtitle=Ammo for Blowgun}}{{Speed=As per blowgun}}{{Size=Tiny}}Specs=[Needle,Ammo,1H,Blowgun]{{Ammo=+0, vs SM:1, L:1, no bonuses}}AmmoData=[w:Needle,t:Blowgun,+:0,SM:1,L:1]{{Range=S:10, M:20, L:30}}RangeData=[t:Blowgun,+:0,r:1/2/3]{{desc=A Blowgun needle, tiny and sharp, of good quality but otherwise ordinary - careful! Perhaps dipped in poison?}}'},
						{name:'Rainbow-Sheaf-Arrow',type:'Ammo',ct:'0',charge:'recharging',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Rainbow Sheaf Arrow+2}}{{subtitle=Magic Weapon}}{{Speed=As per bow}}{{Size=Small}}Specs=[Rainbow-Sheaf-Arrow,Ammo,1H,Arrow]{{Ammo=+2,\n**Rainbow Bow** vs. SM:1d8, L:1d8}}AmmoData=[w:Rainbow-Sheaf Arrow+2,st:Rainbow-Bow,sb:1,+:2,SM:1d8,L:1d8,rc:recharging]{{Range=PB:30, S:50, M:100, L:170}}RangeData=[t:rainbow-bow,+:2,r:3/5/10/17]}}{{desc=A magical rainbow-hewed Sheaf Arrow of pure magic. See *Rainbow* spell for full details.}}'},
						{name:'Sheaf-Arrow+1',type:'Ammo',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Sheaf Arrow+1}}{{subtitle=Magic Weapon}}{{Speed=As per bow}}{{Size=Small}}Specs=[Sheaf-Arrow,Ammo,1H,Arrow]{{Ammo=+1,\n**Warbow** vs. SM:1d10, L:1d10,\n**Other Bows** vs. SM:1d8, L:1d8, Piercing}}AmmoData=[w:Sheaf Arrow+1,st:Bow,sb:1,+:1,SM:1d8,L:1d8],[w:Warbow Sheaf Arrow+1,t:warbow,sb:1,+:1,SM:1d10,L:1d10]{{Range=PB:30, others vary by bow\n**Shortbow:**\nS:50, M:100, L150,\n**Longbow:**\nS:50, M:100, L:170,\n**Warbow:**\nS70, M:120, L:210,\n**Composite Sbow:**\nS:50, M:100, L:170,\n**Composite Lbow:**\nS:70, M:100, L:180}}RangeData=[t:longbow,+:1,r:3/5/10/17],[t:shortbow,+:1,r:3/5/10/15],[t:warbow,+:1,r:3/7/12/21],[t:compositelongbow,+:1,r:3/5/10/18],[t:compositeshortbow,+:1,r:3/5/10/17]}}{{desc=A magical Sheaf Arrow of fine quality}}'},
						{name:'Sheaf-Arrow+2',type:'Ammo',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Sheaf Arrow+2}}{{subtitle=Magic Weapon}}{{Speed=As per bow}}{{Size=Small}}Specs=[Sheaf-Arrow,Ammo,1H,Arrow]{{Ammo=+2,\n**Warbow** vs. SM:1d10, L:1d10,\n**Other Bows** vs. SM:1d8, L:1d8, Piercing}}AmmoData=[w:Sheaf Arrow+2,st:Bow,sb:1,+:2,SM:1d8,L:1d8],[w:Warbow Sheaf Arrow+2,t:warbow,sb:1,+:2,SM:1d10,L:1d10]{{Range=PB:30, others vary by bow\n**Shortbow:**\nS:50, M:100, L150,\n**Longbow:**\nS:50, M:100, L:170,\n**Warbow:**\nS70, M:120, L:210,\n**Composite Sbow:**\nS:50, M:100, L:170,\n**Composite Lbow:**\nS:70, M:100, L:180}}RangeData=[t:longbow,+:2,r:3/5/10/17],[t:shortbow,+:2,r:3/5/10/15],[t:warbow,+:2,r:3/7/12/21],[t:compositelongbow,+:2,r:3/5/10/18],[t:compositeshortbow,+:2,r:3/5/10/17]}}{{desc=A magical Sheaf Arrow of very fine quality}}'},
						{name:'Sheaf-Arrows',type:'Ammo',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Sheaf Arrow}}{{subtitle=Ammo}}{{Speed=As per bow}}{{Size=Small}}Specs=[Sheaf-Arrow,Ammo,1H,Arrow]{{Ammo=+0,\n**Warbow** vs. SM:1d10, L:1d10,\n**Other Bows** vs. SM:1d8, L:1d8, Piercing}}AmmoData=[w:Sheaf Arrow,st:Bow,sb:1,+:0,SM:1d8,L:1d8],[w:Warbow Sheaf Arrow,t:warbow,sb:1,+:0,SM:1d10,L:1d10]{{Range=PB:30, others vary by bow\n**Shortbow:**\nS:50, M:100, L150,\n**Longbow:**\nS:50, M:100, L:170,\n**Warbow:**\nS70, M:120, L:210,\n**Composite Sbow:**\nS:50, M:100, L:170,\n**Composite Lbow:**\nS:70, M:100, L:180}}RangeData=[t:longbow,+:0,r:3/5/10/17],[t:shortbow,+:0,r:3/5/10/15],[t:warbow,+:0,r:3/7/12/21],[t:compositelongbow,+:0,r:3/5/10/18],[t:compositeshortbow,+:0,r:3/5/10/17]}}{{desc=A Sheaf Arrow of good quality but otherwise ordinary}}'},
						{name:'Silver-Bullets',type:'Ammo',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Silver Bullet}}{{subtitle=Ammo}}{{Speed=As per sling}}{{Size=Tiny}}Specs=[Silver Bullet,Ammo,1H,Bullet]{{Ammo=+0, vs SM:1d4+1, L:1d6+1, no bonuses}}[w:Silver Bullet,st:Sling,+:0,SM:1+1d4,L:1+1d6]{{Range=PB:30 S:40 M:80 L:160}}RangeData=[t:sling,+:0,r:3/4/8/16]{{desc=A Sling Bullet coated or made of silver of good quality but otherwise ordinary}}'},
						{name:'Silver-tipped-Sheaf',type:'Ammo',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Silver-Tipped Sheaf Arrow}}{{subtitle=Ammo}}{{Speed=As per bow}}{{Size=Small}}Specs=[Sheaf Arrow,Ammo,1H,Arrow]{{Ammo=+0,\n**Warbow** vs. SM:1d10, L:1d10,\n**Other Bows** vs. SM:1d8, L:1d8, Piercing}}AmmoData=[w:Silver Sheaf Arrow,st:Bow,+:0,SM:1d8,L:1d8],[w:Warbow Silver Sheaf Arrow,t:warbow,+:0,SM:1d10,L:1d10]}}{{Range=PB:30, others vary by bow\n**Shortbow:**\nS:50, M:100, L150,\n**Longbow:**\nS:50, M:100, L:170,\n**Warbow:**\nS70, M:120, L:210,\n**Composite Sbow:**\nS:50, M:100, L:170,\n**Composite Lbow:**\nS:70, M:100, L:180}}RangeData=[t:longbow,+:0,r:3/5/10/17],[t:shortbow,+:0,r:3/5/10/15],[t:warbow,+:0,r:3/7/12/21],[t:complbow,+:0,r:3/5/10/18],[t:compsbow:,+:0,r:3/5/10/17]5}}{{desc=A Sheaf Arrow of good quality with a silver tip, good against werecreatures}}'},
						{name:'Stone',type:'Ammo',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Sling Stone}}{{subtitle=Ammo}}{{Speed=As per sling}}{{Size=Tiny}}Specs=[Stone,Ammo,1H,Bullet]{{Ammo=+0, no bonuses}}AmmoData=[w:Stone,st:Sling,+:0,SM:1+1d4,L:1+1d6]{{Range=PB:20 S:30 M:60 L:120}}RangeData=[t:sling,+:0,r:2/3/6/12]}}{{desc=A nicely rounded stone that can be used in a sling}}'},
					]},
	MU_Spells_DB:	{bio:'<blockquote>Magic User Spell Database</blockquote><b>v5.6 31/10/2021</b><br><br>This database holds the definitions and API calls to enact Wizard Spells.  Spells can be memorised, and once used disapear from memory, only being refreshed on a long rest (1st level spells can optionally be refreshed on a short rest).  Characters, NPCs and Monsters can learn, memorise and use these spells via the abilities, menus and commands of the MagicMaster API<br><br><b>Important Note:</b> most of the spell macros require a Roll20 Pro membership, and the installation of the ChatSetAttr, TokenMod, MagicMaster and RoundMaster API Scripts, to allow parameter passing between macros, update of character sheet variables, and marking spell effects on tokens.  If you do not have this level of subscription, I highly recommend you get it as a DM, as you get lots of other goodies as well.  If you want to know how to load the API Scripts to your game, the RoLL20 API help here gives guidance, or Richard can help you.<br><br>Instructions<br><br>In order to understand the format of spell macros in this database and how to change or add to them, please refer to the MagicMaster API documentation.',
					gmnotes:'<blockquote>Change Log:</blockquote>v5.6  01/01/2022  Added all remaining spells from the PHB<br><br>v5.1 - 5.5 Skipped to even up version numbers<br><br>v5.0  31/10/2021  Encoded using machine readable data to support API databases<br><br>v4.4     16/10/2021  Added Area of Effect display<br><br>v4.3.1  03/09/2021  Added spells for WPM The Undiscovered Caverns<br><br>v4.3    02/09/2021  Added all 1st & 2nd level spells<br><br>v4.2.1  01/05/2021  Extensive bug checking & fixing<br><br>v4.2  26/03/2021  Implemented spell targeting using the MagicMaster API<br><br>v4.1.7  14/02/2021  Changed all !setattr --sel parameters to be --charid instead, so they can work more easily with the MagicMaster API.<br><br>v4.1.6  27/01/2021  Added Blur as a spell<br><br>v4.1.5  22/01/2021  Added a button to Magic Missile spell to fire all missiles at one target<br><br>v4.1.4  19/01/2021  Added spells gained by MUs in both low level and high level campaigns<br><br>v4.1.3  17/12/2020  Updated several spells with duration statuses and effects (for Dr Lexicon)<br><br>v4.1.2  30/11/2020  Added spells for Steve L.\'s ported characters in low level campaign<br><br>v4.1.1  22/11/2020  Added spell effect marker to Detect-Magic, and corrected some minor typos<br><br>v4.1  16/11/2020  Split the spells database from the Macro Library processing to reduce the size of the library which might have been triggering randomisation of the macro sort order<br><br>v4.0.1  07/11/2020  Copy in fix v3.5.4<br><br>v4.0  29/10/2020 v4 has cost of material components as per v3.4 turned on (v3 has them turned off)<br><br>v3.5.4  07/11/2020  Fixed bug with setting common variables for casting level & name<br><br>v3.5.3  29/10/2020  Fixed bug with Initialising sheet variables<br><br>v3.5.2  20/10/2020  Added Slow as a spell<br><br>v3.5.1 12/10/2020  Updated Long Rests to set ammo maximums to ammo remaining, to reflect that any not recovered when you rest are lost<br><br>v3.5  06/10/2020  Linked Long Rests with the Campaign Calendar, and prevented Long Rests until the DM does the "End of Day" procedure to charge daily costs.<br><br>v3.4.1  29/09/2020 Bug fix to allow older character sheets to use Short & Long Rests without errors.<br><br>v3.4  24/09/2020  Added costs of materials as \'max\' value of CT- spell entries, then deduct from gold when cast.<br><br>v3.3  18/09/2020  Changed to normally cast at spell-casters level, and allow separate change to level if needed.  Constructed so casting level and caster\'s name can be set separately<br><br>v3.2.1 16/09/2020 Tweaked for Lost & Found campaign<br><br>v3.2  05/09/2020  Updated all the marker effect names to cater for the new Effect functionality, and allow multiple overlapping spell effects to work properly<br><br>v3.1  28/08/2020  Added spells for White Plume Mountain.  Also added the ability to [Review] spells from spells known/granted to the character before Memorising them.<br><br>v3.0  25/08/2020  Vetted & updated ready for Roger\'s campaign.  Also changed all calls to !tj to take \'--\' as the command introducer and allow multiple commands in one call and forcing execution in order, so as to overcome asynchronous processing issues.<br><br>v2.8  23/08/2020  Updated all spells after Simon\'s The Desecrated Temple campaign to reflect level increases, and to ensure all were internally consistent.<br><br>v2.7  17/08/2020  Saving throw buttons were missing their \'!\', and so did not even appear!  Fixed<br><br>v2.6  08/08/2020  Changed whispers /w using Token_name to instead use Character_name, as if they were different, errors occurred.<br><br>v2.5  06/08/2020  Coordinated and updated all spell effect markers across all MIs and Spell libraries.<br><br>v2.4  03/08/2020  Added the MU-Spells-menu macro to provide a succinct menu to access MU-Spell functions.<br><br>v2.3  31/07/2020 Added the use of token markers to indicate spell effects and durations<br><br>v2.2 16/07/2020 Added multiple spell use macros to cater for current spell knowledge in SB\'s Desecrated Temple party<br><br>v2.1 12/07/2020 Updated and corrected bugs in the Cast-spell, Memorise-Ln-spells, Reset-spells and Blank-Spellbook macros<br><br>v2.0 Conversion of all spells to use default Roll Templates, with API Buttons for relevant dice rolls.  Addition of the Spellbook macro, and the capability to have a list of known spells from which spells for the day can be memorised.<br><br>v1.0 Initial release',
					root:'MU-Spells-DB',
					controlledby:'all',
					avatar:'https://s3.amazonaws.com/files.d20.io/images/163483347/1CLiNzi4jlxXK1-lVr7MTQ/max.png?1599726214',
					version:5.7,
					db:[{name:'-',type:'',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" @{selected|token_name} suddenly realises he has another unfilled page in his spellbook!'},
						{name:'Advanced-Illusion',type:'MUspellL5',ct:'10',charge:'uncharged',cost:'0.02',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casting\nAdvanced Illusion\nas a level @{selected|casting-level} caster}}{{splevel=Level 5 Wizard}}{{school=Illusion-Phantasm}}Specs=[Advanced Illusion,MUspellL5,1H,Illusion-Phantasm]{{components=V,S,M}}{{time=[[1]] round}}{{range=[[60+(10*@{selected|casting-level})]] yards}}{{duration=[[@{selected|casting-level}]] rounds}}{{aoe=[40ft.cu.+ @{selected|casting-level} x 10ft.cu.s](!rounds --aoe @{selected|token_id}|rectangle|feet|[[180+(30*@{selected|casting-level})]]|||)}}{{save=[Special](!\\amp#13;\\amp#47;gmroll 1d20 save vs. Advanced Illusion spell)}}{{reference=PHB p164}}{{healing=[Show Illusion](!rounds --target caster|@{selected|token_id}|Advanced-illusion|@{selected|casting-level}|-1|Wow - that looks real. \n Advanced Illusion looks good|three-leaves)}}SpellData=[w:Advanced Illusion,lv:5,sp:10,gp:0.02,cs:VSM]{{effects=A *spectral forces* spell that operates through a program. Unnecessary for the wizard to concentrate on the spell after casting it. }}{{materials=A bit of fleece and several grains of sand - 2cp to source}}'},
						{name:'Affect-Normal-Fires',type:'MUspellL1',ct:'1',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nAffect Normal Fires\nas a level @{selected|casting-level} caster}}{{splevel=Level 1 Wizard}}{{school=Alteration}}Specs=[Affect-Normal-Fires,MUspellL1,1H,Alteration]{{components=V, S}}{{time=[[1]]}}{{range=[[5*@{selected|casting-level}]]ft.}}{{duration=[[2*@{selected|casting-level}}}{{aoe=[10ft radius](!rounds --aoe @{selected|token_id}|circle|feet|[[5*@{selected|casting-level}]]|20||cold)}}{{save=None}}{{reference=PHB p131}}SpellData=[w:Affect-Normal-Fires,lv:1,sp:1,gp:0,cs:VS]{{effects=Enables wizard to affect any or all normal fires in area.}}'},
						{name:'Air-Breathing',type:'MUspellL3',ct:'3',charge:'uncharged',cost:'0.01',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nAir Breathing\nas a level @{selected|casting-level} caster}}{{splevel=Level 3 Wizard}}{{school=Alteration}}Specs=[Air Breathing,MUspellL3,1H,Alteration]{{components=V, S, M}}{{time=3}}{{range=Touch}}{{duration=[1d4+@{selected|casting-level}](!\\amp#13;\\amp#47;gmroll 1d4+@{selected|casting-level} hours duration) hours}}{{aoe=Creatures touched}}{{save=None}}{{reference=PHB p153}}{{healing=[Cast air breathing](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Select fish out of water|token_id}|Air-Breathing|99|0|Comfortably breathe underwater|strong)}}SpellData=[w:Air-Breathing,lv:3,sp:3,gp:0.01,cs:VSM]{{effects=An aquatic recipient of a air breathing spell is able to breathe air freely for the duration of the spell.}}{{materials=A short reed or piece of straw costing 1cp.}}'},
						{name:'Airy-Water',type:'MUspellL5',ct:'5',charge:'uncharged',cost:'0.5',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casting\nAiry Water\nas a level @{selected|casting-level} caster}}{{splevel=Level 5 Wizard}}{{school=Alteration}}Specs=[Airy Water,MUspellL5,1H,Alteration]{{components=V,S,M}}{{time=[[5]]}}{{range=[[0]]}}{{duration=[[@{selected|casting-level}]] turns}}{{aoe=[10ft radius sphere](!rounds --target caster|@{selected|token_id}|Airy-water-10|[[10*@{selected|casting-level}]]|-1|Ah, room to breathe|aura) or [15ft radius hemisphere](!rounds --target caster|@{selected|token_id}|Airy-water-15|[[10*@{selected|casting-level}]]|-1|Ah, room to breathe|aura)}}{{save=None}}{{reference=PHB p165}}SpellData=[w:Airy Water,lv:5,sp:5,gp:0.5,cs:VSM]{{effects=Turns normal liquid, such as water or water-based solutions, into a less dense, breathable substance.}}{{materials=A small handful of alkaline or bromine salts, costing 5sp as magic ingredients}}'},
						{name:'Alarm',type:'MUspellL1',ct:'10',charge:'uncharged',cost:'0.3',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nAlarm\nas a level @{selected|casting-level} caster}}{{splevel=Level 1 Wizard}}{{school=Abjuration,Evocation}}Specs=[Alarm,MUspellL1,1H,Abjuration|Evocation]{{components=V, S, M}}{{time=[[10]]}}{{range=[[10]]yds}}{{duration=[[4+(@{selected|casting-level}/2)]] hours}}{{aoe=[Up to 20ft cube](!rounds --aoe @{selected|token_id}|square|feet|30||20|dark)}}{{save=None}}{{reference=PHB p131}}SpellData=[w:Alarm,lv:1,sp:10,gp:0.3,cs:VSM]{{effects=Causes selected area to react to presence of any creature larger than 1/2 cu.ft in volume or 3lbs in weight, e.g. larger than a rat.}}{{materials=A tiny bell and a piece of very fine silver wire costing 3sp.}}'},
						{name:'Alter-self',type:'MUspellL2',ct:'2',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nAlter Self\nas a level @selected|casting-level} caster}}{{splevel=Level 2 Wizard}}{{school=Alteration}}Specs=[Alter-Self,MUspellL2,1H,Alteration]{{components=V, S}}{{time=[[2]]}}{{range=[[0]]}}{{duration=3d4+[[2*@{selected|casting-level}]] rounds}}{{aoe=The caster}}{{save=None}}{{reference=PHB p139}}{{healing=[Alter Self](!rounds --target caster|@{selected|token_id}|Alter-Self|\\amp#91;[3d4+[[2*@{selected|casting-level}]]\\amp#93;]|-1|Altered self, normal attk+dmg|strong)}}SpellData=[w:Alter-Self,lv:2,sp:2,gp:0,cs:VS]{{effects=Alter the caster\'s appearance and form--including clothing and equipment--to appear taller or shorter; thin, fat, or in between; human, humanoid, or any other generally man-shaped bipedal creature.}}'},
						{name:'Animal-Growth',type:'MUspellL5',ct:'5',charge:'uncharged',cost:'0.01',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casting\nAnimal Growth\nas a level @{selected|casting-level} caster}}{{splevel=Level 5 Wizard}}{{school=Alteration (reversible)}}Specs=[Animal Growth,MUspellL5,1H,Alteration]{{components=V,S,M}}{{time=[[5]]}}{{range=[[60]] yards}}{{duration=[[@{selected|casting-level}]] rounds}}{{aoe=Upto 8 animals in a [20ft. cube](!rounds --aoe @{selected|token_id}|square|feet|180|20||magic)}}{{save=None}}{{healing=[Grow Animals](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Which animals?|token_id}|Animal-growth|@{selected|casting-level}|-1|This animal is enormous! 2x HD \\amp dmg|strong)}}{{reference=PHB p165}}SpellData=[w:Animal Growth,lv:5,sp:5,gp:0.01,cs:VSM]{{effects=All designated animals, up to a max eight, within a 20ft.sq. area to grow to double normal size. Doubled Hit Dice (with improvement in attack rolls) and doubled damage in combat. Only natural animals, including giant forms, can Grow}}{{materials=A pinch of powdered bone - 1cp cost}}'},
						{name:'Animate-Dead',type:'MUspellL5',ct:'5',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nAnimate Dead\nas a level @{selected|casting-level} caster}}{{splevel=Level 5 Wizard}}{{school=Necromancy}}Specs=[Animate Dead,MUspellL5,1H,Necromancy]{{components=V,S,M}}{{time=[[5]]}}{{range=[10 yards](!rounds --aoe @{selected|token_id}|circle|yards|0|20||lightning|true)}}{{duration=Permanent}}{{aoe=Special}}{{save=None}}{{reference=PHB p165}}SpellData=[w:Animate-Dead,lv:5,sp:5,gp:0,cs:VSM]{{effects=Creates the lowest of the undead monsters--skeletons or zombies--usually from the bones or bodies of dead humans, demihumans, or humanoids.}}{{materials=A drop of blood and a pinch of bone powder or a bone shard, costing nothing}}'},
						{name:'Antimagic-Shell',type:'MUspellL6',ct:'1',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nAntimagic Shell\nas a level @{selected|casting-level} caster}}{{splevel=Level 6 Wizard}}{{school=Abjuration}}Specs=[Antimagic Shell,MUspellL6,1H,Abjuration]{{components=V,S}}{{time=[[1]]}}{{range=[[0]]}}{{duration=[[@{selected|casting-level}]] turns}}{{aoe=[[[@{selected|casting-level}]] ft. diameter](!rounds --target caster|@{selected|token_id}|Antimagic-shell|[[10*@{selected|casting-level}]]|-1|Protected by an antimagic shell|white-tower)}}{{save=None}}{{reference=PHB p173}}SpellData=[w:Antimagic Shell,lv:6,sp:1,gp:0,cs:VS]{{effects=Surrounds caster with an invisible barrier that moves with him. Within this barrier is totally impervious to all magic and spell effects.}}'},
						{name:'Antipathy-Sympathy',type:'MUspellL8',ct:'600',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casting\nAntipathy-Sympathy\nas a level @{selected|casting-level} caster}}{{splevel=Level 8 Wizard}}{{school=Enchantment-Charm}}Specs=[Antipathy-Sympathy,MUspellL8,1H,Enchantment-Charm]{{components=V,S,M}}{{time=[[1]] hour}}{{range=[[30]] yards}}{{duration=[[2*@{selected|casting-level}]] hours}}{{aoe=[10ft. cube](!rounds --aoe @{selected|token_id}|square|feet|[[120*@{selected|casting-level}]]|10||magic) or one item}}{{save=[Special](!\\amp#13;\\amp#47;gmroll 1d20 save vs. Antipathy-Sympathy spell)}}{{reference=PHB p188}}SpellData=[w:Antipathy-Sympathy,lv:8,sp:600,gp:0,cs:VSM]{{effects=\n[Antipathy](!rounds --target caster|@{selected|token_id}|Antipathy|[[120*@{selected|casting-level}]]|-1|Area of Antipathy is currently active|screaming): Causes the affected creature or alignment type to feel an overpowering urge to leave the area or to not touch the affected item.\n[Sympathy](!rounds --target caster|@{selected|token_id}|Sympathy|[[120*@{selected|casting-level}]]|-1|Area of Sympathy is currently active|grab): Cause a type of creature or alignment of character to irresistibly want to be in an area or touching or possessing an item.}}{{materials=\n*Antipathy*: a lump of alum soaked in vinegar.\n*Sympathy*: 1,000 gp worth of crushed pearls and a drop of honey}}'},
						{name:'Armour',type:'MUspellL1',ct:'10',charge:'uncharged',cost:'10',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nArmour\nas a level @{selected|casting-level} caster}}{{splevel=Level 1 Wizard}}{{school=Conjuration/Summoning}}Specs=[Armour,MUspellL1,1H,Conjuration-Summoning]{{components=V, S, M}}{{time=[[1]] Round}}{{range=Touch}}{{duration=Lasts until the target takes [[8+({10,@{selected|casting-level}}kl1)]] points of damage}}{{aoe=Creature Touched}}{{save=None}}{{reference=PHB p131}}{{healing=[Armour yourself](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Select recipient|token_id}|Armour|99|0|Armoured AC6 plus Dex bonus|bolt-shield)}}SpellData=[w:Armour,lv:1,sp:10,gp:10,cs:VSM]{{effects=Bestows an AC of [[6]]. No effect on armoured targets or creatures with AC [[6]] or better.}}{{materials=A piece of finely cured leather blessed by a Cleric for a 10gp donation to the Temple which joins with the Wizards clothes}}'},
						{name:'Astral-Spell',type:'MUspellL9',ct:'9',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casting\nAstral Spell\nas a level @{selected|casting-level} caster}}{{splevel=Level 9 Wizard}}{{school=Evocation}}Specs=[Astral Spell,MUspellL9,1H,Evocation]{{components=V,S}}{{time=9}}{{range=Touch}}{{duration=Special}}{{aoe=Special}}{{save=None}}{{reference=PHB p194}}SpellData=[w:Astral Spell,lv:8,sp:9,gp:0,cs:VS]{{effects=Project the caster\'s astral body into the Astral Plane, leaving his physical body and material possessions behind in the Prime Material Plane.}}'},
						{name:'Attraction',type:'MUspellL5',ct:'5',charge:'uncharged',cost:'0.01',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casting\nAttraction\nas a level @{selected|casting-level} caster}}{{splevel=Level 5 Wizard}}{{school=Abjuration, Alteration (reversible)}}Specs=[Attraction,MUspellL5,1H,Abjuration|Alteration]{{components=V,S,M}}{{time=[[5]]}}{{range=[[10]] yards}}{{duration=Permanent (until dispelled)}}{{aoe=[Upto 3ft. cube](!rounds --aoe @{selected|token_id}|square|feet|30|3||magic)}}{{save=[Special](!\\amp#13;\\amp#47;gmroll 1d20 save vs. Attraction spell)}}{{reference=PHB p165}}SpellData=[w:Attraction,lv:5,sp:5,gp:0.01,cs:VSM]{{effects=Sets up a natural attraction between the affected object and all other living things except the caster.}}{{materials=A magnetized needle, costing 10cp to create or buy, and reusable 10 times}}'},
						{name:'Audible-Glamer',type:'MUspellL1',ct:'1',charge:'uncharged',cost:'0.01',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nAudible Glamer\nas a level @{selected|casting-level} caster}}{{splevel=Level 1 Wizard}}{{school=Illusion/Phantasm}}Specs=[Audible Glamer,MUspellL1,1H,Illusion-Phantasm]{{components=V, S, M}}{{time=[[1]]}}{{range=[[60+(10*@{selected|casting-level})]]yds}}{{duration=[[3*@{selected|casting-level}]] rounds}}{{aoe=Hearing range}}{{save=[Special](!\\amp#13;\\amp#47;gmroll 1d20 saving throw)}}{{reference=PHB p131}}SpellData=[w:Audible-Glamer,lv:1,sp:1,gp:0.01,cs:VSM]{{effects=The wizard causes a volume of sound to arise, at whatever distance he desires (within range), and seem to recede, approach, or remain at a fixed place as desired.}}{{materials=A bit of wool or a small lump of wax costing 1cp}}'},
						{name:'Avoidance',type:'MUspellL5',ct:'5',charge:'uncharged',cost:'0.01',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casting\nAvoidance\nas a level @{selected|casting-level} caster}}{{splevel=Level 5 Wizard}}{{school=Abjuration, Alteration (reversible)}}Specs=[Avoidance,MUspellL5,1H,Abjuration|Alteration]{{components=V,S,M}}{{time=[[5]]}}{{range=[[10]] yards}}{{duration=Permanent (until dispelled)}}{{aoe=[Upto 3ft. cube](!rounds --aoe @{selected|token_id}|square|feet|30|3||magic)}}{{save=[Special](!\\amp#13;\\amp#47;gmroll 1d20 save vs. Avoidance spell)}}{{reference=PHB p165}}SpellData=[w:Avoidance,lv:5,sp:5,gp:0.01,cs:VSM]{{effects=Sets up a natural repulsion between the affected object and all other living things except the caster.}}{{materials=A magnetized needle, costing 10cp to create or buy and usable 10 times}}'},
						{name:'Banishment',type:'MUspellL7',ct:'7',charge:'uncharged',cost:'10',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nBanishment\nas a level @{selected|casting-level} caster}}{{splevel=Level 7 Wizard}}{{school=Abjuration}}Specs=[Banishment,MUspellL7,1H,Abjuration]{{components=V,S,M}}{{time=[[7]]}}{{range=[[20]] yards}}{{duration=Instantaneous}}{{aoe=[60ft radius](!rounds --aoe @{selected|token_id}|circle|yards|20|40||magic)}}{{save=[Special](!\\amp#13;\\amp#47;gmroll 1d20 save vs. Banishment spell)}}{{reference=PHB p182}}SpellData=[w:Banishment,lv:7,sp:7,gp:10,cs:VSM]{{effects=Force some extraplanar creature out of the caster\'s home plane.}}'},
						{name:'Bestow-Curse',type:'MUspellL4',ct:'4',charge:'uncharged',cost:'0',body:'!magic --touch @{selected|token_id}|Bestow-curse|[[10*@{selected|casting-level}]]|-1|Suffers a terrible curse|broken-skull)\n/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casting\nBestow Curse\nas a level @{selected|casting-level} caster}}{{splevel=Level 4 Wizard}}{{school=Abjuration}}Specs=[Bestow Curse,MUspellL4,1H,Abjuration]{{components=V,S}}{{time=[[4]]}}{{range=[Touch](~selected|To-Hit-Spell)}}{{duration=[[@{selected|casting-level}]] turns}}{{aoe=1 creature or object}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 save vs. Bestow Curse spell)}}{{reference=PHB p162}}SpellData=[w:Bestow Curse,lv:4,sp:4,gp:0,cs:VS]{{effects=causes one of the following effects (roll percentile dice):\nD100 Roll Result\n**1-50** Lowers one ability of the subject to 3 (the DM determines which by random selection)\n**51-75** Worsens the subject\'s attack rolls and saving throws by -4\n**76-00** Makes the subject 50% likely per turn to drop whatever it is holding (or simply do nothing, in the case of creatures not using tools)\nIt is possible for a wizard to devise his own curse, and it should be similar in power to those given (the DM has final say). The subject of a bestow curse spell must be touched. If the subject is touched, a saving throw is still applicable; if it is successful, the effect is negated. The bestowed curse cannot be dispelled.}}'},
						{name:'Bigbys-Clenched-Fist',type:'MUspellL8',ct:'600',charge:'uncharged',cost:'1',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casting\nBigby\'s Clenched Fist\nas a level @{selected|casting-level} caster}}{{splevel=Level 8 Wizard}}{{school=Evocation}}Specs=[Bigbys Clenched Fist,MUspellL8,1H,Evocation]{{components=V,S,M}}{{time=[[8]]}}{{range=[[[5*@{selected|casting-level}]] yards](!rounds --aoe @{selected|token_id}|circle|yards|0|[[10*@{selected|casting-level}]]||magic|true)}}{{duration=[[@{selected|casting-level}]] rounds}}{{aoe=Special}}{{save=None}}{{reference=PHB p188}}SpellData=[w:Bigbys Clenched Fist,lv:8,sp:600,gp:1,cs:VSM]{{effects=Brings forth a huge, disembodied hand that is balled into a fist. Spellcaster can cause it to strike one opponent each round.\nThe fist has AC 0, and [[@{selected|hp|max}]]HP}}{{materials=A leather glove and a small device (similar to brass knuckles) consisting of four rings joined so as to form a slightly curved line, with an "I" upon which the bottoms of the rings rest. The device must be fashioned of an alloy of copper and zinc: total cost 20gp to procure, but can be used up to 20 times}}'},
						{name:'Bigbys-Crushing-Hand',type:'MUspellL9',ct:'9',charge:'uncharged',cost:'0.7',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casting\nBigby\'s Cruched Hand\nas a level @{selected|casting-level} caster}}{{splevel=Level 9 Wizard}}{{school=Evocation}}Specs=[Bigbys Crushing Hand,MUspellL9,1H,Evocation]{{components=V,S,M}}{{time=[[9]]}}{{range=[[[5*@{selected|casting-level}]] yards](!rounds --aoe @{selected|token_id}|circle|yards|0|[[10*@{selected|casting-level}]]||magic|true)}}{{duration=[[[@{selected|casting-level}]] rounds](!rounds --target caster|@{selected|token_id}|Bigbys-curshing-hand|@{selected|casting-level}|-1|That hand will crush them all!|grab)}}{{aoe=Special}}{{save=None}}{{reference=PHB p194}}SpellData=[w:Bigbys Clenched Fist,lv:9,sp:9,gp:0.7,cs:VSM]{{effects=Creates a huge, disembodied hand similar to those of the other Bigby\'s hand spells. Can cause it to grasp and squeeze an opponent.}}{{materials=A glove of snake skin (costing 14gp and reusable 20 times) and the shell of an egg}}'},
						{name:'Bigbys-Forceful-Hand',type:'MUspellL6',ct:'6',charge:'uncharged',cost:'0.1',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casting\nBigby\'s Forceful Hand\nas a level @{selected|casting-level} caster}}{{splevel=Level 6 Wizard}}{{school=Evocation}}Specs=[Bigbys Foreceful Hand,MUspellL6,1H,Evocation]{{components=V,S,M}}{{time=[[6]]}}{{range=[[10*@{selected|casting-level}]] yards}}{{duration=[[@{selected|casting-level}]] rounds}}{{aoe=Special}}{{save=None}}{{healing=[Create hand](!rounds --target caster|@{selected|token_id}|Bigbys-forceful-hand|@{selected|casting-level}|-1|They\'ve given you a Forcefully Big Hand! HP@{selected|hp|max}, AC0|fist)}}{{reference=PHB p173}}SpellData=[w:Bigbys Forceful Hand,lv:6,sp:6,gp:0.1,cs:VSM]{{effects=Creates a man-sized (5 feet) to gargantuan-sized (21 feet) hand that moves to remain between the caster \\amp opponent and pushes on the opponent. Has AC 0, [[@{selected|hp|max}]] HP, and vanishes when destroyed.}}{{materials=A glove costing 1gp, that can be reused 10 times}}'},
						{name:'Bigbys-Grasping-Hand',type:'MUspellL7',ct:'7',charge:'uncharged',cost:'0.1',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casting\nBigby\'s Grasping Hand\nas a level @{selected|casting-level} caster}}{{splevel=Level 7 Wizard}}{{school=Evocation}}Specs=[Bigbys Grasping Hand,MUspellL7,1H,Evocation]{{components=V,S,M}}{{time=[[7]]}}{{range=[[10*@{selected|casting-level}]] yards}}{{duration=[[@{selected|casting-level}]] rounds}}{{aoe=Special}}{{save=None}}{{healing=[Create hand](!rounds --target caster|@{selected|token_id}|Bigbys-Grasping-hand|@{selected|casting-level}|-1|They\'ve given you a Big Grasping Hand! HP@{selected|hp|max}, AC0|fist)}}{{reference=PHB p183}}SpellData=[w:Bigbys Grasping Hand,lv:7,sp:7,gp:0.1,cs:VSM]{{effects=Creates a man-sized (5 feet) to gargantuan-sized (21 feet) hand that appears and grasps a creature designated by the caster, regardless of what the spellcaster does or how the opponent tries to escape it. Has AC [[0]], has [[@{selected|hp|max}]] HP, and vanishes when destroyed.}}{{materials=A leather glove, costing 1gp and reusable 10 times}}'},
						{name:'Bigbys-Interposing-Hand',type:'MUspellL5',ct:'5',charge:'uncharged',cost:'0.1',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casting\nBigby\'s Interposing Hand\nas a level @{selected|casting-level} caster}}{{splevel=Level 5 Wizard}}{{school=Evocation}}Specs=[Bigbys Interposing Hand,MUspellL5,1H,Evocation]{{components=V,S,M}}{{time=[[5]]}}{{range=[[10*@{selected|casting-level}]] yards}}{{duration=[[@{selected|casting-level}]] rounds}}{{aoe=Special}}{{save=None}}{{reference=PHB p165}}{{healing=[Create hand](!rounds --target caster|@{selected|token_id}|Bigbys-interposing-hand|@{selected|casting-level}|-1|They\'ve given you a Big Hand! HP@{selected|hp}, AC0|fist)}}SpellData=[w:Bigbys Interposing Hand,lv:5,sp:5,gp:0.1,cs:VSM]{{effects=Creates a man-sized to gargantuan-sized magical hand that appears between the spellcaster and his chosen opponent. It moves to remain between the two, regardless of what the spellcaster does or how the opponent tries to get around it.}}{{materials=A soft glove, costing 1gp, that can be reused 10 times}}'},
						{name:'Bind',type:'MUspellL2',ct:'2',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nBind\nas a level @{selected|casting-level} caster}}{{splevel=Level 2 Wizard}}{{school=Enchantment}}Specs=[Bind,MUspellL2,1H,Enchantment-Charm]{{components=V,S, M}}{{time=[[2]]}}{{range=[30 yards](!rounds --aoe @{selected|token_id}|circle|yards|0|60||magic|true)}}{{duration=[[@{selected|casting-level}]]rounds}}{{aoe=[[50+(5*@{selected|casting-level}]]ft.length}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 save vs. binding spell)}}{{damage=[Bind Who?](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Bind Who or What?|token_id}|Bind|99|0|Bound by rope|fishing-net)}}SpellData=[w:Bind,lv:2,sp:2,gp:0,cs:VSM]{{effects=Command any nonliving ropelike object, including string, yarn, cord, line, rope, or even a cable. The possible commands are Coil (form a neat, coiled stack), Coil \\amp Knot, Loop, Loop \\amp Knot, Tie \\amp Knot, and the reverses of all of the above (Uncoil, etc.).}}{{materials=The rope or rope-like material.}}'},
						{name:'Binding',type:'MUspellL8',ct:'100',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casting\nBinding\nas a level @{selected|casting-level} caster}}{{splevel=Level 8 Wizard}}{{school=Enchantment, Evocation}}Specs=[Binding,MUspellL8,1H,Enchantment|Evocation]{{components=V,S,M}}{{time=Special}}{{range=[[[10]] yards](!rounds --aoe @{selected|token_id}|circle|yards|0|20|0|magic|true)}}{{duration=Special}}{{aoe=1 creature}}{{save=[Special](!\\amp#13;\\amp#47;gmroll 1d20 save vs. Binding spell)}}{{reference=PHB p188}}SpellData=[w:Binding,lv:8,sp:100,gp:0,cs:VSM]{{effects=Creates a magical restraint to hold a creature, usually from another plane of existence.}}{{materials=Various materials are required for various forms. DM to determine cost. See PHB p188}}'},
						{name:'Blindness',type:'MUspellL2',ct:'2',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nBlindness\nas a level @{selected|casting-level} caster}}{{splevel=Level 2 Wizard}}{{school=Illusion/Phantasm}}Specs=[Blindness,MUspellL2,0H,Illusion-Phantasm]{{components=V}}{{time=[[2]]}}{{range=[[[30+(10*{10,@{selected|casting-level}}kl1)]] yards](!rounds --aoe @{selected|token_id}|circle|yards|0|[[60+(20*{10,@{selected|casting-level}}kl1)]]||dark|true)}}{{duration=Special}}{{aoe=1 Creature}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 saving throw)}}{{reference=PHB p140}}{{damage=[Blind it](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Select a target|token_id}|Blindness|99|0|Blind|bleeding-eye)}}SpellData=[w:Blindness,lv:2,sp:2,gp:0,cs:V]{{effects=Save vs. spell to neg. or blind until Dispel Magic or caster cancels. Suffer [[0-4]] on attack and attackers gain +[[4]] to hit}}'},
						{name:'Blink',type:'MUspellL3',ct:'1',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nBlink\nas a level @{selected|casting-level} caster}}{{splevel=Level 3 Wizard}}{{school=Alteration}}Specs=[Blink,MUspellL3,1H,Alteration]{{components=V,S}}{{time=1}}{{range=0}}{{duration=[[@{selected|casting-level}]]}}{{aoe=The caster}}{{save=None}}{{reference=PHB p147}}SpellData=[w:Blink,lv:3,sp:1,gp:0,cs:VS]{{healing=[Blink](!rounds --target caster|@{selected|token_id}|Blinking|@{selected|casting-level}|-1|Blinking - for initiative use Other Action/Other and enter Blink \\amp speed of 1d6|aura)}}{{effects=Spellcaster "blinks" directly from one point to another at a random time and in a random direction. Melee attacks vs. caster automatically miss if initiative indicates they fall after he has blinked.}}'},
						{name:'Blur',type:'MUspellL2',ct:'2',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nBlur\nas a level @{selected|casting-level} caster}}{{splevel=Level 2 Wizard}}{{school=Illusion/Phantasm}}Specs=[Blur,MUspellL2,1H,Illusion-Phantasm]{{components=V,S}}{{time=[[2]]}}{{range=[[0]]}}{{duration=[[3+@{selected|casting-level}]]rounds}} !!! {{aoe=The Caster}}{{save=None}}{{healing=[Blur the edges](!rounds --target caster|@{selected|token_id}|Blur|[[3+@{selected|casting-level}]]|-1|Blurred, 4 then 2 bonus on AC, 1 bonus to save vs spell|half-haze)}}{{reference=PHB p140}}SpellData=[w:Blur,lv:2,sp:2,gp:0,cs:VS]{{effects=Causes the outline of his form to become blurred, shifting and wavering, making attacks more difficult.}}'},
						{name:'Burning-Hands',type:'MUspellL1',ct:'1',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nBurning Hands\nas a level @{selected|casting-level} caster}}{{splevel=Level 1 Wizard}}{{school=Alteration}}Specs=[Burning Hands,MUspellL1,1H,Alteration]{{components=V, S}}{{time=[[1]]}}{{range=[[0]]}}{{duration=Instantaneous}}{{aoe=[120deg. arc to 5ft](!rounds --aoe @{selected|token_id}|cone|feet|0|5|12|fire)}}{{save=[Half Damage](!\\amp#13;\\amp#47;gmroll 1d20 saving throw)}}{{damage=[1d3+(2 x level)](!\\amp#13;\\amp#47;r 1d3+[[{20,2*@{selected|casting-level}}kl1]])}}{{damagetype=Fire}}{{reference=PHB p131}}SpellData=[w:Burning-Hands,lv:1,sp:1,gp:0,cs:VS]{{effects=A jet of flames bursts forth from the caster\'s fingertips. The flames fan out to [[5]] feet and span in a [[120]] degree arc.}}'},
						{name:'Cacodemon',type:'MUspellL7',ct:'360',charge:'uncharged',cost:'15',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nCacodemon\nas a level @{selected|casting-level} caster}}{{splevel=Level 7 Wizard}}{{school=Conjuration-Summoning}}Specs=[Cacodemon,MUspellL7,1H,Conjuration-Summoning]{{components=V, S, M}}{{time=Up to [[6]] hours}}{{range=[[30]]yards}}{{duration=Special}}{{aoe=Creature Summoned}}{{save=Special}}{{reference=AD\\ampD1e PHB p86}}SpellData=[w:Cacodemon,lv:7,sp:360,gp:15,cs:SM]{{effects=Summons a powerful demon of type IV, V, or VI depending on the demon\'s name being known to the Magic User.}}{{materials=5 flaming black candles (1gp each); a brazier of hot coals on which must be burned sulphur, bat hairs, lard, soot, mercuric-nitric acid crystals, mandrake root, alcohol, and a parchment with the demon\'s name inscribed within a pentangle (total value 10gp); and a dish with mammal (preferably human) blood}}'},
						{name:'Cantrip',type:'MUspellL1',ct:'1',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nCantrip\nas a level @{selected|casting-level} caster}}{{splevel=Level 0 Wizard}}{{school=Illusion/Phantasm}}Specs=[Cantrip,MUspellL1,1H,Illusion-Phantasm]{{components=V,S}}{{time=[[1]]}}{{range=[[10]]ft.}}{{duration=[[@{selected|Casting-level}]] hours}}{{aoe=Special}}{{save=None}}{{reference=PHB p131}}SpellData=[w:Cantrip,lv:0,sp:1,gp:0,cs:VS]{{effects=Cantrips are minor spells studied by wizards during their apprenticeship, regardless of school. The *cantrip* spell is a practice method for the apprentice, teaching him how to tap minute amounts of magical energy.}}'},
						{name:'Chain-Lightning',type:'MUspellL6',ct:'5',charge:'uncharged',cost:'0.1',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nChain Lightning\nas a level @{selected|casting-level} caster}}{{splevel=Level 6 Wizard}}{{school=Evocation}}Specs=[Chain Lightning,MUspellL6,1H,Evocation]{{components=V,S,M}}{{time=[[5]]}}{{range=[[[40+(5@{selected|casting-level})]] yards](!rounds --aoe @{selected|token_id}|circle|yards|0|[[40+(5@{selected|casting-level})]]||lightning|true)}}{{duration=Instantaneous}}{{aoe=Special}}{{save=[Halves](!\\amp#13;\\amp#47;gmroll 1d20 save vs. Chain Lightning spell)}}{{reference=PHB p173}}SpellData=[w:Chain Lightning,lv:6,sp:5,gp:0.1,cs:VSM]{{effects=Creates an electrical discharge that begins as a single stroke of lightning, striking one object or creature initially, then arcs to a series of other objects or creatures within range, losing energy with each jump. Strikes @{selected|casting-level} times, but only once per object/creature.}}{{materials=a bit of fur, a piece of amber, glass, or crystal rod, and one silver pin for each experience level of the caster, minimum cost 2gp, reusable 20 times}}'},
						{name:'Change-Self',type:'MUspellL1',ct:'1',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nChange Self\nas a level @{selected|casting-level} caster}}{{splevel=Level 1 Wizard}}{{school=Illusion/Phantasm}}Specs=[Change Self,MUspellL1,1H,Illusion-Phantasm]{{components=V, S}}{{time=[[1]]}}{{range=[[0]]}}{{duration=DM rolls 2d6+[[2*@{selected|casting-level}]] rounds and does not tell player}}{{aoe=The caster}}{{save=[Special](!\\amp#13;\\amp#47;gmroll 1d20 save to disbelieve Change-Self)}}{{reference=PHB p132}}{{healing=[Change Self](!rounds --target caster|@{selected|token_id}|Change-Self|\\amp#91;[3d4+[[2*@{selected|casting-level}]]\\amp#93;]|-1|Changed self, normal attk+dmg, man shaped creature only|strong)}}SpellData=[w:Change-Self,lv:1,sp:1,gp:0,cs:VS]{{effects=Alter appearance inc. equipment \\amp clothes to appear [[1]]ft taller/shorter, fat or thin, any humanoid or other generally man shaped creature. Cannot recreate a specific individual, or provide abilities or mannerisms. Does not alter touch. DM may allow save to disbelieve under certain circumstances.}}'},
						{name:'Chaos',type:'MUspellL5',ct:'5',charge:'uncharged',cost:'1',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nChaos\nas a level @{selected|casting-level} caster}}{{splevel=Level 5 Wizard}}{{school=Enchantment/Charm}}Specs=[Chaos,MUspellL5,1H,Enchantment-Charm]{{components=V,S,M}}{{time=[[5]]}}{{range=[[5*@{selected|casting-level}]]yds}}{{duration=[[@{selected|casting-level}]]rounds}}{{aoe=[Up to 40ft cube](!rounds --aoe @{selected|token_id}|square|feet|[[15*@{selected|casting-level}]]|||magic)}}{{save=[Special](!\\amp#13;\\amp#47;gmroll 1d20 Save vs. Chaos spell)}}{{reference=PHB p166}}SpellData=[w:Chaos,lv:5,sp:5,gp:1,cs:VSM]{{effects=Similar to the 4th-level confusion spell, but only the following beings receive a saving throw: fighters, wizards specialized in enchantments, monsters that use no magic and have an Intelligence of 4 or less, creatures of 21 Intelligence or higher, and creatures with more levels or Hit Dice than the caster\'s level.}}{{materials=A small disc of bronze and a small rod of iron, costing 1gp.}}'},
						{name:'Charm-Monster',type:'MUspellL4',ct:'4',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nCharm Monster\nas a level @{selected|casting-level} caster}}{{splevel=Level 4 Wizard}}{{school=Enchantment-Charm}}Specs=[Charm Monster,MUspellL4,1H,Enchantment-Charm]{{components=V,S}}{{time=[[4]]}}{{range=[[60]] yds}}{{duration=Special}}{{aoe=1 or more creatures in [60ft radius](!rounds --aoe @{selected|token_id}|circle|feet|180|120||magic)}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 save vs. charm monster spell)adjust for wisdom \\amp damage}}{{reference=PHB p154}}SpellData=[w:Charm Monster,lv:4,sp:4,gp:0,cs:VS]{{effects=Similar to a charm person spell, but it can affect any living creature--or several low-level creatures.}}'},
						{name:'Charm-Person',type:'MUspellL1',ct:'1',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nCharm Person\nas a level @{selected|casting-level} caster}}{{splevel=Level 1 Wizard}}{{school=Enchantment/Charm}}Specs=[Charm Person,MUspellL1,1H,Enchantment-Charm]{{components=V, S}}{{time=[[1]]}}{{range=[120 yards](!rounds --aoe @{selected|token_id}|circle|yards|0|240||magic)}}{{duration=Time based}}{{aoe=[[1]] person}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 saving throw)}}{{damage=[Charm them](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Select a target|token_id}|Charm-person|99|0|Charmed, I\'m sure|chained-heart)}}{{reference=PHB p132}}SpellData=[w:Charm-Person,lv:1,sp:1,gp:0,cs:VS]{{effects=The person being targeted must make a Save vs. Spell adjusted for Wisdom or become charmed by the spellcaster.}}'},
						{name:'Charm-Plants',type:'MUspellL7',ct:'100',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casting\nCharm Plants\nas a level @{selected|casting-level} caster}}{{splevel=Level 7 Wizard}}{{school=Enchantment-Charm}}Specs=[Charm Plants,MUspellL7,1H,Enchantment-Charm]{{components=V,S,M}}{{time=[[1]] turn}}{{range=[[30]] yards}}{{duration=Permanent}}{{aoe=[10 x 30ft](!rounds --aoe @{selected|token_id}|rectangle|feet|90|30|10|magic)}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 save vs. Charm Plants spell)}}{{reference=PHB p183}}SpellData=[w:Charm Plants,lv:7,sp:100,gp:0,cs:VSM]{{effects=Bring under command vegetable life forms and communicate with them. }}{{materials=A pinch of humus, a drop of water, and a twig or leaf (no cost)}}'},
						{name:'Chill-Touch',type:'MUspellL1',ct:'1',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}}{{title=@{selected|casting-name} casts\nChill Touch\nas a level @{selected|casting-level} caster}}{{splevel=Level 1 Wizard}}{{school=Necromancy}}Specs=[Chill Touch,MUspellL1,1H,Necromancy]{{components=V, S}}{{time=[[1]]}}{{range=[[0]]}}{{duration=[[@{selected|casting-level}+3]] Rounds}}{{aoe=Creatures Touched}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 saving throw)}}{{reference=PHB p132}}{{damage=[[1]] STR plus [1d4](!\\amp#13;\\amp#47;r 1d4) [Gain the Touch](!rounds --target caster|@{selected|token_id}|Chill-Touch|[[@{selected|casting-level}+3]]|-1|Has a Chill Touch draining 1 STR \\amp 1d4 HP|grab)}}{{damagetype=Necrotic}}SpellData=[w:Chill-Touch,lv:1,sp:1,gp:0,cs:VS]{{effects=The caster\'s hand is enveloped by a cold blue glow which attacks the life force of any living creature which the wizard successfully touches.}}'},
						{name:'Clairaudience',type:'MUspellL3',ct:'3',charge:'uncharged',cost:'10',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nClairaudience\nas a level @{selected|casting-level} caster}}{{splevel=Level 3 Wizard}}{{school=Divination}}Specs=[Clairaudience,MUspellL3,1H,Divination]{{components=V, S, M}}{{time=[[3]]}}{{range=Unlimited}}{{duration=[[@{selected|casting-level}]] rounds}}{{aoe=[[60]]ft radius of selected spot}}{{save=None}}{{reference=PHB p147}}{{healing=[Super-Hearing](!rounds --target caster|@{selected|token_id}|Clairaudience|[[@{selected|casting-level}]]|-1|Normal hearing but at a distance|Strong)}}SpellData=[w:Clairaudience,lv:3,sp:3,gp:10,cs:VSM]{{effects=Concentrate upon some locale and hear in the caster\'s mind any noise within a 60-foot radius of that point.}}{{materials=A small horn of at least 100 gp value, which can be used 10 times.}}'},
						{name:'Clairvoyance',type:'MUspellL3',ct:'3',charge:'uncharged',cost:'3',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nClairvoyance\nas a level @{selected|casting-level} caster}}{{splevel=Level 3 Wizard}}{{school=Divination}}Specs=[Clairvoyance,MUspellL3,1H,Divination]{{components=V, S, M}}{{time=[[3]]}}{{range=Unlimited}}{{duration=[[@{selected|casting-level}]] rounds}}{{aoe=Line of sight}}{{save=None}}{{healing=[Super-Vision](!rounds --target caster|@{selected|token_id}|Clairvoyance|[[@{selected|casting-level}]]|-1|See as if at known location, line of sight and needs light|Strong)}}{{reference=PHB p147}}SpellData=[w:Clairvoyance,lv:3,sp:3,gp:3,cs:VSM]{{effects=See in the wizard\'s mind whatever is within sight range from the spell locale chosen.}}{{materials=A pinch of powdered pineal gland costing 3gp to source.}}'},
						{name:'Clone',type:'MUspellL8',ct:'100',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casting\nClone\nas a level @{selected|casting-level} caster}}{{splevel=Level 8 Wizard}}{{school=Necromancy}}Specs=[Clone,MUspellL8,1H,Necromancy]{{components=V,S,M}}{{time=[[1]] turn}}{{range=Touch}}{{duration=Permanent}}{{aoe=1 clone}}{{save=None}}{{reference=PHB p189}}SpellData=[w:Clone,lv:8,sp:100,gp:0,cs:VSM]{{effects=Creates a duplicate of a human, demihuman, or humanoid creature.}}{{materials=A small piece of the flesh from the person to be duplicated. The DM may add other stipulations to the success of a cloning effort, e.g. some trace of life must remain in the flesh sample, some means of storing and preserving the sample, etc}}'},
						{name:'Cloudkill',type:'MUspellL5',ct:'5',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nCloudkill\nas a level @{selected|casting-level} caster}}{{splevel=Level 5 Wizard}}{{school=Evocation}}Specs=[Cloudkill,MUspellL5,1H,Evocation]{{components=V, S}}{{time=[[5]]}}{{range=[[10]] yds.}}{{duration=[[@{selected|casting-level}]] rounds}}{{aoe=[40ft wide x 20ft high x 20ft deep](!rounds --aoe @{selected|token_id}|rectangle|feet|30|20|40|acid)}}{{save=Special}}{{reference=PHB p166}}SpellData=[w:Cloudkill,lv:5,sp:5,gp:0,cs:VS]{{effects=Slay creatures with less than [[4]]HD+[[1]] (no save) and cause those with [[4]]HD+[[1]] to [[5]]HD+[[1]] to save vs. poison at [[0-4]] or be slain and up to [[6]]HD to save unmodified or be slain.}}'},
						{name:'Colour-Spray',type:'MUspellL1',ct:'1',charge:'uncharged',cost:'0.05',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nColour Spray\nas a level @{selected|casting-level} caster}}{{splevel=Level 1 Wizard}}{{school=Alteration}}Specs=[Colour Spray,MUspellL1,1H,Alteration]{{components=V,S,M}}{{time=[[1]]}}{{range=[[0]]}}{{duration=Instant}}{{aoe=[5x20x20ft wedge](!rounds --aoe @{selected|token_id}|cone|feet|0|5|20|magic)}}{{save=[Special](!\\amp#13;\\amp#47;gmroll 1d20 save vs. Colour Spray spell)}}{{damage=Select effect below}}{{reference=PHB p132}}SpellData=[w:Colour-Spray,lv:1,sp:1,gp:0.05,cs:VSM]{{effects=Creatures not allowed or failing saving throws, and whose Hit Dice or levels are less than or equal to the spellcaster\'s level, are struck [Unconscious](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Who\'s less or equal to level @{selected|casting-level}?|token_id}|Unconscious|\\amp#91;[2d4]\\amp#93;|-1|Knocked unconscious by a confusion of colours|broken-skull) for 2d4 rounds; those with Hit Dice or levels 1 or 2 greater than the wizard\'s level are [Blinded](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Who\'s 1 or 2 levels more than @{selected|casting-level}?|token_id}|Blinded|\\amp#91;[1d4]\\amp#93;|-1|Blinded by a confusion of colours|broken-skull) for 1d4 rounds; those with Hit Dice or levels 3 or more greater than that of the spellcaster are [Stunned](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Who\'s 3 or more levels higher than @{selected|casting-level}?|token_id}|Stunned|1|-1|Stunned by a confusion of colours|broken-skull) (reeling and unable to think or act coherently) for one round.}}{{materials=A pinch each of powder or sand that is colored red, yellow, and blue, costing 5cp for the pigments}}'},
						{name:'Comprehend-Languages',type:'MUspellL1',ct:'1',charge:'uncharged',cost:'0.01',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}}{{title=@{selected|casting-name} casts\nComprehend Languages\nas a level @{selected|casting-level} caster}}{{splevel=Level 1 Wizard}}{{school=Alteration}}Specs=[Comprehend Languages,MUspellL1,1H,Alteration]{{components=V, S, M}}{{time=[[1]] round}}{{range=Touch}}{{duration=[[5*@{selected|casting-level}]] Rounds}}{{aoe=1 speaking creature or written object}}{{save=None}}{{reference=PHB p133}}SpellData=[w:Comprehend-Languages,lv:1,sp:1,gp:0.01,cs:VSM]{{effects=Caster is able to understand speaking creature or writing in another language once touched.}}{{materials=A pinch of soot and a few grains of salt, worth 1cp}} '},
						{name:'Cone-of-Cold',type:'MUspellL5',ct:'5',charge:'uncharged',cost:'10',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nCone of Cold\nas a level @{selected|casting-level} caster}}{{splevel=Level 5 Wizard}}{{school=Evocation}}Specs=[Cone of Cold,MUspellL5,1H,Evocation]{{components=V,S,M}}{{time=[[5]]}}{{range=[[0]]}}{{duration=Instantaneous}}{{aoe=[Special](!rounds --aoe @{selected|token_id}|cone|feet|0|[[5*@{selected|casting-level}]]|[[@{selected|casting-level}]]|cold)}}{{save=[Halves](!\\amp#13;\\amp#47;gmroll 1d20 save vs. Cone of Cold spell)}}{{reference=PHB p166}}SpellData=[w:Cone-of-Cold,lv:5,sp:5,gp:10,cs:VSM]{{effects=causes a cone-shaped area of extreme cold, originating at the wizard\'s hand and extending outward in a cone [[5*@{selected|casting-level}]] feet long and [[@{selected|casting-level}]] foot in diameter. It drains heat and causes [@{selected|casting-level}d4+@{selected|casting-level}](!\\amp#13;\\amp#47;r @{selected|casting-level}d4+@{selected|casting-level} damage from Cone of Cold, save to halve) HP damage.}}{{materials=A crystal or glass cone of very small size costing 100gp that can be reused 10 times}}'},
						{name:'Confusion',type:'MUspellL4',ct:'4',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nConfusion\nas a level @{selected|casting-level} caster}}{{splevel=Level 4 Wizard}}{{school=Enchantment/Charm}}Specs=[Confusion,MUspellL4,1H,Enchantment-Charm]{{components=V,S,M}}{{time=[[4]]}}{{range=[[120]]yds}}{{duration=[[2+@{selected|casting-level}]]rounds}}{{aoe=[1d4+@{selected|casting-level}](!\\amp#13;\\amp#47;gmroll 1d4+@{selected|casting-level}) creatures in upto a [60ft cube](!rounds --aoe @{selected|token_id}|square|feet|360|||magic)}}{{save=[Special](!\\amp#13;\\amp#47;gmroll 1d20-2 Save vs. Dismissal spell at -2)}}{{reference=PHB p154}}{{damage=[Confuse Them](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Confuse which creature?|token_id}|Confusion|[[2+@{selected|casting-level}]]|-1|Confused - DM roll 1d10 to determine action|broken-skull)}}SpellData=[w:,lv:4,sp:4,gp:0,cs:VSM]{{effects=Causes confusion in one or more creatures within the area, creating indecision and the inability to take effective action.}}{{materials=A set of three nut shells (free).}}'},
						{name:'Conjure-Air-Elemental',type:'MUspellL5',ct:'100',charge:'uncharged',cost:'0.05',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nConjure Air Elemental\nas a level @{selected|casting-level} caster}}{{splevel=Level 5 Wizard}}{{school=Conjuration/Summoning}}Specs=[Conjure Air Elemental,MUspellL5,1H,Conjuration-Summoning]{{components=V,S,M}}{{time=[[1]] turn}}{{range=[[[30*@{selected|Casting-Level}]] yards](!rounds --aoe @{selected|token_id}|circle|yards|0|[[30*@{selected|Casting-Level}]]||light|true)}}{{duration=[[@{selected|casting-level}]]turns}}{{aoe=Special}}{{save=None}}{{reference=PHB p166}}{{damage=[Conjure Elemental](!rounds --target caster|@{selected|token_id}|Conjure-Air-Elemental|[[10*@{selected|casting-level}]]|-1|Now I\'ve got this Air Elemental, what will I do with it?|stopwatch)}}SpellData=[w:Conjure-Air-Elemental,lv:5,sp:100,gp:0.05,cs:VSM]{{effects=Conjures an Air Elemental. Conjured elementals have 8 Hit Dice.}}{{materials=The quantity of wind at hand and a small amount of burning incense (5cp)}}'},
						{name:'Conjure-Animals',type:'MUspellL6',ct:'6',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nConjure Animals\nas a level @{selected|casting-level} caster}}{{splevel=Level 6 Wizard}}{{school=Conjuration-Summoning}}Specs=[Conjure Animals,MUspellL6,1H,Conjuration-Summoning]{{components=V,S,M}}{{time=[[6]]}}{{range=Special}}{{duration=[[@{selected|casting-level}]] rounds}}{{aoe=[30 yard radius](!rounds --aoe @{selected|token_id}|circle|yards|0|60||magic|true)}}{{save=None}}{{reference=PHB p174}}SpellData=[w:Conjure Animals,lv:6,sp:6,gp:0,cs:VS]{{effects=Create one or more mammals to attack caster\'s opponents. Total Hit Dice cannot exceed [[2*@{selected|casting-level}]], if determined randomly, or [[@{selected|casting-level}]] if a specific animal type is requested. Count every +1 HP bonus of a creature as 1/4 of a Hit Die.}}'},
						{name:'Conjure-Earth-Elemental',type:'MUspellL5',ct:'100',charge:'uncharged',cost:'0.02',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nConjure Earth Elemental\nas a level @{selected|casting-level} caster}}{{splevel=Level 5 Wizard}}{{school=Conjuration/Summoning}}Specs=[Conjure Earth Elemental,MUspellL5,1H,Conjuration-Summoning]{{components=V,S,M}}{{time=[[1]] turn}}{{range=[[[30*@{selected|Casting-Level}]] yards](!rounds --aoe @{selected|token_id}|circle|yards|0|[[30*@{selected|Casting-Level}]]||dark|true)}}{{duration=[[@{selected|casting-level}]]turns}}{{aoe=Special}}{{save=None}}{{reference=PHB p166}}{{damage=[Conjure Elemental](!rounds --target caster|@{selected|token_id}|Conjure-Earth-Elemental|[[10*@{selected|casting-level}]]|-1|Now I\'ve got this Earth Elemental, what will I do with it?|stopwatch)}}SpellData=[w:Conjure-Earth-Elemental,lv:5,sp:100,gp:0.02,cs:VSM]{{effects=Conjures an Earth Elemental. Conjured elementals have 8 Hit Dice.}}{{materials=The quantity of earth at hand and a small amount of soft clay (2cp)}}'},
						{name:'Conjure-Fire-Elemental',type:'MUspellL5',ct:'100',charge:'uncharged',cost:'0.5',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nConjure Fire Elemental\nas a level @{selected|casting-level} caster}}{{splevel=Level 5 Wizard}}{{school=Conjuration/Summoning}}Specs=[Conjure Fire Elemental,MUspellL5,1H,Conjuration-Summoning]{{components=V, S, M}}{{time=[[1]] turn}}{{range=[[[30*@{selected|Casting-Level}]] yards](!rounds --aoe @{selected|token_id}|circle|yards|0|[[30*@{selected|Casting-Level}]]||fire|true)}}{{duration=[[@{selected|casting-level}]]turns}}{{aoe=Special}}{{save=None}}{{reference=PHB p166}}{{damage=[Conjure Elemental](!rounds --target caster|@{selected|token_id}|Conjure-Fire-Elemental|[[10*@{selected|casting-level}]]|-1|Now I\'ve got this Fire Elemental, what will I do with it?|stopwatch)}}SpellData=[w:Conjure-Fire-Elemental,lv:5,sp:100,gp:0.5,cs:VSM]{{effects=Conjures a Fire Elemental. Conjured elementals have 8 Hit Dice.}}{{materials=The quantity of fire at hand and a small amount of sulphur and phosphorus (5sp)}}'},
						{name:'Conjure-Water-Elemental',type:'MUspellL5',ct:'100',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nConjure Water Elemental\nas a level @{selected|casting-level} caster}}{{splevel=Level 5 Wizard}}{{school=Conjuration/Summoning}}Specs=[Conjure Water Elemental,MUspellL5,1H,Conjuration-Summoning]{{components=V,S,M}}{{time=[[1]] turn}}{{range=[[[30*@{selected|Casting-Level}]] yards](!rounds --aoe @{selected|token_id}|circle|yards|0|[[30*@{selected|Casting-Level}]]||lightning|true)}}{{duration=[[@{selected|casting-level}]]turns}}{{aoe=Special}}{{save=None}}{{reference=PHB p166}}{{damage=[Conjure Elemental](!rounds --target caster|@{selected|token_id}|Conjure-Water-Elemental|[[10*@{selected|casting-level}]]|-1|Now I\'ve got this Water Elemental, what will I do with it?|stopwatch)}}SpellData=[w:Conjure-Water-Elemental,lv:5,sp:100,gp:0,cs:VSM]{{effects=Conjures a water elemental. Conjured elementals have 8 Hit Dice.}}{{materials=A large quantity of water at hand, and a small amount of water and sand (no cost)}}'},
						{name:'Contact-Other-Plane',type:'MUspellL5',ct:'100',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nContact Other Plane\nas a level @{selected|casting-level} caster}}{{splevel=Level 5 Wizard}}{{school=Divination}}Specs=[Contact Other Plane,MUspellL5,0H,Divination]{{components=V}}{{time=[[1]] turn}}{{range=[[0]]}}{{duration=[[floor(@{selected|casting-level}/2)]] questions}}{{aoe=Special}}{{save=None}}{{reference=PHB p167}}SpellData=[w:Contact Other Plane,lv:5,sp:100,gp:0,cs:V]{{effects=Receive advice and information from powers on other plane.}}'},
						{name:'Contagion',type:'MUspellL4',ct:'4',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nContagion\nas a level @{selected|casting-level} caster}}{{splevel=Level 4 Wizard}}{{school=Necromancy}}Specs=[Contagion,MUspellL4,1H,Necromancy]{{components=V,S}}{{time=[[4]]}}{{range=[30 yards](!rounds --aoe @{selected|token_id}|circle|yards|0|60||acid|true)}}{{duration=Permanent}}{{aoe=1 creature}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 save vs. Contagion spell)}}{{damage=[Infect them](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Who to infect?|token_id}|Contagion|99|0|Weak from disease - many attributes worsen by 2|death-zone)}}{{reference=PHB p155}}SpellData=[w:Contagion,lv:4,sp:4,gp:0,cs:VS]{{effects=Causes a major disease and weakness in a creature. }}'},
						{name:'Contingency',type:'MUspellL6',ct:'100',charge:'uncharged',cost:'150',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nContingency\nas a level @{selected|casting-level} caster}}{{splevel=Level 6 Wizard}}{{school=Evocation}}Specs=[Contingency,MUspellL6,1H,Evocation]{{components=V,S,M}}{{time=[[1]] turn}}{{range=[[0]]}}{{duration=[[@{selected|casting-level}]] days}}{{aoe=The caster}}{{save=None}}{{reference=PHB p174}}SpellData=[w:Contingency,lv:6,sp:100,gp:150,cs:VSM]{{effects=Able to place another spell upon his person so that the latter spell will come into effect under the conditions dictated during the casting of the contingency spell.}}{{materials=(in addition to those of the companion spell) 100 gp worth of quicksilver and an eyelash of an ogre mage, ki-rin, or similar spell-using creature, a statuette of the wizard carved from elephant ivory (which is not destroyed, though it is subject to wear and tear), which must be carried on the person of the spellcaster for the contingency spell to perform its function when called upon. Total cost per spell casting is 150gp}}'},
						{name:'Continual-Darkness',type:'MUspellL2',ct:'2',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nContinual Darkness\nas a level @{selected|casting-level} caster}}{{splevel=Level 2 Wizard}}{{school=Alteration (Reversable)}}Specs=[Continual Darkness,MUspellL2,1H,Alteration]{{components=V,S}}{{time=[[2]]}}{{range=[[60]] yds.}}{{duration=Permanent}}{{aoe=[60ft radius](!rounds --aoe @{selected|token_id}|circle|yards|60|40||black)}}{{save=[Special](!\\amp#13;\\amp#47;gmroll 1d20 save vs. Continual Darkness spell)}}{{reference=PHB p140}}{{damage=Press [Blind them!](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Select victim|token_id}|Darkness|99|0|Blinded by Darkness in eyes|bleeding-eye) then select your target}}SpellData=[w:Continual-Darkness,lv:2,sp:2,gp:0,cs:VS]{{effects=Creates an area as dark as the very deepest night and lasts until negated by magical light or by a dispel magic spell. Can also be cast on the eyes of a creature to blind it.}}'},
						{name:'Continual-Light',type:'MUspellL2',ct:'2',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nContinual Light\nas a level @{selected|casting-level} caster}}{{splevel=Level 2 Wizard}}{{school=Alteration (Reversable)}}Specs=[Continual Light,MUspellL2,1H,Alteration]{{components=V,S}}{{time=[[2]]}}{{range=[[60]] yds.}}{{duration=Permanent}}{{aoe=[60ft radius](!rounds --aoe @{selected|token_id}|circle|feet|120|120|120|light)}}{{save=[Special](!\\amp#13;\\amp#47;gmroll 1d20 save vs. Continual Light spell)}}{{reference=PHB p140}}{{damage=Press [Blind them!](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Select victim|token_id}|Light|99|0|Blinded by Light in eyes|bleeding-eye) then select your target or [Cast on Area](!rounds --aoe @{selected|token_id}|circle|feet|120|120|120|light)}}SpellData=[w:Continual-Light,lv:2,sp:2,gp:0,cs:VS]{{effects=Similar to a light spell, except that it is as bright as full daylight and lasts until negated by magical darkness or by a dispel magic spell. \n Can also be cast on the eyes of a creature to blind it.}}'},
						{name:'Control-Undead',type:'MUspellL7',ct:'10',charge:'uncharged',cost:'0.02',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casting\nControl Undead\nas a level @{selected|casting-level} caster}}{{splevel=Level 7 Wizard}}{{school=Necromancy}}Specs=[Control Undead,MUspellL7,1H,Necromancy]{{components=V,S,M}}{{time=[[1]] round}}{{range=[[60]] feet}}!setattr --silent --charid @{selected|character_id} --spell-duration|{{duration=[[3d4+@{selected|casting-level}]] rounds}}!!!{{aoe=[[[1d6]] undead](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Which Undead do you want to control?|token_id}|Control-undead|\\amp#64;{selected|spell-duration}|-1|This undead creature is controlled by @{selected|character_name}|padlock)}}{{save=[Special](!\\amp#13;\\amp#47;gmroll 1d20 save vs. Control Undead spell)}}{{reference=PHB p183}}SpellData=[w:Control Undead,lv:7,sp:10,gp:0.02,cs:VSM]{{effects=Select one point within range of the spell. Those undead nearest to this point are controlled, until either [[@{selected|casting-level}]] Hit Dice of undead to a max of six undead are affected. }}{{materials=A small piece each of bone and raw meat, cost 2cp}}'},
						{name:'Control-Weather',type:'MUspellL6',ct:'100',charge:'uncharged',cost:'0.05',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nControl Weather\nas a level @{selected|casting-level} caster}}{{splevel=Level 6 Wizard}}{{school=Alteration}}Specs=[Control Weather,MUspellL6,1H,Alteration]{{components=V,S,M}}{{time=[[1]] turn}}{{range=[[0]]}}{{duration=[4d6](!\\amp#13;\\amp#47;r 4d6) hours}}{{aoe=[4d4](!\\amp#13;\\amp#47;r 4d4) sq. miles}}{{save=None}}{{reference=PHB p174}}SpellData=[w:Control Weather,lv:6,sp:100,gp:0.05,cs:VSM]{{effects=Change the weather in the local area.}}{{materials=burning incense costing 5cp, and bits of earth and wood mixed in water}}'},
						{name:'Crystalbrittle',type:'MUspellL9',ct:'9',charge:'uncharged',cost:'0',body:'!magic --touch @{selected|token_id}|Crystalbrittle|99|0|Whatever was touched is now crystal|frozen-orb\n/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casting\nCrystalbrittle\nas a level @{selected|casting-level} caster}}{{splevel=Level 9 Wizard}}{{school=Alteration}}Specs=[Crystalbrittle,MUspellL9,1H,Alteration]{{components=V,S}}{{time=[[9]]}}{{range=[Touch](~selected|To-Hit-Spell)}}{{duration=Permanent}}{{aoe=[[2*@{selected|casting-level}]]cu.ft.}}{{save=[Special](!\\amp#13;\\amp#47;gmroll 1d20 save vs. Crystalbrittle spell)}}{{reference=PHB p194}}SpellData=[w:Crystalbrittle,lv:9,sp:9,gp:0,cs:VS]{{effects=Causes metal, whether as soft as gold or as hard as adamantite, to turn to a crystalline substance as brittle and fragile as crystal.}}'},
						{name:'Dancing-Lights',type:'MUspellL1',ct:'1',charge:'uncharged',cost:'0.5',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nDancing Lights\nas a level @{selected|casting-level} caster}}{{splevel=Level 1 Wizard}}{{school=Alteration}}Specs=[Dancing Lights,MUspellL1,1H,Alteration]{{components=V, S, M}}{{time=[[1]]}}{{range=[[[40+(10*@{selected|casting-level})]] yards](!rounds --aoe @{selected|token_id}|circle|yards|0|[[40+(10*@{selected|casting-level})]]||light|true)}}{{duration=[[2*@{selected|casting-level}]] rounds}}{{aoe=Special}}{{save=None}}{{healing=[Turn on the Lights](!rounds --target caster|@{selected|token_id}|Dancing-Lights|[[2*@{selected|casting-level}]]|-1|Pretty Dancing Lights!|aura)}}{{reference=PHB p133}}SpellData=[w:Dancing-Lights,lv:1,sp:1,gp:0.5,cs:VSM]{{effects=Creates, at the wizard\'s option, from one to four lights that resemble either torches or lanterns (and cast that amount of light), glowing spheres of light (such as evidenced by will-o-wisps), or one faintly glowing, vaguely manlike shape, somewhat similar to that of a creature from the Elemental Plane of Fire.}}{{materials=Either a bit of phosphorus or wychwood, or a glowworm, in either case costing 5sp to source.}}'},
						{name:'Darkness-15ft-radius',type:'MUspellL2',ct:'2',charge:'uncharged',cost:'0.2',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nDarkness, 15\' Radius (or as cast)\nas a level @{selected|casting-level} caster}}{{splevel=Level 2 Wizard}}{{school=Alteration}}Specs=[Darkness 15ft Radius,MUspellL2,1H,Alteration]{{components=V, S, M}}{{time=[[2]]}}{{range=[[@{selected|casting-level}*10]] yds}}{{duration=[[@{selected|casting-level}+10]] rounds}}{{aoe=[15ft. radius (or as cast)](!rounds --aoe @{selected|token_id}|circle|feet|[[@{selected|casting-level}*30]]||30|black)}}{{save=None}}{{reference=PHB p140}}SpellData=[w:Darkness-15ft-radius,lv:2,sp:2,gp:0.2,cs:VSM]{{effects=This spell causes total, impenetrable darkness in the area of effect, which is 15ft as standard, but other variations exist.}}{{materials=A bit of bat fur and either a drop of pitch or a piece of coal at a cost of 2sp.}}'},
						{name:'Deafness',type:'MUspellL2',ct:'2',charge:'uncharged',cost:'0.05',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nDeafness\nas a level @{selected|casting-level} caster}}{{splevel=Level 2 Wizard}}{{school=Illusion/Phantasm}}Specs=[Deafness,MUspellL2,1H,Illusion-Phantasm]{{components=V,S,M}}{{time=[[2]]}}{{range=[60 yards](!rounds --aoe @{selected|token_id}|circle|yards|0|120||dark|true)}}{{duration=Special}}{{aoe=1 Creature}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 save vs Deafness spell)}}{{reference=PHB p140}}{{damage=[Deafen](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Select a target|token_id}|Deafness|99|0|Deaf, -1 on surprise, chance spells miscast|bleeding-eye)}}SpellData=[w:Deafness,lv:2,sp:2,gp:0.05,cs:VSM]{{effects=Causes the recipient to become totally deaf and unable to hear any sounds.}}{{materials=The material component of this spell is beeswax costing 5cp}}'},
						{name:'Death-Fog',type:'MUspellL6',ct:'6',charge:'uncharged',cost:'0.5',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nDeath Fog\nas a level @{selected|casting-level} caster}}{{splevel=Level 6 Wizard}}{{school=Alteration, Evocation}}Specs=[Death Fog,MUspellL6,1H,Alteration|Evocation]{{components=V,S,M}}{{time=[[6]]}}{{range=[[30]] yards}}!setattr --silent --charid @{selected|character_id} --spell-duration|{{duration=[[1d4+@{selected|casting-level}]] rounds}}!!!{{aoe=[[[2*@{selected|casting-level}]] x 10ft. cubes](!rounds --aoe @{selected|token_id}|rectangle|feet|0|||acid)}}{{save=None}}{{damage=[Set the timer](!rounds --target caster|@{selected|token_id}|Death-fog|\\amp#64;{selected|spell-duration}|-1|Its become a bit foggy|death-zone)}}{{reference=PHB p175}}SpellData=[w:Death Fog,lv:6,sp:6,gp:0.5,cs:VSM]{{effects=Creates an area of solid fog that has the additional property of being highly acidic. The vapors are deadly to living things, so that vegetation exposed to them will die and animals take damage: see PHB p175.}}{{materials=A pinch of dried and powdered peas, powdered animal hoof, and strong acid of any sort (including highly distilled vinegar or acid crystals), which must be obtained from an alchemist - total cost 5sp}}'},
						{name:'Death-Spell',type:'MUspellL6',ct:'6',charge:'uncharged',cost:'1000',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nDeath Spell\nas a level @{selected|casting-level} caster}}{{splevel=Level 6 Wizard}}{{school=Necromancy}}Specs=[Death Spell,MUspellL6,1H,Necromancy]{{components=V,S,M}}{{time=[[6]]}}{{range=[[10*@{selected|casting-level}]] yards}}{{duration=Instantaneous}}{{aoe=[[[@{selected|casting-level}]] x 10yd. cubes](!rounds --aoe @{selected|token_id}|rectangle|yards|[[10*@{selected|casting-level}]]|||dark)}}{{save=None}}{{reference=PHB p175}}{{reference=PHB p175}}SpellData=[w:Death Spell,lv:6,sp:6,gp:1000,cs:VSM]{{effects=Snuffs out the life forces of creatures in the area of effect instantly and irrevocably.}}{{materials=A crushed black pearl with a minimum value of\n1,000 gp}}'},
						{name:'Deeppockets',type:'MUspellL2',ct:'100',charge:'uncharged',cost:'1',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nDeeppockets\nas a level @{selected|casting-level} caster}}{{splevel=Level 2 Wizard}}{{school=Alteration,Enchantment}}Specs=[Deeppockets,MUspellL2,1H,Alteration|Enchantment-Charm]{{components=V,S, M}}{{time=[[1]]turn}}{{range=Touch}}{{duration=[[12+@{selected|casting-level}]]hours}}{{aoe=[[1]] garment}}{{save=None}}{{reference=PHB p140}}SpellData=[w:Deeppockets,lv:2,sp:100,gp:1,cs:VSM]{{effects=Specially prepare a garment so as to hold far more than it normally could.}}{{materials=The garment, which is reusable, a tiny golden needle and a strip of fine cloth given a half-twist and fastened at the ends, total cost 1gp per casting.}}'},
						{name:'Delayed-Blast-Fireball',type:'MUspellL7',ct:'7',charge:'uncharged',cost:'0.02',body:'!setattr --silent --charid @{selected|character_id} --spell-duration|?{What delay in rounds?|5|4|3|2|1}\n/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casting\nDelayed Blast Fireball\nas a level @{selected|casting-level} caster}}{{splevel=Level 7 Wizard}}{{school=Evocation}}Specs=[Delayed Blast Fireball,MUspellL7,1H,Evocation]{{components=V,S,M}}{{time=[[7]]}}{{range=[[100+(10*@{selected|casting-level})]] yards}}{{duration=[Delay of ?{What delay in rounds?} rounds](!rounds --target caster|@{selected|token_id}|Delayed-blast-fireball|\\amp#64;{selected|spell-duration}|-1|Waiting for the firball to go off|stopwatch)}}{{aoe=[20ft radius](!rounds --aoe @{selected|token_id}|circle|feet|[[300+(30*@{selected|casting-level})]]|40||fire)}}{{save=[Halves](!\\amp#13;\\amp#47;gmroll 1d20 save vs. Delayed Blast Fireball spell)}}{{damage=[[{10, @{selected|casting-level}}kl1]] + [[[{10, @{selected|casting-level}}kl1]]d6](!\\amp#13;\\amp#47;r [[{10, @{selected|casting-level}}kl1]]d6+[[{10, @{selected|casting-level}}kl1]])}}{{damagetype=Fire}}{{reference=PHB p183}}SpellData=[w:Delayed Blast Fireball,lv:7,sp:7,gp:0.02,cs:VSM]{{effects=Creates a fireball, with a +1 bonus to each of its dice of damage, which releases its blast anytime from instantly to five rounds later, according to the command given by the wizard.}}{{materials=A tiny ball of bat guano and sulphur, cost 2cp}}'},
						{name:'Delude',type:'MUspellL3',ct:'3',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nDelude\nas a level @{selected|casting-level} caster}}{{splevel=Level 3 Wizard}}{{school=Alteration}}Specs=[Delude,MUspellL3,1H,Alteration]{{components=VS}}{{time=3}}{{range=0}}{{duration=[[@{selected|casting-level}]] turns}}{{aoe=[30ft radius](!rounds --aoe @{selected|token_id}|circle|feet|0|60||magic|true)}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 save vs. Delude spell)}}{{reference=PHB p148}}SpellData=[w:Delude,lv:3,sp:3,gp:0,cs:VS]{{healing=[Delude them](!rounds --target caster|@{selected|token_id}|Delude|[[10*@{selected|casting-level}]]|-1|Assuming alignment of another creature|aura)}}{{effects=Caster conceals his own alignment with that of any creature within a 30-foot radius at the time the spell is cast. }}'},
						{name:'Demand',type:'MUspellL8',ct:'100',charge:'uncharged',cost:'1',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casting\nDemand\nas a level @{selected|casting-level} caster}}{{splevel=Level 8 Wizard}}{{school=Evocation, Enchantment-Charm}}Specs=[Demand,MUspellL8,1H,Evocation|Enchantment-Charm]{{components=V,S,M}}{{time=[[1]] turn}}{{range=Unlimited}}{{duration=Special}}{{aoe=1 creature}}{{save=[Special](!\\amp#13;\\amp#47; 1d20 save vs Demand spell)}}{{reference=PHB p189}}SpellData=[w:Demand,lv:8,sp:100,gp:1,cs:VSM]{{effects=Allows a brief contact with a far distant creature. The message can also contain a *suggestion*}}{{materials=A pair of cylinders, each open at one end, connected by a thin piece of copper wire costing 20gp to procure, reusable 20 times, and some small part of the subject creature--a hair, a bit of nail, etc}}'},
						{name:'Demi-Shadow-Magic',type:'MUspellL6',ct:'6',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nDemishadow Magic\nas a level @{selected|casting-level} caster}}{{splevel=Level 6 Wizard}}{{school=Illusion/Phantasm}}Specs=[Demi-Shadow Magic,MUspellL6,1H,Illusion-Phantasm]{{components=V, S}}{{time=[[6]]}}{{range=[[[60+(10*@{selected|casting-level})]] yards](!rounds --aoe @{selected|token_id}|circle|yards|0|[[120+(20*@{selected|casting-level})]]||magic|true)}}{{duration=That of spell cast}}{{aoe=That of spell cast}}{{save=Special}}{{reference=PHB p175}}SpellData=[w:Demi-Shadow-Magic,lv:6,sp:6,gp:0,cs:VS]{{effects=Similar to the 5th-level *Shadow Magic* spell, but this spell enables the casting of partially real 4th- and 5th level evocations (*Cone of cold, Wall of Fire, Wall of Ice, Cloudkill,* etc.).}}'},
						{name:'Demi-Shadow-Monsters',type:'MUspellL5',ct:'5',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nDemishadow Monsters\nas a level @{selected|casting-level} caster}}{{splevel=Level 5 Wizard}}{{school=Illusion/Phantasm}}Specs=[Demi-Shadow Monsters,MUspellL5,1H,Illusion-Phantasm]{{components=V, S}}{{time=[[5]]}}{{range=[[30]] yds.}}{{duration=[[@{selected|casting-level}]] rounds}}{{aoe=[20ft. cube](!rounds --aoe @{selected|token_id}|square|feet|90|20||lightning)}}{{save=Special}}{{reference=PHB p167}}SpellData=[w:Demi-Shadow-Monsters,lv:5,sp:5,gp:0,cs:VS]{{effects=Total of [[@{selected|casting-level}]] HD of monsters, all of same sort. Each has [[40]]% of rolled HP, rounded to closest HP - those with [[0]] are failed conjures. Save to disbelieve at [[0-2]] or take actual AC, Thac0, attack forms \\amp damage. Successful save means monsters are AC[[8]] \\amp inflict [[40]]% damage (rounded to closest HP).}}'},
						{name:'Detect-Evil',type:'MUspellL2',ct:'2',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nDetect Evil\nas a level @{selected|casting-level} caster}}{{splevel=Level 2 Wizard}}{{school=Divination (reversable)}}Specs=[Detect Evil,MUspellL2,1H,Divination]{{components=V, S}}{{time=[[2]]}}{{range=[[60]] yds}}{{duration=[[5*@{selected|casting-level}]] rounds}}{{aoe=[10ft path](!rounds --aoe @{selected|token_id}|bolt|feet|0|180|10|light)}}{{save=None}}{{healing=[Turn on Evil Radar](!rounds --target caster|@{selected|token_id}|Detect-Evil|[[5*@{selected|casting-level}]]|-1|Detecting Evil|aura)}}{{reference=PHB p140}}SpellData=[w:Detect-Evil,lv:2,sp:2,gp:0,cs:VS]{{effects=Discovers emanations of evil from any creature, object, or area. The spell has a path of detection [[10]] feet wide and [[60]] yards long in the direction in which the wizard is facing.}}'},
						{name:'Detect-Good',type:'MUspellL2',ct:'2',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nDetect Good\nas a level @{selected|casting-level} caster}}{{splevel=Level 2 Wizard}}{{school=Divination (reversable)}}Specs=[Detect Good,MUspellL2,1H,Divination]{{components=V, S}}{{time=[[2]]}}{{range=[[60]] yds}}{{duration=[[5*@{selected|casting-level}]] rounds}}{{aoe=[10ft path](!rounds --aoe @{selected|token_id}|bolt|feet|0|180|10|dark|true)}}{{save=None}}{{healing=[Turn on Good Radar](!rounds --target caster|@{selected|token_id}|Detect-Good|[[5*@{selected|casting-level}]]|-1|Detecting Good|aura)}}{{reference=PHB p140}}SpellData=[w:Detect-Good,lv:2,sp:2,gp:0,cs:VS]{{effects=Discovers emanations of good from any creature, object, or area. The spell has a path of detection [[10]] feet wide and [[60]] yards long in the direction in which the wizard is facing.}}'},
						{name:'Detect-Invisibility',type:'MUspellL2',ct:'2',charge:'uncharged',cost:'0.4',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}}{{title=@{selected|casting-name} casts\nDetect Invisibility\nas a level @{selected|casting-level} caster}}{{splevel=Level 2 Wizard}}{{school=Divination}}Specs=[Detect Invisibility,MUspellL2,1H,Divination]{{components=V, S, M}}{{time=[[2]]}}{{range=[[0]]}}{{duration=[[5*@{selected|casting-level}]] Rounds}}{{aoe=[[[10*@{selected|casting-level}]]ft long x 10ft wide](!rounds --aoe @{selected|token_id}|bolt|feet|0|[[10*@{selected|casting-level}]]|10|magic|true) in direction facing}}{{save=None}}{{reference=PHB p141}}{{healing=[Turn on magic radar](!rounds --target caster|@{selected|token_id}|Detect-Invisibility|[[5*@{selected|Casting-Level}]]|-1|Detecting Invisibility|aura)}}SpellData=[w:Detect-Invisibility,lv:2,sp:2,gp:0.4,cs:VSM]{{effects=Able to see clearly any objects or beings that are invisible, as well as any that are astral, ethereal, or out of phase,, and detect hidden or concealed creatures.}}{{materials=A pinch of talc and a small sprinkling of powdered silver, costing 4sp.}}'},
						{name:'Detect-Magic',type:'MUspellL1',ct:'1',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}}{{title=@{selected|casting-name} casts\nDetect Magic\nas a level @{selected|casting-level} caster}}{{splevel=Level 1 Wizard}}{{school=Divination}}Specs=[Detect Magic,MUspellL1,1H,Divination]{{components=V, S}}{{time=[[1]]}}{{range=[[0]]}}{{duration=[[2*@{selected|casting-level}]] Rounds}}{{aoe=[10ft x 60ft long](!rounds --aoe @{selected|token_id}|bolt|feet|0|60|10|magic) in direction facing}}{{save=None}}{{healing=[Turn on magic radar](!rounds --target caster|@{selected|token_id}|Detect-Magic|[[2*@{selected|Casting-Level}]]|-1|Detecting Magic|aura)}}{{reference=PHB p133}}SpellData=[w:Detect-Magic,lv:1,sp:1,gp:0,cs:VS]{{effects=Detect magic strength (dim/ faint/ moderate/ strong/ overwhelming) and [[[10*@{selected|casting-level}]]](!\\amp#13;\\amp#47;r 1d100)% chance of determining type (alteration/ conjuration/ etc). Can scan [[60]] degree arc per round.}}'},
						{name:'Detect-Scrying',type:'MUspellL4',ct:'3',charge:'uncharged',cost:'10',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nDetect Scrying\nas a level @{selected|casting-level} caster}}{{splevel=Level 4 Wizard}}{{school=Divination}}Specs=[Detect Scrying,MUspellL4,1H,Divination]{{components=V,S,M}}{{time=[[3]]}}{{range=[[0]]}} !setattr --silent --charid @{selected|character_id} --spell-duration|{{duration=[[[[1d6]]+@{selected|casting-level}]] turns}}!!! {{aoe=[120ft radius](!rounds --aoe @{selected|token_id}|circle|feet|0|240||light|true)}}{{save=[Special](!\\amp#13;\\amp#47;gmroll 1d20 save vs Detect Scrying spell)}}{{reference=PHB p155}}{{healing=[Turn on Scrying Radar](!rounds --target caster|@{selected|token_id}|Detect-Scrying|\\amp#91;[\\amp#64;{selected|spell-duration}*10]\\amp#93;|-1|Detecting Scrying|aura)}}SpellData=[w:Detect-Scrying,lv:4,sp:3,gp:10,cs:VSM]{{effects=The wizard immediately becomes aware of any attempt to observe him by means of clairvoyance, clairaudience, magic mirror, the use of crystal balls or other magical scrying devices, provided the attempt is within the area of effect of the spell.}}{{materials=A small piece of mirror and a miniature brass hearing trumpet costing 100gp, that can be reused 10 times.}}'},
						{name:'Detect-Undead',type:'MUspellL1',ct:'10',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nDetect Undead\nas a level @{selected|casting-level} caster}}{{splevel=Level 1 Wizard}}{{school=Divination,Necromancy}}Specs=[Detect Undead,MUspellL1,1H,Divination|Necromancy]{{components=V,S, M}}{{time=[[1]]round}}{{range=[[0]]}}{{duration=[[3]] turns}}{{aoe=[[[60+(10*@{selected|casting-level})]]ft. x 10ft.](!rounds --aoe @{selected|token_id}|bolt|feet|0|[[60+(10*@{selected|casting-level}\\amp#41;]]|10|acid)}}{{save=None}}{{reference=PHB p133}}{{healing=[Undead Detector](!rounds --target caster|@{selected|token_id}|Detect-Undead|30|-1|Can detect undead in direction facing if stand still for 1 round|death-zone)}}SpellData=[w:Detect-Undead,lv:1,sp:10,gp:0,cs:VSM]{{effects=Detect all undead creatures out to the limit of the spell. Scanning a direction requires one round, and the caster must be motionless.}}{{materials=A bit of earth from a grave (free)}}'},
						{name:'Dig',type:'MUspellL4',ct:'4',charge:'uncharged',cost:'5',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nDig\nas a level @{selected|casting-level} caster}}{{splevel=Level 4 Wizard}}{{school=Evocation}}Specs=[Dig,MUspellL4,2H,Evocation]{{components=V,S,M}}{{time=[[4]]}}{{range=[30 yards](!rounds --aoe @{selected|token_id}|circle|yards|0|60||acid|true)}}{{duration=[[@{selected|casting-level}]] rounds}}{{aoe=[[@{selected|casting-level}]] x 5ft cube}}{{save=[Special](!\\amp#13;\\amp#47;gmroll 1d20 save vs. Dig spell)}}{{damage=[4d6](!\\amp#13;\\amp#47;gmroll 4d6) vs creatures of earth \\amp rock}}{{reference=PHB p155}}SpellData=[w:Dig,lv:4,sp:4,gp:5,cs:VSM]{{effects=Excavate 125 cu.ft. per round. Does not need to all be same hole. }}{{materials=Miniature shovel \\amp tiny bucket (costing 5gp to have made) must be held throughout duration, and disappear at end}}'},
						{name:'Dimension-Door',type:'MUspellL4',ct:'1',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nDimension Door\nas a level @{selected|casting-level} caster}}{{splevel=Level 4 Wizard}}{{school=Alteration}}Specs=[Dimension Door,MUspellL4,0H,Alteration]{{components=V}}{{time=[[1]]}}{{range=Move up to [[[30*@{selected|casting-level}]] yards](!rounds --aoe @{selected|token_id}|circle|feet|0|[[60*@{selected|casting-level}]]||magic|true)}}{{duration=Instantaneous}}{{aoe=The caster}}{{save=None}}{{reference=PHB p155}}SpellData=[w:Dimension Door,lv:4,sp:1,gp:0,cs:V]{{effects=Instantly transfers himself up to [[30*@{selected|casting-level}]] yards distance. No error, and the wizard always arrives at exactly the spot desired--whether by simply visualizing the area (within spell transfer distance, of course) or by stating direction.}}'},
						{name:'Disintegrate',type:'MUspellL6',ct:'6',charge:'uncharged',cost:'0.2',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nDisintegrate\nas a level @{selected|casting-level} caster}}{{splevel=Level 6 Wizard}}{{school=Alteration}}Specs=[Disintegrate,MUspellL6,1H,Alteration]{{components=V,S,M}}{{time=[[6]]}}{{range=[[5*@{selected|Casting-Level}]]yds}}{{duration=Instantaneous}}{{aoe=[1 creature ray](!rounds --aoe @{selected|token_id}|bolt|feet|0|[[15*@{selected|Casting-Level}]]|3|acid) or [10x10x10ft cube](!rounds --aoe @{selected|token_id}|square|feet|[[15*@{selected|Casting-Level}]]|10||lightning)}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 Save vs. Disintegrate spell)}}{{reference=PHB p175}}SpellData=[w:Disintegrate,lv:6,sp:6,gp:0.2,cs:VSM]{{effects=This spell causes matter to vanish. It affects even matter (or energy) of a magical nature, such as Bigby\'s forceful hand, but not a globe of invulnerability or an antimagic shell.}}{{materials=A lodestone costing 2sp and a pinch of dust.}}'},
						{name:'Dismissal',type:'MUspellL5',ct:'10',charge:'uncharged',cost:'100',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nDismissal\nas a level @{selected|casting-level} caster}}{{splevel=Level 5 Wizard}}{{school=Abjuration}}Specs=[Dismissal,MUspellL5,1H,Abjurarion]{{components=V,S,M}}{{time=[[1]]round}}{{range=[10 yards](!rounds --aoe @{selected|token_id}|circle|yards|0|20||magic|true)}}{{duration=Permanent}}{{aoe=[[1]]Creature}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 Save vs. Dismissal spell)}}{{reference=PHB p167}}SpellData=[w:Dismissal,lv:5,sp:10,gp:100,cs:VSM]{{effects=A wizard on the Prime Material Plane seeks to force or enable a creature from another plane of existence to return to its proper plane.}}{{materials=Any item that is distasteful to the subject creature, costing at least 100gp.}}'},
						{name:'Dispel-Magic',type:'MUspellL3',ct:'30',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nDispel Magic\nas a level @{selected|casting-level} caster}}{{splevel=Level 3 Wizard}}{{school=Abjuration}}Specs=[Dispel Magic,MUspellL3,1H,Abjuration]{{components=V, S}}{{time=[[3]] turn}}{{range=[[120]]yds}}{{duration=Instantanious}}{{aoe=[30ft cube](!rounds --aoe @{selected|token_id}|square|yards|120|10||lightning)}}{{save=None}}{{reference=PHB p148}}SpellData=[w:Dispel-Magic,lv:3,sp:30,gp:0,cs:VS]{{effects=Has a chance to neutralize or negate magic it comes in contact with.}}'},
						{name:'Distance-Distortion',type:'MUspellL5',ct:'5',charge:'uncharged',cost:'0.01',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casting\nDistance Distortion\nas a level @{selected|casting-level} caster}}{{splevel=Level 5 Wizard}}{{school=Alteration}}Specs=[Distance Distortion,MUspellL5,1H,Alteration]{{components=V,S,M}}{{time=[[5]]}}{{range=[[10*@{selected|casting-level}]] yards}}{{duration=[[2*@{selected|casting-level}]] turns}}{{aoe=[@{selected|casting-level} x 10ft. cube](!rounds --aoe @{selected|token_id}|rectabgle|feet|[[30*@{selected|casting-level}]]|||magic)}}{{save=None}}{{reference=PHB p167}}{{healing=[Distort area](!rounds --target caster|@{selected|token_id}|Distance-distortion|[[20*@{selected|casting-level}]]|-1|You\'ve changed distances in the local area|tread)}}SpellData=[w:Distance Distortion,lv:5,sp:5,gp:0.01,cs:VSM]{{effects=The wizard must also cast a *conjure elemental* spell to **summon an earth elemental**. The elemental then causes the area\'s dimensions to be either doubled or halved for those traveling over it (spellcaster\'s choice).}}{{materials=A small lump of soft clay, worth 1cp}}'},
						{name:'Domination',type:'MUspellL5',ct:'5',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casting\nDomination\nas a level @{selected|casting-level} caster}}{{splevel=Level 5 Wizard}}{{school=Enchantment-Charm}}Specs=[Domination,MUspellL5,1H,Enchantment-Charm]{{components=V,S}}{{time=[[5]]}}{{range=[[[10*@{selected|casting-level}]] yards](!rounds --aoe @{selected|token_id}|circle|yards|0|20||magic|true)}}{{duration=Special}}{{aoe=1 person}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 save vs. Domination spell with Wisdom adjustments)}}{{damage=[Dominate](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Who do you want to Dominate?|token_id}|Domination|99|0|Dominated by @{selected|token_name}|chained-heart)}}{{reference=PHB p168}}SpellData=[w:Domination,lv:5,sp:5,gp:0,cs:VS]{{effects=Control the actions of any person until the spell is ended by the subject\'s Intelligence (see the *charm person* spell). Elves and half-elves resist as they do all *charm*-type spells.}}'},
						{name:'Drawmijs-Instant-Summons',type:'MUspellL7',ct:'1',charge:'uncharged',cost:'5000',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casting\nDrawmijs Instant Summons\nas a level @{selected|casting-level} caster}}{{splevel=Level 7 Wizard}}{{school=Conjuration-Summoning}}Specs=[Drawmijs-Instant-Summons,MUspellL7,1H,Conjuration-Summoning]{{components=V,S,M}}{{time=[[1]]}}{{range=Infinate + special}}{{duration=Instantaneous}}{{aoe=1 small object}}{{save=None}}{{reference=PHB p183}}SpellData=[w:Drawmijs-Instant-Summons,lv:7,sp:1,gp:5000,cs:VSM]{{effects=Teleports some desired item from virtually any location directly to his hand.}}{{materials=A gem of not less than 5,000 gp value}}'},
						{name:'Dream',type:'MUspellL5',ct:'100',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nDream\nas a level @{selected|casting-level} caster}}{{splevel=Level 5 Wizard}}{{school=Illusion/Phantasm (reversable)}}Specs=[Dream,MUspellL5,1H,Illusion-Phantasm]{{components=V,S}}{{time=[[1]] Turn}}{{range=Touch}}{{duration=Special}}{{aoe=[[1]]creature}}{{save=None}}{{reference=PHB p168}}SpellData=[w:Dream,lv:5,sp:100,gp:0,cs:VS]{{effects=Enables the caster, or a messenger touched by the caster, to send messages to others in the form of dreams.}}'},
						{name:'Duo-Dimension',type:'MUspellL7',ct:'7',charge:'uncharged',cost:'750',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casting\nDuo-Dimension\nas a level @{selected|casting-level} caster}}{{splevel=Level 7 Wizard}}{{school=Alteration}}Specs=[Duo-Dimension,MUspellL7,1H,Alteration]{{components=V,S,M}}{{time=[[7]]}}{{range=[[0]]}}{{duration=[[[3+@{selected|casting-level}]] rounds](!rounds --target caster|@{selected|token_id}|Duo-dimension|[[3+@{selected|casting-level}]]|-1|Becomes 2-dimensional like paper|three-leaves)}}{{aoe=The caster}}{{save=None}}{{reference=PHB p184}}SpellData=[w:Duo-Dimension,lv:7,sp:7,gp:750,cs:VSM]{{effects=Causes the caster to have only two dimensions, height and width, with no depth. Invisible when turned sideways.}}{{materials=A flat ivory likeness of the spellcaster (which must be of finest workmanship, gold filigreed, and enamelled and gem-studded at an average cost of 500 to 1,000 gp) and a strip of parchment}}'},
						{name:'ESP',type:'MUspellL2',ct:'2',charge:'uncharged',cost:'0.01',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nESP\nas a level @{selected|casting-level} caster}}{{splevel=Level 2 Wizard}}{{school=Divination}}Specs=[ESP,MUspellL2,1H,Divination]{{components=V,S,M}}{{time=[[2]]}}{{range=[[0]]}}{{duration=[[@{selected|Casting-level}]] rounds}}{{aoe=[[[{{5*@{selected|Casting-level}},{90}}kl1]] yards](!rounds --aoe @{selected|token_id}|circle|yards|0|[[{{10*@{selected|Casting-level}},{90}}kl1]]||magic|true)}}{{save=None}}{{reference=PHB p141}}{{healing=[Read thoughts](!rounds --target caster|@{selected|token_id}|ESP|@{selected|casting-level}|-1|Using ESP|death-zone)}}SpellData=[w:ESP,lv:2,sp:2,gp:0.01,cs:VSM]{{effects=The caster is able to detect the surface thoughts of any creatures in range--except for those of undead and creatures without minds (as we know them).}}{{materials=A copper piece.}}'},
						{name:'Emotion',type:'MUspellL4',ct:'4',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nEmotion\nas a level @{selected|casting-level} caster}}{{splevel=Level 4 Wizard}}{{school=Enchantment-Charm}}Specs=[Emotion,MUspellL4,1H,Enchantment-Charm]{{components=V,S}}{{time=[[4]]}}{{range=[[10*@{selected|casting-level}]] yards}}{{duration=Special}}{{aoe=[20ft cube](!rounds --aoe @{selected|token_id}|square|feet|[[30*@{selected|casting-level}]]|20||magic)}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 save vs. Emotion spell)}}{{reference=PHB p155}}SpellData=[w:Emotion,lv:4,sp:4,gp:0,cs:VS]{{effects=Create a single emotional reaction in the subject creatures. The following are typical (see PHB for details):\n[Courage](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Give Courage to whom?|token_id}|Emotion-courage|99|0|Courageous, +1 to attk, +3 dmg, +5HP|strong) [Fear](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Frighten whom?|token_id}|Emotion-fear|\\amp#91;[2d4]\\amp#93;|-1|Fearful, fleeing in panic...|screaming) [Friendship](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Make friends with whom?|token_id}|Emotion-friends|99|0|Friendly to this wonderful caster @{selected|character_name} reaction improves by one class|chained-heart) [Happiness](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Who will you cheer up?|token_id}|Emotion-happy|99|0|Happyness is infectious! You are so happy|aura) [Hate](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Instill hatred in whom?|token_id}|Emotion-hate|99|0|Hates @{selected|character_name} [Hope](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Give Hope to whom?|token_id}|Emotion-hope|99|0|Hopeful, +2 to attk, dmg, and saves|strong) [Hopelessness](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Depress whom?|token_id}|Emotion-hopelessness|99|0|Hopeless, better submit and surrender, or 25% do nothing, or 25% retreat|broken-shield) [Sadness](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Sadden whom?|token_id}|Emotion-sadden|99|0|Sad, -1 to surprise rolls, and initiative is 1 slower|snail)}}'},
						{name:'Enchant-an-Item',type:'MUspellL6',ct:'100',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nEnchant an Item\nas a level @{selected|casting-level} caster}}{{splevel=Level 6 Wizard}}{{school=Enchantment, Invocation}}Specs=[Enchant an Item,MUspellL6,1H,Enchantment|Invocation]{{components=V,S,M}}{{time=Special}}{{range=Touch}}{{duration=Special}}{{aoe=1 Item}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 save vs. Enchant an Item spell)}}{{reference=PHB p175-6}}SpellData=[w:Enchant an Item,lv:6,sp:100,gp:0,cs:VSM]{{effects=Prepares the object to accept a magic enchantment.}}{{materials=Vary according to both the nature of the item being enchanted and the magic to be cast upon it. DM will determine and tell you the cost}}'},
						{name:'Enchanted-Weapon',type:'MUspellL4',ct:'100',charge:'uncharged',cost:'0.2',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casting\nEnchanted Weapon\nas a level @{selected|casting-level} caster}}{{splevel=Level 4 Wizard}}{{school=Enchantment}}Specs=[Enchanted Weapon,MUspellL4,1H,Enchantment]{{components=V,S,M}}{{time=[[1]] turn}}{{range=Touch}}{{duration=[[5*@{selected|casting-level}]] rounds}}{{aoe=Weapons touched}}{{save=None}}{{reference=PHB p157}}SpellData=[w:Enchanted Weapon,lv:4,sp:100,gp:0.2,cs:VSM]{{effects=Turns an ordinary weapon into a magical one or accumulates plusses on an already magical one.}}{{materials=Powdered lime (costing 1sp) and carbon (costing 1sp)}}'},
						{name:'Energy-Drain',type:'MUspellL9',ct:'3',charge:'uncharged',cost:'1000',body:'!magic --touch @{selected|token_id}|Energy Drain|0|0|You have lost two levels or two Hit Dice for monsters|back-pain\n/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casting\nEnergy Drain\nas a level @{selected|casting-level} caster}}{{splevel=Level 9 Wizard}}{{school=Evocation, Necromancy}}Specs=[Energy Drain,MUspellL9,1H,Evocation|Necromancy]{{components=V,S,M}}{{time=[[3]]}}{{range=[Touch](~selected|To-Hit-Spell)}}{{duration=Permanent}}{{aoe=1 creature}}{{save=None}}{{reference=PHB p194}}SpellData=[w:Energy Drain,lv:9,sp:3,gp:1000,cs:VSM]{{effects=Opens a channel between the plane he is in and the Negative Energy plane, becoming the conductor between the two planes. As soon as he touches (equal to a hit if melee is involved) any living creature, the victim loses two levels (as if struck by a spectre).}}{{materials=Essence of spectre or vampire dust, value 1,000gp to procure}}'},
						{name:'Enervation',type:'MUspellL4',ct:'4',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casting\nEnervation\nas a level @{selected|casting-level} caster}}{{splevel=Level 4 Wizard}}{{school=Necromancy}}Specs=[Enervation,MUspellL4,1H,Necromancy]{{components=V,S}}{{time=[[4]]}}{{range=[10 yards/level](!rounds --aoe @{selected|token_id}|circle|yards|0|[[20*@{selected|casting-level}]]||dark)}}!setattr --silent --name @{selected|character_name} --spell-duration|{{duration=[[1d4+@{selected|token_id}]] hours}}!!!{{aoe=1 creature}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 save vs. Enervation spell)}}{{reference=PHB p157}}{{damage=[Drain energy](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Choose your victim|token_id}|Enervation|\\amp#91;[60*\\amp#64;{selected|spell-duration}]\\amp#93;|-1|You feel drained of [[ceil(@{selected|casting-level}/4)]] levels|broken-skull)}}SpellData=[w:Enervation,lv:4,sp:4,gp:0,cs:VS]{{effects=Temporarily suppresses the subject\'s life force. }}'},
						{name:'Enlarge',type:'MUspellL1',ct:'1',charge:'uncharged',cost:'0.05',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}}{{title=@{selected|casting-name} casts\nEnlarge\nas a level @{selected|casting-level} caster}}{{splevel=Level 1 Wizard (reversible)}}{{school=Alteration}}Specs=[Enlarge,MUspellL1,1H,Alteration]{{components=V, S, M}}{{time=[[1]]}}{{range=[[[5*@{selected|casting-level}]] yards](!rounds --aoe @{selected|token_id}|circle|yards|0|[[10*@{selected|casting-level}]]||magic|true)}}{{duration=[[5*@{selected|casting-level}]] Rounds}}{{aoe=1 creature or object no larger than [[10*@{selected|casting-level}]]cu.ft}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 saving throw vs. spell Enlarge)}}{{reference=PHB p133}}{{healing=[Enlarge it](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Select a subject|token_id}|Enlarge|[[5*@{selected|casting-level}]]|-1|Enlarged, Damage x [[1+(@{selected|casting-level}/10)]]|overdrive)}}SpellData=[w:Enlarge,lv:1,sp:1,gp:0.05,cs:VSM]{{effects=Causes instant growth of a creature or object, increasing both size and weight.}}{{materials=A pinch of powdered iron, worth 5cp}}'},
						{name:'Ensnarement',type:'MUspellL6',ct:'100',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nEnsnarement\nas a level @{selected|casting-level} caster}}{{splevel=Level 6 Wizard}}{{school=Conjuration-Summoning}}Specs=[Ensnarement,MUspellL6,1H,Conjuration-Summoning]{{components=V,S,M}}{{time=[[1]] turn}}{{range=[[10]] yards}}{{duration=Special}}{{aoe=Special}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 save vs. Ensnarement spell)}}{{reference=PHB p176}}SpellData=[w:Ensnarement,lv:6,sp:100,gp:0,cs:VSM]{{effects=Attempts a dangerous act: to lure a powerful creature from another plane to a specifically prepared trap, where it will be held until it agrees to perform one service in return for freedom from the ensnarement spell.}}{{materials=See the description in the PHB p176}}'},
						{name:'Erase',type:'MUspellL1',ct:'1',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nErase\nas a level @{selected|casting-level} caster}}{{splevel=Level 1 Wizard}}{{school=Alteration}}Specs=[Erase,MUspellL1,1H,Alteration]{{components=V,S}}{{time=[[1]]}}{{range=[30 yards](!rounds --aoe @{selected|token_id}|circle|yards|0|60||lightning|true)}}{{duration=Permanent}}{{aoe=1 scroll or 2 pages}}{{save=[Special](!\\amp#13;\\amp#47;gmroll 1d100 success throw vs Erase) see below}}{{reference=PHB p134}}SpellData=[w:Erase,lv:1,sp:1,gp:0,cs:VS]{{effects=Removes writings of either magical or mundane nature from a scroll or from one to two pages of paper, parchment, or similar surfaces.}}'},
						{name:'Evards-Black-Tentacles',type:'MUspellL4',ct:'10',charge:'uncharged',cost:'1',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casting\nEvards Black Tentacles\nas a level @{selected|casting-level} caster}}{{splevel=Level 4 Wizard}}{{school=Conjuration-Summoning}}Specs=[Evards Black Tentacles,MUspellL4,1H,Conjuration-Summoning]{{components=V,S,M}}{{time=[[1]] round}}{{range=30 yds}}{{duration=[[@{selected|casting-level}]] hours}}{{aoe=[@{selected|casting-level} x 30sq.ft.](!rounds --aoe @{selected|token_id}|rectangle|feet|90|||dark)}}{{save=None}}{{reference=PHB p157}}{{damage=[Tentacle attack](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Who gets attacked?|token_id}|Black-tentacle|[[60*@{selected|casting-level}]]|-1|You are held fast by a black tentacle|half-haze)}}SpellData=[w:Evards Black Tentacles,lv:4,sp:10,gp:1,cs:VSM]{{effects=Creates [1d4+@{selected|casting-level}](!\\amp#13;\\amp#47;r 1d4+@{selected|casting-level}) rubbery, black tentacles in the area of effect. Each tentacle is 10 feet long, AC 4, and has same HP as caster, [[@{selected|hp}]] HP.\nAny creature in range is subject to attack as determined by the DM. Traget must save vs. spell to suffer only [1d4](!\\amp#13;\\amp#47;gmroll 1d4) HP damage; the tentacle is then destroyed. Failure inflicts damage of 2d4 points (automatically deducted by Effect), is grabbed, and damage will be 3d4 points (automatically deducted) on the second and all succeeding rounds. Remains until tentacle is destroyed by attack or end of duration.\nSee PHB p 157 for full details}}{{materials=A piece of tentacle from a giant octopus or giant squid, costing 1gp to source}}'},
						{name:'Explosive-Runes',type:'MUspellL3',ct:'3',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nExplosive Runes\nas a level @{selected|casting-level} caster}}{{splevel=Level 3 Wizard}}{{school=Alteration}}Specs=[Explosive Runes,MUspellL3,1H,Alteration]{{components=VS}}{{time=3}}{{range=Touch}}{{duration=Special}}{{aoe=[10ft radius](!rounds --aoe @{selected|token_id}|circle|feet|0|20||magic|true)}}{{save=None (reader) or [Halves](!\\amp#13;\\amp#47;gmroll 1d20 save vs. Explosive Runes spell)}}{{reference=PHB p148}}SpellData=[w:Explosive Runes,lv:3,sp:3,gp:0,cs:VS]{{effects=Caster prevents unauthorized persons from reading his material. When read, the explosive runes detonate, delivering [6d4+6](!\\amp#13;\\amp#47;r 6+6d4 damage from explosive runes) points of damage to the reader, who gets no saving throw. A like amount, or half that if saving throws are made, is suffered by each creature within the blast radius.}}'},
						{name:'Extension-I',type:'MUspellL4',ct:'2',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nExtension I\nas a level @{selected|casting-level} caster}}{{splevel=Level 4 Wizard}}{{school=Alteration}}Specs=[Extension 1,MUspellL4,1H,Alteration]{{components=V}}{{time=[[2]]}}{{range=[[0]]}}{{duration=Special}}{{aoe=Special}}{{save=None}}{{reference=PHB p157}}SpellData=[w:Extension-1,lv:4,sp:2,gp:0,cs:V]{{effects=Prolongs the duration of a previously cast 1st-, 2nd-, or 3rd-level spell by 50%.}}'},
						{name:'Extension-II',type:'MUspellL5',ct:'4',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nExtension II\nas a level @{selected|casting-level} caster}}{{splevel=Level 5 Wizard}}{{school=Alteration}}Specs=[Extension II,MUspellL5,0H,Alteration]{{components=V}}{{time=[[4]]}}{{range=[[0]]}}{{duration=Special}}{{aoe=Special}}{{save=None}}{{reference=PHB p168}}SpellData=[w:Extension-II,lv:5,sp:4,gp:0,cs:V]{{effects=Prolongs the duration of a previously cast 1st-, 2nd-, 3rd-, or 4th level spell by 50%.}}'},
						{name:'Extension-III',type:'MUspellL6',ct:'6',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nExtension III\nas a level @{selected|casting-level} caster}}{{splevel=Level 6 Wizard}}{{school=Alteration}}Specs=[Extension III,MUspellL6,0H,Alteration]{{components=V}}{{time=[[6]]}}{{range=[[0]]}}{{duration=Special}}{{aoe=Special}}{{save=None}}{{reference=PHB p177}}SpellData=[w:Extension-III,lv:6,sp:6,gp:0,cs:V]{{effects=This spell is the same as the 4th-level extension I spell, except that it will extend 1st through 3rd-level spells to double duration and will extend the duration of 4th- or 5th level spells by 50%.}}'},
						{name:'Eyebite',type:'MUspellL6',ct:'6',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nEyebite\nas a level @{selected|casting-level} caster}}{{splevel=Level 6 Wizard}}{{school=Enchantment/Charm, Illusion/Phantasm}}Specs=[Eyebite,MUspellL6,1H,Enchantment-Charm|Illusion-Phantasm]{{components=V, S}}{{time=[[6]]}}{{range=[20 yards](!rounds --aoe @{selected|token_id}|circle|yards|0|40||magic|true)}}{{duration=[[ceil(@{selected|casting-level}/3)]] rounds}}{{aoe=[[1]] creature}}{{save=[Special](!\\amp#13;\\amp#47;gmroll 1d20 saving throw)}}{{reference=PHB p177}}SpellData=[w:Eyebite,lv:6,sp:6,gp:0,cs:VS]{{effects=Meet the gaze of a creature (does not affect undead) and speak a single word each round (speed [[1]]). Effect must be the same each round. Choose from Charm or Fear or Sicken or Sleep.\n[Charm](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Select a target|token_id}|Eyebyte-Charm|[[ceil(@{selected|casting-level}/3)]]|-1|Eyebite charmed|chained-heart): Charmed to point of accepting personal danger but **save negates** (non-humanoid save at +[[2]]). \n[Fear](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Select a target|token_id}|Eyebyte-Fear|[[ceil(@{selected|casting-level}/3)]]|-1|Eyebite fright|screaming): Flee for [1d4](!\\amp#13;\\amp#47;r 1d4) rounds. Refuse to face caster and cower or bolt for cover (50 / 50) if confronted by caster. **No save**. \n[Sicken](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Select a target|token_id}|Eyebyte-sicken|[[ceil(@{selected|casting-level}/3)]]|-1|Eyebite sickness|back-pain): Creatures with ability scores are [[50]]% effective or otherwise do [[50]]% damage with physical attacks. Move at [[50]]%. Lasts **[[@{selected|casting-level}]] turns** then return at [[1]] point per turn of rest or [[1]] hour of moderate activity. **Save negates** (non-humanoid save at +[[2]]). \n[Sleep](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Select a target|token_id}|Eyebyte-Slept|[[ceil(@{selected|casting-level}/3)]]|-1|Eyebite sleeping|sleepy): Deep comatose slumber unless **save at [[0-2]]** (unless resistant to sleep who save at +[[0]]).}}'},
						{name:'Fabricate',type:'MUspellL5',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nFabricate\nas a level @{selected|casting-level} caster}}{{splevel=Level 5 Wizard}}{{school=Enchantment, Alteration}}Specs=[Fabricate,MUspellL5,1H,Enchantment|Alteration]{{components=V,S,M}}{{time=Up to [[@{selected|casting-level}]] rounds}}{{range=[[5*@{selected|casting-level}]] yards}}{{duration=Permanent}}{{aoe=[Non-minerals @{selected|casting-level} cu.yds.](!rounds --aoe @{selected|token_id}|rectangle|yards|[[5*@{selected|casting-level}]]|||magic) or [Minerals @{selected|casting-level} cu.ft.](!rounds --aoe @{selected|token_id}|rectangle|feet|[[5*@{selected|casting-level}]]|||magic)}}{{save=None}}{{reference=PHB p168}}SpellData=[w:Fabricate,lv:5,sp:[[10*@{selected|casting-level}]],gp:0,cs:VSM]{{effects=Convert material of one sort into a product that is of the same material. Cannot create or alter magical or living things.}}'},
						{name:'False-Vision',type:'MUspellL5',ct:'5',charge:'uncharged',cost:'500',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nFalse Vision\nas a level @{selected|casting-level} caster}}{{splevel=Level 5 Wizard}}{{school=Divination}}Specs=[False Vision,MUspellL5,1H,Divination]{{components=V,S,M}}{{time=[[5]]}}{{range=[[0]]}}!setattr --silent --charid @{selected|character_id} --spell-duration|{{duration=[[1d4+@{selected|casting-level}]] rounds}}!!!{{aoe=[30ft radius](!rounds --aoe @{selected|token_id}|circle|yards|0|10||magic|true --target caster|@{selected|token_id}|False-vision|\\amp#64;{selected|spell-duration}|-1|Sending a false vision|bleeding-eye)}}{{save=None}}{{reference=PHB p168}}SpellData=[w:False Vision,lv:5,sp:5,gp:500,cs:VSM]{{effects=Confound any attempt to scry (by means of either a spell or a magical device) any point within the area of effect of the spell.}}'},
						{name:'Fear',type:'MUspellL4',ct:'4',charge:'uncharged',cost:'0.05',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nFear\nas a level @{selected|casting-level} caster}}{{splevel=Level 4 Wizard}}{{school=Illusion/Phantasm}}Specs=[Fear,MUspellL4,1H,Illusion-Phantasm]{{components=V, S, M}}{{time=[[4]]}}{{range=[[0]]}}{{duration=[[@{selected|casting-level}]] rounds}}{{aoe=[60ft. cone, 30ft. at end, 5ft. at base](!rounds --aoe @{selected|token_id}|cone|yards|0|20|10|magic)}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 saving throw)}}{{damage=[Frighten them](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Select first target|token_id}|Fear|[[@{selected|casting-level}]]|-1|Frightened, flee at fastest rate from @{selected|Casting-name}|screaming)}}{{reference=PHB p157}}SpellData=[w:ear,lv:4,sp:4,gp:0.05,cs:VSM]{{effects=Sends forth invisible cone of terror. Creatures within area of effect to turn away from the caster and flee.}}{{materials=Either the heart of a hen or a white feather. 5cp}}'},
						{name:'Feather-Fall',type:'MUspellL1',ct:'1',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nFeather Fall\nas a level @{selected|casting-level} caster}}{{splevel=Level 1 Wizard}}{{school=Alteration}}Specs=[Feather Fall,MUspellL1,0H,Alteration]{{components=V}}{{time=[[1]]}}{{range=[[10*@{selected|casting-level}]]yds}}{{duration=[[@{selected|casting-level}]] rounds}}{{aoe=Total weight less than [[200+(200*@{selected|casting-level})]]lbs in a [10ft cube](!rounds --aoe @{selected|token_id}|square|feet|[[10*@{selected|casting-level}]]|10|10|light)}}{{save=None}}{{reference=PHB p134}}{{healing=[Light as a Feather](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Select first feather|token_id}|Feather-fall|[[@{selected|casting-level}]]|-1|Falling light as a Feather, falls 120ft / round, no dmg on land|fluffy-wing)}}SpellData=[w:Feather-Fall,lv:1,sp:1,gp:0,cs:V]{{effects=The creature(s) or object(s) affected immediately assume the mass of a piece of down. The rate of falling is instantly changed to a mere 2 feet per second (120 feet per round), and no damage is incurred upon landing while the spell is in effect.}}'},
						{name:'Feeblemind',type:'MUspellL5',ct:'5',charge:'uncharged',cost:'0.02',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nFeeblemind\nas a level @{selected|casting-level} caster}}{{splevel=Level 5 Wizard}}{{school=Enchantment/Charm}}Specs=[Feeblemind,MUspellL5,1H,Enchantment-Charm]{{components=V, S, M}}{{time=[[5]]}}{{range=[[10*@{selected|casting-level}]] yds}}{{duration=Permanent}}{{aoe=[1 creature who uses magic spells](!rounds --aoe @{selected|token_id}|circle|yards|0|[[20*@{selected|casting-level}]]||dark|true)}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 saving throw)}}{{reference=PHB p140}}{{damage=[Enfeable](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Select a victim|token_id}|Feeblemind|99|0|Intelligence of a dull child|broken-skull)}}{{reference=PHB p168}}SpellData=[w:Feablemind,lv:5,sp:5,gp:0.02,cs:VSM]{{effects=Target reduced to the intelligence of a moronic child until Heal or Wish used. Save depends on types of spell cast by creature: Clerical +[[1]], Wizard (human) [[0-4]], Both or non-human [[0-2]]. Wisdom adjustments apply. Save negates.}}{{materials=A handful of clay, crystal, glass, or mineral, costing 2cp}}'},
						{name:'Feign-Death',type:'MUspellL3',ct:'1',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nFeign Death\nas a level @{selected|casting-level} caster}}{{splevel=Level 3 Wizard}}{{school=Necromancy}}Specs=[Feign Death,MUspellL3,1H,Necromancy]{{components=VS}}{{time=1}}{{range=Touch}}{{duration=[[6+@{selected|casting-level}]] turns}}{{aoe=Creature touched}}{{save=None}}{{reference=PHB p149}}SpellData=[w:Feign Death,lv:3,sp:1,gp:0,cs:VS]{{healing=[Appear to Die](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Whose the corpse?|token_id}|Feign-death|[[60+(10*@{selected|casting-level})]]|-1|Looks dead to me|skull)}}{{effects=Caster (or any other creature whose levels of experience or Hit Dice do not exceed the wizard\'s own level) can be put into a cataleptic state that is impossible to distinguish from death. }}'},
						{name:'Find-Familiar',type:'MUspellL1',ct:'240',charge:'uncharged',cost:'1000',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nFind Familiar\nas a level @{selected|casting-level} caster}}{{splevel=Level 1 Wizard}}{{school=Conjuration/Summoning}}Specs=[Find Familiar,MUspellL1,1H,Conjuration-Summoning]{{components=V, S, M}}{{time=[2d12](!\\amp#13;\\amp#47;gmroll 2d12 rounds duration for Find Familiar)}}{{range=[[@{selected|casting-level}]]miles}}{{duration=Special}}{{aoe=1 Familiar}}{{save=Special}}{{reference=PHB Page 134}}{{reference=PHB p134}}SpellData=[w:Find-Familiar,lv:1,sp:240,gp:1000,cs:VSM]{{effects=Attempt to summon a familiar to act as the caster\'s aide and companion.}}{{materials=Load a brass brazier with charcoal. When this is burning well, add 1,000 gp worth of incense and herbs.}}'},
						{name:'Finger-of-Death',type:'MUspellL7',ct:'5',charge:'uncharged',cost:'500',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casting\nFinger of Death\nas a level @{selected|casting-level} caster}}{{splevel=Level 7 Wizard}}{{school=Necromancy}}Specs=[Finger of Death,MUspellL7,1H,Necromancy]{{components=V,S}}{{time=[[5]]}}{{range=[[[60]] yards](!rounds --aoe @{selected|token_id}|circle|yards|0|120||dark|true)}}{{duration=Permanent}}{{aoe=1 creature}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 save vs. Finger of Death spell)}}{{reference=PHB p184}}SpellData=[w:Finger of Death,lv:7,sp:5,gp:500,cs:VS]{{effects=Snuffs out the victim\'s life force. A creature successfully saving still receives [2d8+1](!\\amp#13;\\amp#47;r 2d8+1) points of damage. If the subject dies of damage, no internal changes occur and the victim can then be revived normally.}}'},
						{name:'Fire-Charm',type:'MUspellL4',ct:'4',charge:'uncharged',cost:'2',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nFire-Charm\nas a level @{selected|casting-level} caster}}{{splevel=Level 4 Wizard}}{{school=Enchantment/Charm}}Specs=[Fire Charm,MUspellL4,1H,Enchantment-Charm]{{components=V,S,M}}{{time=[[4]]}}{{range=[[10]]yds}}{{duration=[[2*@{selected|Casting-Level}]] rounds}}{{aoe=[15ft radius](!rounds --aoe @{selected|token_id}|circle|feet|30|30||magic)}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 Save vs. Fire Charm spell)}}{{damage=[Charm Them](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Charm which creature?|token_id}|Fire-charm|[[2*@{selected|casting-level}]]|-1|Charmed and open to suggestions|chained-heart)}}{{reference=PHB p158}}SpellData=[w:Fire-Charm,lv:4,sp:4,gp:2,cs:VSM]{{effects=Causes a normal fire source to serve as a magical agent, and any creatures observing the fire or the dancing circle of flame around it must successfully roll a saving throw vs. spell or be charmed into remaining motionless and gazing, transfixed, at the flames.}}{{materials=A small piece of multicolored silk of exceptional thinness worth 2gp that the spellcaster must throw into the fire source.}}'},
						{name:'Fire-Shield-Cold',type:'MUspellL4',ct:'4',charge:'uncharged',cost:'0.05',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casting\nCold Fire Shield\nas a level @{selected|casting-level} caster}}{{splevel=Level 4 Wizard}}{{school=Evocation, Alteration}}Specs=[Fire Shield Cold,MUspellL4,1H,Evocation|Alteration]{{components=V,S,M}}{{time=[[4]]}}{{range=[[0]]}}{{duration=[[2+@{selected|token_id}]] rounds}}{{aoe=The caster}}{{save=None}}{{healing=[Form shield](!rounds --target caster|@{selected|token_id}|Cold-fire-shield|[[2+@{selected|spell-duration}]]|-1|Flames surround you, +2 saves vs. fire, reduce dmg, \\amp melee attks dmg both caster \\amp attacker|bolt-shield)}}{{reference=PHB p158}}SpellData=[w:Fire Shield Cold,lv:4,sp:4,gp:0.05,cs:VSM]{{effects=Wizard appears to immolate themselves. Flames are thin and wispy, shedding no heat, cool to the touch, and giving light equal to only half the illumination of a normal torch. Fire-based attacks save with a +2 bonus; and half normal damage or no damage is sustained. }}{{materials=A live firefly or glow worm or the tail portions of four dead ones, costing 5cp to source and keep}}'},
						{name:'Fire-Shield-Warm',type:'MUspellL4',ct:'4',charge:'uncharged',cost:'0.1',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casting\nWarm Fire Shield\nas a level @{selected|casting-level} caster}}{{splevel=Level 4 Wizard}}{{school=Evocation, Alteration}}Specs=[Fire Shield Warm,MUspellL4,1H,Evocation|Alteration]{{components=V,S,M}}{{time=[[4]]}}{{range=[[0]]}}{{duration=[[2+@{selected|token_id}]] rounds}}{{aoe=The caster}}{{save=None}}{{healing=[Form shield](!rounds --target caster|@{selected|token_id}|Warm-fire-shield|[[2+@{selected|spell-duration}]]|-1|Flames surround you, +2 saves vs. cold, reduce dmg, \\amp melee attks dmg both caster \\amp attacker|bolt-shield)}}{{reference=PHB p158}}SpellData=[w:Fire Shield Warm,lv:4,sp:4,gp:0.1,cs:VSM]{{effects=Wizard appears to immolate themselves. Flames are warm to the touch. Cold-based attacks save with a +2 bonus; and half normal damage or no damage is sustained. }}{{materials=A bit of phosphorous costing 1sp}}'},
						{name:'Fire-Trap',type:'MUspellL4',ct:'100',charge:'uncharged',cost:'0.1',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casting\nFire Trap\nas a level @{selected|casting-level} caster}}{{splevel=Level 4 Wizard}}{{school=Abjuration, Evocation}}Specs=[Fire Trap,MUspellL4,1H,Abjuration|Evocation]{{components=V,S,M}}{{time=[[1]] turn}}{{range=Touch}}{{duration=Until discharged}}{{aoe=Object touched}}{{save=[Halves](!\\amp#13;\\amp#47;gmroll 1d20 save vs. Fire Trap spell)}}{{reference=PHB p158}}SpellData=[w:Fire Trap,lv:4,sp:100,gp:0.1,cs:VSM]{{effects=Any closeable item can be warded. When discharged, explodes to [[5]]ft radius from the spell\'s center; Damage is [1d4+@{selected|casting-level}](!\\amp#13;\\amp#47;r 1d4+@{selected|casting-level} HP dmg from Fire Trap) HP, or save to half (round up). The item trapped is not harmed by this explosion.}}{{materials=A bit of sulphur or saltpeter worth 1sp}}'},
						{name:'Fireball',type:'MUspellL3',ct:'3',charge:'uncharged',cost:'0.5',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nFireball\nas a level @{selected|casting-level} caster}}{{splevel=Level 3 Wizard}}{{school=Evocation}}Specs=[Fireball,MUspellL3,1H,Evocation]{{components=V, S, M}}{{time=[[3]]}}{{range=[[10+(10*{10,@{selected|casting-level}}kl1)]]yds}}{{duration=Instantaneous}}{{aoe=[20ft. radius](!rounds --aoe @{selected|token_id}|circle|feet|[[3*(10+(10*{10,@{selected|casting-level}}kl1))]]|40||fire)}}{{save=[Half damage](!\\amp#13;\\amp#47;gmroll 1d20 saving throw)}}{{reference=PHB p149}}{{damage=[[[{10, @{selected|casting-level}}kl1]]d6](!\\amp#13;\\amp#47;r [[{10, @{selected|casting-level}}kl1]]d6)}}{{damagetype=Fire}}SpellData=[w:Fireball,lv:3,sp:3,gp:0.5,cs:VSM]{{effects=A streak flashes from the @{selected|token_name}\'s finger and blossoms into a fireball. Creatures failing their saving throws each suffer full damage from the blast. Those who roll successful saving throws manage to dodge, fall flat, or roll aside, each receiving half damage.}}{{materials=A tiny ball of bat guano and sulphur costing 5sp.}}'},
						{name:'Flame-Arrow',type:'MUspellL3',ct:'3',charge:'uncharged',cost:'0.02',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nFlame Arrow\nas a level @{selected|casting-level} caster}}{{splevel=Level 3 Wizard}}{{school=Conjuration/Summoning}}Specs=[Flame Arrow,MUspellL3,1H,Conjuration-Summoning]{{components=V, S, M}}{{time=[[3]]}}{{range=[[[30+10*@{selected|casting-level}]] yards](!rounds --aoe @{selected|token_id}|circle|yards|0|[[60+20*@{selected|casting-level}]]||red|true)}}{{duration=[[1]] round}}{{aoe=special}}{{save=[Special](!\\amp#13;\\amp#47;gmroll 1d20 save vs. spell for bolt only)}}{{reference=PHB p149}}SpellData=[w:Flame-Arrow,lv:3,sp:3,gp:0.02,cs:VSM]{{effects=Two effects: Can cause normal arrows or crossbow bolts to become magical flaming missiles for [[1]]round, or hurls fiery bolts at opponents in range.}}{{materials=A drop of oil and a small piece of flint costing 2cp.}}'},
						{name:'Flaming-Sphere',type:'MUspellL2',ct:'2',charge:'uncharged',cost:'0.1',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nFlaming Sphere\nas a level @{selected|casting-level} caster}}{{splevel=Level 2 Wizard}}{{school=Evocation}}Specs=[Flaming Shere,MUspellL2,1H,Evocation]{{components=V, S, M}}{{time=[[2]]}}{{range=[[10]] yds}}{{duration=[[@{selected|casting-level}]] rounds}}{{aoe=[3ft radius (movable)](!rounds --movable-aoe @{selected|token_id}|circle|feet|30|6||fire)}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 saving throw)}}{{reference=PHB p141}}SpellData=[w:Flaming-Sphere,lv:2,sp:2,gp:0.1,cs:VSM]{{effects=Creates a burning globe of fire within 10 yards of the caster. This sphere rolls in whichever direction the wizard points, at a rate of 30 feet per round.}}{{materials=a bit of tallow, a pinch of sulphur, and a dusting of powdered iron, costing 1sp}}'},
						{name:'Flesh-to-Stone',type:'MUspellL6',ct:'6',charge:'uncharged',cost:'0.01',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nFlesh to Stone\nas a level @{selected|casting-level} caster}}{{splevel=Level 6 Wizard}}{{school=Alteration (Reversable)}}Specs=[Flesh to Stone,MUspellL6,1H,Alteration]{{components=V,S,M}}{{time=[[6]]}}{{range=[[[10*@{selected|casting-level}]] yards](!rounds --aoe @{selected|token_id}|circle|yards|0|[[20*@{selected|casting-level}]]||magic|true)}}{{duration=Permanent}}{{aoe=1 creature}}{{save=[Special](!\\amp#13;\\amp#47;gmroll 1d20 save vs. Flesh to Stone spell)}}{{reference=PHB p181}}SpellData=[w:Flesh to Stone,lv:6,sp:6,gp:0.01,cs:VSM]{{effects=Turns flesh of any sort to stone. All possessions on the person of the creature likewise turn to stone.}}{{materials=Lime (1cp), water, and earth}}'},
						{name:'Fly',type:'MUspellL3',ct:'3',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nFly\nas a level @{selected|casting-level} caster}}{{splevel=Level 3 Wizard}}{{school=Alteration}}Specs=[Fly,MUspellL3,1H,Alteration]{{components=V, S, M}}{{time=[[3]]}}{{range=Touch}}{{duration=[Dm: 1d6+@{selected|casting-level}](!\\amp#13;\\amp#47;gmroll 1d6+@{selected|casting-level}) turns}}{{aoe=Creature touched}}{{save=None}}{{healing=[Who\'s Flying?](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Select whos flying|token_id}|Fly|99|-1|Flying, speed of 18 horiz or down, 9 up|fluffy-wing)}}{{reference=PHB p149}}SpellData=[w:Fly,lv:3,sp:3,gp:0,cs:VSM]{{effects=Bestow the power of magical flight. The creature affected is able to move vertically and horizontally at a rate of [[18]] (half that if ascending,\ntwice that if descending in a dive).}}{{materials=A wing feather of any bird (free).}}'},
						{name:'Fog-Cloud',type:'MUspellL2',ct:'2',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nFog Cloud\nas a level @{selected|casting-level} caster}}{{splevel=Level 2 Wizard}}{{school=Alteration}}Specs=[Fog Cloud,MUspellL2,1H,Alteration]{{components=V, S}}{{time=[[2]]}}{{range=[[10]] yds}}{{duration=[[4+@{selected|casting-level}]] rounds}}{{aoe=[Dense fog](!rounds --aoe @{selected|token_id}||feet|30|||white)\n[Cloudkill (movable)](!rounds --movable-aoe @{selected|token_id}|wall|feet|60|40|20|acid)}}{{save=None}}{{reference=PHB p141}}SpellData=[w:Fog-Cloud,lv:2,sp:2,gp:0,cs:VS]{{effects=Can be cast as either a large, stationary bank of normal fog, or as a harmless fog that resembles the 5th-level wizard spell cloudkill, at caster\'s option.}}'},
						{name:'Fools-gold',type:'MUspellL2',ct:'10',charge:'uncharged',cost:'100',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nFools Gold\nas a level @{selected|casting-level} caster}}{{splevel=Level 2 Wizard}}{{school=Alteration, Illusion}}Specs=[Fools Gold,MUspellL2,1H,Alteration|Illusion]{{components=V,S,M}}{{time=[[10]]}}{{range=[[10]] yds}}{{duration=[[@{selected|casting-level}]]hours}}{{aoe=[[10*@{selected|casting-level}]]cu.ins.}}{{save=[Special](!\\amp#13;\\amp#47;r 1d20-@{selected|casting-level} save vs Fools Gold spell)}}{{reference=PHB p141}}SpellData=[w:Fools-Gold,lv:2,sp:10,gp:100,cs:VSM]{{effects=Copper coins can temporarily be changed to gold pieces, or brass items turned to solid gold, for the spell duration by means of this magic.}}{{materials=Citrine or amber or topaz or oriental topaz, costing an average of 100gp}}'},
						{name:'Forcecage',type:'MUspellL7',ct:'3',charge:'uncharged',cost:'1000',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casting\nForcecage\nas a level @{selected|casting-level} caster}}{{splevel=Level 7 Wizard}}{{school=Evocation}}Specs=[Forcecage,MUspellL7,1H,Evocation]{{components=V,S, special}}{{time=[[3]]}}{{range=[[10*ceil(@{selected|casting-level}/2)]] yards}}{{duration=[[[6+@{selected|casting-level}]] turns](!rounds --target caster|@{selected|token_id}|Forcecage|[[6+@{selected|casting-level}]]|-1|Containing creatures in a Forcecage|fishing-net)}}{{aoe=[20ft. cube](!rounds --aoe @{selected|token_id}|square|feet|[[60*ceil(@{selected|casting-level}/2)]]|20||magic)}}{{save=None}}{{reference=PHB p184}}SpellData=[w:Forcecage,lv:7,sp:3,gp:1000,cs:VSM]{{effects=Bring into being a cube of force, but it is unlike the magical item of that name in one important respect: The forcecage does not have solid walls of force; it has alternating bands of force with 1/2-inch gaps between.}}{{materials=A diamond of at least 1,000gp value}}'},
						{name:'Forcecube',type:'MUspellL7',ct:'4',charge:'uncharged',cost:'1000',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casting\nForcecube\nas a level @{selected|casting-level} caster}}{{splevel=Level 7 Wizard}}{{school=Evocation}}Specs=[Forcecage,MUspellL7,1H,Evocation]{{components=V,S, special}}{{time=[[4]]}}{{range=[[10*ceil(@{selected|casting-level}/2)]] yards}}{{duration=[[[6+@{selected|casting-level}]] turns](!rounds --target caster|@{selected|token_id}|Forcecage|[[6+@{selected|casting-level}]]|-1|Containing creatures in a Forcecube|fishing-net)}}{{aoe=[10ft. cube](!rounds --aoe @{selected|token_id}|square|feet|[[60*ceil(@{selected|casting-level}/2)]]|10||magic)}}{{save=None}}{{reference=PHB p184}}SpellData=[w:Forcecage,lv:7,sp:4,gp:1000,cs:VSM]{{effects=By means of special preparation at the time of memorization, a *forcecage* spell (see separate spell) can be altered to a *forcecube* spell. The cube created is 10 feet on a side, and the spell then resembles that of a cube of force in all respects save that of the differences between a cast spell and the magic of a device, including the methods of defeating its power.}}{{materials=A diamond of at least 1,000gp value}}'},
						{name:'Foresight',type:'MUspellL9',ct:'10',charge:'uncharged',cost:'1',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casting\nForesight\nas a level @{selected|casting-level} caster}}{{splevel=Level 9 Wizard}}{{school=Divination}}Specs=[Foresight,MUspellL9,1H,Divination]{{components=V,S,M}}{{time=[[1]] round}}{{range=[[0]]}}!setattr --silent --charid @{selected|character_id} --spell-duration|{{duration=[[2d4+@{selected|casting-level}]] rounds}}!!!{{aoe=[The caster](!rounds --target caster|@{selected|token_id}|Foresight-caster|\\amp#64;{selected|spell-duration}|-1|Has foresight about danger or harm to their person|bolt-shield) or [1 other](!rounds --target caster|@{selected|token_id}|Foresight-other|\\amp#64;{selected|spell-duration}|-1|Has foresight about danger or harm to \\amp#64;{target|Who to have foresight for?|character_name}|bolt-shield)}}{{save=None}}{{reference=PHB p195}}SpellData=[w:Foresight,lv:9,sp:10,gp:1,cs:VSM]{{effects=Grants the caster a powerful sixth sense in relation to himself or another.}}{{materials=A hummingbird\'s feather which costs 1gp to source}}'},
						{name:'Forget',type:'MUspellL2',ct:'2',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nForget\nas a level @{selected|casting-level} caster}}{{splevel=Level 2 Wizard}}{{school=Enchantment/Charm}}Specs=[Forget,MUspellL2,1H,Enchantment-Charm]{{components=V, S}}{{time=[[2]]}}{{range=[[30]] yds}}{{duration=Permanent}}{{aoe=1 to 4 creatures in [20ft cube](!rounds --aoe @{selected|token_id}|square|feet|90|20||acid)}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 save vs. Forget spell)}}{{reference=PHB p142}}SpellData=[w:Forget,lv:2,sp:2,gp:0,cs:VS]{{effects=Causes creatures within the area of effect to forget the events of the previous round (the one minute of time previous to the utterance of the spell).}}'},
						{name:'Freedom',type:'MUspellL9',ct:'9',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casting\nFreedom\nas a level @{selected|casting-level} caster}}{{splevel=Level 9 Wizard}}{{school=Abjuration (reversible)}}Specs=[Freedom,MUspellL9,1H,Abjuration]{{components=V,S}}{{time=[[9]]}}{{range=[[0]]}}{{duration=Permanent}}{{aoe=1 creature}}{{save=None}}{{reference=PHB p195}}SpellData=[w:Freedom,lv:9,sp:9,gp:0,cs:VS]{{effects=Cast upon the spot at which a creature was entombed and sunk into the earth, causes it to reappear at that spot.}}'},
						{name:'Friends',type:'MUspellL1',ct:'1',charge:'uncharged',cost:'0.1',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nFriends\nas a level @{selected|casting-level} caster}}{{splevel=Level 1 Wizard}}{{school=Enchantment/Charm}}Specs=[Friends,MUspellL1,1H,Enchantment-Charm]{{components=V, S, M}}{{time=[[1]])}}{{range=[[0]]}}{{duration=1d4+@{selected|casting-level} rounds}}{{aoe=[60ft radius](!rounds --aoe @{selected|token_id}|circle|feet|0|120||magic|true)}}{{save=Special}}{{healing=[Become Friendly](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Select a new friend|token_id}|Friends|\\amp#91;[1d4+@{selected|casting-level}]\\amp#93;|-1|Fiends with the caster|chained-heart)}}{{reference=PHB p134}}SpellData=[w:Friends,lv:1,sp:1,gp:0.1,cs:VSM]{{effects=Causes the wizard to temporarily gain [2d4](!\\amp#13;\\amp#47;gmroll 2d4 points of Charisma gained by @{selected|Token_name}) points of Charisma.}}{{materials=Chalk (or white flour), lampblack (or soot), and vermilion costing 1sp applied to the face before casting the spell.}}'},
						{name:'Fumble',type:'MUspellL4',ct:'4',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nFumble\nas a level @{selected|casting-level} caster}}{{splevel=Level 4 Wizard}}{{school=Enchantment/Charm}}Specs=[Fumble,MUspellL4,1H,Enchantment-Charm]{{components=V, S, M}}{{time=[[4]]}}{{range=[[10*@{selected|casting-level}]] yds}}{{duration=[[@{selected|casting-level}]] rounds}}{{aoe=[30ft cube](!rounds --aoe @{selected|token_id}|square|yards|[[10*@{selected|casting-level}]]|10||dark)}}{{save=[Special](!\\amp#13;\\amp#47;gmroll 1d20 saving throw)}}{{reference=PHB p158}}SpellData=[w:Fumble,lv:4,sp:4,gp:0,cs:VSM]{{effects=Creates an area in which all creatures suddenly become clumsy and awkward.}}{{materials=A dab of solidified milk fat (free)}}'},
						{name:'Gate',type:'MUspellL9',ct:'9',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casting\nGate\nas a level @{selected|casting-level} caster}}{{splevel=Level 9 Wizard}}{{school=Conjuration-Summoning}}Specs=[Gate,MUspellL9,1H,Conjuration-Summoning]{{components=V,S}}{{time=[[9]]}}{{range=[[[30]] yards](!rounds --aoe @{selected|token_id}|circle|yards|0|60||lightning|true)}}{{duration=Special}}{{aoe=Special}}{{save=None}}{{reference=PHB p195}}SpellData=[w:Gate,lv:9,sp:9,gp:0,cs:VS]{{effects=Has two effects. First, it causes an interdimensional connection between the plane of existence the wizard is on and the plane on which dwells a specific being of great power; thus, the being is able to merely step through the gate or portal from its plane to that of the caster. Second, the utterance of the spell attracts the attention of the sought-after dweller on the other plane.}}'},
						{name:'Gaze-Reflection',type:'MUspellL1',ct:'1',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nGaze Reflection\nas a level @{selected|casting-level} caster}}{{splevel=Level 1 Wizard}}{{school=Alteration}}Specs=[Gaze Reflection,MUspellL1,1H,Alteration]{{components=V, S}}{{time=[[1]]}}{{range=[[0]]}}{{duration=[[2+@{selected|casting-level}]] rounds}}{{aoe=Eye contact}}{{save=None}}{{reference=PHB p135}}{{healing=[Apply mirror specs](!rounds --target caster|@{selected|token_id}|Gaze-reflection|[[2+@{selected|casting-level}]]|-1|Donned mirrored glasses, gaze attacker saves or takes effect themselves|aura)}}SpellData=[w:Gaze-Reflection,lv:1,sp:1,gp:0,cs:VS]{{effects=Any gaze attack is reflected back upon the gazer if the gazer tries to make eye contact with the spellcaster (the spellcaster suffers no effects from the gaze attack).}}'},
						{name:'Geas',type:'MUspellL6',ct:'4',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nGeas\nas a level @{selected|casting-level} caster}}{{splevel=Level 6 Wizard}}{{school=Enchantment-Charm}}Specs=[Geas,MUspellL6,0H,Enchantment-Charm]{{components=V}}{{time=[[4]]}}{{range=[[10]] yards}}{{duration=Special}}{{aoe=1 creature}}{{save=None}}{{reference=PHB p177}}{{damage=[Select the target](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Who to cast a Geas on?|token_id}|Geas|99|0|Under a Geas from @{selected|character_name}|chained-heart)}}SpellData=[w:Geas,lv:6,sp:4,gp:0,cs:V]{{effects=Places a magical command upon a creature (usually human or humanoid) to carry out some service, or to refrain from some action or course of activity, as desired by the spellcaster.}}'},
						{name:'Glassee',type:'MUspellL6',ct:'10',charge:'uncharged',cost:'0.1',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nGlassee\nas a level @{selected|casting-level} caster}}{{splevel=Level 6 Wizard}}{{school=Alteration}}Specs=[Glassee,MUspellL6,1H,Alteration]{{components=V,S,M}}{{time=[[1]] round}}{{range=Touch}}{{duration=[[@{selected|casting-level}]] rounds}}{{aoe=Special thickness \\amp [3ft. wide](!rounds --aoe @{selected|token_id}|wall|feet|0|3|1|light)}}{{save=None}}{{reference=PHB p177}}SpellData=[w:Glassee,lv:6,sp:10,gp:0.1,cs:VSM]{{effects=Make a section of metal, stone, or wood as transparent as glass to his gaze, or even make it into transparent material.}}{{materials=A small piece of crystal or glass, worth 1sp}}'},
						{name:'Glassteel',type:'MUspellL8',ct:'8',charge:'uncharged',cost:'0.5',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casting\nGlassteel\nas a level @{selected|casting-level} caster}}{{splevel=Level 8 Wizard}}{{school=Alteration}}Specs=[Glasteel,MUspellL8,1H,Alteration]{{components=V,S,M}}{{time=[[8]]}}{{range=Touch}}{{duration=Permanent}}{{aoe=[Object touched](!rounds --aoe @{selected|token_id}||feet|0)}}{{save=None}}{{reference=PHB p189}}SpellData=[w:Glassteel,lv:8,sp:8,gp:0.5,cs:VSM]{{effects=Turns normal, nonmagical crystal or glass into a transparent substance that has the tensile strength and unbreakability of actual steel. Only a relatively small volume of material can be affected (a maximum weight of [[10*@{selected|casting-level}]] pounds), and it must form one whole object. AC of the substance is 1}}{{materials=A small piece of glass and a small piece of steel, total cost 5sp}}'},
						{name:'Glitterdust',type:'MUspellL2',ct:'2',charge:'uncharged',cost:'0.1',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nGlitterdust\nas a level @{selected|casting-level} caster}}{{splevel=Level 2 Wizard}}{{school=Conjuration/Summoning}}Specs=[Glitterdust,MUspellL2,1H,Conjuration-Summoning]{{components=V,S,M}}{{time=[[2]]}}{{range=[[10*@{selected|casting-level}]]yards}}{{duration=1d4+1 rounds}}{{aoe=[20ft cube](!rounds --aoe @{selected|token_id}|square|feet|[[30*@{selected|casting-level}]]|20||light)}}{{save=[Special](!\\amp#13;\\amp#47;gmroll 1d20 save vs. spell or be blinded)}}{{reference=PHB p142}}{{damage=First, press [Blind Them](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Select first target|token_id}|Blindness|\\amp#91;[1d4+1]\\amp#93;|-1|Blinded by Glitterdust, -4 on attk, save \\amp AC|bleeding-eye) and select each person in the area using the [Select Another] button, then press [Make Them Glitter](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Select those dusted|token_id}|Glitterdust-glitter|\\amp#91;[1d4+@{selected|casting-level}]\\amp#93;|-1|Covered in glitter, always visible|aura) and select all of them again}}SpellData=[w:Glitterdust,lv:2,sp:2,gp:0.1,cs:VSM]{{effects=Save vs. spell or be blinded (-4 penalties to attack rolls, saving throws, and Armor Class) for 1d4+1 rounds and be covered by the dust, which cannot be removed and continues to sparkle until it fades. Note that this reveals invisible creatures.}}{{materials=ground mica costing 1sp}}'},
						{name:'Globe-of-Invulnerability',type:'MUspellL6',ct:'10',charge:'uncharged',cost:'10',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nGlobe of Invulnerability\nas a level @{selected|casting-level} caster}}{{splevel=Level 6 Wizard}}{{school=Abjuration}}Specs=[Globe of Invulnerability,MUspellL6,1H,Abjuration]{{components=V,S,M}}{{time=[[10]]}}{{range=[[0]]}}{{duration=[[@{selected|casting-level}]]rounds}}{{aoe=[5ft radius](!rounds --aoe @{selected|token_id}|circle|feet|0|10||magic|true)}}{{save=None}}{{reference=PHB p177}}{{healing=Press [Protect Us](!rounds --target caster|@{selected|token_id}|Invulnerable-Globe|[[@{selected|casting-level}]]|-1|Invulnerable to L1-L4 spells|white-tower)}}SpellData=[w:Globe-of-Invulnerability,lv:6,sp:10,gp:10,cs:VSM]{{effects=Creates an immobile, faintly shimmering, magical sphere around the caster that prevents any 1st-, 2nd-, 3rd-, or 4th-level spell effects from penetrating.}}{{materials=A glass or crystal bead costing 10gp that shatters at the expiration of the spell}}'},
						{name:'Grease',type:'MUspellL1',ct:'1',charge:'uncharged',cost:'0.01',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}}{{title=@{selected|casting-name} casts\nGrease\nas a level @{selected|casting-level} caster}}{{splevel=Level 1 Wizard}}{{school=Conjuration}}Specs=[Grease,MUspellL1,1H,Conjuration-Summoning]{{components=V, S, M}}{{time=[[1]]}}{{range=[[10]]yds}}{{duration=[[3+@{selected|casting-level}]] Rounds}}{{aoe=[10ft by 10ft](!rounds --aoe @{selected|token_id}|square|feet|30|10|10|acid)}}{{save=[Reach](!\\amp#13;\\amp#47;gmroll 1d20 saving throw) safe ground by end of round}}{{reference=PHB p135}}SpellData=[w:Grease,lv:1,sp:1,gp:0.01,cs:VSM]{{effects=Save vs. spell or slip skid and fall.}}{{materials=A bit of pork fat or butter, costing 1cp}}'},
						{name:'Guards-and-Wards',type:'MUspellL6',ct:'300',charge:'uncharged',cost:'1',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nGuards and Wards\nas a level @{selected|casting-level} caster}}{{splevel=Level 6 Wizard}}{{school=Evocation, Alteration, Enchantment-Charm}}Specs=[Guards and Wards,MUspellL6,1H,Evocation|Alteration|Enchantment-Charm]{{components=V,S,M}}{{time=[[3]] turns}}{{range=[[0]]}}{{duration=[[@{selected|casting-level}]] hours}}{{aoe=Special}}{{save=None}}{{reference=PHB p178}}SpellData=[w:Guards and Wards,lv:6,sp:300,gp:1,cs:VSM]{{effects=Primarily used to defend the wizard\'s stronghold.}}{{materials=Burning incense, a small measure of sulphur and oil, a knotted string, a small amount of umber hulk blood, and a small silver rod. Total cost of 1gp per spell casting}}'},
						{name:'Gust-of-Wind',type:'MUspellL3',ct:'10',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nGust of Wind\nas a level @{selected|casting-level} caster}}{{splevel=Level 3 Wizard}}{{school=Alteration}}Specs=[Gust of Wind,MUspellL3,1H,Alteration]{{components=V,S,M}}{{time=[[3]]}}{{range=[[0]]}}{{duration=[[1]]round}}{{aoe=[10ft x @{selected|casting-level}0 yds](!rounds --aoe @{selected|token_id}|bolt|feet|0|[[30*@{selected|casting-level}]]|10|light)}}{{save=None}}{{reference=PHB p149}}SpellData=[w:Gust-of-Wind,lv:3,sp:10,gp:0,cs:VSM]{{effects=A strong puff of air originates from the wizard and moves in the direction he is facing.}}{{materials=A legume seed (free).}}'},
						{name:'Hallucinatory-Terrain',type:'MUspellL4',ct:'100',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casting\nHallucinatory Terrain\nas a level @{selected|casting-level} caster}}{{splevel=Level 4 Wizard}}{{school=Illusion-Phantasm}}Specs=[Hallucinatory Terrain,MUspellL4,1H,Illusion-Phantasm]{{components=V,S,M}}{{time=[[1]] turn}}{{range=[[20*@{selected|casting-level}]] yds.}}{{duration=[[@{selected|casting-level}]] hours}}{{aoe=[[[10*@{selected|casting-level}]] yds cube](!rounds --aoe @{selected|token_id}|square|yards|[[20*@{selected|casting-level}]]|[[10*@{selected|casting-level}]]||)}}{{save=None}}{{reference=PHB p158}}SpellData=[w:Hallucinatory Terrain,lv:4,sp:100,gp:0,cs:VSM]{{effects=Causes an illusion that hides the actual terrain within the area of effect. }}{{materials=A stone, a twig, and a bit of green plant--a leaf or grass blade (free)}}'},
						{name:'Haste',type:'MUspellL3',ct:'3',charge:'uncharged',cost:'0.05',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nHaste\nas a level @{selected|casting-level} caster}}{{splevel=Level 3 Wizard (reversable)}}{{school=Alteration}}Specs=[Haste,MUspellL3,1H,Alteration]{{components=V, S, M}}{{time=[[3]]}}{{range=[[60]]yds}}{{duration=[[3+@{selected|casting-level}]] rounds}}{{aoe=[[@{selected|casting-level}]]creatures in a [40ft. cube](!rounds --aoe @{selected|token_id}|square|feet|180|40||magic)}}{{save=None}}{{reference=PHB p149}}{{healing=[Super-Speed](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Select who to hurry up|token_id}|Haste|[[3+@{selected|casting-level}]]|-1|Hasted, double attacks, move etc|Strong)}}SpellData=[w:Haste,lv:3,sp:3,gp:0.05,cs:VSM]{{effects=Affected creatures function at double normal movement and attack rates.}}{{materials=A shaving of liquorice root costing 5cp.}}'},
						{name:'Hold-Monster',type:'MUspellL5',ct:'5',charge:'uncharged',cost:'0.05',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nHold Monster\nas a level @{selected|casting-level} caster}}{{splevel=Level 5 Wizard}}{{school=Enchantment/Charm}}Specs=[Hold Monster,MUspellL5,1H,Enchantment-Charm]{{components=V, S, M}}{{time=[[5]]}}{{range=[[5*@{selected|casting-level}]] yds}}{{duration=[[@{selected|casting-level}]] rounds}}{{aoe=[[1]] to [[4]] creatures in a [40ft. cube](!rounds --aoe @{selected|token_id}|square|feet|[[15*@{selected|casting-level}]]|40||dark)}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 saving throw)}}{{reference=PHB p169}}{{damage=[Hold](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Select first monster|token_id}|Hold-monster|[[@{selected|casting-level}]]|-1|Held|fishing-net)}}SpellData=[w:Hold-Monster,lv:5,sp:5,gp:0.05,cs:VSM]{{effects=Immobilises from one to four creatures of any type within spell range and in sight of the spellcaster.}}{{materials=One hard metal bar or rod for each monster to be held. Can be as small as a three-penny nail costing 5cp}}'},
						{name:'Hold-Person',type:'MUspellL3',ct:'3',charge:'uncharged',cost:'0.01',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nHold Person\nas a level @{selected|casting-level} caster}}{{splevel=Level 3 Wizard}}{{school=Enchantment/Charm}}Specs=[Hold Person,MUspellL3,1H,Enchantment-Charm]{{components=V, S, M}}{{time=[[3]]}}{{range=[[120]] yards}}{{duration=[[2*@{selected|casting-level}]] rounds}}{{aoe=[1d4](!\\amp#13;\\amp#47;r 1d4) persons in a [20 foot cube](!rounds --aoe @{selected|token_id}|square|feet|360|20||dark)}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 saving throw)}}{{reference=PHB p150}}{{damage=[Hold](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Select first victim|token_id}|Hold-person|[[2*@{selected|casting-level}]]|-1|Held|fishing-net)}}SpellData=[w:Hold-Person,lv:3,sp:3,gp:0.01,cs:VSM]{{effects=Immobilise humans, demihumans and humanoid creatures. The spell is centered on a point chosen by the caster and it affects up to 4 persons within the area of effect.}}{{materials=A small, straight piece of iron worth 1cp}}'},
						{name:'Hold-Portal',type:'MUspellL1',ct:'1',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nHold Portal\nas a level @{selected|casting-level} caster}}{{splevel=Level 1 Wizard}}{{school=Alteration}}Specs=[Hold Portal,MUspellL1,0H,Alteration]{{components=V}}{{time=[[1]]}}{{range=[[20*@{selected|casting-level}]] yds}}{{duration=[[@{selected|casting-level}]] rounds}}{{aoe=[[[20*@{selected|casting-level}]] sq.ft.](!rounds --aoe @{selected|token_id}|rectangle|feet|[[60*@{selected|casting-level}]]|||dark)}}{{save=None}}{{reference=PHB p135}}SpellData=[w:Hold-Portal,lv:1,sp:1,gp:0,cs:V]{{effects=Magically bars a door, gate, or valve of wood, metal, or stone. The magical closure holds the portal fast, just as if it were securely closed and locked.}}'},
						{name:'Hold-Undead',type:'MUspellL3',ct:'5',charge:'uncharged',cost:'0.1',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nHold Undead\nas a level @{selected|casting-level} caster}}{{splevel=Level 3 Wizard}}{{school=Necromancy}}Specs=[Hold Undead,MUspellL3,1H,Necromancy]{{components=VSM}}{{time=5}}{{range=[60ft radius](!rounds --aoe @{selected|token_id}|circle|feet|0|120||dark|true)}}{{duration=1d4+[[@{selected|casting-level}]] rounds}}{{aoe=[[1d3]] undead}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 save vs. HoldUndead spell)}}{{reference=PHB p150}}SpellData=[w:Hold Undead,lv:3,sp:5,gp:0.1,cs:VSM]{{healing=[Hold them](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Which Undead?|token_id}|Hold-Undead|\\amp#91;[1d4+@{selected|casting-level}]\\amp#93;|-1|Motionless (for now\\amp#41;|fishing-net)}}{{effects=Renders immobile 1d3 undead creatures whose total Hit Dice are equal to or less than the caster\'s level.}}{{materials=A pinch of sulphur and powdered garlic, a total cost of 1sp}}'},
						{name:'Hypnotic-Pattern',type:'MUspellL2',ct:'2',charge:'uncharged',cost:'5',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nHypnotic Pattern\nas a level @{selected|casting-level} caster}}{{splevel=Level 2 Wizard}}{{school=Illusion/Phantasm}}Specs=[Hypnotic Pattern,MUspellL2,1H,Illusion-Phantasm]{{components=S,M}}{{time=[[2]]}}{{range=[[30]] yds}}{{duration=Special}}{{aoe=[30ft. cube](!rounds --aoe @{selected|token_id}|square|yards|30|10||magic)}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 saving throw vs Hypnotic Pattern spell)}}{{reference=PHB p142}}{{damage=[Hypnotise](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Select first victim|token_id}|Hypnotic-Pattern|99|0|Hypnotised|fishing-net)}}SpellData=[w:Hypnotic-Pattern,lv:2,sp:2,gp:5,cs:SM]{{effects=Causes any creature looking at a weaving, twisting pattern of subtle colours to become fascinated and stand gazing at it as long as the spellcaster maintains the display, plus two rounds thereafter.}}{{materials=The wizard need not utter a sound, but he must gesture appropriately while holding a glowing stick of incense worth 5gp, or a crystal rod filled with phosphorescent material, worth 50gp that can be reused 20 times.}}'},
						{name:'Hypnotism',type:'MUspellL1',ct:'1',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nHypnotism\nas a level @{selected|casting-level} caster}}{{splevel=Level 1 Wizard}}{{school=Enchantment/Charm}}Specs=[Hypnotism,MUspellL1,1H,Enchantment-Charm]{{components=V,S}}{{time=[[1]]}}{{range=5 yds}}{{duration=[[1+@{selected|casting-level}]] rounds}}{{aoe=[30ft.cube](!rounds --aoe @{selected|token_id}|square|feet|15|30||magic)}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 save vs Hypnotism spell)}}{{reference=PHB p135}}{{damage=[Look deep into my eyes](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Select victims|token_id}|Hypnosis|[[1+@{selected|casting-level}]]|-1|Following a suggestion under Hypnosis|chained-heart)}}SpellData=[w:Hypnotism,lv:1,sp:1,gp:0,cs:VS]{{effects=Cause [1d6](!\\amp#13;\\amp#47;r 1d6) creatures within the area to become susceptible to a suggestion--a brief and reasonable-sounding request (see the 3rd-level wizard suggestion spell).}}'},
						{name:'Ice-Storm',type:'MUspellL4',ct:'4',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nIce Storm\nas a level @{selected|casting-level} caster}}{{splevel=Level 4 Wizard}}{{school=Evocation}}Specs=[Ice Storm,MUspellL4,1H,Evocation]{{components=V,S,M}}{{time=[[4]]}}{{range=[[10*@{selected|Casting-level}]] yds}}{{duration=Special}}{{aoe=[40ft x hail stones](!rounds --aoe @{selected|token_id}|circle|feet|[[30*@{selected|Casting-level}]]|40||cold) or [80ft x driving sleet](!rounds --aoe @{selected|token_id}|circle|feet|[[30*@{selected|Casting-level}]]|80||cold) radius}}{{save=None}}{{reference=PHB p159}}SpellData=[w:Ice-Storm,lv:4,sp:4,gp:0,cs:VSM]{{effects=One of two effects, at the caster\'s option: Either great [hail stones](!rounds --aoe @{selected|token_id}|circle|feet|[[30*@{selected|Casting-level}]]|40||cold) pound down for one round in a 40-foot-diameter area and inflict 3d10 points of damage to any creatures within the area of effect, or [driving sleet](!rounds --aoe @{selected|token_id}|circle|feet|[[30*@{selected|Casting-level}]]|80||cold) falls in an 80-foot-diameter area for one round per caster level blinding creatures within its area for the duration of the spell and causes the ground in the area to be icy}}{{materials=A pinch of dust and a few drops of water (free).}}'},
						{name:'Ice-knife',type:'MUspellL1',ct:'1',charge:'uncharged',cost:'10',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nIce Knife\nas a level @{selected|casting-level} caster}}{{splevel=Level 1 Wizard}}{{school=Conjuration}}Specs=[Ice Knife,MUspellL1,1H,Conjuration-Summoning]{{components=V,S,M}}{{time=[[1]]}}{{range=[60 feet](!rounds --aoe @{selected|token_id}|circle|feet|0|120||cold|true)}}{{duration=Instantaneous}}{{aoe=Special}}{{save=Special}}{{damage=If have **AttackMaster** [Select Ice Knife weapon](!attk --weapon @{selected|token_id}) then [Throw the Knife](!attk --attk-hit @{selected|token_id})\notherwise [Roll to hit](~MU-Spells-DB|To-hit-Ice-knife)\nIf miss [Area Cold](!\\amp#13;\\amp#47;r 2d6 cold damage, save + dex to negate) within 5ft}}{{reference=Complete Wizards Handbook}}SpellData=[w:Ice-knife,lv:1,sp:1,gp:10,cs:VSM]{{effects=You create a shard of ice and fling it at one creature within range. On a hit it does [1d10](!\\amp#13;\\amp#47;r 1d10 piercing damage) piercing damage. Hit or miss anyone within 5 feet must make a dexterity based saving throw (i.e. Dexterity bonuses apply) or take [2d6](!\\amp#13;\\amp#47;r 2d6 cold damage, save + dex to negate) cold damage.\nIn order to use this spell, ask the DM to ensure you have Ice Knife as a weapon, or use [Edit Items](!magic --edit-mi @{selected|token_id}) and select the Ice Knife weapon}}{{materials=A pinch of diamond dust worth 10gp.}}'},
						{name:'Identify',type:'MUspellL1',ct:'100',charge:'uncharged',cost:'100',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nIdentify\nas a level @{selected|casting-level} caster}}{{splevel=Level 1 Wizard}}{{school=Divination}}Specs=[Identify,MUspellL1,1H,Divination]{{components=V, S, M}}{{time=[[1]] turn}}{{range=[[0]]}}{{duration=[[1*@{selected|casting-level}]] rounds}}{{aoe=[[@{selected|casting-level}]] items}}{{save=None}}{{reference=PHB p135}}SpellData=[w:Identify,lv:1,sp:100,gp:100,cs:VSM]{{effects=Can Identify a total of [[@{selected|casting-level}]] items or attributes - 1 per round. Touch item to attempt to Identify it which might activate any curse (DMs discretion or item description). DM rolls d100. Chance of learning information is [[[{(10*@{selected|casting-level}),90}kl1]]](!\\amp#13;\\amp#47;gmroll 1d100)%. Any roll of 96-00 indicates a false reading, and any failure ends the Identify spell even if Duration has not expired.}}{{materials=A pearl (of at least 100 gp value) and an owl feather steeped in wine; the infusion must be drunk prior to spellcasting. Adding powdered luckstone means exact bonuses / charges can be determined, and functions learned from a single reading. Certain properties of an artifact or relic might also be learned.}}'},
						{name:'Illusionary-Script',type:'MUspellL3',ct:'100',charge:'uncharged',cost:'300',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nIllusionary Script\nas a level @{selected|casting-level} caster}}{{splevel=Level 3 Wizard}}{{school=Illusion-Phantasm}}Specs=[Illusionary Script,MUspellL3,1H,Illusion-Phantasm]{{components=VSM}}{{time=Special}}{{range=Touch}}{{duration=@{selected|casting-level} days}}{{aoe=Script Reader}}{{reference=PHB p150}}SpellData=[w:Illusionary Script,lv:3,sp:100,gp:300,cs:VSM]{{effects=Enables the wizard to write instructions or other information on parchment, paper, etc. The illusionary script appears to be some form of foreign or magical writing. }}'},
						{name:'Illusionary-Wall',type:'MUspellL4',ct:'4',charge:'uncharged',cost:'400',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casting\nIllusionary Wall\nas a level @{selected|casting-level} caster}}{{splevel=Level 4 Wizard}}{{school=Illusion-Phantasm}}Specs=[Illusionary Wall,MUspellL4,1H,Illusion-Phantasm]{{components=V,S,M}}{{time=[[4]]}}{{range=[[30]] yds.}}{{duration=Permanent}}{{aoe=[1 x 10 x 10 ft](!rounds --aoe @{selected|token_id}|wall|feet|90|10|1|)}}{{save=None}}{{reference=PHB p158}}SpellData=[w:Illusionary Wall,lv:4,sp:4,gp:400,cs:VSM]{{effects=Creates the illusion of a wall, floor, ceiling, or similar surface, which is permanent until dispelled.}}{{materials=A rare dust that costs at least 400 gp and requires four days to prepare}}'},
						{name:'Imprisonment',type:'MUspellL9',ct:'9',charge:'uncharged',cost:'0',body:'!magic --touch @{selected|token_id}|Imprisonment|1|1|Imprisoned in a tiny bubble deep beneath the surface|padlock\n/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casting\nImprisonment\nas a level @{selected|casting-level} caster}}{{splevel=Level 9 Wizard}}{{school=Abjuration (reversible)}}Specs=[Imprisonment,MUspellL9,1H,Abjuration]{{components=V,S}}{{time=[[9]]}}{{range=[Touch](~selected|To-Hit-Spell)}}{{duration=Permanent}}{{aoe=1 creature}}{{save=None}}{{reference=PHB p195}}SpellData=[w:Imprisonment,lv:9,sp:9,gp:0,cs:VS]{{effects=When the victim is touched, the recipient is entombed in a state of suspended animation (see the 9th-level wizard spell temporal stasis) in a small sphere far beneath the surface of the earth.}}'},
						{name:'Improved-Invisibility',type:'MUspellL4',ct:'4',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nImproved Invisibility\nas a level @{selected|casting-level} caster}}{{splevel=Level 4 Wizard}}{{school=Illusion/Phantasm}}Specs=[Improved Invisibility,MUspellL4,1H,Illusion-Phantasm]{{components=V, S}}{{time=[[4]]}}{{range=Touch}}{{duration=[[4+@{selected|casting-level}]] rounds}}{{aoe=Creature touched}}{{save=None}}{{reference=PHB p159}}{{healing=[Touch Creature](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Select Invisible One|token_id}|Invisibility|[[4+@{selected|casting-level}]]|-1|Invisible except slight haze, -4 bonus to AC, +4 on saves, can attack|half-haze)}}SpellData=[w:Improved-Invisibility,lv:4,sp:4,gp:0,cs:VS]{{effects=Works like the *Invisibility* spell but it allows for the recipient to attack and remain unseen.}}'},
						{name:'Improved-Phantasmal-Force',type:'MUspellL2',ct:'2',charge:'uncharged',cost:'0.02',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nImproved Phantasmal Force\nas a level @{selected|casting-level} caster}}{{splevel=Level 2 Wizard}}{{school=Illusion/Phantasm}}Specs=[Improved Phantasmal Force,MUspellL2,1H,Illusion-Phantasm]{{components=V, S, M}}{{time=[[2]]}}{{range=[[60+(10*@{selected|casting-level})]] yds.}}{{duration=Special}}{{aoe=[[[200+(50*@{selected|casting-level})]] sq.ft.](!rounds --aoe @{selected|token_id}|square|feet|[[120+(30*@{selected|casting-level})]]|||magic)}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 saving throw)}}{{reference=PHB p142}}SpellData=[w:Improved-Phantasmal-Force,lv:2,sp:2,gp:0.02,cs:VSM]{{effects=Creates the illusion of any object, creature, or force, as long as it is within the spell\'s area of effect.}}{{materials=A bit of fleece for 2cp}}'},
						{name:'Incendiary-Cloud',type:'MUspellL8',ct:'2',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casting\nIncendiary Cloud\nas a level @{selected|casting-level} caster}}{{splevel=Level 8 Wizard}}{{school=Alteration, Evocation}}Specs=[Incendiary Cloud,MUspellL8,1H,Alteration|Evocation]{{components=V,S,M}}{{time=[[2]]}}{{range=[[30]] yards}}!setattr --silent --charid @{selected|character_id} --spell-duration|{{duration=[[1d6+4]] rounds}}!!!{{aoe=[Special](!rounds --aoe @{selected|token_id}||feet|90|||fire --target caster|@{selected|token_id}|Incendiary-cloud|3|-1|The cloud is building|rolling-bomb)}}{{save=[Halves](!\\amp#13;\\amp#47;gmroll 1d20 save vs. Incendiary Cloud spell)}}{{reference=PHB p189}}SpellData=[w:Incendiary Cloud,lv:8,sp:2,gp:0,cs:VSM]{{effects=Minimum dimensions are a cloud 10 feet tall, 20 feet wide, and 20 feet long. This dense vapor cloud billows forth, and 3rd round begins to flame, for @{selected|casting-level}d2 HP. 4th round @{selected|casting-level}d4 HP, and 5th round @{selected|casting-level}d2 HP as its flames burn out, and in successive rounds is simply harmless smoke that obscures vision within its confines.}}{{materials=An available fire source (just as with a pyrotechnics spell), scrapings from beneath a dung pile, and a pinch of dust (no cost)}}'},
						{name:'Infravision',type:'MUspellL3',ct:'10',charge:'uncharged',cost:'0.01',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nInfravision\nas a level @{selected|casting-level} caster}}{{splevel=Level 3 Wizard}}{{school=Alteration}}Specs=[Infravision,MUspellL3,1H,Alteration]{{components=V,S,M}}{{time=[[10]]}}{{range=Touch}}{{duration=[[2+@{selected|casting-level}]] hours}} !!! {{aoe=Creature Touched}}{{save=None}}{{healing=[See Clearly](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Select visionary|token_id}|Infravision|[[120+(60*@{selected|casting-level})]]|-1|Has 60ft Infravision|ninja-mask)}}{{reference=PHB p150}}SpellData=[w:Infravision,lv:3,sp:10,gp:0.01,cs:VSM]{{effects=See in normal darkness up to 60 feet without light. }}{{materials=Either a pinch of dried carrot or an agate (1cp).}}'},
						{name:'Invisibility',type:'MUspellL2',ct:'2',charge:'uncharged',cost:'0.05',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nInvisibility\nas a level @{selected|casting-level} caster}}{{splevel=Level 2 Wizard}}{{school=Illusion/Phantasm}}Specs=[Invisibility,MUspellL2,1H,Illusion-Phantasm]{{components=V, S, M}}{{time=[[2]]}}{{range=Touch}}{{duration=Until attack or [[24]] hours}}{{aoe=Creature touched}}{{save=None}}{{reference=PHB p142}}{{healing=[Make them invisible](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Select Invisible One|token_id}|Invisibility|99|0|Invisible except slight haze, 4 bonus to AC \\amp saves, until attack|half-haze)}}SpellData=[w:Invisibility,lv:2,sp:2,gp:0.05,cs:VSM]{{effects=Creature touched vanishes from sight, undetectable by normal vision or infravision. Not magically silenced.}}{{materials=An eyelash and a bit of gum arabic, the former encased in the latter. Cost 5cp}}'},
						{name:'Invisibility-10ft-radius',type:'MUspellL3',ct:'3',charge:'uncharged',cost:'0.05',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nInvisibility 10ft Radius\nas a level @{selected|casting-level} caster}}{{splevel=Level 3 Wizard}}{{school=Illusion/Phantasm}}Specs=[Invisibility,MUspellL3,1H,Illusion-Phantasm]{{components=V, S, M}}{{time=[[3]]}}{{range=Touch}}{{duration=Until attack}}{{aoe=[[10]]ft radius of creature touched}}{{save=None}}{{reference=PHB p150}}{{healing=[Make them invisible](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Select Invisible One|token_id}|Invisibility|99|0|Invisible except slight haze, 4 bonus to AC \\amp saves within [[10]]ft of creature touched, until attack|half-haze)}}SpellData=[w:Invisibility-10ft-radius,lv:3,sp:3,gp:0.05,cs:VSM]{{effects=10ft radius moves with target. Can\'t see each other. Target attack dispels for all, others attack or move outside 10ft become visible}}{{materials=An eyelash and a bit of gum arabic, the former encased in the latter. Cost 5cp}}'},
						{name:'Invisible-Stalker',type:'MUspellL6',ct:'10',charge:'uncharged',cost:'0.05',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nInvisible Stalker\nas a level @{selected|casting-level} caster}}{{splevel=Level 6 Wizard}}{{school=Conjuration-Summoning}}Specs=[Invisible Stalker,MUspellL6,1H,Conjuration-Summoning]{{components=V,S,M}}{{time=[[1]] round}}{{range=[[10]] yards}}{{duration=Special}}{{aoe=Special}}{{save=None}}{{reference=PHB p178}}SpellData=[w:Invisible Stalker,lv:6,sp:10,gp:0.05,cs:VSM]{{effects=Summons an invisible stalker from the Elemental Plane of Air. This 8-Hit Dice monster obeys and serves the spellcaster in performing whatever tasks are set before it.}}{{materials=Burning incense worth 5cp and a piece of horn carved into a crescent shape}}'},
						{name:'Irritation',type:'MUspellL2',ct:'2',charge:'uncharged',cost:'0.01',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nIrritation\nas a level @{selected|casting-level} caster}}{{splevel=Level 2 Wizard}}{{school=Alteration}}Specs=[Irritation,MUspellL2,1H,Alteration]{{components=V, S, M}}{{time=2}}{{range=[[10*@{selected|casting-level}]]yds}}{{duration=Special}}{{aoe=1-4 creatures in [15ft radius](!rounds --aoe circle|feet|[[30*@{selected|casting-level}]]|30||acid)}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 save vs. Irritation spell, add modifier) with nodifier}}{{damage=[Itch](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Select Victim|token_id}|Irritation-itch|2|-1|Spend round itching or suffer more - spell-casting interrupted|screaming) or [Rash](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Select Victim|token_id}|Irritation-rash|\\amp#91;[1d4]\\amp#93;|-1|Don\'t notice anything yet...|stopwatch)}}{{reference=PHB p142}}SpellData=[w:Irritation,lv:2,sp:2,gp:0.01,cs:VSM]{{effects=Affects the epidermis of the subject creatures. Creatures with very thick or insensitive skins (such as buffalo, elephants, scaled creatures, etc.) are basically unaffected. There are two versions: **Itching** and **Rash.**}}{{materials=A leaf from poison ivy, oak, or sumac, costing 1cp}}'},
						{name:'Item',type:'MUspellL3',ct:'3',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nItem\nas a level @{selected|casting-level} caster}}{{splevel=Level 3 Wizard}}{{school=Alteration}}Specs=[Item,MUspellL3,1H,Alteration]{{components=VSM}}{{time=3}}{{range=Touch}}{{duration=[[4*@{selected|casting-level}]] hours}}{{aoe=[[2*@{selected|casting-level}]]cu.ft}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 save vs. Item spell) if owner resists}}{{reference=PHB p150}}SpellData=[w:Item,lv:3,sp:3,gp:0,cs:VSM]{{effects=Shrink one nonmagical item (if it is within the size limit) to 1/12 of its normal size. Optionally, the caster can also change its nowshrunken composition to a clothlike one.}}'},
						{name:'Jump',type:'MUspellL1',ct:'1',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nJump\nas a level @{selected|casting-level} caster}}{{splevel=Level 1 Wizard}}{{school=Alteration}}Specs=[Jump,MUspellL1,1H,Alteration]{{components=V,S, M}}{{time=[[1]]}}{{range=Touch}}{{duration=1d3+@{selected|casting-level} rounds}}{{aoe=Creature touched}}{{save=None}}{{healing=[Jump High](!rounds --target caster|@{selected|token_id}|Jump|\\amp#91;[1d3+@{selected|casting-level}]\\amp#93;|-1|Can jump 30ft forward or 10ft back|tread)}}{{reference=PHB p135}}SpellData=[w:Jump,lv:1,sp:1,gp:0,cs:VSM]{{effects=Empowered to leap up to [[30]] feet forward or straight upward or [[10]] feet backward once per round for the duration of the spell.}}{{materials=A grasshopper\'s hind leg, to be broken by the caster when the spell is cast (free)}}'},
						{name:'Knock',type:'MUspellL2',ct:'1',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nKnock\nas a level @{selected|casting-level} caster}}{{splevel=Level 2 Wizard}}{{school=Alteration}}Specs=[Knock,MUspellL2,0H,Alteration]{{components=V}}{{time=1}}{{range=60 yds.}}{{duration=Special}}{{aoe=[[[10*@{selected|Casting-Level}]] sq. ft.](!rounds --aoe @{selected|token_id}|rectangle|feet|180|||magic)}}{{save=None}}{{reference=PHB p143}}SpellData=[w:Knock,lv:2,sp:1,gp:0,cs:V]{{effects=Opens stuck, barred, locked, held, or wizard-locked doors. It opens secret doors, as well as locked or trick-opening boxes or chests. It also loosens welds, shackles, or chains - two types of lock on one door per cast}}'},
						{name:'Know-Alignment',type:'MUspellL2',ct:'2',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nKnow Alignment\nas a level @{selected|casting-level} caster}}{{splevel=Level 2 Wizard}}{{school=Divination (reversable)}}Specs=[Know Alignment,MUspellL2,1H,Divination]{{components=V, S}}{{time=[[2]] rounds}}{{range=[10 yards](!rounds --aoe {@selected|token_id}|circle|yards|0|20||light|true)}}{{duration=[[@{selected|casting-level}]]rounds}}{{aoe=[[1]]creature or object per [[2]]rounds}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 save vs. Know Alignment spell)}}{{reference=PHB p143}}SpellData=[w:Know-Alignment,lv:2,sp:2,gp:0,cs:VS]{{effects=Read the aura of a creature or an aligned object (unaligned objects reveal nothing).}}'},
						{name:'Legend-Lore',type:'MUspellL6',ct:'100',charge:'uncharged',cost:'1000',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nLegend Lore\nas a level @{selected|casting-level} caster}}{{splevel=Level 6 Wizard}}{{school=Divination}}Specs=[Legend Lore,MUspellL6,1H,Divination]{{components=V, S, M}}{{time=Special}}{{range=[[0]]}}{{duration=Special}}{{aoe=Special}}{{save=None}}{{reference=PHB p178}}SpellData=[w:Legend-Lore,lv:6,sp:100,gp:1000,cs:VSM]{{effects=Used to determine legendary information regarding a known person, place, or thing.}}{{materials=Incense and strips of ivory formed into a rectangle, but some item of value to the caster must be sacrificed in addition--a potion, magical scroll, magical item, etc. Cost 1,000gp}}'},
						{name:'Leomunds-Lamentable-Belaborment',type:'MUspellL5',ct:'5',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nLeomund\'s Lamentable Belaborment\nas a level @{selected|casting-level} caster}}{{splevel=Level 5 Wizard}}{{school=Enchantment, Evocation}}Specs=[Leomunds Lamentable Belaborment,MUspellL5,0H,Enchantment|Evocation]{{components=V}}{{time=[[5]]}}{{range=[[10]] yards}}{{duration=Special}}{{aoe=1 or more creatures in [10ft radius](!rounds --aoe @{selected|token_id}|circle|feet|30|20||magic)}}{{save=None}}{{damage=[Engage them in conversation](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Who to debate with?|token_id}|LLB-conversation|3|-1|Engaged in polite active conversation|rolling-bomb)}}{{reference=PHB p169}}SpellData=[w:Leomunds Lamentable Belaborment,lv:5,sp:5,gp:0,cs:V]{{effects=Distracts the subject creatures by drawing them into an absorbing discussion on topics of interest to them.}}'},
						{name:'Leomunds-Secret-Chest',type:'MUspellL5',ct:'5',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nLeomund\'s Secret Chest\nas a level @{selected|casting-level} caster}}{{splevel=Level 5 Wizard}}{{school=Alteration, Conjuration-Summoning}}Specs=[Leomunds Secret Chest,MUspellL5,1H,Alteration|Conjuration-Summoning]{{components=V,S,M}}{{time=[[1]] turn}}{{range=Special}}{{duration=[[60]] days}}{{aoe=One chest, about 2 x 2 x 3ft}}{{save=None}}{{reference=PHB p169}}SpellData=[w:Leomunds Secret Chest,lv:5,sp:5,gp:0,cs:VSM]{{effects=Enables a specially constructed expensive chest to be hidden deep within the Ethereal Plane, to be summoned using a small model of the chest.}}'},
						{name:'Leomunds-Secure-Shelter',type:'MUspellL4',ct:'400',charge:'uncharged',cost:'0.05',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casting\nLeomund\'s Secure Shelter\nas a level @{selected|casting-level} caster}}{{splevel=Level 4 Wizard}}{{school=Alteration, Enchantment}}Specs=[Leomunds Secure Shelter,MUspellL4,1H,Alteration|Enchantment]{{components=V,S,M}}{{time=[[4]] turns}}{{range=[[20]] yds.}}{{duration=[[1d4+1+@{selected|casting-level}]] hours}}{{aoe=[[[30*@{selected|casting-level}]] sq.ft.](!rounds --aoe @{selected|token_id}|rectangle|feet|60|||)}}{{save=None}}{{reference=PHB p158}}SpellData=[w:Leomunds Secure Shelter,lv:4,sp:400,gp:0.05,cs:VSM]{{effects=Magically calls into being a sturdy cottage or lodge, made of material that is common in the area where the spell is cast--stone, timber, or (at worst) sod. }}{{materials=a square chip of stone, crushed lime, a few grains of sand, a sprinkling of water, and several splinters of wood (cost 5cp). These must be augmented by the components of the alarm and unseen servant spells if these benefits are to be included (string and silver wire and a small bell, total cost 3sp)}}'},
						{name:'Leomunds-Tiny-Hut',type:'MUspellL3',ct:'3',charge:'uncharged',cost:'1',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nLeomund\'s Tiny Hut\nas a level @{selected|casting-level} caster}}{{splevel=Level 3 Wizard}}{{school=Alteration}}Specs=[Leomunds Tiny Hut,MUspellL3,1H,Alteration]{{components=VSM}}{{time=3}}{{range=0}}{{duration=[[4+@{selected|casting-level}]] hours}}{{aoe=[15ft diameter sphere](!rounds --aoe @{selected|token_id}|circle|feet|0|15||light|true)}}{{save=None}}{{reference=PHB p151}}SpellData=[w:Leomunds Tiny Hut,lv:3,sp:3,gp:1,cs:VSM]{{effects=Creates an unmoving, opaque sphere of force of any desired color around his person.}}'},
						{name:'Leomunds-Trap',type:'MUspellL2',ct:'30',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nLeomund\'s Trap\nas a level @{selected|casting-level} caster}}{{splevel=Level 2 Wizard}}{{school=Illusion/Phantasm}}Specs=[Leomunds Trap,MUspellL2,1H,Illusion-Phantasm]{{components=V,S,M}}{{time=[[3]] rounds}}{{range=Touch}}{{duration=Permanent}}{{aoe=Object touched}}{{save=None}}{{reference=PHB p143}}SpellData=[w:Leomunds-Trap,lv:2,sp:30,gp:0,cs:VS]{{effects=This false trap is designed to fool a thief or other character attempting to pilfer the spellcaster\'s goods.}}{{materials=A piece of iron pyrite touched to the object to be trapped while the object is sprinkled with a special dust requiring 200 gp to prepare. If another Leomund\'s trap is within 50 feet when the spell is cast, the casting fails.}}'},
						{name:'Levitate',type:'MUspellL2',ct:'2',charge:'uncharged',cost:'1',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nLevitate\nas a level @{selected|casting-level} caster}}{{splevel=Level 2 Wizard}}{{school=Alteration}}Specs=[Levitate,MUspellL2,1H,Alteration]{{components=V, S, M}}{{time=[[2]]}}{{range=[[20*@{selected|casting-level}]] yds}}{{duration=[[@{selected|casting-level}]] turns}}{{aoe=[[1]] creature or object}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 saving throw)}}{{reference=PHB p143}}{{healing=[Levitate](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Select a beneficiary|token_id}|Levitate|[[10*@{selected|casting-level}]]|-1|Levitating vertical not horizontal, minuses on missile fire|fluffy-wing)}}SpellData=[w:Levitate,lv:2,sp:2,gp:1,cs:VSM]{{effects=Can place it upon his person, an object, or a single creature, subject to a maximum weight limit of [[100*@{selected|casting-level}]] pounds. If the spell is cast upon the wizard, he can move vertically up or down at a movement rate of [[2]] per round. If cast upon an object or another creature, the wizard can levitate it at the same speed, according to his command.)}}{{materials=Either a small leather loop or a piece of golden wire bent into a cup shape with a long shank on one end, costing 1gp}}'},
						{name:'Light',type:'MUspellL1',ct:'1',charge:'uncharged',cost:'0.1',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nLight\nas a level @{selected|casting-level} caster}}{{splevel=Level 1 Wizard}}{{school=Alteration}}Specs=[Light,MUspellL1,1H,Alteration]{{components=V, M}}{{time=[[1]]}}{{range=[[60]] yards}}{{duration=[[@{selected|casting-level}]] turns}}{{aoe=[Cast on Area 20 ft radius](!rounds --aoe @{selected|token_id}|circle|feet|120|40||light)}}{{save=[Special](!\\amp#13;\\amp#47;gmroll 1d20 saving throw)}}{{reference=PHB p136}}{{damage=[Cast on eyes](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Select a target|token_id}|Light|[[10*@{selected|casting-level}]]|-1|Blinded by Light in eyes|bleeding-eye)}}SpellData=[w:Light,lv:1,sp:1,gp:0.1,cs:VM]{{effects=Creates a luminous glow, equal to torchlight, within a fixed radius of the spell\'s center. If cast on a creature, successful resistance negates the spell, while a successful saving throw indicates that the spell is centered immediately behind the creature, otherwise creature is blinded}}{{materials=A firefly or a piece of phosphorescent moss. Cost 1sp}}'},
						{name:'Lightning-Bolt',type:'MUspellL3',ct:'3',charge:'uncharged',cost:'0.5',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nLightning Bolt\nas a level @{selected|casting-level} caster}}{{school=Evocation}}Specs=[Lightning Bolt,MUspellL3,1H,Evocation]{{splevel=Level 3 Wizard}}{{components= V, S, M}}{{time=[[3]]}}{{range=[[(4+@{selected|casting-level})*10]] yards}}{{duration=Instantaneous}}{{aoe=[40x10ft](!rounds --aoe @{selected|token_id}|bolt|feet|[[(12+@{selected|casting-level})*30]]|40|10|lightning) or [80x5ft](!rounds --aoe @{selected|token_id}|bolt|feet|[[(12+@{selected|casting-level})*30]]|80|5|lightning)}}{{save=[Half damage](!\\amp#13;\\amp#47;gmroll 1d20 saving throw)}}{{reference=PHB p151}}{{damage=roll [[[{10, @{selected|casting-level}}kl1]]d6](!\\amp#13;\\amp#47;r [[{10, @{selected|casting-level}}kl1]]d6)}}{{damagetype=Lightning}}SpellData=[w:Lightning-Bolt,lv:3,sp:3,gp:0.5,cs:VSM]{{effects=Releases a powerful stroke of electrical energy damaging each creature within its area of effect (Save vs. spell for half).}}{{materials=A bit of fur and an amber, crystal, or glass rod, costing 10gp and reusable 20 times}}'},
						{name:'Limited-Wish',type:'MUspellL7',ct:'10',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casting\nLimited Wish\nas a level @{selected|casting-level} caster}}{{splevel=Level 7 Wizard}}{{school=Conjuration-Summoning, Invocation-Evocation}}Specs=[Limited Wish,MUspellL7,0H,Conjuration-Summoning|Invocation-Evocation]{{components=V}}{{time=Special}}{{range=Unlimited}}{{duration=Special}}{{aoe=Special}}{{save=None}}{{reference=PHB p184}}SpellData=[w:Limited Wish,lv:7,sp:10,gp:0,cs:V]{{effects=It will fulfil literally, but only partially or for a limited duration, the utterance of the spellcaster.}}'},
						{name:'Locate-Object',type:'MUspellL2',ct:'2',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}}{{title=@{selected|casting-name} casts\nLocate Object\nas a level @{selected|casting-level} caster}}{{splevel=Level 2 Wizard}}{{school=Divination (reversable)}}Specs=[Locate Object,MUspellL2,1H,Divination]{{components=V, S, M}}{{time=[[2]]}}{{range=[[0]]}}{{duration=[[@{selected|casting-level}]] Rounds}}{{aoe=[[[20*@{selected|casting-level}]] yards](!rounds --aoe @{selected|token_id}|bolt|yards|0|[[20*@{selected|casting-level}]]|10|light|true) in direction facing}}{{save=None}}{{healing=[Turn on magic radar](!rounds --target caster|@{selected|token_id}|Locate-Object|[[@{selected|Casting-Level}]]|-1|Locating Object|aura)}}{{reference=PHB p143}}SpellData=[w:Locate-Object,lv:2,sp:2,gp:0,cs:VSM]{{effects=Aids in locating a known or familiar object. The wizard casts the spell, slowly turns, and senses when he is facing in the direction of the object to be located, provided the object is within range.}}{{materials=A forked twig (free).}}'},
						{name:'Lock',type:'MUspellL2',ct:'1',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nLock (reverse Knock)\nas a level @{selected|casting-level} caster}}{{splevel=Level 2 Wizard}}{{school=Alteration (reversable)}}Specs=[Lock,MUspellL2,0H,Alteration]{{components=V}}{{time=1}}{{range=60 yds.}}{{duration=Special}}{{aoe=[[[10*@{selected|Casting-Level}]] sq. ft.](!rounds --aoe @{selected|token_id}|rectangle|feet|180|||magic)}}{{save=None}}{{reference=PHB p143}}SpellData=[w:Lock,lv:2,sp:1,gp:0,cs:V]{{effects=Locks doors or similar closures, if there is a mechanism to do so. Does not create a weld or magical lock, but applies up to two physical forms of lock (including bars). Does not effect a portcullis.\nSee *Knock*, PHB p143, for full details}}'},
						{name:'Lower-Water',type:'MUspellL6',ct:'100',charge:'uncharged',cost:'1',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nLower Water\nas a level @{selected|casting-level} caster}}{{splevel=Level 6 Wizard}}{{school=Alteration (Reversable)}}Specs=[Lower Water,MUspellL6,1H,Alteration]{{components=V,S,M}}{{time=[[1]] turn}}{{range=[[80]] yards}}{{duration=[[5*@{selected|casting-level}]] rounds}}{{aoe=[[[10*@{selected|casting-level}]]ft. square](!rounds --aoe @{selected|token_id}|square|feet|240|[[10*@{selected|casting-level}]]||cold)}}{{save=None}}{{reference=PHB p178}}SpellData=[w:Lower Water,lv:6,sp:100,gp:1,cs:VSM]{{effects=Causes water or similar fluid in the area of effect to sink away. The water can be lowered up to [[2*@{selected|casting-level}]]ft, to a minimum depth of 1 inch.}}{{materials=A small vial (costing 1gp) of dust, which is thrown into the water}}'},
						{name:'Magic-Jar',type:'MUspellL5',ct:'5',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nMagic Jar\nas a level @{selected|casting-level} caster}}{{splevel=Level 5 Wizard}}{{school=Necromancy}}Specs=[Magic Jar,MUspellL5,1H,Necromancy]{{components=V,S,M}}{{time=[[1]] round}}{{range=[[10*@{selected|casting-level}]] yards}}{{duration=Special}}{{aoe=1 creature}}{{save=None}}{{reference=PHB p169}}SpellData=[w:Magic Jar,lv:5,sp:5,gp:0,cs:VSM]{{effects=Shift the caster\'s life force into a special receptacle (a gem or large crystal). From there the caster can force an exchange of life forces between the receptacle and another creature, thus enabling the wizard to take over and control the body of another creature, while the life force of the host is confined in the receptacle.}}'},
						{name:'Magic-Mirror',type:'MUspellL4',ct:'600',charge:'uncharged',cost:'1100',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casting\nMagic Mirror\nas a level @{selected|casting-level} caster}}{{splevel=Level 4 Wizard}}{{school=Enchantment, Divination}}Specs=[Magic Mirror,MUspellL4,1H,Enchantment|Divination]{{components=V,S,M}}{{time=[[1]] hour}}{{range=Touch}}{{duration=[[@{selected|casting-level}]] rounds}}{{aoe=Special}}{{save=None}}{{reference=PHB p159}}SpellData=[w:Magic Mirror,lv:4,sp:600,gp:1100,cs:VSM]{{effects=Changes a normal mirror into a scrying device similar to a crystal ball.}}{{materials=The mirror, worth no less than 1,000gp, and the eye of a hawk, an eagle, or even a roc, and nitric acid, copper, and zinc. Total inc. mirror is 1,100gp}}'},
						{name:'Magic-Missile',type:'MUspellL1',ct:'1',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nMagic Missile\nas a level @{selected|casting-level} caster}}{{splevel=Level 1 Wizard}}{{school=Evocation/Invocation}}Specs=[Magic Missile,MUspellL1,1H,Evocation]{{components=V, S}}{{time=[[1]]}}{{range=[[[({10,@{selected|casting-level}}kl1)*10+60]] feet](!rounds --aoe @{selected|token_id}|circle|feet|0|[[({10,@{selected|casting-level}}kl1)*20+120]]||lightning|true)}}{{duration=Instant}}{{aoe=Targeted Creature(s)}}{{save=None}}{{reference=PHB p136}}{{damage=[1d4+1](!\\amp#13;\\amp#47;r 1d4+1) per missile\n[All missiles](!\\amp#13;\\amp#47;r [[ceil([[{9, @{selected|casting-level}}kl1]]/2)]]d4+[[ceil([[{9, @{selected|casting-level}}kl1]]/2)]])\n}}SpellData=[w:Magic-Missile,lv:1,sp:1,gp:0,cs:VS]{{effects=Fires [[ceil(({9, @{selected|casting-level}}kl1)/2)]] missile(s) at one or more targets designated by the caster before the spell is cast. Each missile unerringly strikes it\'s target causing damage as indicated above.}}'},
						{name:'Magic-Mouth',type:'MUspellL2',ct:'2',charge:'uncharged',cost:'0.1',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nMagic Mouth\nas a level @{selected|casting-level} caster}}{{splevel=Level 2 Wizard}}{{school=Alteration}}Specs=[Magic Mouth,MUspellL2,1H,Alteration]{{components=V,S,M}}{{time=[[2]]}}{{range=[10 yards](!rounds --aoe @{selected|token_id}|circle|yards|0|20||magic|true)}}{{duration=Special}}{{aoe=1 object}}{{save=None}}{{reference=PHB p143}}SpellData=[w:Magic-Mouth,lv:2,sp:2,gp:0.1,cs:VSM]{{effects=Imbues the chosen object with an enchanted mouth that suddenly appears and speaks its message when a specified event occurs.}}{{materials=A small bit of honeycomb costing 1sp.}}'},
						{name:'Major-Creation',type:'MUspellL5',ct:'100',charge:'uncharged',cost:'0.01',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nMajor Creation\nas a level @{selected|casting-level} caster}}{{splevel=Level 5 Wizard}}{{school=Illusion-Phantasm}}Specs=[Major Creation,MUspellL5,1H,Illusion-Phantasm]{{components=V,S,M}}{{time=[[1]] turn}}{{range=[[10]] yards}}{{duration=Special}}{{aoe=Special}}{{save=None}}{{reference=PHB p170}}SpellData=[w:Major Creation,lv:5,sp:100,gp:0.01,cs:VSM]{{effects=Pull wisps of material from the Demiplane of Shadow to create an item of nonliving, vegetable nature. The wizard can also create mineral objects.}}'},
						{name:'Mass-Charm',type:'MUspellL8',ct:'8',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casting\nMass Charm\nas a level @{selected|casting-level} caster}}{{splevel=Level 8 Wizard}}{{school=Enchantment-Charm}}Specs=[Mass Charm,MUspellL8,0H,Enchantment-Charm]{{components=V}}{{time=[[8]]}}{{range=[[5*@{selected|casting-level}]] yards}}{{duration=Special}}{{aoe=[30ft cube](!rounds --aoe @{selected|token_id}|square|feet|[[15*@{selected|casting-level}]]|30||magic)}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 save vs.Mass Cham spell)}}{{reference=PHB p190}}{{damage=[Charm Them](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Who do you want to charm?|token_id}|Mass-Charm|99|0|Wow, @{selected|character_name} is so great! There\'s something about them...|chained-heart)}}SpellData=[w:Mass Charm,lv:8,sp:8,gp:0,cs:V]{{effects=Affects large numbers of either persons or monsters just as a *charm person* or *charm monster* spell.}}'},
						{name:'Mass-Invisibility',type:'MUspellL7',ct:'7',charge:'uncharged',cost:'0.05',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casting\nMass Invisibility\nas a level @{selected|casting-level} caster}}{{splevel=Level 7 Wizard}}{{school=Illusion-Phantasm}}Specs=[Mass Invisibility,MUspellL7,1H,Mass Invisibility]{{components=V,S,M}}{{time=[[7]]}}{{range=[[10*@{selected|casting-level}]] yards}}{{duration=Special}}{{aoe=[60 x 60 yards](!rounds --aoe @{selected|token_id}|square|yards|[[10*@{selected|casting-level}]]|60|60|magic)}}{{save=None}}{{reference=PHB p184}}SpellData=[w:Mass Invisibility,lv:7,sp:7,gp:0.05,cs:VSM]{{effects=*Invisibility* spell for battlefield use. Can hide creatures in a 60-yard x 60-yard area: up to 400 man-sized creatures, 30 to 40 giants, or six to eight large dragons.}}{{materials=An eyelash and a bit of gum arabic, the former encased in the latter, costing 5cp}}'},
						{name:'Mass-Suggestion',type:'MUspellL6',ct:'6',charge:'uncharged',cost:'0.05',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nMass Suggestion\nas a level @{selected|casting-level} caster}}{{splevel=Level 6 Wizard}}{{school=Enchantment-Charm}}Specs=[Mass Suggestion,MUspellL6,0H,Enchantment-Charm]{{components=V,M}}{{time=[[6]]}}{{range=[30 yards](!rounds --aoe @{selected|token_id}|circle|yards|0|60||magic|true)}}{{duration=[[4+(4*@{selected|casting-level})]] turns}}{{aoe=[[@{selected|casting-level}]] creatures}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 save vs. Mass Suggestion spell)}}{{reference=PHB p179}}{{damage=[Suggest to who?](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Suggest to Who?|token_id}|Mass-suggestion|[[40+(40*@{selected|casting-level})]]|-1|Following @{selected|casting-name}\'s suggestion|flying-flag)}}SpellData=[w:Mass Suggestion,lv:6,sp:6,gp:0.05,cs:VM]{{effects=Enables the wizard to influence the actions of up to [[@{selected|casting-level}]] chosen creatures in the same way as the suggestion spell. }}{{materials=A snake\'s tongue and either a bit of honeycomb or a drop of sweet oil. Total cost 5cp}}'},
						{name:'Massmorph',type:'MUspellL4',ct:'4',charge:'uncharged',cost:'0.01',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casting\nMassmorph\nas a level @{selected|casting-level} caster}}{{splevel=Level 4 Wizard}}{{school=Alteration}}Specs=[Massmorph,MUspellL4,1H,Alteration]{{components=V,S,M}}{{time=[[4]]}}{{range=[[10*@{selected|casting-level}]] yds}}{{duration=Special}}{{aoe=Up to [[10*@{selected|casting-level}]] creatures in [@{selected|casting-level} x 10sq.ft.](!rounds --aoe @{selected|token_id}|rectangle|feet|[[30*@{selected|casting-level}]]|||light)}}{{save=None}}{{reference=PHB p160}}SpellData=[w:Massmorph,lv:4,sp:4,gp:0.01,cs:VSM]{{effects=Up to [[10*@{selected|casting-level}]] willing creatures of man-size or smaller can be magically altered to appear as trees of any sort. }}{{materials=A handful of bark chips from the type of tree the creatures are to become, worth only 1cp}}'},
						{name:'Maze',type:'MUspellL8',ct:'3',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casting\nMaze\nas a level @{selected|casting-level} caster}}{{splevel=Level 8 Wizard}}{{school=Conjuration-Summoning}}Specs=[Maze,MUspellL8,1H,Conjuration-Summoning]{{components=V,S}}{{time=[[3]]}}{{range=[[[5*@{selected|casting-level}]] yards](!rounds --aoe @{selected|token_id}|circle|yards|0|[[10*@{selected|casting-level}]]||magic|true)}}{{duration=[Special](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Who do you want to a-Maze?|token_id}|Maze|0|-1|You are in a labyrinth of endless corridors... You are in a labyrinth of tiny, twisting corridors... You are in...|screaming)}}{{aoe=1 creature}}{{save=None}}{{reference=PHB p190}}SpellData=[w:Maze,lv:8,sp:3,gp:0,cs:VS]{{effects=An extradimensional space is brought into being. The subject vanishes into the shifting labyrinth of force planes for a period of time that is dependent upon its Intelligence.}}'},
						{name:'Melfs-Acid-Arrow',type:'MUspellL2',ct:'2',charge:'uncharged',cost:'1',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nMelf\'s Acid Arrow\nas a level @{selected|casting-level} caster}}{{splevel=Level 2 Wizard}}{{school=Conjuration}}Specs=[Melfs Acid Arrow,MUspellL2,1H,Conjuration]{{components=V, S, M}}{{time=[[2]]}}{{range=[180 yards](!rounds --aoe @{selected|token_id}|circle|yards|0|360||acid|true)}}{{duration=[[1+ceil(@{selected|casting-level}/3)]] rounds of acid damage}}{{aoe=[[1]] creature}}{{save=None}}{{damage=[Roll to hit](~MU-Spells-DB|To-hit-Melfs-Acid-Arrow)}}{{damagetype=Acid}}{{reference=PHB p144}}SpellData=[w:Melfs-Acid-Arrow,lv:2,sp:2,gp:1,cs:VSM]{{effects=Makes an attack roll against the target as if he were a Fighter of the same level. There are no attack or damage bonuses but the arrow causes damage as above each round for the duration. Saving Throws for items may occur.}}{{materials=A dart, powdered rhubarb leaf, and an adder\'s stomach, costing 1gp in total.}}'},
						{name:'Melfs-Minute-Meteors',type:'MUspellL3',ct:'3',charge:'uncharged',cost:'100',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nMelf\'s Minute Meteors\nas a level @{selected|casting-level} caster}}{{splevel=Level 3 Wizard}}{{school=Evocation/Alteration}}Specs=[Melfs Minute Meteors,MUspellL3,1H,Evocation]{{components=V, S, M}}{{time=[[3]]}}{{range=[[[70+(10*@{selected|casting-level})]] yards](!rounds --aoe @{selected|token_id}|circle|yards|0|[[140+(20*@{selected|casting-level})]]||lightning|true)}}{{duration=Special}}{{aoe=[[1]] target per meteor}}{{save=None}}{{reference=PHB p151}}{{damage=[[@{selected|casting-level}]] x [Meteors](~MU-Spells-DB|To-hit-Melfs-Minute-Meteors)}}{{damagetype=\nBludgeoning}}SpellData=[w:Melfs-Minute-Meteors,lv:3,sp:3,gp:100,cs:VSM]{{effects=[[@{selected|casting-level}]] meteors each doing [1d4](!\\amp#13;\\amp#47;r 1d4) HP damage to creature struck \\amp [[1]] HP to those in [[3]]ft (e.g. if miss). Either (A) 5 per round, or (B) 1 per round and can do other things except concentrate. Caster must keep count. +2 benefit to attack roll, base Thac0 [[@{selected|bar2}]] [[0-2]]=[[@{selected|bar2}-2]]}}{{materials=Nitre and sulphur formed into a bead by the addition of pine tar, and a small hollow tube of minute proportion, fashioned from gold. The tube costs no less than 1,000 gp to construct, so fine is its workmanship and magical engraving, and it can be reused up to 10 times}}'},
						{name:'Mending',type:'MUspellL1',ct:'1',charge:'uncharged',cost:'0.02',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nMending\nas a level @{selected|casting-level} caster}}{{splevel=Level 1 Wizard}}{{school=Alteration}}Specs=[Mending,MUspellL1,1H,Alteration]{{components=V, S, M}}{{time=[[1]]}}{{range=[[30]] yds}}{{duration=Permanent}}{{aoe=1 object}}{{save=None}}{{reference=PHB p136}}SpellData=[w:Mending,lv:1,sp:1,gp:0.02,cs:VSM]{{effects=Repairs small breaks in objects: ring or chain link or medallion or any metal object mends one break. Ceramic or wood mends multiple breaks as good as new. One hole in a leather sacks or wine skin is healed over. Will not by itself mend magical items of any type.}}{{materials=Two small magnets of any type (lodestone in all likelihood) or two burrs. Avg. cost 2cp}}'},
						{name:'Message',type:'MUspellL1',ct:'1',charge:'uncharged',cost:'0.05',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}}{{title=@{selected|casting-name} casts\nMessage\nas a level @{selected|casting-level} caster}}{{splevel=Level 1 Wizard}}{{school=Alteration}}Specs=[Message,MUspellL1,1H,Alteration]{{components=V, S, M}}{{time=[[1]]}}{{range=[[0]]}}{{duration=[[5*@{selected|casting-level}]] Rounds}}{{aoe=Up to [[@{selected|casting-level}]] creatures}}{{save=None}}{{reference=PHB p136}}{{healing=[Whisper to Who?](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Whisper to Who?|token_id}|Message|[[5*@{selected|Casting-Level}]]|-1|Whispering Messages|flying-flag)}}SpellData=[w:Message,lv:1,sp:1,gp:0.05,cs:VSM]{{effects=Whisper messages and receive replies with little chance of being overheard. }}{{materials=A short piece of copper wire (5 cp to make).}}'},
						{name:'Meteor-Swarm',type:'MUspellL9',ct:'9',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casting\nMeteor Swarm\nas a level @{selected|casting-level} caster}}{{splevel=Level 9 Wizard}}{{school=Evocation}}Specs=[Meteor Swarm,MUspellL9,1H,Evocation]{{components=V,S}}{{time=[[9]]}}{{range=[[40+(10*@{selected|casting-level})]] yards}}{{duration=Instantaneous}}{{aoe=1st [Place box/diamond](!rounds --aoe @{selected|token_id}|square|feet|[[120+(30*@{selected|casting-level})]]|20|20|magic)\nthen\n4x[Place 2ft sphere](!rounds --aoe @{selected|token_id}|circle|feet|0|30||fire)\nor\n8x[Place 1ft sphere](!rounds --aoe @{selected|token_id}|circle|feet|0|15||fire)}}{{save=[Halves](!\\amp#13;\\amp#47;gmroll 1d20 save vs. Meteor Swarm spell)}}{{reference=PHB p195}}SpellData=[w:Meteor Swarm,lv:9,sp:9,gp:0,cs:VS]{{effects=Either four spheres of 2-foot diameter or eight spheres of 1-foot diameter spring from the outstretched hand of the wizard and streak in a straight line to the distance demanded by the spellcaster, up to the maximum range. Any creature in the straight-line path of these missiles receives the full effect, without benefit of a saving throw.}}'},
						{name:'Mind-Blank',type:'MUspellL8',ct:'1',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casting\nMind Blank\nas a level @{selected|casting-level} caster}}{{splevel=Level 8 Wizard}}{{school=Abjuration}}Specs=[Mind Blank,MUspellL8,1H,Abjuration]{{components=V,S}}{{time=[[1]]}}{{range=[30 yards](!rounds --aoe @{selected|token_id}|circle|yards|0|60||magic|true)}}{{duration=[1 day](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Who\'s mind is blank to others?|token_id}|Mind-blank|99|0|You are protected from all forms of mind reading|white-tower)}}{{aoe=1 creature}}{{save=None}}{{reference=PHB p190}}SpellData=[w:Mind Blank,lv:8,sp:1,gp:0,cs:VS]{{effects=The creature is totally protected from all devices and spells that detect, influence, or read emotions or thoughts.}}'},
						{name:'Minor-Creation',type:'MUspellL4',ct:'100',charge:'uncharged',cost:'0.05',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nMinor Creation\nas a level @{selected|casting-level} caster}}{{splevel=Level 4 Wizard}}{{school=Illusion/Phantasm}}Specs=[Minor Creation,MUspellL4,1H,Illusion-Phantasm]{{components=V,S,M}}{{time=[[1]] turn}}{{range=Touch}}{{duration=[[@{selected|Casting-level}]] hours}}{{aoe=[[@{selected|Casting-level}]]cu.ft.}}{{save=None}}{{reference=PHB p160}}SpellData=[w:Minor-Creation,lv:4,sp:100,gp:0.05,cs:VSM]{{effects=Create an item of non-living, vegetable nature--soft goods, rope, wood, etc.}}{{materials=At least a tiny piece of matter worth 5cp of the same type of item to be created.}}'},
						{name:'Minor-Globe-of-Invulnerability',type:'MUspellL4',ct:'4',charge:'uncharged',cost:'5',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casting\nMinor Globe of Invulnerability\nas a level @{selected|casting-level} caster}}{{splevel=Level 4 Wizard}}{{school=Abjuration}}Specs=[Minor Globe of Invulnerability,MUspellL4,1H,Abjuration]{{components=V,S,M}}{{time=[[4]]}}{{range=0}}{{duration=[[@{selected|casting-level}]] rounds}}{{aoe=[5 ft radius](!rounds --aoe @{selected|token_id}|circle|feet|0|10||light|true)}}{{save=None}}{{reference=PHB p160}}SpellData=[w:Minor Globe of Invulnerability,lv:4,sp:4,gp:5,cs:VSM]{{effects=Ceates an immobile, sphere around the caster that prevents any 1st-, 2nd-, or 3rd-level spell effects from penetrating, including innate abilities and effects from devices.}}{{materials=A glass or crystal bead worth 5gp, that shatters at the expiration of the spell}}'},
						{name:'Mirage-Arcana',type:'MUspellL6',ct:'10',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nMirage Arcana\nas a level @{selected|casting-level} caster}}{{splevel=Level 6 Wizard}}{{school=Illusion-Phantasm, Alteration}}Specs=[Mirage Arcana,MUspellL6,1H,Illusion-Phantasm|Alteration]{{components=V,S optionally M}}{{time=[[10]]}}{{range=[[10*@{selected|casting-level}]] yards}}{{duration=Special}}{{aoe=[[[10*@{selected|casting-level}]]ft. radius](!rounds --aoe @{selected|token_id}|circle|feet|[[30*@{selected|casting-level}]]|[[20*@{selected|casting-level}]]||magic)}}{{save=None}}{{healing=Cast with [Minimal concentration](!rounds --target caster|@{selected|token_id}|Mirage-arcana-sustained|99|0|Maintaining a Mirage Arcana|lightning-helix) or [No concentration](!rounds --target caster|@{selected|token_id}|Mirage-arcana|[[60+(10*@{selected|casting-level})]]|-1|Mirage Arcana is maintaining itself|half-haze)}}{{reference=PHB p179}}SpellData=[w:Mirage Arcana,lv:6,sp:10,gp:0,cs:VS(M)]{{effects=Make an area appear to be something other than it is--a setting he has personally seen. The spell remains as long as the caster maintains a minimal concentration upon it. Even after this, the spell persists for a total of [[6+@{selected|casting-level}]] turns.}}{{materials=Optionally, a item from the location being mimicked}}'},
						{name:'Mirror-Image',type:'MUspellL2',ct:'2',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nMirror Image\nas a level @{selected|casting-level} caster}}{{splevel=Level 2 Wizard}}{{school=Illusion/Phantasm}}Specs=[Mirror Image,MUspellL2,1H,Illusion-Phantasm]{{components=V, S}}{{time=[[2]]}}{{range=[[0]]}}{{duration=[[3*{10,@{selected|casting-level}}kl1]] rounds}}{{aoe=[[6]]ft radius}}{{save=None}}{{healing=[Gain companions](!rounds --target caster|@{selected|token_id}|Mirror-Image|[[3*{10,@{selected|casting-level}}kl1]]|-1|Surrounded by multiple images of themselves|half-haze\\amp#13;!token-mod --ignore-selected --ids @{selected|token_id} --set statusmarkers|number-\\amp#91;[\\amp#63;{Number of Images?|\\amp#91;[1d4]\\amp#93;}+ceil(@{selected|casting-level}/3\\amp#41;,8}kl1]\\amp#93;)\n}}{{reference=PHB p144}}SpellData=[w:Mirror-Image,lv:2,sp:2,gp:0,cs:VS]{{effects=1d4+level/3 mirror images of the Wizard appear around him. Use the numbered token markers to indicate number of images remaining. Roll dice to determine image or MU struck (if 6 images roll d8 ignore 8 - 1=MU). Hitting image dispels that image.}}'},
						{name:'Misdirection',type:'MUspellL2',ct:'2',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}}{{title=@{selected|casting-name} casts\nMisdirection\nas a level @{selected|casting-level} caster}}{{splevel=Level 2 Wizard}}{{school=Illusion/Phantasm}}Specs=[Misdirection,MUspellL2,1H,Illusion-Phantasm]{{components=V, S}}{{time=[[2]]}}{{range=[30 yards](!rounds --aoe @{selected|token_id}|circle|yards|0|60||acid|true)}}{{duration=[[8]]hours}}{{aoe=[[1]] creature or object}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 save vs. Misdirection spell)}}{{reference=PHB p144}}SpellData=[w:Misdirection,lv:2,sp:2,gp:0,cs:VS]{{effects=Misdirects the information from a detection spell (*detect charm, detect evil, detect invisibility, detect lie, detect magic, detect snares and pits,* etc.).}}'},
						{name:'Mislead',type:'MUspellL6',ct:'1',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nMislead\nas a level @{selected|casting-level} caster}}{{splevel=Level 6 Wizard}}{{school=Illusion-Phantasm}}Specs=[Mislead,MUspellL6,1H,Illusion-Phantasm]{{components=S}}{{time=[[1]]}}{{range=[[10]] yards}}{{duration=[[@{selected|casting-level}]] rounds}}{{aoe=Special}}{{save=None}}{{healing=[Make a double](!rounds --target caster|@{selected|token_id}|Mislead|@{selected|casting-level}|-1|Move while your double exists|aura)}}{{reference=PHB p179}}SpellData=[w:Mislead,lv:6,sp:1,gp:0,cs:S]{{effects=Creates an illusory double at the same time that he is cloaked by improved invisibility magic (see the 4th-level spell). The wizard is then free to go elsewhere while his double seemingly moves away.)}}'},
						{name:'Monster-Summoning-I',type:'MUspellL3',ct:'3',charge:'uncharged',cost:'0.5',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nMonster Summoning I\nas a level @{selected|casting-level} caster}}{{splevel=Level 3 Wizard}}{{school=Conjuration/Summoning}}Specs=[Monster Summoning I,MUspellL3,1H,Conjuration-Summoning]{{components=V, S, M}}{{time=3}}{{range=[[0]]}}{{duration=[[2+@{selected|casting-level}]] rounds}}{{aoe=[30 yard radius](!rounds --aoe @{selected|token_id}|circle|yards|0|60||magic|true)}}{{save=None}}{{reference=PHB p151}}SpellData=[w:Monster-Summoning-I,lv:3,sp:3,gp:0.5,cs:VSM]{{effects=[1d4](!\\amp#13;\\amp#47;r 1d4) 1st level monsters (selected by the DM from the Monster Summoning 1 Table in the MC) appear in the area, placed by the caster. Attack to best of their ability until caster demands attack cease, spell expires, or are slain. Disappear when slain, no morale checks. If can communicate and not attacking, caster can ask them to perform tasks.}}{{materials=a tiny bag and a small (not necessarily lit) candle, in total costing 5sp.}}'},
						{name:'Monster-Summoning-II',type:'MUspellL4',ct:'4',charge:'uncharged',cost:'0.5',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nMonster Summoning\nII as a level @{selected|casting-level} caster}}{{splevel=Level 4 Wizard}}{{school=Conjuration/Summoning}}Specs=[Monster Summoning II,MUspellL4,1H,Conjuration-Summoning]{{components=V, S, M}}{{time=[[4]]}}{{range=[[0]]}}{{duration= [[3+@{selected|casting-level}]] rounds}}{{aoe=[40 yard radius](!rounds --aoe @{selected|token_id}|circle|yards|0|80||magic|true)}}{{save=None}}{{reference=PHB p160}}SpellData=[w:Monster-Summoning-II,lv:4,sp:4,gp:0.5,cs:VSM]{{effects=This spell is much like the 3rd-level spell monster summoning I, except that this spell summons [1d6](!\\amp#13;\\amp#47;r 1d6) 2nd-level monsters.}}{{materials=A tiny bag and a small (not necessarily lit) candle, in total costing 5sp.}}'},
						{name:'Monster-Summoning-III',type:'MUspellL5',ct:'5',charge:'uncharged',cost:'0.1',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nMonster Summoning |||\nas a level @{selected|casting-level} caster}}{{splevel=Level 5 Wizard}}{{school=Conjuration-Summoning}}Specs=[Monster Summoning III,MUspellL5,1H,Conjuration-Summoning]{{components=V,S,M}}{{time=[[5]]}}{{range=Special}}{{duration=[[4+@{selected|casting-level}]] rounds}}{{aoe=[50yd radius](!rounds --aoe @{selected|token_id}|circle|yards|0|100||magic|true)}}{{save=None}}{{reference=PHB p170}}SpellData=[w:Monster Summoning III,lv:5,sp:5,gp:0.1,cs:VSM]{{effects=Much like the 3rd-level spell *monster summoning I*, except that this spell summons [1d4](!\\amp#13;\\amp#47;r 1d4) 3rd-level monsters.}}{{materials=A tiny bag and a small candle, worth 1sp in total}}'},
						{name:'Monster-Summoning-IV',type:'MUspellL6',ct:'6',charge:'uncharged',cost:'0.1',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nMonster Summoning |V\nas a level @{selected|casting-level} caster}}{{splevel=Level 6 Wizard}}{{school=Conjuration-Summoning}}Specs=[Monster Summoning IV,MUspellL6,1H,Conjuration-Summoning]{{components=V,S,M}}{{time=[[6]]}}{{range=Special}}{{duration=[[5+@{selected|casting-level}]] rounds}}{{aoe=[60yd radius](!rounds --aoe @{selected|token_id}|circle|yards|0|120||magic|true)}}{{save=None}}{{reference=PHB p179}}SpellData=[w:Monster Summoning IV,lv:6,sp:6,gp:0.1,cs:VSM]{{effects=This spell is much like the 3rd-level spell *monster summoning I*, except that this spell summons [1d3](!\\amp#13;\\amp#47;r 1d3) 4th-level monsters.}}{{materials=A tiny bag and a small candle, worth 1sp in total}}'},
						{name:'Monster-Summoning-V',type:'MUspellL7',ct:'6',charge:'uncharged',cost:'0.1',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nMonster Summoning V\nas a level @{selected|casting-level} caster}}{{splevel=Level 7 Wizard}}{{school=Conjuration-Summoning}}Specs=[Monster Summoning V,MUspellL7,1H,Conjuration-Summoning]{{components=V,S,M}}{{time=[[6]]}}{{range=Special}}{{duration=[[6+@{selected|casting-level}]] rounds}}{{aoe=[70yd radius](!rounds --aoe @{selected|token_id}|circle|yards|0|140||magic|true)}}{{save=None}}{{reference=PHB p185}}SpellData=[w:Monster Summoning V,lv:7,sp:6,gp:0.1,cs:VSM]{{effects=This spell is much like the 3rd-level spell *monster summoning I*, except that this spell summons [1d3](!\\amp#13;\\amp#47;r 1d3) 5th-level monsters.}}{{materials=A tiny bag and a small candle, worth 1sp}}'},
						{name:'Monster-Summoning-VI',type:'MUspellL8',ct:'8',charge:'uncharged',cost:'0.1',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nMonster Summoning VI\nas a level @{selected|casting-level} caster}}{{splevel=Level 8 Wizard}}{{school=Conjuration-Summoning}}Specs=[Monster Summoning VI,MUspellL8,1H,Conjuration-Summoning]{{components=V,S,M}}{{time=[[8]]}}{{range=Special}}{{duration=[[7+@{selected|casting-level}]] rounds}}{{aoe=[80yd radius](!rounds --aoe @{selected|token_id}|circle|yards|0|160||magic|true)}}{{save=None}}{{reference=PHB p190}}SpellData=[w:Monster Summoning VI,lv:8,sp:8,gp:0.1,cs:VSM]{{effects=This spell is much like the 3rd-level spell *monster summoning I*, except that this spell summons [1d3](!\\amp#13;\\amp#47;r 1d3) 6th-level monsters.}}{{materials=A tiny bag and a small candle, costing 1sp}}'},
						{name:'Monster-Summoning-VII',type:'MUspellL9',ct:'9',charge:'uncharged',cost:'0.1',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nMonster Summoning VII\nas a level @{selected|casting-level} caster}}{{splevel=Level 9 Wizard}}{{school=Conjuration-Summoning}}Specs=[Monster Summoning VII,MUspellL9,1H,Conjuration-Summoning]{{components=V,S,M}}{{time=[[9]]}}{{range=Special}}{{duration=[[8+@{selected|casting-level}]] rounds}}{{aoe=[90yd radius](!rounds --aoe @{selected|token_id}|circle|yards|0|180||magic|true)}}{{save=None}}{{reference=PHB p195}}SpellData=[w:Monster Summoning VII,lv:9,sp:9,gp:0.1,cs:VSM]{{effects=This spell is much like the 3rd-level spell *monster summoning I*, except that this spell summons one or two 7th-level monsters that appear one round after the spell is cast, or one 8th-level monster that appears two rounds after the spell is cast}}{{materials=A tiny bag and a small candle, costing 1sp}}'},
						{name:'Mordenkainens-Disjunction',type:'MUspellL9',ct:'9',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casting\nMordenkainen\'s Disjunction\nas a level @{selected|casting-level} caster}}{{splevel=Level 9 Wizard}}{{school=Alteration, Enchantment}}Specs=[Mordenkainens Disjunction,MUspellL9,0H,Alteration|Enchantment]{{components=V}}{{time=[[9]]}}{{range=[[0]]}}{{duration=Instantaneous}}{{aoe=[30ft radius](!rounds --aoe @{selected|token_id}|circle|feet|0|60||lightning|true)}}{{save=[Special](!\\amp#13;\\amp#47;gmroll 1d20 save vs.Mordenkainen\'s Disjunction spell)}}{{reference=PHB p196}}SpellData=[w:Mordenkainens Disjunction,lv:9,sp:9,gp:0,cs:V]{{effects=All magic and magical items within the radius of the spell, except those on the person of or being touched by the spellcaster, are disjoined}}'},
						{name:'Mordenkainens-Faithful-Hound',type:'',ct:'5',charge:'uncharged',cost:'0.5',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nMordenkainen\'s Faithful Hound\nas a level @{selected|casting-level} caster}}{{splevel=Level 5 Wizard}}{{school=Conjuration-Summoning}}Specs=[Mordenkainen\'s Faithful Hound,MUspellL5,1H,Conjuration-Summoning]{{components=V,S,M}}{{time=[[5]]}}{{range=[10 yards](!rounds --aoe @{selected|token_id}|circle|yards|0|20||magic|true)}}{{duration=Special}}{{aoe=Special}}{{save=None}}{{reference=PHB p170}}SpellData=[w:Mordenkainens Faithful Hound,lv:5,sp:5,gp:0.5,cs:VSM]{{effects=Summons up a phantom watchdog that only he can see that can guard a passage, room, door, or similar space or portal.}}{{materials=A tiny silver whistle (costing 10gp to source and reusable 20 times), a piece of bone, and a thread}}'},
						{name:'Mordenkainens-Lucubration',type:'MUspellL6',ct:'1',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nMordenkainen\'s Lucubration\nas a level @{selected|casting-level} caster}}{{splevel=Level 6 Wizard}}{{school=Alteration}}Specs=[Mordenkainens Lucubration,MUspellL6,1H,Alteration]{{components=V,S}}{{time=[[1]]}}{{range=[[0]]}}{{duration=Instantaneous}}{{aoe=The caster}}{{save=None}}{{reference=PHB p179}}{{healing=[Recall spell](!magic --mem-spell MU)}}SpellData=[w:Mordenkainens Lucubration,lv:6,sp:1,gp:0,cs:VS]{{effects=Instantly recall any 1st- through 5th-level spell he has used during the past 24 hours.}}'},
						{name:'Mordenkainens-Magnificent-Mansion',type:'MUspellL7',ct:'7',charge:'uncharged',cost:'100',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nMordenkainens Magnificent Mansion\nas a level @{selected|casting-level} caster}}{{splevel=Level 7 Wizard}}{{school=Alteration, Conjuration}}Specs=[Mordenkainens-Magnificent-Mansion,MUspellL7,1H,Alteration|Conjuration]{{components=V,S,M}}{{time=[[7]]}}{{range=[[10]] yards}}{{duration=[[[@{selected|casting-level}]] hours](!rounds --target caster|@{selected|token_id}|MM-mansion|[[60*@{selected|casting-level}]]|-1|)}}{{aoe=[[300*@{selected|casting-level}]]sq.ft. - extradimensional with a [4ft x 8ft portal](!rounds --aoe @{selected|token_id}|wall|feet|30|4|1|magic)}}{{save=None}}{{reference=PHB p185}}SpellData=[w:Mordenkainens Magnificent Mansion,lv:7,sp:7,gp:100,cs:VSM]{{effects=Conjures up an extradimensional dwelling, entrance to which can be gained only at a single point of space on the plane from which the spell was cast.)}}{{materials=A miniature portal carved from ivory, a small piece of polished marble, and a tiny silver spoon. These cost 100gp to source, and are utterly destroyed when the spell is cast}}'},
						{name:'Mordenkainens-Sword',type:'MUspellL7',ct:'7',charge:'uncharged',cost:'500',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nMordenkainens Sword\nas a level @{selected|casting-level} caster}}{{splevel=Level 7 Wizard}}{{school=Evocation}}Specs=[Mordenkainens Sword,MUspellL7,1H,Evocation]{{components=V,S,M}}{{time=[[7]]}}{{range=[[[30]] yards](!rounds --aoe @{selected|token_id}|circle|yards|0|60||light|true)}}{{duration=[[[@{selected|casting-level}]] rounds](!rounds --target caster|@{selected|token_id}|Mordenkainens-sword|@{selected|casting-level}|-1|Weilding Mordenkainen\'s sword|all-for-one)}}{{aoe=Special}}{{save=None}}{{reference=PHB p185}}SpellData=[w:Mordenkainens Sword,lv:7,sp:7,gp:500,cs:VSM]{{effects=Brings into being a shimmering, swordlike plane of force. Can mentally wield this weapon (to the exclusion of all activities other than movement), causing it to move and strike as if it were being used by a fighter.\nSelect Mordenkainen\'s Sword as a weapon when prompted after casting the spell. If you don\'t see it in the list of weapons, get it using the *Attk-menu* Edit Weapons \\amp Armour command}}{{materials=A miniature platinum sword with a grip and pommel of copper and zinc, which costs 500 gp to construct, and which disappears after the spell\'s completion}}'},
						{name:'Mount',type:'MUspellL1',ct:'100',charge:'uncharged',cost:'10',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nMount\nas a level @{selected|casting-level} caster}}{{splevel=Level 1 Wizard}}{{school=Conjuration/Summoning}}Specs=[Mount,MUspellL1,1H,Conjuration-Summoning]{{components=V, S, M}}{{time=[[1]] turn}}{{range=[[10]] yds}}{{duration=[[2+@{selected|casting-level}]] hours}}{{aoe=1 mount}}{{save=None}}{{reference=PHB p136}}SpellData=[w:Mount,lv:1,sp:100,gp:10,cs:VSM]{{effects=Conjure a normal mammal to act as a mount.}}{{materials=A bit of hair from the type of animal to be conjured: avg. cost 10gp.}}'},
						{name:'Move-Earth',type:'MUspellL6',ct:'100',charge:'uncharged',cost:'1',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nMove Earth\nas a level @{selected|casting-level} caster}}{{splevel=Level 6 Wizard}}{{school=Alteration}}Specs=[Move Earth,MUspellL6,1H,Alteration]{{components=V,S,M}}{{time=Special}}{{range=[[[10*@{selected|casting-level}]] yards](!rounds --aoe @{selected|token_id}|circle|yards|0|[[20*@{selected|casting-level}]]||magic|true)}}{{duration=Permanent}}{{aoe=Special}}{{save=None}}{{reference=PHB p179}}SpellData=[w:Move Earth,lv:6,sp:100,gp:1,cs:VSM]{{effects=Moves dirt (clay, loam, sand) and its other components. If terrain features are to be moved it is necessary that an earth elemental be summoned to assist.}}'},
						{name:'Nightmare',type:'MUspellL5',ct:'100',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nNightmare\nas a level @{selected|casting-level} caster}}{{splevel=Level 5 Wizard}}{{school=Illusion/Phantasm (reversable)}}Specs=[Nightmare,MUspellL5,1H,Illusion-Phantasm]{{components=V,S}}{{time=[[1]] Turn}}{{range=Touch}}{{duration=Special}}{{aoe=[[1]]creature}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 save vs. Nightmare spell)}}{{reference=PHB p168 (Dream)}}SpellData=[w:Nightmare,lv:5,sp:100,gp:0,cs:VS]{{effects=Enables the caster, or a messenger touched by the caster, to disturb the sleep of others by sending a nightmare.}}'},
						{name:'Nondetection',type:'MUspellL3',ct:'3',charge:'uncharged',cost:'300',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nNondetection\nas a level @{selected|casting-level} caster}}{{splevel=Level 3 Wizard}}{{school=Abjuration}}Specs=[Nondetection,MUspellL3,1H,Abjuration]{{components=V,S,M}}{{time=[[3]]}}{{range=Touch}}{{duration=[[@{selected|casting-level}]] hours}}{{aoe=Creature or item touched}}{{save=None}}{{healing=[Stealth mode](!rounds --target caster|@{selected|token_id}|Nondetection|[[2*@{selected|casting-level}]]|-1|+2 prot vs evil attk \\amp save, blocks evil ctrl, blocks xtra-planar|white-tower)}}{{reference=PHB p152}}SpellData=[w:Nondetection,lv:3,sp:3,gp:300,cs:VSM]{{effects=Makes the creature or object touched undetectable by divination spells such as clairaudience, clairvoyance, locate object, ESP, and detect spells. It also prevents location by such magical items as crystal balls and ESP medallions.}}{{materials=A pinch of diamond dust worth 300 gp.}}'},
						{name:'Nystuls-Magical-Aura',type:'MUspellL1',ct:'10',charge:'uncharged',cost:'0.1',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}}{{title=@{selected|casting-name} casts\nNystul\'s Magical Aura\nas a level @{selected|casting-level} caster}}{{splevel=Level 1 Wizard}}{{school=Illusion/Phantasm}}Specs=[Nystuls Magical Aura,MUspellL1,1H,Illusion-Phantasm]{{components=V, S, M}}{{time=[[1]] round}}{{range=Touch}}{{duration=[[@{selected|casting-level}]] Days}}{{aoe=Object of up to [[5*@{selected|Casting-Level}]]lbs}}{{save=[Special](!\\amp#13;\\amp#47r 1d20 save vs. spell)}}{{reference=PHB p136}}SpellData=[w:Nystuls-Magical-Aura,lv:1,sp:10,gp:0.1,cs:VSM]{{effects=Any one item of no more than [[5*@{selected|casting-level}]] pounds weight can be given an aura that is noticed by someone using magic detection.}}{{materials=A small square of silk costing 1sp, which must be passed over the object that receives the aura.}}'},
						{name:'Obscure-Object',type:'MUspellL2',ct:'2',charge:'uncharged',cost:'1',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}}{{title=@{selected|casting-name} casts\nObscure Object\nas a level @{selected|casting-level} caster}}{{splevel=Level 2 Wizard}}{{school=Divination (reversable)}}Specs=[Obscure Object,MUspellL2,1H,Divination]{{components=V, S, M}}{{time=[[2]]}}{{range=Touch}}{{duration=[[@{selected|casting-level}]] Rounds}}{{aoe=[[1]] object}}{{save=None}}{{reference=PHB p143 (Locate Object)}}SpellData=[w:Obscure-Object,lv:2,sp:2,gp:1,cs:VSM]{{effects=This spell obscures an object from location by spell, crystal ball, or similar means for eight hours. Creatures cannot be affected by this spell.}}{{materials=A chameleon skin, cost 1gp}}'},
						{name:'Otilukes-Freezing-Sphere',type:'MUspellL6',ct:'6',charge:'uncharged',cost:'1000',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nOtilukes Freezing Sphere\nas a level @{selected|casting-level} caster}}{{splevel=Level 6 Wizard}}{{school=Alteration, Evocation}}Specs=[Otilukes Freezing Sphere,MUspellL6,1H,Alteration|Evocation]{{components=V,S,M}}{{time=[[6]]}}{{range=Special}}{{duration=Special}}{{aoe=Special}}{{save=[Special](!\\amp#13;\\amp#47;gmroll 1d20 save vs. Otiluke\'s Freezing Sphere spell)}}{{reference=PHB p180}}SpellData=[w:Otilukes Freezing Sphere,lv:6,sp:6,gp:1000,cs:VSM]{{effects=May create any of the following:\nA) **Frigid globe**. A small globe of matter at absolute zero temperature that spreads upon contact with water, or a liquid that is principally water, freezing it to a depth of 6 inches over an area equal to [[[100*@{selected|casting-level}]] sq.ft.](!rounds --aoe @{selected|token_id}|rectangle|feet|0|||cold) This ice lasts for [[[@{selected|casting-level}]] rounds](!rounds --target caster|@{selected|token_id}|OFS-frigid-globe|@{selected|casting-level}|-1|The ice sheet is in place|frozen-orb).\nThe material component is a thin sheet of crystal about an inch square.\nB) **Cold ray**. A thin ray of cold that springs from the caster\'s hand to a distance of [[[10@{selected|casting-level}]] yards](!rounds -aoe @{selected|token_id}|bolt|yards|0|[[10*@{selected|casting-level}]]|1|cold|true), inflicting [1d4+(2x@{selected|casting-level})](!\\amp#13;\\amp#47;r 1d4+2*@{selected|casting-level}) HP damage upon the first creature struck. Save vs. spell negates indicating a miss: if miss the next target in its path must save or take damage.\nThe material component is a white sapphire of not less than 1,000 gp value.\nC) **Globe of cold**. Creates a small, cool slingstone-size globe. This can be hurled, either [by hand](!rounds --aoe @{selected|token_id}|circle|yards|0|80||green) to a distance of 40 yards (short range), or as a sling bullet (do an attack with your sling). Shatters upon impact, inflicting [6d6](!\\amp13;\\amp#47;r 6d6) HP of cold damage upon creatures within [10-foot radius](!rounds --aoe @{selected|token_id}|circle|feet|0|20||cold) (save to half). Use the DMG Grenadelike Missile Table. Throw or sling within [[@{selected|casting-level}]] rounds or it shatters and causes cold damage as stated above. This timed effect can be employed against pursuers.\nThe material component is a 1,000-gp diamond.}}'},
						{name:'Otilukes-Resilient-Sphere',type:'MUspellL4',ct:'4',charge:'uncharged',cost:'101',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nOtiluke\'s Resilient Sphere\nas a level @{selected|casting-level} caster}}{{splevel=Level 4 Wizard}}{{school=Alteration, Evocation}}Specs=[Otilukes Resillient Sphere,MUspellL4,1H,Alteration|Evocation]{{components=V,S,M}}{{time=[[4]]}}{{range=[20 yards](!rounds --aoe @{selected|token_id}|circle|yards|0|40||magic|true)}}{{duration=[[@{selected|Casting-level}]] rounds}}{{aoe=[[@{selected|Casting-level}]]ft. diameter}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 saving throw vs Otiluke\'s Resilient Sphere spell)}}{{reference=PHB p160}}{{damage=[Encapsulate](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Select a victim|token_id}|Otilukes-Sphere|[[@{selected|casting-level}]]|-1|Protected? or Trapped? in Otilukes Resilient Sphere|fishing-net)}}SpellData=[w:Otilukes-Resillient-Sphere,lv:4,sp:4,gp:101,cs:VSM]{{effects=A globe of shimmering force appears that encloses the subject creature--if it is small enough to fit within the diameter of the sphere and it fails to successfully save vs. spell. Nothing can pass through the sphere, inside or out, though the subject can breathe normally.}}{{materials=A hemispherical piece of diamond (or similar hard, clear gem material) worth 1,000gp and reusable 10 times, and a matching hemispherical piece of gum arabic.}}'},
						{name:'Otilukes-Telekinetic-Sphere',type:'MUspellL8',ct:'4',charge:'uncharged',cost:'500',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nOtiluke\'s Telekinetic Sphere\nas a level @{selected|casting-level} caster}}{{splevel=Level 8 Wizard}}{{school=Evocation, Alteration}}Specs=[Otilukes Telekinetic Sphere,MUspellL8,1H,Evocation|Alteration]{{components=V,S,M}}{{time=[[4]]}}{{range=20 yards}}{{duration=[[2*@{selected|casting-level}]] rounds}}{{aoe=[@{selected|casting-level}ft. diameter sphere](!rounds --aoe @{selected|token_id}|circle|feet|60|@{selected|casting-level}||light)}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 save vs. Otiluke\'s Telekinetic Sphere spell)}}{{reference=PHB p190}}SpellData=[w:Otilukes Telekinetic Sphere,lv:8,sp:4,gp:500,cs:VSM]{{effects=Exactly the same as the 4th-level wizard spell Otiluke\'s resilient sphere, with the addition that the creatures or objects inside the globe are nearly weightless--anything contained within it weighs only 1/16 its normal weight.}}{{materials=A hemispherical piece of diamond costing 500gp, a matching piece of gum arabic, and a pair of small bar magnets, which are consumed by the spell}}'},
						{name:'Ottos-Irresistible-Dance',type:'MUspellL8',ct:'5',charge:'uncharged',cost:'0',body:'!magic --touch @{selected|token_id}|Ottos-irresistable-dance|\\amp#64;{selected|spell-duration}|-1|Dancing the night away...|trophy\n/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nOtto\'s Irresistible Dance\nas a level @{selected|casting-level} caster}}{{splevel=Level 8 Wizard}}{{school=Enchantment-Charm}}Specs=[Ottos Irresistible Dance,MUspellL8,1H,Enchantment-Charm]{{components=V}}{{time=[[5]]}}{{range=[Touch](~selected|To-Hit-Spell)}}!setattr --silent --charid @{selected|character_id} --spell-duration|{{duration=[[1d4+1]] rounds}}!!!{{aoe=Creature Touched}}{{save=None}}{{reference=PHB p190}}SpellData=[w:Ottos Irresistible Dance,lv:8,sp:5,gp:0,cs:V]{{effects=Causes the recipient to begin dancing, complete with feet shuffling and tapping.}}'},
						{name:'Paralyse',type:'MUspellL0',ct:'2',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nParalyse\nas a level @{selected|casting-level} caster}}{{splevel=Monster ability}}{{school=Alteration}}Specs=[Paralyse,MUspellL0,1H,Alteration]{{components=S}}{{time=[[2]]}}{{range=Touch}}{{duration=1d4 rounds}}{{aoe=varies}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 saving throw)}}{{damage=[Paralyse](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Select future statues|token_id}|Paralyse|\\amp#91;[\\amp#63;{Duration?|1d4}]\\amp#93;|-1|Paralysed|fishing-net) }}SpellData=[w:Paralyse,lv:0,sp:2,gp:0,cs:S]{{effects=A paralysation effect is often caused by monsters attacking the party, and is similar in effect to a \'Hold\' spell}}'},
						{name:'Part-Water',type:'MUspellL6',ct:'100',charge:'uncharged',cost:'0.5',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nPart Water\nas a level @{selected|casting-level} caster}}{{splevel=Level 6 Wizard}}{{school=Alteration}}Specs=[Part Water,MUspellL6,1H,Alteration]{{components=V,S,M}}{{time=[[1]] turn}}{{range=[[10*@{selected|casting-level}]] yards}}{{duration=[[[5*@{selected|casting-level}]] rounds](!rounds --target caster|@{selected|token_id}|Part-water|[[5*@{selected|casting-level}]]|-1|The water is parted|stopwatch)}}{{aoe=[[3*@{selected|casting-level}]]ft deep x [[[30*@{selected|casting-level}]]ft long x 20ft wide](!rounds --aoe @{selected|token_id}|rectangle|feet|[[10*@{selected|casting-level}]]|[[30*@{selected|casting-level}]]|20|magic)}}{{save=None}}{{reference=PHB p180}}SpellData=[w:Part Water,lv:6,sp:100,gp:0.5,cs:VSM]{{effects=Cause water or similar liquid to move apart, thus forming a 20-foot-wide trough. If cast under water, creates an air cylinder of appropriate length and diameter. If cast directly on a water elemental or other water-based creature, the creature receives [4d8](!\\amp#13;\\amp#47;r 4d8) damage and must save vs. spell or flee in panic for [3d4](!\\amp#13;\\amp#47;r 3d4) rounds.\nSee PHB p180 for full details}}'},
						{name:'Passwall',type:'MUspellL5',ct:'5',charge:'uncharged',cost:'0.01',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nPasswall\nas a level @{selected|casting-level} caster}}{{splevel=Level 5 Wizard}}{{school=Alteration}}Specs=[Passwall,MUspellL5,1H,Alteration]{{components=V,S,M}}{{time=[[5]]}}{{range=[[30]] yards}}{{duration=1 hour + [[@{selected|casting-level}]] turns}}{{aoe=[5 x 8 x 10ft](!rounds --aoe @{selected|token_id}|rectangle|feet|90|10|5|light)}}{{save=None}}{{reference=PHB p171}}SpellData=[w:Passwall,lv:5,sp:5,gp:0.01,cs:VSM]{{effects=Enables the spellcaster to open a passage through wooden, plaster, or stone walls, but not other materials. The spellcaster and any associates can simply walk through.}}{{materials=A pinch of sesame seeds worth 1cp}}'},
						{name:'Permanency',type:'MUspellL8',ct:'20',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casting\nPermanency\nas a level @{selected|casting-level} caster}}{{splevel=Level 8 Wizard}}{{school=Alteration}}Specs=[Permanency,MUspellL8,1H,Alteration]{{components=V,S}}{{time=[[2]] rounds}}{{range=Special}}{{duration=Permanent}}{{aoe=Special}}{{save=None}}{{reference=PHB p190}}SpellData=[w:Permanency,lv:8,sp:20,gp:0,cs:VS]{{effects=This spell affects the duration of certain other spells, making the duration permanent.}}'},
						{name:'Permanent-Illusion',type:'MUspellL6',ct:'6',charge:'uncharged',cost:'0.02',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nPermanent Illusion\nas a level @{selected|casting-level} caster}}{{splevel=Level 6 Wizard}}{{school=Illusion-Phantasm}}Specs=[Permanent Illusion,MUspellL6,1H,Illusion-Phantasm]{{components=V,S,M}}{{time=[[6]]}}{{range=[[10*@{selected|casting-level}]] yards}}{{duration=Permanent}}{{aoe=[[[10*[[2+@{selected|casting-level}]] ]]ft. cube](!rounds --aoe @{selected|token_id}|square|feet|[[10*@{selected|casting-level}]]|[[10*(2+@{selected|casting-level})]]||magic)}}{{save=[Special](!\\amp#13;\\amp#47;gmroll 1d20 save vs. Permanent Illusion spell)}}{{reference=PHB p180}}SpellData=[w:Permament Illusion,lv:6,sp:6,gp:0.02,cs:VSM]{{effects=Creates an illusion with visual, auditory, olfactory, and thermal elements.}}{{materials=A bit of fleece, worth 2cp}}'},
						{name:'Phantasmal-Force',type:'MUspellL1',ct:'1',charge:'uncharged',cost:'0.02',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nPhantasmal Force\nas a level @{selected|casting-level} caster}}{{splevel=Level 1 Wizard}}{{school=Illusion/Phantasm}}Specs=[Phantasmal Force,MUspellL1,1H,Illusion-Phantasm]{{components=V,S, M}}{{time=[[1]]}}{{range=[[60+(10*@{selected|Casting-Level})]] yds.}}{{duration=Special}}{{aoe=[[[400+(100*@{selected|casting-level})]]sq. ft.](!rounds --aoe @{selected|token_id}|square|feet|[[180+(30*@{selected|Casting-Level})]]|||magic)}}{{save=[Special](!\\amp#13;\\amp#47;gmroll 1d20 save vs. Phantasmal Force)}}{{reference=PHB p137}}SpellData=[w:Phantasmal-Force,lv:1,sp:1,gp:0.02,cs:VSM]{{effects=Creates the illusion of any object, creature, or force, as long as it is within the boundaries of the spell\'s area of effect. The illusion is visual and does not create sound, smell, or temperature.}}{{materials=A bit of fleece, costing 2cp.}}'},
						{name:'Phantasmal-Killer',type:'MUspellL4',ct:'4',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nPhantasmal Killer\nas a level @{selected|casting-level} caster}}{{splevel=Level 4 Wizard}}{{school=Illusion/Phantasm}}Specs=[Phantasmal Killer,MUspellL4,1H,Illusion-Phantasm]{{components=V, S}}{{time=[[4]]}}{{duration=[[@{selected|casting-level}]] rounds}}{{aoe=[[1]] creature}}{{save=Special}}{{reference=PHB p160}}{{range=[[[5*@{selected|casting-level}]] yards](!rounds --aoe @{selected|token_id}|circle|yards|0|[[10*@{selected|casting-level}]]||acid|true)}}{{damage=[Designate target](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Who is the unfortunate victim?|token_id}|@{selected|casting-level}|-1|It\'s chasing me! Got to get away!|skull)}}SpellData=[w:Phantasmal-Killer,lv:4,sp:4,gp:0,cs:VS]{{effects=Phantasm is THAC0 [[17]]. If phantasm hits, it kills. }}'},
						{name:'Phantom-Steed',type:'MUspellL3',ct:'100',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nPhantom Steed\nas a level @{selected|casting-level} caster}}{{splevel=Level 3 Wizard}}{{school=Conjuration/Phantasm}}Specs=[Phantom Steed,MUspellL3,1H,Conjuration-Summoning|Illusion-Phantasm]{{components=V, S}}{{time=[[1]] turn}}{{range=Touch}}{{duration=[[@{selected|casting-level}]] hours}}{{aoe=Special}}{{save=None}}{{reference=PHB p152}}SpellData=[w:Phantom-Steed,lv:3,sp:100,gp:0,cs:VS]{{effects=Phantom horse, AC2, HP [[7+@{selected|casting-level}]]. Move [[4*@{selected|casting-level}]]. Powers vary with the level of caster.}}'},
						{name:'Phase-Door',type:'MUspellL7',ct:'7',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nPhase Door\nas a level @{selected|casting-level} caster}}{{splevel=Level 7 Wizard}}{{school=Alteration}}Specs=[Phase Door,MUspellL7,0H,Alteration]{{components=V}}{{time=[[7]]}}{{range=Touch}}{{duration=[[floor(@{selected|casting-level}/2)]] uses}}{{aoe=[5 x 8 x 10ft](!rounds --aoe @{selected|token_id}|rectangle|feet|0|10|5|light)}}{{save=None}}{{reference=PHB p185}}SpellData=[w:Phase Door,lv:7,sp:7,gp:0,cs:V]{{effects=The wizard attunes his body, and a section of wall is affected as if by a *passwall* spell.}}'},
						{name:'Plant-Growth',type:'MUspellL4',ct:'4',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casting\nPlant Growth\nas a level @{selected|casting-level} caster}}{{splevel=Level 4 Wizard}}{{school=Alteration}}Specs=[Plant Growth,MUspellL4,1H,Alteration]{{components=V,S}}{{time=[[4]]}}{{range=[[10*@{selected|casting-level}]] yards}}{{duration=Permanent}}{{aoe=[[[@{selected|casting-level}*@{selected|casting-level}]] x 100sq.ft.](!rounds --aoe @{selected|token_id}|rectangle|feet|[[30*@{selected|casting-level}]]|||light)}}{{save=None}}{{reference=PHB p161}}SpellData=[w:Plant Growth,lv:4,sp:4,gp:0,cs:VS]{{effects=Causes normal vegetation to grow, entwine, and entangle to form a thicket or jungle that creatures must hack or force a way through at a movement rate of 1 per round (or 2 if the creatures are larger than man size). }}'},
						{name:'Polymorph-Any-Object',type:'MUspellL8',ct:'10',charge:'uncharged',cost:'5',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casting\nPolymorph Any Object\nas a level @{selected|casting-level} caster}}{{splevel=Level 8 Wizard}}{{school=Alteration}}Specs=[Polymorph Any Object,MUspellL8,1H,Alteration]{{components=V,S,M}}{{time=[[1]] round}}{{range=[[[5*@{selected|casting-level}]] yards](!rounds --aoe @{selected|token_id}|circle|yards|0|[[5*@{selected|casting-level}]]||magic)}}{{duration=Variable}}{{aoe=Special}}{{save=[Special](!\\amp#13;\\amp#47;gmroll 1d20 save vs. Polymorph Any Object spell)}}{{reference=PHB p191}}SpellData=[w:Polymorph Any Object,lv:8,sp:10,gp:5,cs:VSM]{{effects=Changes one object or creature into another.}}'},
						{name:'Polymorph-Other',type:'MUspellL4',ct:'4',charge:'uncharged',cost:'0.11',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casting\nPolymorph Other\nas a level @{selected|casting-level} caster}}{{splevel=Level 4 Wizard}}{{school=Alteration}}Specs=[Polymorph Other,MUspellL4,1H,Alteration]{{components=V,S,M}}{{time=[[4]]}}{{range=[[[5*@{selected|casting-level}]] yards](!rounds --aoe @{selected|token_id}|circle|yards|0|[[5*@{selected|casting-level}]]||magic|true)}}{{duration=Permanent}}{{aoe=1 creature}}{{save=None}}{{reference=PHB p161}}{{reference=PHB p161}}SpellData=[w:Minor Globe of Invulnerability,lv:4,sp:4,gp:0.11,cs:VSM]{{effects=Completely alters the form and ability, and possibly the personality and mentality, of the recipient. Must succeed on a system shock (see PHB Table 3) roll to see if it survives. Then it must make a special Intelligence check to see if it retains its personality (PHB description p161).}}{{materials=A caterpillar cocoon, costing 1sp to source}}'},
						{name:'Polymorph-Self',type:'MUspellL4',ct:'4',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nPolymorph Self\nas a level @{selected|casting-level} caster}}{{splevel=Level 4 Wizard}}{{school=Alteration}}Specs=[Polymorph Self,MUspellL4,0H,Alteration]{{components=V}}{{time=[[4]]}}{{range=[[0]]}}{{duration=[[2*@{selected|casting-level}]] turns}}{{aoe=The caster}}{{save=None}}{{reference=PHB p161}}{{healing=[Polymorph](!rounds --target caster|@{selected|token_id}|Polymorph-Self|[[2*@{selected|casting-level}]]|-1|Polymorphed, normal attk+dmg+spells, can change shape as desired|strong)}}SpellData=[w:Polymorph-Self,lv:4,sp:4,gp:0,cs:V]{{effects=Assume the form of any creature (not noncorporeal) from small as a wren to as large as a hippopotamus.}}'},
						{name:'Power-Word-Blind',type:'MUspellL8',ct:'1',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nPower Word, Blind\nas a level @{selected|casting-level} caster}}{{splevel=Level 8 Wizard}}{{school=Conjuration-Summoning}}Specs=[Power Word Blind,MUspellL8,0H,Conjuration-Summoning]{{components=V}}{{time=[[1]]}}{{range=[[5*@{selected|casting-level}]] yards}}{{duration=[Special](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Who is blinded?|token_id}|Power-Word-Blind|\\amp#63;{How many Hit Dice?|25 or less,99|26-50,[[10*[[1d4+1]]]]|51-100,[[1d4+1]]}|-1|You are blinded, -4 attk \\amp save|bleeding-eye)}}{{aoe=[15ft radius](!rounds --aoe @{selected|token_id}|circle|yards|[[5*@{selected|casting-level}]]|10||dark)}}{{save=None}}{{reference=PHB p191}}SpellData=[w:Power Word Blind,lv:8,sp:1,gp:0,cs:V]{{effects=One or more creatures within the area of effect become sightless.}}'},
						{name:'Power-Word-Kill',type:'MUspellL9',ct:'1',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nPower Word, Kill\nas a level @{selected|casting-level} caster}}{{splevel=Level 9 Wizard}}{{school=Conjuration-Summoning}}Specs=[Power Word Kill,MUspellL9,0H,Conjuration-Summoning]{{components=V}}{{time=[[1]]}}{{range=[[5*(floor(@{selected|casting-level}/2)]] yards}}{{duration=Permanent}}{{aoe=[10ft radius](!rounds --aoe @{selected|token_id}|circle|feet|[[15*floor(@{selected|casting-level}/2)]]|20||dark)}}{{save=None}}{{reference=PHB p196}}SpellData=[w:Power Word Kill,lv:9,sp:1,gp:0,cs:V]{{effects=One or more creatures of any type within the spell range and area of effect are slain.}}'},
						{name:'Power-Word-Stun',type:'MUspellL7',ct:'1',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nPower Word, Stun\nas a level @{selected|casting-level} caster}}{{splevel=Level 7 Wizard}}{{school=Conjuration-Summoning}}Specs=[Power Word Stun,MUspellL7,0H,Conjuration-Summoning]{{components=V}}{{time=[[1]]}}{{range=[[[5*@{selected|casting-level}]] yards](!rounds --aoe @{selected|token_id}|circle|yards|0|[[10*@{selected|casting-level}]]||magic)}}{{duration=Special}}{{aoe=1 creature}}{{save=None}}{{reference=PHB p185}}SpellData=[w:Power Word Stun,lv:7,sp:1,gp:0,cs:V]{{effects=Any creature of the wizard\'s choice is stunned--reeling and unable to think coherently or act--for a duration dependent on its current hit points.}}'},
						{name:'Prismatic-Sphere',type:'MUspellL9',ct:'7',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nPrismatic Sphere\nas a level @{selected|casting-level} caster}}{{splevel=Level 9 Wizard}}{{school=Abjuration, Conjuration-Summoning}}Specs=[Prismatic Sphere,MUspellL9,0H,Abjuration|Conjuration-Summoning]{{components=V}}{{time=[[7]]}}{{range=[[0]]}}{{duration=[[[@{selected|casting-level}]] turns](!rounds --target caster|@{selected|token_id}|Prismatic-Sphere|[[10*@{selected|casting-level}]]|-1|Protected by a Prismatic Sphere|white-tower)}}{{aoe=[10ft radius](!rounds --aoe @{selected|token_id}|circle|feet|0|20||magic|true)}}{{save=[Special](\\amp#13;\\amp#47;gmroll 1d20 save vs. Prismatic Sphere spell)}}{{reference=PHB p196}}SpellData=[w:Prismatic Sphere,lv:9,sp:7,gp:0,cs:V]{{effects=Conjure up an immobile, opaque globe of shimmering, multicolored light to surround the wizard, giving protection from all forms of attack.}}'},
						{name:'Prismatic-Spray',type:'MUspellL7',ct:'7',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nPrismatic Spray\nas a level @{selected|casting-level} caster}}{{splevel=Level 7 Wizard}}{{school=Conjuration-Summoning}}Specs=[Prismatic Spray,MUspellL7,1H,Conjuration-Summoning]{{components=V,S}}{{time=[[7]]}}{{range=[[0]]}}{{duration=Instantaneous}}{{aoe=[70 x 15ft. spray](!rounds --aoe @{selected|token_id}|cone|feet|0|70|15|magic)}}{{save=[Spacial](!\\amp#13;\\amp#47;gmroll 1d20 save vs. Prismatic Spray spell)}}{{reference=PHB p186}}SpellData=[w:Prismatic Spray,lv:7,sp:7,gp:0,cs:VS]{{effects=Causes seven shimmering, multicolored rays of light to flash from his hand in a triangular spray. To determine which ray strikes a creature, roll [1d8](!\\amp#13;\\amp#47;r 1d8) and consult the table on PHB p186.}}'},
						{name:'Prismatic-Wall',type:'MUspellL8',ct:'7',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casting\nPrismatic Wall\nas a level @{selected|casting-level} caster}}{{splevel=Level 8 Wizard}}{{school=Conjuration-Summoning}}Specs=[Prismatic Wall,MUspellL8,1H,Conjuration-Summoning]{{components=V,S}}{{time=[[7]]}}{{range=[[10]] yards}}{{duration=[[@{selected|casting-level}]] turns}}{{aoe=[[2*@{selected|casting-level}]]ft high x [[[4*@{selected|casting-level}]]ft long](!rounds --aoe @{selected|token_id}|wall|feet|30|[[4*@{selected|casting-level}]]|2|magic)}}{{save=[Special](!\\amp#13;\\amp#47;gmroll 1d20 save vs. Prismatic Wall spell)}}{{damage=[Blind \\lt8HD creatures in 20ft](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Who is too close?|token_id}|Prismatic-Wall-Blind|\\amp#91;[2d4]\\amp#93;|-1|Blinded by the colors, -4 attk \\amp AC|bleeding-eye)}}{{reference=PHB p191}}SpellData=[w:Prismatic Wall,lv:8,sp:7,gp:0,cs:VS]{{effects=Conjure a vertical, opaque wall--a shimmering, multicolored plane of light that protects him from all forms of attack.}}'},
						{name:'Programmed-Illusion',type:'MUspellL6',ct:'6',charge:'uncharged',cost:'0.02',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nProgrammed Illusion\nas a level @{selected|casting-level} caster}}{{splevel=Level 6 Wizard}}{{school=Illusion-Phantasm}}Specs=[Programmed Illusion,MUspellL6,1H,Illusion-Phantasm]{{components=V,S,M}}{{time=[[6]]}}{{range=[[10*@{selected|casting-level}]] yards}}{{duration=Special}}{{aoe=[[[10*[[2+@{selected|casting-level}]] ]]ft. cube](!rounds --aoe @{selected|token_id}|square|feet|[[10*@{selected|casting-level}]]|[[10*(2+@{selected|casting-level})]]||magic)}}{{save=[Special](!\\amp#13;\\amp#47;gmroll 1d20 save vs. Programmed Illusion spell)}}{{reference=PHB p180}}SpellData=[w:Programmed Illusion,lv:6,sp:6,gp:0.02,cs:VSM]{{effects=Creates a spectral force spell that activates upon command or when a specific condition occurs. The illusion has visual, auditory, olfactory, and thermal elements.}}{{materials=A bit of fleece, costing 2cp}}'},
						{name:'Project-Image',type:'MUspellL6',ct:'6',charge:'uncharged',cost:'0.5',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nProject Image\nas a level @{selected|casting-level} caster}}{{splevel=Level 6 Wizard}}{{school=Alteration, Illusion-Phantasm}}Specs=[Project Image,MUspellL6,1H,Alteration|Illusion-Phantasm]{{components=V,S,M}}{{time=[[6]]}}{{range=[[[10*@{selected|casting-level}]] yards](!rounds --aoe @{selected|token_id}|circle|yards|0|[[20*@{selected|casting-level}]]||light|true)}}{{duration=[[[@{selected|casting-level}]] rounds](!rounds --target caster|@{selected|token_id}|Project-image|@{selected|casting-level}|-1|Projecting an image|aura)}}{{aoe=Special}}{{save=None}}{{reference=PHB p180}}SpellData=[w:Project Image,lv:6,sp:6,gp:0.5,cs:VSM]{{effects=Creates a nonmaterial duplicate of himself, projecting it to any spot within spell range.}}{{materials=A small replica (doll) of the wizard, costing 10gp, reusable 20 times}}'},
						{name:'Protection-From-Good',type:'MUspellL1',ct:'1',charge:'uncharged',cost:'0.5',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nProtection from Good\nas a level @{selected|casting-level} caster}}{{splevel=Level 1 Wizard}}{{school=Abjuration (reversable)}}Specs=[Protection from Good,MUspellL1,1H,Abjuration]{{components=V,S, M}}{{time=[[1]]}}{{range=Touch}}{{duration=[[2*@{selected|casting-level}]] rounds}}{{aoe=Creature touched}}{{save=None}}{{reference=PHB p137 (Protection from Evil)}}{{healing=[Become Protected](!rounds --target caster|@{selected|token_id}|Prot-from-Good|[[2*@{selected|casting-level}]]|-1|+2 prot vs good attk \\amp save, blocks good ctrl, blocks xtra-planar|white-tower)}}SpellData=[w:Protection-from-Good,lv:1,sp:1,gp:0.5,cs:VSM]{{effects=Creates a magical barrier around the recipient at a distance of 1 foot which moves with the recipient and has three major effects: attacks by \\amp saves caused by good creatures improved; possession \\amp mental attacks by good creatures blocked; and prevents bodily contact by extraplanar or conjured creatures.}}{{materials=Trace a 3-foot-diameter circle on the floor (or ground) with powdered iron costing 5sp.}}'},
						{name:'Protection-from-Cantrips',type:'MUspellL2',ct:'10',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nProtection from Cantrips\nas a level @{selected|casting-level} caster}}{{splevel=Level 2 Wizard}}{{school=Abjuration}}Specs=[Protection from Cantrips,MUspellL2,1H,Abjuration]{{components=V,S}}{{time=[[1]] round}}{{range=touch}}{{duration=[[5+@{selected|Casting-level}]] hours}}{{aoe=Creature or Object touched}}{{save=None}}{{healing=[Protect](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Select who to Protect|token_id}|Protection-from-Cantrips|99|0|Protected from Cantrip spells|white-tower)}}{{reference=PHB p144}}SpellData=[w:Protection-from-Cantrips,lv:2,sp:10,gp:0,cs:VS]{{effects=The wizard receives immunity to the effects of cantrips cast by other wizards, apprentices, or creatures that use the *Cantrip* spell.}}'},
						{name:'Protection-from-Evil',type:'MUspellL1',ct:'1',charge:'uncharged',cost:'10',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nProtection from Evil\nas a level @{selected|casting-level} caster}}{{splevel=Level 1 Wizard}}{{school=Abjuration (reversable)}}Specs=[Protection from Evil,MUspellL1,1H,Abjuration]{{components=V,S, M}}{{time=[[1]]}}{{range=Touch}}{{duration=[[2*@{selected|casting-level}]] rounds}}{{aoe=Creature touched}}{{save=None}}{{healing=[Become Protected](!rounds --target single|@{selected|token_id}|Prot-from-Evil|[[2*@{selected|casting-level}]]|-1|+2 prot vs evil attk \\amp save, blocks evil ctrl, blocks xtra-planar|white-tower)}}{{reference=PHB p137}}SpellData=[w:Protection-from-Evil,lv:1,sp:1,gp:10,cs:VSM]{{effects=Creates a magical barrier around the recipient at a distance of 1 foot which moves with the recipient and has three major effects: attacks by \\amp saves caused by evil creatures improved; possession \\amp mental attacks by evil creatures blocked; and prevents bodily contact by extraplanar or conjured creatures.}}{{materials=Trace a 3-foot-diameter circle on the floor (or ground) with powdered silver worth 100sp in total.}}'},
						{name:'Protection-from-Evil-10ft-radius',type:'MUspellL3',ct:'3',charge:'uncharged',cost:'10',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nProtection from Evil, 10ft radius\nas a level @{selected|casting-level} caster}}{{splevel=Level 3 Wizard}}{{school=Abjuration (reversable)}}Specs=[Protection from Evil 10ft radius,MUspellL3,1H,Abjuration]{{components=V,S, M}}{{time=[[3]]}}{{range=Touch}}{{duration=[[2*@{selected|casting-level}]] rounds}}{{aoe=10ft around Creature touched}}{{save=None}}{{healing=[Become Protected](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Who to centre protection on?|token_id}|Prot-from-Evil-10ft|[[2*@{selected|casting-level}]]|-1|+2 prot vs evil attk \\amp save, blocks ctrl, blocks xtra-planar in a 10ft radius|white-tower)}}{{reference=PHB p152}}SpellData=[w:Protection-from-Evil-10ft-radius,lv:3,sp:3,gp:10,cs:VSM]{{effects=Creates a magical barrier around the recipient at a distance of 10 feet which moves with the recipient and has three major effects: attacks by \\amp saves caused by evil creatures improved; possession \\amp mental attacks by evil creatures blocked; and prevents bodily contact by extraplanar or conjured creatures.}}{{materials=Trace a 3-foot-diameter circle on the floor (or ground) with powdered silver worth 100sp in total.}}'},
						{name:'Protection-from-Good-10ft-radius',type:'MUspellL1',ct:'3',charge:'uncharged',cost:'0.5',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nProtection from Good, 10ft radius\nas a level @{selected|casting-level} caster}}{{splevel=Level 3 Wizard}}{{school=Abjuration (reversable)}}Specs=[Protection from Good 10ft radius,MUspellL1,1H,Alteration]{{components=V,S, M}}{{time=[[3]]}}{{range=Touch}}{{duration=[[2*@{selected|casting-level}]] rounds}}{{aoe=10ft around Creature touched}}{{save=None}}{{healing=[Become Protected](!rounds --target single|@{selected|token_id}|Prot-from-Good-10ft|[[2*@{selected|casting-level}]]|-1|+2 prot vs good attk \\amp save, blocks ctrl, blocks xtra-planar in a 10ft radius|white-tower)}}{{reference=PHB p152 (Prot. from Evil 10ft radius)}}SpellData=[w:Protection-from-Good-10ft-radius,lv:3,sp:3,gp:0.5,cs:VSM]{{effects=Creates a magical barrier around the recipient at a distance of 10 feet which moves with the recipient and has three major effects: attacks by \\amp saves caused by evil creatures improved; possession \\amp mental attacks by evil creatures blocked; and prevents bodily contact by extraplanar or conjured creatures.}}{{materials=Trace a 3-foot-diameter circle on the floor (or ground) with powdered iron worth 5sp.}}'},
						{name:'Protection-from-Normal-Missiles',type:'MUspellL3',ct:'3',charge:'uncharged',cost:'1',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nProtection From Normal Missiles\nas a level @{selected|casting-level} caster}}{{splevel=Level 3 Wizard}}{{school=Abjuration}}Specs=[Protection from Normal Missiles,MUspellL3,1H,Abjuration]{{components=VSM}}{{time=3}}{{range=Touch}}{{duration=[[@{selected|casting-level}]] turns}}{{aoe=Creature touched}}{{save=None}}{{reference=PHB p152}}SpellData=[w:Protection from Normal Missiles,lv:3,sp:3,gp:1,cs:VSM]{{healing=[Resist Missiles](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Who will be protected?|token_id}|Prot-norm-missiles|[[10*@{selected|casting-level}]]|-1|Protected from non-magical small missiles \\amp less damage from large or missiles with magic plusses|white-tower)}}{{effects=Bestows total invulnerability to hurled and projected missiles and causes a reduction of 1 from each die of damage (but no die inflicts less than 1 point of damage) inflicted by large or magical missiles}}{{materials=A piece of rare tortoise or turtle shell, costing 1gp to source}}'},
						{name:'Pyrotechnics',type:'MUspellL2',ct:'2',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nPyrotechnics\nas a level @{selected|casting-level} caster}}{{splevel=Level 2 Wizard}}{{school=Alteration}}Specs=[Pyrotechnics,MUspellL2,1H,Alteration]{{components=V, S, M}}{{time=[[2]]}}{{range=[120 yards](!rounds --aoe @{selected|token_id}|circle|yards|0|240||lightning|true)}}{{duration=Special}}{{aoe=[[1]] fire source}}{{save=[Special](!\\amp#13;\\amp#47;gmroll 1d20 saving throw vs. Pyrotechnics spell)}}{{reference=PHB p144}}SpellData=[w:Pyrotechnics,lv:2,sp:2,gp:0,cs:VSM]{{effects=A pyrotechnics spell draws on an existing fire source to produce one of two effects, at the option of the caster: [Fireworks](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Select a target|token_id}|Pyrotechnics-fireworks|\\amp#63;{Duration if fireworks?|\\amp#91;[1d4+1]\\amp#93;}|-1|\'Temporarily blinded by fireworks\'|bleeding-eye) that lasts one round, or [Smoke](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Select a target|token_id}|Pyrotechnics-smoke|@{selected|casting-level}|-1|\'Cannot see more than 2ft in smoke\'|edge-crack) to arise from the source and form a choking cloud that lasts for [[@{selected|casting-level}]] rounds.}}{{materials=One fire source within a 20-foot cube, which is immediately extinguished. An extremely large fire used as a source might be only partially extinguished. Magical fires are not extinguished, although a fire-based creature (such as a fire elemental) used as a source suffers 1 point of damage per caster level.}}'},
						{name:'Rainbow-Pattern',type:'MUspellL4',ct:'4',charge:'uncharged',cost:'0.2',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casting\nRainbow Pattern\nas a level @{selected|casting-level} caster}}{{splevel=Level 4 Wizard}}{{school=Alteration, Illusion-Phantasm}}Specs=[Rainbow Pattern,MUspellL4,1H,Alteration|Illusion-Phantasm]{{components=S,M}}{{time=[[4]]}}{{range=[[10]] yards}}{{duration=Special}}{{aoe=[30ft. cube](!rounds --aoe @{selected|token_id}|square|yards|10|10||magic)}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 save vs. Rainbow Pattern)}}{{reference=PHB p162}}{{damage=[Fascinate them](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Who to fascinate?|token_id}|Rainbow-pattern|99|0|Pretty rainbow... must follow the pretty rainbow...|chained-heart)}}SpellData=[w:Rainbow Pattern,lv:4,sp:4,gp:0.2,cs:SM]{{effects=Creates rainbow-hued band of interweaving patterns. Creature caught in it may become fascinated. Persists without attention for [1d3](!\\amp#13;\\amp#47;r 1d3) rounds.}}{{materials=The wizard need not utter a sound, but he must gesture appropriately while holding a crystal prism and the material component, a piece of phosphor, total cost 2sp}}'},
						{name:'Raise-Water',type:'MUspellL6',ct:'100',charge:'uncharged',cost:'1',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nRaise Water\nas a level @{selected|casting-level} caster}}{{splevel=Level 6 Wizard}}{{school=Alteration (Reversable)}}Specs=[Raise Water,MUspellL6,1H,Alteration]{{components=V,S,M}}{{time=[[1]] turn}}{{range=[[80]] yards}}{{duration=[[5*@{selected|casting-level}]] rounds}}{{aoe=[[[10*@{selected|casting-level}]]ft. square](!rounds --aoe @{selected|token_id}|square|feet|240|[[10*@{selected|casting-level}]]||cold)}}{{save=None}}{{reference=PHB p178}}SpellData=[w:Raise Water,lv:6,sp:100,gp:1,cs:VSM]{{effects=Causes water or similar fluids to return to their highest natural level: spring flood, high tide, etc.}}{{materials=A small vial (costing 1gp) of water which is thrown into the water}}'},
						{name:'Rarys-Mnemonic-Enhancer',type:'MUspellL4',ct:'100',charge:'uncharged',cost:'200',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casting\nRary\'s Mnemonic Enhancer\nas a level @{selected|casting-level} caster}}{{splevel=Level 4 Wizard}}{{school=Alteration}}Specs=[Rarys Mnemonic Enhancer,MUspellL4,1H,Alteration]{{components=V,S,M}}{{time=[[1]] turn}}{{range=[[0]]}}{{duration=1 day}}{{aoe=The caster}}{{save=None}}{{reference=PHB p162}}SpellData=[w:Rarys Mnemonic Enhancer,lv:4,sp:100,gp:200,cs:VSM]{{effects=Memorize, or retain the memory of, three additional spell levels. Two options: **A) Memorize additional spells.** or **B) Retain memory of any spell** (within the level limits)}}{{materials=A piece of string, an ivory plaque of at least 100gp value, and ink consisting of squid secretion with either black dragon\'s blood or giant slug digestive juice, costing another 100gp to source. These disappear when the spell is cast}}'},
						{name:'Ray-of-Enfeeblement',type:'MUspellL2',ct:'2',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nRay of Enfeeblement\nas a level @{selected|casting-level} caster}}{{splevel=Level 2 Wizard}}{{school=Enchantment/Charm}}Specs=[Ray of Enfeeblement,MUspellL2,1H,Enchantment-Charm]{{components=V,S}}{{time=[[2]]}}{{range=[[[10+(5*@{selected|casting-level})]] yards](!rounds --aoe @{selected|token_id}|bolt|feet|0|[[30+(15*@{selected|casting-level})]]|5|lightning)}}{{duration=[[@{selected|casting-level}]] rounds}}{{aoe=1 creature}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 saving throw)}}{{reference=PHB p145}}SpellData=[w:Ray-of-Enfeeblement,lv:2,sp:2,gp:0,cs:VS]{{effects=[Humans, demihumans, and humanoids](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Select a target|token_id}|Ray-of-Enfeeblement|@{selected|casting-level}|-1|\'Enfeebled, effective strength 5\'|radioactive) of man-size or less are reduced to an effective Strength of 5, losing all Strength bonuses and suffering an attack roll penalty of -2 and a -1 penalty to damage. [Other creatures](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Select a target|token_id}|Enfeeble-monster|@{selected|casting-level}|-1|\'Enfeebled, -2 on attk + -1 per dmg die\'|radioactive) suffer a penalty of -2 on attack rolls. Furthermore, they have a -1 penalty for each die of damage they inflict. (But no damage roll can inflict less than 1 point per die of damage.)\nYour DM will determine any other effects appropriate to the affected creature.}}'},
						{name:'Read-Magic',type:'MUspellL1',ct:'10',charge:'uncharged',cost:'0.1',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nRead Magic\nas a level @{selected|casting-level} caster}}{{splevel=Level 1 Wizard}}{{school=Divination}}Specs=[Read Magic,MUspellL1,1H,Divination]{{components=V, S, M}}{{time=[[1]] round}}{{range=[[0]]}}{{duration=[[2*@{selected|casting-level}]] rounds/pages}}{{aoe=Special}}{{save=None}}{{reference=PHB p137}}SpellData=[w:Read-Magic,lv:1,sp:10,gp:0.1,cs:VSM]{{effects=Read inscriptions otherwise unintelligible.}}{{materials=a clear crystal or mineral prism costing 10gp, which is not expended and can be used 100 times before becoming too scratched \\amp worn}}'},
						{name:'Reduce',type:'MUspellL1',ct:'1',charge:'uncharged',cost:'0.01',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}}{{title=@{selected|casting-name} casts\nReduce\nas a level @{selected|casting-level} caster}}{{splevel=Level 1 Wizard (reversible)}}{{school=Alteration}}Specs=[Reduce,MUspellL1,1H,Alteration]{{components=V, S, M}}{{time=[[1]]}}{{range=[[[5*@{selected|casting-level}]] yards](!rounds --aoe @{selected|token_id}|circle|yards|0|[[10*@{selected|casting-level}]]||magic|true)}}{{duration=[[5*@{selected|casting-level}]] Rounds}}{{aoe=1 creature or object no larger than [[10*@{selected|casting-level}]]cu.ft}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 saving throw vs. spell Reduce)}}{{reference=PHB p133 (Enlarge)}}{{damage=[Reduce it](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Select a victim|token_id}|Reduce|[[5*@{selected|casting-level}]]|-1|Reduced, Damage \\amp#214; [[1+(@{selected|casting-level}/10)]]|edge-crack)}}SpellData=[w:Reduce,lv:1,sp:1,gp:0.01,cs:VSM]{{effects=Negates an *Enlarge* spell or target reduced by 90% (9 steps) then by 1ft steps till less than 1ft, then by 1 inch steps, then by 1/10th inch steps etc. 1 step per level = [[@{selected|casting-level}]] steps.}}{{materials=A pinch of powdered iron worth 1cp}}'},
						{name:'Reincarnation',type:'MUspellL6',ct:'100',charge:'uncharged',cost:'0.5',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nReincarnation\nas a level @{selected|casting-level} caster}}{{splevel=Level 6 Wizard}}{{school=Necromancy}}Specs=[Reincarnation,MUspellL6,1H,Necromancy]{{components=V,S,M}}{{time=[[1]] turn}}{{range=Touch}}{{duration=Permanent}}{{aoe=Person Touched}}{{save=None}}{{reference=PHB p181}}SpellData=[w:Reincarnation,lv:6,sp:100,gp:0.5,cs:VSM]{{effects=Bring back to life a person who died no more than [[@{selected|casting-level}]] days ago. The essence of the dead person is transferred to another body, possibly one very different from his former body.}}{{materials=A small drum (costing 10gp to procure, and reusable 20 times) and a drop of blood}}'},
						{name:'Remove-Curse',type:'MUspellL4',ct:'4',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nRemove Curse\nas a level @{selected|casting-level} caster}}{{splevel=Level 4 Wizard (reversible)}}{{school=Abjuration}}Specs=[Remove Curse,MUspellL4,1H,Abjuration]{{components=V, S}}{{time=[[4]]}}{{range=Touch}}{{duration=Permanent}}{{aoe=Special}}{{save=None}}{{reference=PHB p162}}SpellData=[w:Remove-Curse,lv:4,sp:4,gp:0,cs:VS]{{effects=The wizard is usually able to remove a curse--whether it is on an object, on a person, or in the form of some undesired sending or evil presence.}}'},
						{name:'Repulsion',type:'MUspellL6',ct:'6',charge:'uncharged',cost:'2',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nRepulsion\nas a level @{selected|casting-level} caster}}{{splevel=Level 6 Wizard}}{{school=Abjuration}}Specs=[Repulsion,MUspellL6,1H,Abjuration]{{components=V,S,M}}{{time=[[6]]}}{{range=[[0]]}}{{duration=[[[ceil(@{selected|casting-level}/2)]] rounds](!rounds --target caster|@{selected|token_id}|Repulsion|[[ceil(@{selected|casting-level}/2)]]|-1|Repelling attackers|aura)}}{{aoe=[[[10*@{selected|casting-level}]]ft x 10ft](!rounds --aoe @{selected|token_id}|bolt|feet|0|[[10*@{selected|casting-level}]]|10|magic)}}{{save=None}}{{reference=PHB p181}}SpellData=[w:Repulsion,lv:6,sp:6,gp:2,cs:VSM]{{effects=Cause all creatures in the area of effect to move directly away from the caster at the speed of the creature attempting to move toward them.}}{{materials=A pair of small magnetized iron bars attached to two small canine statuettes, one ivory and one ebony. Total cost 20gp, reusable 10 times}}'},
						{name:'Reverse-Gravity',type:'MUspellL7',ct:'7',charge:'uncharged',cost:'0.1',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nReverse Gravity\nas a level @{selected|casting-level} caster}}{{splevel=Level 7 Wizard}}{{school=Alteration}}Specs=[Reverse Gravity,MUspellL7,1H,Alteration]{{components=V,S,M}}{{time=[[7]]}}{{range=[[5*@{selected|casting-level}]] yards}}{{duration=[@{selected|casting-level} rounds](!rounds --target caster|@{selected|token_id}|Reverse-gravity|@{selected|casting-level}|-1|Gravity is reversed in the area of effect. How uplifting!|fluffy-wing)}}{{aoe=[30ft x 30ft.](!rounds --aoe @{selected|token_id}|square|yards|[[5*@{selected|casting-level}]]|10||magic)}}{{save=None}}{{reference=PHB p186}}SpellData=[w:Reverse Gravity,lv:7,sp:7,gp:0.1,cs:VSM]{{effects=Reverses gravity in the area of effect, causing all unattached objects and creatures within it to "fall" upward.}}{{materials=A loadstone and iron filings, at a total cost of 1sp}}'},
						{name:'Reverse-Tongues',type:'MUspellL3',ct:'3',charge:'uncharged',cost:'10',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nReversed Tongues\nas a level @{selected|casting-level} caster}}{{splevel=Level 3 Wizard (reversable)}}{{school=Alteration}}Specs=[Reverse Tongues,MUspellL3,1H,Alteration]{{components=V, M}}{{time=[[3]]}}{{range=[[0]]}}{{duration=[[@{selected|casting-level}]] rounds}}{{aoe=[30ft. radius](!rounds --aoe @{selected|token_id}|circle|feet|0|60||light)}}{{save=None}}{{reference=PHB p153}}{{damage=[Garbled Voices](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Speak Gobbledegook|token_id}|ReverseTongues|[[@{selected|casting-level}]]|-1|Do not understand - reverse Tongues|edge-crack)}}SpellData=[w:Reverse Tongues,lv:3,sp:3,gp:10,cs:VM]{{effects=This spell is the reverse of the *Tongues* spell, and either cancels the effect of the tongues spell or confuses verbal communication of any sort within the area of effect.}}{{materials=A small clay model of a ziggurat costing 10gp, which shatters when the spell is pronounced.}}'},
						{name:'Rope-Trick',type:'MUspellL2',ct:'2',charge:'uncharged',cost:'0.05',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}}{{title=@{selected|casting-name} casts\nRope Trick\nas a level @{selected|casting-level} caster}}{{splevel=Level 2 Wizard}}{{school=Alteration}}Specs=[Rope Trick,MUspellL2,1H,Alteration]{{components=V, S, M}}{{time=[[2]]}}{{range=Touch}}{{duration=[[2*@{selected|casting-level}]] Turns}}{{aoe=One 5 to 30 ft rope}}{{save=None}}{{reference=PHB p145}}SpellData=[w:Rope-Trick,lv:2,sp:2,gp:0.05,cs:VSM]{{effects=One end of the rope rises into the air until the whole rope hangs perpendicular, as if affixed at the upper end.}}{{materials=Powdered corn extract and a twisted loop of parchment worth 5cp in total.}}'},
						{name:'Scare',type:'MUspellL2',ct:'2',charge:'uncharged',cost:'0.1',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nScare\nas a level @{selected|casting-level} caster}}{{splevel=Level 2 Wizard}}{{school=Evocation}}Specs=[Scare,MUspellL2,1H,Evocation]{{components=V,S,M}}{{time=[[2]]}}{{range=[[30+(10*@{selected|casting-level})]]yds}}{{duration=1d4+@{selected|casting-level} rounds}}{{aoe=[15 ft radius](!rounds --aoe @{selected|token_id}|circle|yards|[[30+(10*@{selected|casting-level})]]|10||dark)}}{{save=[Special](!\\amp#13;\\amp#47;gmroll 1d20 saving throw vs Scare spell)}}{{reference=PHB p145}}{{damage=[Scare Them](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Select Scaredy-cat|token_id}|Scare|\\amp#91;[@{selected|casting-level}+1d4]\\amp#93;|-1|Scared, -2 reaction, if cornered -1 on attk+dmg+save|screaming)}}SpellData=[w:Scare,lv:2,sp:2,gp:0.1,cs:VSM]{{effects=Causes creatures with fewer than [[6]] Hit Dice or levels of experience to fall into fits of trembling and shaking.}}{{materials=A bit of bone from an undead skeleton, zombie, ghoul, ghast, or mummy that cost 1sp from some adventurer.}}'},
						{name:'Screen',type:'MUspellL8',ct:'100',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casting\nScreen\nas a level @{selected|casting-level} caster}}{{splevel=Level 8 Wizard}}{{school=Divination, Illusion}}Specs=[Screen,MUspellL8,1H,Divination|Illusion]{{components=V,S}}{{time=[[1]] turn}}{{range=[[0]]}}{{duration=[[[@{selected|casting-level}]] hours](!rounds --target caster|@{selected|token_id}|Screen|[[60*@{selected|casting-level}]]|-1|Maintaining an area screened from scrying eyes|white-tower)}}{{aoe=[[[@{selected|casting-level}]] x 30ft cubes](!rounds --aoe @{selected|token_id}|rectangle|feet|0|||magic)}}{{save=[Special](!\\amp#13;\\amp#47;gmroll 1d20 save vs. Screen spell)}}{{reference=PHB p192}}SpellData=[w:Screen,lv:8,sp:100,gp:0,cs:VS]{{effects=Combines several elements to create a powerful protection from scrying and direct observation.}}'},
						{name:'Secret-Page',type:'MUspellL3',ct:'100',charge:'uncharged',cost:'10',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nSecret Page\nas a level @{selected|casting-level} caster}}{{splevel=Level 3 Wizard}}{{school=Alteration}}Specs=[Secret Page,MUspellL3,1H,Alteration]{{components=V,S,M}}{{time=1 turn}}{{range=Touch}}{{duration=Until dispelled}}{{aoe=One page upto 2ft sq.}}{{save=None}}{{reference=PHB p152}}SpellData=[w:Secet Page,lv:3,sp:100,gp:10,cs:VSM]{{effects=Alters the actual contents of a page so that they appear to be something entirely different.}}{{materials=Powdered herring scales and either will o\' wisp or boggart essence, magic materials costing 10gp}}'},
						{name:'Seeming',type:'MUspellL5',ct:'5',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nSeeming\nas a level @{selected|casting-level} caster}}{{splevel=Level 5 Wizard}}{{school=Illusion-Phantasm}}Specs=[Seeming,MUspellL5,1H,Illusion-Phantasm]{{components=V,S}}{{time=[[5]]}}{{range=[10 feet](!rounds --aoe @{selected|token_id}|circle|feet|0|20||magic|true)}}{{duration=12 hours}}{{aoe=[[ceil(@{selected|casting-level}/2)]] people}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 save vs. Seeming spell)}}{{reference=PHB p171}}{{healing=[Change Appearance](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Change who\'s appearance?|token_id}|Seeming|720|-1|You appear to be a \\amp#63;{Appear as what?}|ninja-mask)}}SpellData=[w:Seeming,lv:5,sp:5,gp:0,cs:VS]{{effects=Alter the appearance of [[floor(@{selected|casting-level}/2)]] persons. The change includes clothing and equipment.}}'},
						{name:'Sending',type:'MUspellL5',ct:'100',charge:'uncharged',cost:'0.1',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nSending\nas a level @{selected|casting-level} caster}}{{splevel=Level 5 Wizard}}{{school=Evocation}}Specs=[Sending,MUspellL5,1H,Evocation]{{components=V,S,M}}{{time=[[1]] turn}}{{range=Unlimited}}{{duration=Special}}{{aoe=1 creature}}{{save=None}}{{reference=PHB p171}}SpellData=[w:Sending,lv:5,sp:100,gp:0.1,cs:VSM]{{effects=Contact a single creature with whom the caster is familiar and whose name and appearance are known.}}{{materials=Two tiny cylinders, each with one open end, connected by a short piece of fine copper wire, costing 1gp to procure and reusable 10 times}}'},
						{name:'Sepia-Snake-Sigil',type:'MUspellL3',ct:'3',charge:'uncharged',cost:'100',body:'!magic --touch @{selected|token_id}|Sepia-Snake-Sigil|99|0|Frozen in place until released|fishing-net\n/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nSepia Snake Sigil\nas a level @{selected|casting-level} caster}}{{splevel=Level 3 Wizard}}{{school=Conjuration-Summoning}}Specs=[Sepia Snake Sigil,MUspellL3,1H,Conjuration-Summoning]{{components=V,S,M}}{{time=3}}{{range=[[5]] yds}}{{duration=Special}}{{aoe=1 sigil}}{{save=None}}{{reference=PHB p152}}SpellData=[w:Sepia Snake Sigil,lv:3,sp:3,gp:100,cs:VSM]{{healing=[Snake Attack](~selected|to-hit-spell)}}{{effects=When this small symbol is read, the sepia snake springs into being and strikes at the nearest living creature (but does not attack the wizard who cast the spell).}}{{materials=100 gp worth of powdered amber, a scale from any snake, and a pinch of mushroom spores.}}'},
						{name:'Sequester',type:'MUspellL7',ct:'7',charge:'uncharged',cost:'10',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nSequester\nas a level @{selected|casting-level} caster}}{{splevel=Level 7 Wizard}}{{school=Illusion/Phantasm, Abjuration}}Specs=[Sequester,MUspellL7,1H,Illusion/Phantasm|Abjuration]{{components=V,S,M}}{{time=[[7]]}}{{range=Touch}}{{duration=[[7+@{selected|casting-level}]] days}}{{aoe=[@{selected|casting-level} x 2ft. cubes](!rounds --aoe @{selected|token_id}|bolt|feet|0|||magic)}}{{save=[Special](!\\amp#13;\\amp#47;gmroll 1d20 save vs. Sequester spell)}}{{reference=PHB p186}}SpellData=[w:Sequester,lv:7,sp:7,gp:10,cs:VSM]{{effects=Not only prevents detection and location spells from working to detect or locate the objects affected by the sequester spell, it also renders the affected object(s) invisible to any form of sight or seeing.}}{{materials=A basilisk eyelash (difficult to source), gum arabic, and a dram of whitewash. Total cost 10gp}}'},
						{name:'Sertens-Spell-Immunity',type:'MUspellL8',ct:'10',charge:'uncharged',cost:'500',body:'!setattr --silent --charid @{selected|character_id} --SSI-creatures|?{How many recipients?}\n/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casting\nSerten\'s Spell Immunity\nas a level @{selected|casting-level} caster}}{{splevel=Level 8 Wizard}}{{school=Abjuration}}Specs=[Sertens Spell Immunity,MUspellL8,1H,Abjuration]{{components=V,S,M}}{{time=[[?{How many recipients?}]] rounds}}{{range=Touch}}{{duration=[[floor(10*@{selected|casting-level}/?{How many recipients?})]] rounds}}{{aoe=[Creature(s) touched](!rounds --target caster|@{selected|token_id}|Sertens-Immunity-casting|[[?{How many recipients?}]]|-1|Casting Serten\'s Spell Immunity on ?{How many recipients?} creatures takes ?{How many recipients?} rounds|stopwatch --target single|@{selected|token_id}|\\amp#64;{target|Who to give immunity to?|token_id}|Sertens-Immunity|[[floor(10*@{selected|casting-level}/?{How many recipients?})]]|-1|Better saves against many spells - see PHB p192|white-tower)}}{{save=None}}{{reference=PHB p192}}SpellData=[w:Sartens Spell Immunity,lv:8,sp:10,gp:500,cs:VSM]{{effects=Confer virtual immunity to certain spells and magical attack forms upon those he touches.}}{{materials=A diamond of at least 500 gp value, which must be crushed and sprinkled over the spell recipients. Each such creature must also have in its possession a diamond of at least one carat size, intact and carried on its person}}'},
						{name:'Shades',type:'MUspellL6',ct:'6',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nShades\nas a level @{selected|casting-level} caster}}{{splevel=Level 6 Wizard}}{{school=Illusion-Phantasm}}Specs=[Shades,MUspellL6,1H,Illusion-Phantasm]{{components=V,S}}{{time=[[6]]}}{{range=[[30]] yards}}{{duration=[@{selected|casting-level} rounds](!rounds --target caster|@{selected|token_id}|Shades|@{selected|casting-level}|-1|Conjuring the illusion of monsters|fist)}}{{aoe=[20ft cube](!rounds --aoe @{selected|token_id}|square|feet|90|20||magic)}}{{save=[Special](!\\amp#13;\\amp#47;gmroll 1d20 save vs. Shades spell)}}{{reference=PHB p180}}SpellData=[w:Shades,lv:6,sp:6,gp:0,cs:VS]{{effects=Uses material from the Demiplane of Shadow to form semireal illusions of one or more monsters, up to [[@{selected|casting-level}]] Hit Die.}}'},
						{name:'Shadow-Door',type:'MUspellL5',ct:'2',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nShadow Door\nas a level @{selected|casting-level} caster}}{{splevel=Level 5 Wizard}}{{school=Illusion-Phantasm}}Specs=[Shadow Door,MUspellL5,1H,Illusion-Phantasm]{{components=S}}{{time=[[2]]}}{{range=[[10]] yards}}{{duration=[[@{selected|casting-level}]] rounds}}{{aoe=Special}}{{save=None}}{{reference=PHB p171}}{{healing=[Make a door](!rounds --target caster|@{selected|token_id}|Shadow-door|@{selected|casting-level}|-1|Escaping through the Shadow Door, so now invisible|half-haze)}}SpellData=[w:Shadow Door,lv:5,sp:2,gp:0,cs:S]{{effects=Creates the illusion of a door which allows the wizard to appear to step through and disappear.}}'},
						{name:'Shadow-Magic',type:'MUspellL5',ct:'5',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nShadow Magic\nas a level @{selected|casting-level} caster}}{{splevel=Level 5 Wizard}}{{school=Illusion/Phantasm}}Specs=[Shadow Magic,MUspellL5,1H,Illusion-Phantasm]{{components=V, S}}{{time=[[5]]}}{{range=[[50+10*@{selected|casting-level}]] yards}}{{duration=Instantaneous}}{{aoe=Depends on the chosen spell}}{{save=[[20]]% of spell damage or half of spell damage [Roll](!\\amp#13;\\amp#47;gmroll 1d20 saving throw)}}{{reference=PHB p171}}SpellData=[w:Shadow-Magic,lv:5,sp:5,gp:0,cs:VS]{{effects=Allows the caster to create a quasi-real evocation spell of [[3]]rd level or lower.}}'},
						{name:'Shadow-Monsters',type:'MUspellL4',ct:'4',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nShadow Monsters\nas a level @{selected|casting-level} caster}}{{splevel=Level 4 Wizard}}{{school=Illusion/Phantasm}}Specs=[Shadow Monsters,MUspellL4,1H,Illusion-Phantasm]{{components=V, S}}{{time=[[4]]}}{{range=[[30]] yds.}}{{duration=[[@{selected|casting-level}]] rounds}}{{aoe=[20ft. cube](!rounds --aoe @{selected|token_id}|square|feet|90|20||magic)}}{{save=Special}}{{reference=PHB p162}}SpellData=[w:Shadow-Monsters,lv:4,sp:4,gp:0,cs:VS]{{effects=Summons a total of [[@{selected|casting-level}]] HD of monsters, all of the same sort. Each has [[20]]% of rolled HP (rounded to nearest HP) - those with [[0]] are failed conjures. Save to disbelieve is at [[0-2]] or take actual AC, Thac0, attack forms and damage. Save means monsters are AC[[10]] \\amp inflict [[20]]% of rolled damage.}}'},
						{name:'Shadow-Walk',type:'MUspellL7',ct:'7',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nShadow Walk\nas a level @{selected|casting-level} caster}}{{splevel=Level 7 Wizard}}{{school=Illusion, Enchantment}}Specs=[Shadow Walk,MUspellL7,1H,Illusion|Enchantment]{{components=V,S}}{{time=[[1]]}}{{range=Touch}}{{duration=[[6*@{selected|casting-level}]] turns}}{{aoe=[Touched Creatures at time of casting](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Who is touching you?|token_id}|Shadow-walk|[[60*@{selected|casting-level}]]|-1|Walking on the edge between the Prime Material plane \\amp the Demiplane of Shadow|half-haze)}}{{save=[Special](!\\amp#13;\\amp#47;gmroll 1d20 save vs. Shadow Walk spell)}}{{reference=PHB p186}}SpellData=[w:Shadow Walk,lv:7,sp:7,gp:0,cs:VS]{{effects=Must be in an area of heavy shadows. The caster and any creature he touches are then transported to the edge of the Prime Material Plane where it borders the Demiplane of Shadow and can move at a rate of up to 7 miles per turn, moving normally on the borders of the Demiplane of Shadow but much more rapidly relative to the Prime Material Plane. The wizard knows where he will come out on the Prime Material Plane.}}'},
						{name:'Shape-Change',type:'MUspellL9',ct:'9',charge:'uncharged',cost:'5000',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nShape Change\nas a level @{selected|casting-level} caster}}{{splevel=Level 9 Wizard}}{{school=Alteration}}Specs=[Shape Change,MUspellL9,1H,Alteration]{{components=V,S,M}}{{time=[[9]]}}{{range=[[0]]}}{{duration=[[[@{selected|casting-level}]] turns](!rounds --target caster|@{selected|token_id}|Shape-change|[[10*@{selected|casting-level}]]|-1|Masqurading as a different powerful creature|aura)}}{{aoe=The caster}}{{save=None}}{{reference=PHB p196}}SpellData=[w:Shape Change,lv:9,sp:9,gp:5000,cs:VSM]{{effects=A wizard is able to assume the form of any living thing or creature below demigod status (greater or lesser deity, singular dragon type, or the like).}}{{materials=A jade circlet worth no less than 5,000 gp, which shatters at the end of the spell\'s duration. In the meantime, the circlet is left in the wake of the shape change, and premature shattering ends the spell immediately}}'},
						{name:'Shatter',type:'MUspellL2',ct:'2',charge:'uncharged',cost:'0.01',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nShatter\nas a level @{selected|casting-level} caster}}{{splevel=Level 2 Wizard}}{{school=Alteration}}Specs=[Shatter,MUspellL2,1H,Alteration]{{components=V, S, M}}{{time=[[2]]}}{{range=[[30+(10*@{selected|casting-level})]] yds.}}{{duration=Instantaneous}}{{aoe=[3ft radius](!rounds --aoe @{selected|token_id}|circle|yards|[[30+(10*@{selected|casting-level})]]|2||lightning)}}{{save=None}}{{reference=PHB p145}}SpellData=[w:Shatter,lv:2,sp:2,gp:0.01,cs:VSM]{{effects=A sound-based attack that affects nonmagical objects of crystal, glass, ceramic, or porcelain, such as vials, bottles, flasks, jugs, windows, mirrors, etc. within a 3-foot radius of the center of the spell effect are smashed into dozens of pieces by the spell.}}{{materials=A chip of mica worth 1cp}}'},
						{name:'Shield',type:'MUspellL1',ct:'1',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nShield\nas a level @{selected|casting-level} caster}}{{splevel=Level 1 Wizard}}{{school=Evocation}}Specs=[Shield,MUspellL1,1H,Evocation]{{components=V, S}}{{time=[[1]]}}{{range=[[0]]}}{{duration=[[5*@{selected|casting-level}]] rounds}}{{aoe=In front of caster}}{{healing=[Shield yourself](!rounds --target caster|@{selected|token_id}|Shield|[[5*@{selected|casting-level}]]|-1|Shielded, bonus on AC vs. missiles, MM, frontal saving throws|bolt-shield)}}{{save=None}}{{reference=PHB p137}}SpellData=[w:Shield,lv:1,sp:1,gp:0,cs:VS]{{effects=An invisible barrier comes into being in front of the wizard. This shield totally negates magic missile attacks. It provides the equivalent protection of AC [[2]] against hand-hurled missiles (axes, darts, javelins, spears, etc.), AC [[3]] against small device-propelled missiles (arrows, bolts, bullets, manticore spikes, sling stones, etc.), and AC [[4]] against all other forms of attack.}}'},
						{name:'Shocking-Grasp',type:'MUspellL1',ct:'1',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nShocking Grasp\nas a level @{selected|casting-level} caster}}{{splevel=Level 1 Wizard}}{{school=Alteration}}Specs=[Shocking Grasp,MUspellL1,1H,Alteration]{{components=V, S}}{{time=[[1]]}}{{range=Touch}}{{duration=[[@{selected|casting-level}]] rounds or until used}}{{aoe=Creature touched}}{{save=None}}{{reference=PHB p137}}{{damage=[1d8+level](!\\amp#13;\\amp#47;r 1d8+[[@{selected|casting-level}]]) HP}}{{damagetype=Electrical}}SpellData=[w:Shocking-Grasp,lv:1,sp:1,gp:0,cs:VS]{{effects=Does electrical damage as above either by touching opponent (no To Hit roll necessary) or an electrical conductor the opponent is touching (e.g. sword, plate armour, metal bars). Does not discharge if caster hit or touched by opponent.}}'},
						{name:'Shout',type:'MUspellL4',ct:'1',charge:'uncharged',cost:'2',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nShout\nas a level @{selected|casting-level} caster}}{{splevel=Level 4 Wizard}}{{school=Evocation}}Specs=[Shout,MUspellL4,1H,Evocation]{{components=V,M}}{{time=[[1]]}}{{range=[[0]]}}{{duration=Instantanious}}{{aoe=[10ft x 30ft cone](!rounds --aoe @{selected|token_id}|cone|feet|0|30|10|light)}}{{save=[Special](!\\amp#13;\\amp#47;gmroll 1d20 saving throw vs Shout spell)}}{{reference=PHB p163}}{{damage=[Deafen Them](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Select first target|token_id}|Shout|\\amp#91;[2d6]\\amp#93;|-1|Deafened by a loud Shout, 1 penalty on surprise + initiative, 20% spell fail|bleeding-eye)}}SpellData=[w:Shout,lv:4,sp:1,gp:2,cs:VM]{{effects=The caster can emit an ear-splitting noise that has a principal effect in a cone shape radiating from his mouth to a point 30 feet away. Any creature within this area is deafened for 2d6 rounds and suffers [2d6](!\\amp#13;\\amp#47;r 2d6 damage from sound blast, save to half) points of damage.}}{{materials=A drop of honey, a drop of citric acid, and a small cone made from a bull or ram horn, costing 2gp.}}'},
						{name:'Shrink-Animal',type:'MUspellL5',ct:'5',charge:'uncharged',cost:'0.01',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casting\nShrink Animal\nas a level @{selected|casting-level} caster}}{{splevel=Level 5 Wizard}}{{school=Alteration (reversible)}}Specs=[Shrink Animal,MUspellL5,1H,Alteration]{{components=V,S,M}}{{time=[[5]]}}{{range=[[60]] yards}}{{duration=[[@{selected|casting-level}]] rounds}}{{aoe=Upto 8 animals in a [20ft. cube](!rounds --aoe @{selected|token_id}|square|feet|180|20||magic)}}{{save=None}}{{healing=[Shrink Animals](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Which animals?|token_id}|Animal-growth|@{selected|casting-level}|-1|This animal is tiny! half HD \\amp dmg|strong)}}{{reference=PHB p165}}SpellData=[w:Shrink Animal,lv:5,sp:5,gp:0.01,cs:VSM]{{effects=Causes all designated animals, up to a maximum of eight, within a 20-foot-square area to shrink to half their normal size.}}{{materials=A pinch of powdered bone, costing 1cp}}'},
						{name:'Simulacrum',type:'MUspellL7',ct:'7',charge:'uncharged',cost:'1000',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nSimulacrum\nas a level @{selected|casting-level} caster}}{{splevel=Level 7 Wizard}}{{school=Illusion-Phantasm}}Specs=[Shadow Walk,MUspellL7,1H,Illusion-Phantasm]{{components=V,S,M}}{{time=Special}}{{range=Touch}}{{duration=Permanent}}{{aoe=1 creature}}{{save=None}}{{reference=PHB p186}}SpellData=[w:Simulacrum,lv:7,sp:7,gp:1000,cs:VSM]{{effects=Create what appears as a duplicate of any creature, but with only 51% to 60% (50% + 1d10%) of the hit points of the real creature, there are personality differences, there are areas of knowledge that the duplicate does not have, and a *detect magic* spell will instantly reveal it as a simulacrum, as will a *true seeing* spell.}}{{materials=Powdered Ruby worth 1,000gp}}'},
						{name:'Sink',type:'MUspellL8',ct:'18',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casting\nSink\nas a level @{selected|casting-level} caster}}{{splevel=Level 8 Wizard}}{{school=Enchantment, Alteration}}Specs=[Sink,MUspellL8,1H,Enchantment|Alteration]{{components=V,S}}{{time=[[8]]}}{{range=[[10*@{selected|casting-level}]] yards}}{{duration=1 or 2 rounds}}{{aoe=1 creature or object, max [[[@{selected|casting-level}]] cu.ft.](!rounds --aoe @{selected|token_id}|rectangle|feet|[[10*@{selected|casting-level}]]|||magic)}}{{save=[Special](!\\amp#13;\\amp#47;gmroll 1d20 save vs. Screen spell)}}{{reference=PHB p192}}SpellData=[w:Sink,lv:8,sp:18,gp:0,cs:VS]{{effects=Force a creature or object into the very earth or floor upon which it stands.}}'},
						{name:'Sleep',type:'MUspellL1',ct:'1',charge:'uncharged',cost:'0.01',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nSleep\nas a level @{selected|casting-level} caster}}{{splevel=Level 1 Wizard}}{{school=Enchantment/Charm}}Specs=[Sleep,MUspellL1,1H,Enchantment-Charm]{{range=90 ft}}{{components=V, S, M}}{{duration=[[5*({10,@{selected|casting-level}}kl1)]] Rounds}}{{time=1}}{{aoe=[30ft Cube](!rounds --aoe @{selected|token_id}|square|feet|90|30||dark)}}{{save=None}}{{damage=[Sleep them](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Select who to sleep|token_id}|Sleep|[[5*({10,@{selected|casting-level}}kl1)]]|-1|Snoring away, shake to awaken|sleepy)}}{{reference=PHB p138}}SpellData=[w:Sleep,lv:1,sp:1,gp:0.01,cs:VSM]{{effects=Up to [2d4](!\\amp#13;\\amp#47;r 2d4) Hit Dice of creatures with 4 HD or less are put to sleep beginning with the lowest HD creatures in the Area of Effect.}}{{materials=a pinch of fine sand, rose petals, or a live cricket. Cost 1cp}}'},
						{name:'Slow',type:'MUspellL3',ct:'3',charge:'uncharged',cost:'0.1',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nSlow\nas a level @{selected|casting-level} caster}}{{splevel=Level 3 Wizard}}{{school=Alteration}}Specs=[Slow,MUspellL3,1H,Alteration]{{components=V,S,M}}{{time=[[3]]}}{{range=[[90+(10*@{selected|casting-level})]] yds}}{{duration=[[3+@{selected|casting-level}]] rounds}}{{aoe=[40ft cube](!rounds --aoe @{selected|token_id}|square|feet|[[270+(30*@{selected|casting-level})]]|40||dark)}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20-4 saving throw vs Slow spell)}}{{reference=PHB p153}}{{damage=[Slow them](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Select Slow-coaches|token_id}|Slow|[[3+@{selected|casting-level}]]|-1|Slowed, half rate attk+move|snail)}}SpellData=[w:Slow,lv:3,sp:3,gp:0.1,cs:VSM]{{effects=Causes affected creatures to move and attack at half their normal rates. It negates a haste spell or equivalent, but does not otherwise affect magically speeded or slowed creatures.}}{{materials=A drop of molasses, worth 1cp.}}'},
						{name:'Solid-Fog',type:'MUspellL4',ct:'4',charge:'uncharged',cost:'0.03',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casting\nSolid Fog\nas a level @{selected|casting-level} caster}}{{splevel=Level 4 Wizard}}{{school=Alteration}}Specs=[Solid Fog,MUspellL4,1H,Alteration]{{components=V,S,M}}{{time=[[4]]}}{{range=[[30]] yards}}!setattr --silent --charid @{selected|character_id} --spell-duration|{{duration=[[2d4+@{selected|casting-level}]] rounds}}!!!{{aoe=[Upto 20 x 10 x 10ft.](!rounds --aoe @{selected|token_id}|rectangle|feet|90||10|light --target caster|@{selected|token_id}|Solid-fog|\\amp#64;{selected|spell-duration}|-1|The solid fog is still there|half-haze)}}{{save=None}}{{reference=PHB p163}}SpellData=[w:Solid Fog,lv:4,sp:4,gp:0.03,cs:VSM]{{effects=Creates a billowing mass of misty vapors similar to a wall of fog spell. Can create less vapor, minimum 10 feet on a side.}}{{materials=A pinch of dried, powdered peas combined with powdered animal hoof, total cost 3cp}}'},
						{name:'Spectral-Force',type:'MUspellL3',ct:'3',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nSpectral Force\nas a level @{selected|casting-level} caster}}{{splevel=Level 3 Wizard}}{{school=Illusion/Phantasm}}Specs=[Spectral Force,MUspellL3,1H,Illusion-Phantasm]{{components=V, S}}{{time=[[3]]}}{{range=[[60+@{selected|casting-level}]] yds}}{{duration=Special}}{{aoe=[40ft cube](!rounds --aoe @{selected|token_id}|square|feet|[[180+@{selected|casting-level}]]|40||magic)}}{{save=[Special](!\\amp#13;\\amp#47;gmroll 1d20 save vs. Spectral Force spell)}}{{reference=PHB p153}}SpellData=[w:Spectral-Force,lv:3,sp:3,gp:0,cs:VS]{{effects=Creates an illusion in which sound, smell, and thermal illusions are included. It is otherwise similar to the improved phantasmal force spell. The spell lasts for three rounds after concentration ceases.}}'},
						{name:'Spectral-Hand',type:'MUspellL2',ct:'2',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nSpectral Hand\nas a level @{selected|casting-level} caster}}{{splevel=Level 2 Wizard}}{{school=Necromancy}}Specs=[Spectral Hand,MUspellL2,1H,Necromancy]{{components=V,S}}{{time=[[2]]}}{{range=[[[30+(5*@{selected|Casting-level})]] yards](!rounds --aoe @{selected|token_id}}|circle|yards|0|[[60+(10*@{selected|Casting-level})]]||magic|true)}}{{duration=[[2*@{selected|Casting-level}]] rounds}}{{aoe=1 opponent}}{{save=None}}{{reference=PHB p145}}{{damage=[Create a spooky hand](!rounds --target caster|@{selected|token_id}|Spectral-Hand|[[2*@{selected|casting-level}]]|-1|Their touch extends [[30+(5*@{selected|Casting-level})]] yds, +2 to hit, hand AC-2|grab)}}SpellData=[w:Spectral-Hand,lv:2,sp:2,gp:0,cs:VS]{{effects=Causes a ghostly, glowing hand, shaped from the caster\'s life force, to materialize within the spell range and move as the caster desires. Any touch attack spell of 4th level or less that is subsequently cast by the wizard can be delivered by the spectral hand.}}'},
						{name:'Spell-Turning',type:'MUspellL7',ct:'7',charge:'uncharged',cost:'1',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nSpell Turning\nas a level @{selected|casting-level} caster}}{{splevel=Level 7 Wizard}}{{school=Abjuration}}Specs=[Spell Turning,MUspellL7,1H,Abjuration]{{components=V,S,M}}{{time=[[7]]}}{{range=[[0]]}}{{duration=Up to [[[3*@{selected|casting-level}]] rounds](!rounds --target caster|@{selected|token_id}|Spell-turning|[[3*@{selected|casting-level}]]|-1|Those spells tend to just bounce off you|aura)}}{{aoe=The caster}}{{save=None}}{{reference=PHB p187}}SpellData=[w:Spell Turning,lv:7,sp:7,gp:1,cs:VSM]{{effects=Causes spells cast against the wizard to rebound on the original caster.}}{{materials=A small silver mirror worth 20gp that can be reused 20 times}}'},
						{name:'Spider-Climb',type:'MUspellL1',ct:'1',charge:'uncharged',cost:'0.01',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nSpider Climb\nas a level @{selected|casting-level} caster}}{{splevel=Level 1 Wizard}}{{school=Alteration}}Specs=[Spider Climb,MUspellL1,1H,Alteration]{{components=V, S, M}}{{time=[[1]]}}{{range=Touch}}{{duration=[[3+(3*@{selected|casting-level})]] rounds}}{{aoe=Creature touched}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 saving throw)}}{{reference=PHB p138}}{{healing=[Grant Spidy-powers!](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Select Spider-man|token_id}|Spider-climb|[[3+(3*@{selected|casting-level})]] |-1|Has Spidy-Powers to climb walls \\amp ceilings, move 6|strong)}}SpellData=[w:Spider-Climb,lv:1,sp:1,gp:0.01,cs:VSM]{{effects=Enables recipient to climb and travel on vertical surfaces like a giant spider, and upside down from ceilings.}}{{materials=A drop of bitumen (1cp) and a live spider, both of which must be eaten by the spell recipient.}}'},
						{name:'Spook',type:'MUspellL1',ct:'1',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nSpook\nas a level @{selected|casting-level} caster}}{{splevel=Level 1 Wizard}}{{school=Illusion/Phantasm}}Specs=[Spook,MUspellL1,1H,Illusion-Phantasm]{{components=V, S}}{{time=[[1]]}}{{range=[30 feet](!rounds --aoe @{selected|token_id}|circle|feet|0|60||lightning|true)}}{{duration=Until the creature makes a successful save}}{{aoe=[[1]] creature}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 saving throw) at [[0-{{6},{floor(@{selected|casting-level}/2)} }kl1]] first round only [[0-0]] thereafter}}{{reference=PHB p138}}{{damage=[Spook it](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Select who to Spook|token_id}|Spook|99|0|Spooked - make a saving throw each round|screaming)}}SpellData=[w:Spook,lv:1,sp:1,gp:0,cs:VS]{{effects=Make a Saving Throw vs. Spell or flee from the caster at maximum speed as far as they can. They receive a [[0-{{6},{floor(@{selected|casting-level}/2)} }kl1)]] penalty to their Saving Throw initially, then at no penalty each round thereafter}}'},
						{name:'Statue',type:'MUspellL7',ct:'7',charge:'uncharged',cost:'0.03',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nStatue\nas a level @{selected|casting-level} caster}}{{splevel=Level 7 Wizard}}{{school=Alteration}}Specs=[Statue,MUspellL7,1H,Alteration]{{components=V,S,M}}{{time=[[7]]}}{{range=Touch}}{{duration=[[@{selected|casting-level}]] hours}}{{aoe=[Creature touched](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Who wants a statue of themselves?|token_id}|Statue|[[60*@{selected|casting-level}]]|-1|Wow - you can stand really still!|white-tower)}}{{save=[Special](!attk --save @{selected|token_id})}}{{reference=PHB p187}}SpellData=[w:Statue,lv:7,sp:7,gp:0.03,cs:VSM]{{effects=The wizard or other creature is apparently turned to solid stone, along with any garments and equipment worn or carried.}}{{materials=Lime, sand, and a drop of water stirred by an iron bar, such as a nail or spike (total cost 3cp)}}'},
						{name:'Steal-Enchantment',type:'MUspellL7',ct:'600',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nSteal Enchantment\nas a level @{selected|casting-level} caster}}{{splevel=Level 7 Wizard}}{{school=Enchantment}}Specs=[Steal Enchantment,MUspellL7,1H,Enchantment]{{components=V,S,M}}{{time=[[1]] Hour}}{{range=Touch}}{{duration=Permanent}}{{aoe=[[1]] Item}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 save vs. Steal Enchantment spell)}}{{reference=The Complete Wizard\'s Handbook}}SpellData=[w:Steal-Enchantment,lv:7,sp:600,gp:0,cs:VSM]{{effects="Steals" the enchantment from a magical item and places it within another, non-magical item (the material component).}}{{materials=The nonmagical item which is to receive the enchantment. It must be of equal or greater value than the object to be drained. Paid for when bought}}'},
						{name:'Stinking-Cloud',type:'MUspellL2',ct:'2',charge:'uncharged',cost:'0.01',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nStinking Cloud\nas a level @{selected|casting-level} caster}}{{splevel=Level 2 Wizard}}{{school=Evocation}}Specs=[Stinking Cloud,MUspellL2,1H,Evocation]{{components=V, S, M}}{{time=[[2]]}}{{range=[[30]] yds.}}{{duration=Varies with breeze}}{{aoe=[20ft. cube](!rounds --aoe @{selected|token_id}|square|feet|90|20||acid)}}{{save=Special}}{{reference=PHB p145}}{{damage=[Stink them!](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Who\'s stinking now?|token_id}|Stinking-Cloud|\\amp#91;[\\amp#63;{Breeze?|No,@{selected|casting-level}|8 to 18 mph,(@{selected|casting-level}/2\\amp#41;|Stronger,1}]\\amp#93;|-1|Nauseated, save each round to exit then unable to attack for 1+1d4 rounds|back-pain)}}SpellData=[w:Stinking-Cloud,lv:2,sp:2,gp:0.01,cs:VSM]{{effects=Creates a billowing mass of nauseous vapors up to [[30]] yards away from his position. Any creature caught within the cloud must roll a successful saving throw vs. poison or be reeling and unable to attack because of nausea for 1d4+1 rounds after leaving the cloud.}}{{materials=A rotten egg or several skunk cabbage leaves. Total cost 1cp}}'},
						{name:'Stone-Shape',type:'MUspellL5',ct:'10',charge:'uncharged',cost:'0.01',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nStone Shape\nas a level @{selected|casting-level} caster}}{{splevel=Level 5 Wizard}}{{school=Alteration}}Specs=[Stone Shape,MUspellL5,1H,Alteration]{{components=V,S,M}}{{time=[[1]] round}}{{range=Touch}}{{duration=Permanent}}{{aoe=[[@{selected|casting-level}]] cu.ft.}}{{save=None}}{{reference=PHB p171}}SpellData=[w:Stone Shape,lv:5,sp:10,gp:0.01,cs:VSM]{{effects=Form an existing piece of stone into a shape that suits his purposes. The fineness of detail is not great.}}{{materials=Soft clay (1cp) that must be worked into roughly the desired shape of the stone object and then touched to the stone when the spell is uttered}}'},
						{name:'Stone-to-Flesh',type:'MUspellL6',ct:'6',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nStone to Flesh\nas a level @{selected|casting-level} caster}}{{splevel=Level 6 Wizard}}{{school=Alteration (Reversable)}}Specs=[Stone to Flesh,MUspellL6,1H,Alteration]{{components=V,S,M}}{{time=[[6]]}}{{range=[[[10*@{selected|casting-level}]] yards](!rounds --aoe @{selected|token_id}|circle|yards|0|[[20*@{selected|casting-level}]]||magic|true)}}{{duration=Permanent}}{{aoe=1 creature}}{{save=None}}{{reference=PHB p181}}SpellData=[w:Stone to Flesh,lv:6,sp:6,gp:0,cs:VSM]{{effects=Turns any sort of stone into flesh. If the recipient stone object was formerly living, this spell restores life (and goods), if they make the usual system shock survival roll.}}{{materials=A pinch of earth and a drop of blood (no cost)}}'},
						{name:'Stoneskin',type:'MUspellL4',ct:'1',charge:'uncharged',cost:'500',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casting\nStoneskin\nas a level @{selected|casting-level} caster}}{{splevel=Level 4 Wizard}}{{school=Alteration}}Specs=[Stoneskin,MUspellL4,1H,Alteration]{{components=V,S,M}}{{time=[[1]]}}{{range=Touch}}{{duration=[[1d4+ceil(@{selected|casting-level}/2)]] attacks}}{{aoe=1 creature}}{{save=None}}{{reference=PHB p163}}SpellData=[w:Stoneskin,lv:4,sp:1,gp:500,cs:VSM]{{effects=Creature gains virtual immunity to any attack by cut, blow, projectile, or the like. Magical attacks from spells like fireball, magic missile, lightning bolt have their normal effects.}}{{materials=Granite and diamond dust sprinkled on the recipient\'s skin, costing no less than 500gp}}'},
						{name:'Strength',type:'MUspellL2',ct:'100',charge:'uncharged',cost:'0.1',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}}{{title=@{selected|casting-name} casts\nStrength\nas a level @{selected|casting-level} caster}}{{splevel=Level 2 Wizard}}{{school=Alteration}}Specs=[Strength,MUspellL2,1H,Alteration]{{components=V, S, M}}{{time=[[1]]Turn}}{{range=Touch}}{{duration=[[@{selected|casting-level}]] Hours}}{{aoe=Creature touched}}{{healing=[Make them Stronger](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Who gains strength?|token_id}|Strength|[[60*@{selected|casting-level}]]|-1|Stronger than normal|strong)}}{{save=None}}{{reference=PHB p146}}SpellData=[w:Strength,lv:2,sp:100,gp:0.1,cs:VSM]{{effects=Increases the Strength of the character by a number of points -- or tenths of points after 18 Strength is attained (only if the character is a warrior).}}{{materials=A few hairs, or a pinch of dung, from a particularly strong animal--ape, bear, ox, etc. Cost 1sp to acquire}}'},
						{name:'Succor',type:'MUspellL9',ct:'1440',charge:'uncharged',cost:'5000',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nSuccor\nas a level @{selected|casting-level} caster}}{{splevel=Level 9 Wizard}}{{school=Alteration, Enchantment (reversable)}}Specs=[Succor,MUspellL9,1H,Alteration|Enchantment]{{components=V,S,M}}{{time=1 to 4 days}}{{range=Touch}}{{duration=Special}}{{aoe=1 individual}}{{save=None}}{{reference=PHB p197}}SpellData=[w:Succor,lv:9,sp:1440,gp:5000,cs:VSM]{{effects=The wizard creates a powerful magic in some specially prepared object--a statuette, a jeweled rod, a gem, etc. This object radiates magic, for it contains the power to instantaneously transport its possessor to the abode of the wizard who created it.)}}{{materials=Include gemstones totalling not less than 5,000 gp value (whether they are faceted gems or not is immaterial)}}'},
						{name:'Suggestion',type:'MUspellL3',ct:'3',charge:'uncharged',cost:'0.5',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nSuggestion\nas a level @{selected|casting-level} caster}}{{splevel=Level 3 Wizard}}{{school=Enchantment/Charm}}Specs=[Suggestion,MUspellL3,1H,Enchantment-Charm]{{components=V,M}}{{time=[[3]]}}{{range=[30 yards](!rounds --aoe @{selected|token_id}|circle|yards|0|60||magic|true)}}{{duration=[[1+@{selected|casting-level}]] hours}}{{aoe=[[1]] creature}}{{save=[Negates](!\\amp#13;\\amp#47;r 1d20 save vs. spell for Suggestion)}}{{reference=PHB p153}}{{healing=[Make a Suggestion](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Select suggestable target|token_id}|Suggestion|[[60+(60*@{selected|casting-level})]]|-1|Agrees with the Wizard\'s Suggestion and getting on with it|chained-heart)}}SpellData=[w:Suggestion,lv:3,sp:3,gp:0.5,cs:VM]{{effects=Influences the actions of the chosen recipient by the utterance of a few words--phrases or a sentence or two--suggesting a course of action desirable to the spellcaster.}}{{materials=A snake\'s tongue and either a bit of honeycomb or a drop of sweet oil. In total 5sp}}'},
						{name:'Summon-Shadow',type:'MUspellL5',ct:'5',charge:'uncharged',cost:'5',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nSummon Shadow\nas a level @{selected|casting-level} caster}}{{splevel=Level 5 Wizard}}{{school=Conjuration-Summoning, Necromancy}}Specs=[Summon Shadow,MUspellL5,1H,Conjuration-Summoning|Necromancy]{{components=V,S,M}}{{time=[[5]]}}{{range=[[10]] yards}}{{duration=[[1+@{selected|casting-level}]] rounds}}{{aoe=[10ft. cube](!rounds --aoe @{selected|token_id}|square|feet|30|10||dark)}}{{save=None}}{{reference=PHB p171}}SpellData=[w:Summon Shadow,lv:5,sp:5,gp:5,cs:VSM]{{effects=Conjures up [[floor(@{selected|casting-level}/3)]] Shadows. These monsters are under the control of the spellcaster and attack his enemies on command.}}{{materials=A bit of smoky quartz (only 5gp as imperfect)}}'},
						{name:'Summon-Swarm',type:'MUspellL2',ct:'2',charge:'uncharged',cost:'0.1',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nSummon Swarm\nas a level @{selected|casting-level} caster}}{{splevel=Level 2 Wizard}}{{school=Conjuration/Summoning}}Specs=[Summon Swarm,MUspellL2,1H,Conjuration-Summoning]{{components=V, S, M}}{{time=[[2]]}}{{range=[[60]]yds}}{{duration=until [[2*@{selected|casting-level}]]HP damage done to swarm}}{{aoe=[10ft cube](!rounds --aoe @{selected|token_id}|square|feet|180|10||acid)}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 saving throw)}}{{damage=[[1]] defending, [1d4+4](!\\amp#13;\\amp#47;r 1d4+4) otherwise}}{{reference=PHB p146}}SpellData=[w:Summon-Swarm,lv:2,sp:2,gp:0.1,cs:VSM]{{effects=Those in area take damage as above. To determine type of swarm roll [1d100](!\\amp#13;\\amp#47;r 1d100) 01-40 Rats / 41-70 Bats / 71-80 Spiders / 81-90 Centipedes and Beatles / 91-00 flying insects. }}{{materials=A square of red cloth worth 1sp}}'},
						{name:'Symbol',type:'MUspellL8',ct:'8',charge:'uncharged',cost:'10000',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nSymbol\nas a level @{selected|casting-level} caster}}{{splevel=Level 8 Wizard}}{{school=Conjuration/Summoning}}Specs=[Symbol,MUspellL8,1H,Conjuration-Summoning]{{components=V, S, M}}{{time=8}}{{range=Touch}}{{duration=Special}}{{aoe=Special}}{{save=Special}}{{reference=PHB p193}}SpellData=[w:Symbol,lv:8,sp:8,gp:10000,cs:VSM]{{effects=Creates magical runes affecting creatures that pass over, touch, or read the runes, or pass through a portal upon which the symbol is inscribed. \n**Death, Discord, Fear, Hopelessness, Insanity, Pain, Sleep, Stunning**}}{{materials=Powdered black opal and diamond dust, worth not less than 5,000 gp each.}}'},
						{name:'Tashas-Uncontrollable-Hideous-Laughter',type:'MUspellL2',ct:'2',charge:'uncharged',cost:'0.5',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nTasha\'s Uncontrollable Hideous Laughter\nas a level @{selected|casting-level} caster}}{{splevel=Level 2 Wizard}}{{school=Enchantment/Charm}}Specs=[Tashas Uncontrollable Hideous Laughter,MUspellL2,1H,Enchantment-Charm]{{components=V, S, M}}{{time=[[2]]}}{{range=[[60]] yds}}{{duration=[[@{selected|casting-level}]] rounds}}{{aoe=Up to [[floor(@{selected|casting-level}/3)]] creatures in [30ft area](!rounds --aoe @{selected|token_id}|circle|feet|180|30||magic)}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 saving throw)}}{{reference=PHB p146}}{{damage=Make em laugh! [Characters](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Select comedy audience|token_id}|Tashas-UHL|99|0|Recovering from laughing, -2 STR|screaming) and/or [Monsters](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Select comedy audience|token_id}|Tashas-UHL-monster|99|0|Recovering from laughing, -2 to attack and damage rolls|screaming)}}SpellData=[w:Tashas-Uncontrollable-Hideous-Laughter,lv:2,sp:2,gp:0.5,cs:VSM]{{effects=The victim of this spell perceives everything as hilariously funny.}}{{materials=A small feather and minute tarts costing 5sp. The tarts are hurled at the subjects, while the feather is waved in one hand.}}'},
						{name:'Taunt',type:'MUspellL1',ct:'1',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nTaunt\nas a level @{selected|casting-level} caster}}{{splevel=Level 1 Wizard}}{{school=Enchantment}}Specs=[Taunt,MUspellL1,1H,Enchantment-Charm]{{components=V,S, M}}{{time=[[1]]}}{{range=[[60]] yds.}}{{duration=[[1]]round}}{{aoe=[30ft. radius](!rounds --aoe @{selected|token_id}|circle|yards|60|20||dark)}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 save vs. Taunt)}}{{reference=PHB p138}}{{damage=[Taunt Who?](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Taunt Who or What?|token_id}|Taunt|1|-1|Taunted creature attacks spellcaster|archery-target)}}SpellData=[w:Taunt,lv:1,sp:1,gp:0,cs:VSM]{{effects=Jape and jeer effectively at a single type of creature with an Intelligence of 2 or greater to make them rush forth in fury to do battle with the spellcaster.}}{{materials=A slug (free), which is hurled at the creatures to be taunted.}}'},
						{name:'Telekinesis',type:'MUspellL5',ct:'5',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nTelekinesis\nas a level @{selected|casting-level} caster}}{{splevel=Level 5 Wizard}}{{school=Alteration}}Specs=[Telekinesis,MUspellL5,1H,Alteration]{{components=V,S}}{{time=[[5]]}}{{range=[[10*@{selected|casting-level}]] yards}}{{duration=Sustained=[[2+@{selected|casting-level}]] rounds\nHurl:[[1]] round}}{{aoe=Sustained:[[[10*@{selected|casting-level}]] yards](!rounds --aoe @{selected|token_id}|circle|yards|0|[[20*@{selected|casting-level}]]||magic|true)\nHurl:Objects in [10ft cube](!rounds --aoe @{selected|token_id}|square|feet|[[30*@{selected|casting-level}]]|10||magic), range [[10*@{selected|casting-level}]]ft.}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 save vs. Telekinesis spell)}}{{healing=[Sustained pushing](!rounds --target caster|@{selected|token_id}|Telekinesis|[[2+@{selected|casting-level}]]|-1|Pushing object below 25lb at up to 20ft per round|grab) at 20ft/round}}{{reference=PHB p171}} SpellData=[w:Telekinesis,lv:5,sp:5,gp:0,cs:VS]{{effects=Move objects by concentrating on moving them mentally. The spell can provide either a gentle, sustained force or a single short, violent thrust.}}'},
						{name:'Teleport',type:'MUspellL5',ct:'2',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nTeleport\nas a level @{selected|casting-level} caster}}{{splevel=Level 5 Wizard}}{{school=Alteration}}Specs=[Teleport,MUspellL5,0H,Alteration]{{components=V}}{{time=[[2]]}}{{range=Touch}}{{duration=Instantaneous}}{{aoe=Special}}{{save=None}}{{reference=PHB p172}}SpellData=[w:Teleport,lv:5,sp:2,gp:0,cs:V]{{effects=Instantly transports himself, along with a maximum weight of [[250+(150*[[{ {@{selected|casting-level}-10}, {0} }kh1]])]] pounds that is on or being touched by the spellcaster, to a well known destination.}}'},
						{name:'Teleport-Without-Error',type:'MUspellL7',ct:'1',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nTeleport Without Error\nas a level @{selected|casting-level} caster}}{{splevel=Level 7 Wizard}}{{school=Alteration}}Specs=[Teleport Without Error,MUspellL7,0H,Alteration]{{components=V}}{{time=[[1]]}}{{range=Touch}}{{duration=Instantaneous}}{{aoe=Special}}{{save=None}}{{reference=PHB p187}}SpellData=[w:Teleport Without Error,lv:7,sp:1,gp:0,cs:V]{{effects=Transport the caster, along with the material weight noted for a *teleport* spell (see PHB p172), to any known location in his home plane with no chance for error.}}'},
						{name:'Temporal-Reinstatement',type:'MUspellL9',ct:'9',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nTemporal Reinstatement\nas a level @{selected|casting-level} caster}}{{splevel=Level 9 Wizard}}{{school=Alteration (reversable)}}Specs=[Temporal Reinstatement,MUspellL9,0H,Alteration]{{components=V}}{{time=9}}{{range=[[[10]] yards](!rounds --aoe @{selected|token_id}|circle|yards|0|20||cold|true)}}{{duration=Permanent}}{{aoe=1 creature}}{{save=None}}{{reference=PHB p197}}SpellData=[w:Temporal Reinstatement,lv:9,sp:9,gp:0,cs:V]{{effects=Removes or reverses a *Temporal Stasis* spell. Note that the spell requires only a single word and no somatic or material components}}'},
						{name:'Temporal-Stasis',type:'MUspellL9',ct:'9',charge:'uncharged',cost:'400',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nTemporal Stasis\nas a level @{selected|casting-level} caster}}{{splevel=Level 9 Wizard}}{{school=Alteration (reversable)}}Specs=[Temporal Stasis,MUspellL9,1H,Alteration]{{components=V,S,M}}{{time=9}}{{range=[[[10]] yards](!rounds --aoe @{selected|token_id}|circle|yards|0|20||cold|true)}}{{duration=Permanent}}{{aoe=1 creature}}{{save=None}}{{reference=PHB p197}}SpellData=[w:Temporal Stasis,lv:9,sp:9,gp:400,cs:VSM]{{effects=The wizard places the recipient creature into a state of suspended animation.}}{{materials=A powder composed of diamond, emerald, ruby, and sapphire dust, with each crushed stone worth at least 100 gp}}'},
						{name:'Tensers-Transformation',type:'MUspellL6',ct:'100',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nTenser\'s Transformation\nas a level @{selected|casting-level} caster}}{{splevel=Level 6 Wizard}}{{school=Alteration, Evocation}}Specs=[Tensers Transformation,MUspellL6,1H,Alteration|Evocation]{{components=V,S,M}}{{time=[[6]]}}{{range=[[0]]}}{{duration=[@{selected|casting-level} rounds](!rounds --target caster|@{selected|token_id}|Tensers-transformation|@{selected|casting-level}|-1|He\'s gone berserk! AC 4 better, HPx2, +2 dmg with dagger, +2 attk \\amp dmg with staff|strong)}}{{aoe=The caster}}{{save=None}}{{reference=PHB p181}}SpellData=[w:Reincarnation,lv:6,sp:100,gp:0,cs:VSM]{{effects=The size and strength of the wizard increase to heroic proportions, so he becomes a formidable fighting machine: a berserk fighter! }}{{materials=A *potion of heroism* (300gp to buy) (or *superheroism* costing 450gp) that the wizard must consume during the course of uttering the spell. Consume potion using the *Use MI* action}}'},
						{name:'Tensers-floating-disc',type:'MUspellL1',ct:'1',charge:'uncharged',cost:'1',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nTenser\'s Floating Disc\nas a level @{selected|casting-level} caster}}{{splevel=Level 1 Wizard}}{{school=Evocation}}Specs=[Tensers Floating Disc,MUspellL1,1H,Evocation]{{components=V,S,M}}{{time=[[1]]}}{{range=[[20]] yds}}{{duration=[[3+@{selected|Casting-level}]] turns}}{{aoe=3ft diameter disc}}{{save=None}}{{reference=PHB p138}}SpellData=[w:Tensers Floating Disc,lv:1,sp:1,gp:1,cs:VSM]{{effects=Creates a floating disc 3 feet in diameter and holds [[@{selected|casting-level}*100]] pounds of weight.}}{{materials=A drop of mercury, a rare \'magical\' liquid metal costing 1gp a drop}}'},
						{name:'Time-Stop',type:'MUspellL9',ct:'9',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nTime Stop\nas a level @{selected|casting-level} caster}}{{splevel=Level 9 Wizard}}{{school=Alteration}}Specs=[Time Stop,MUspellL9,0H,Alteration]{{components=V}}{{time=9}}{{range=[[0]]}}{{duration=Special}}{{aoe=[15ft radius](!rounds --aoe @{selected|token_id}|circle|feet|0|30||magic|true)}}{{save=None}}{{reference=PHB p197}}SpellData=[w:Time Stop,lv:9,sp:9,gp:0,cs:V]{{effects=The wizard causes the flow of time to stop for one round in the area of effect. Outside this area the sphere simply seems to shimmer for an instant. Inside the sphere, the caster is free to act for 1d3 rounds of apparent time.}}'},
						{name:'To-hit-Ice-knife',type:'',ct:'0',charge:'uncharged',cost:'0',body:'**@{selected|token_name} hits AC [[( [[0]]-[[1d20]]+([[@{selected|thac0}]]))]] with Ice Knife**\n/w "@{selected|character_name}" [Do 1d10 Damage](!\\amp#13;\\amp#47;r 1d10 HP damage from the Ice Knife)'},
						{name:'To-hit-Melfs-Acid-Arrow',type:'',ct:'0',charge:'uncharged',cost:'0',body:'**@{selected|token_name} hits AC [[( [[0]] - [[1d20]] + ([[21-@{selected|level-class2}]]) )]] with his Melf\'s Acid Arrow.**\n/w "@{selected|character_name}" [Do Damage](!\\amp#13;\\amp#47;r 2d4)'},
						{name:'To-hit-Melfs-Minute-Meteors',type:'',ct:'0',charge:'uncharged',cost:'0',body:'**@{selected|token_name} hits AC [[( [[0]]-[[1d20]]+(([[@{selected|bar2}]])-2 ))]] with Melf\'s Minute Meteors**\n/w "@{selected|character_name}" [Do 1d4 Damage](!\\amp#13;\\amp#47;r 1d4 HP damage from the meteor)'},
						{name:'Tongues',type:'MUspellL3',ct:'3',charge:'uncharged',cost:'10',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nTongues\nas a level @{selected|casting-level} caster}}{{splevel=Level 3 Wizard (reversable)}}{{school=Alteration}}Specs=[Tongues,MUspellL3,1H,Alteration]{{components=V, M}}{{time=[[3]]}}{{range=[[0]]}}{{duration=[[@{selected|casting-level}]] rounds}}{{aoe=[30ft. radius](!rounds --aoe @{selected|token_id}|circle|feet|0|60||light)}}{{save=None}}{{reference=PHB p153}}{{healing=[Universal Translator](!rounds --target caster|@{selected|token_id}|Tongues-Translate|[[@{selected|casting-level}]]|-1|Speaks your language|Strong)}}{{damage=[Speak in Tongues](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Speak Gobbledegook|token_id}|ReverseTongues|[[@{selected|casting-level}]]|-1|Do not understand - reverse Tongues|edge-crack)}}SpellData=[w:Tongues,lv:3,sp:3,gp:10,cs:VM]{{effects=Speak and understand additional languages, whether they are racial tongues or regional dialects, but not with animals.}}{{materials=A small clay model of a ziggurat costing 10gp, which shatters when the spell is pronounced.}}'},
						{name:'Transmute-Dust-to-Water',type:'MUspellL6',ct:'5',charge:'uncharged',cost:'500',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nTransmute Dust to Water\nas a level @{selected|casting-level} caster}}{{splevel=Level 6 Wizard}}{{school=Alteration (Reversable)}}Specs=[Transmute Dust to Water,MUspellL6,1H,Alteration]{{components=V,S,M}}{{time=[[5]]}}{{range=[[60]] yards}}{{duration=Permanent}}{{aoe=[@{selected|casting-level} x 10ft cubes](!rounds --aoe @{selected|token_id}|rectangle|feet|180|||fire)}}{{save=None }}{{reference=PHB p182}}SpellData=[w:Transmute Dust to Water,lv:6,sp:5,gp:500,cs:VSM]{{effects=Simply a very high-powered create water spell. See PHB p199}}{{materials=Diamond dust of at least 500 gp value, a pinch of dust and a bit of seashell}}'},
						{name:'Transmute-Mud-to-Rock',type:'MUspellL5',ct:'5',charge:'uncharged',cost:'0.02',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nTransmute Mud to Rock\nas a level @{selected|casting-level} caster}}{{splevel=Level 5 Wizard}}{{school=Alteration}}Specs=[Transmute Mud to Rock,MUspellL5,1H,Alteration]{{components=V, S, M}}{{time=[[5]]}}{{range=[[10*@{selected|casting-level}]] yds}}{{duration=Permanent}}{{aoe=[[@{selected|casting-level}]] x [20ft cubes](!rounds --aoe @{selected|token_id}|rectangle|feet|[[30*@{selected|casting-level}]]|||dark)}}{{save=None}}{{reference=PHB p172}}SpellData=[w:Transmute-Mud-to-Rock,lv:5,sp:5,gp:0.02,cs:VSM]{{effects=Transmutes mud into soft rock (sandstone, mudstone or similar material) permanently unless magically changed.}}{{materials=Sand, lime and water, costing 2cp}}'},
						{name:'Transmute-Rock-to-Mud',type:'MUspellL5',ct:'5',charge:'uncharged',cost:'0.02',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nTransmute Rock to Mud\nas a level @{selected|casting-level} caster}}{{splevel=Level 5 Wizard}}{{school=Alteration}}Specs=[Transmute Rock to Mud,MUspellL5,1H,Alteration]{{components=V, S, M}}{{time=[[5]]}}{{range=[[10*@{selected|casting-level}]] yds}}{{duration=Special}}{{aoe=[[@{selected|casting-level}]] x [20ft cubes](!rounds --aoe @{selected|token_id}|rectangle|feet|[[30*@{selected|casting-level}]]|||dark)}}{{save=None}}{{reference=PHB p172}}SpellData=[w:Transmute-Rock-to-Mud,lv:5,sp:5,gp:0.02,cs:VSM]{{effects=Lasts until Dispel Magic or Mud to Rock cast or evaporates to dirt in [1d6x2xLevel](!\\amp#13;\\amp#47;r 1d6*[[2*@{selected|casting-level}]]) days. Creatures sink and suffocate unless taller than depth or can levitate or fly or light enough to float.}}{{materials=Clay and water costing 2cp}}'},
						{name:'Transmute-Water-to-Dust',type:'MUspellL6',ct:'5',charge:'uncharged',cost:'500',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nTransmute Water to Dust\nas a level @{selected|casting-level} caster}}{{splevel=Level 6 Wizard}}{{school=Alteration (Reversable)}}Specs=[Transmute Water to Dust,MUspellL6,1H,Alteration]{{components=V,S,M}}{{time=[[5]]}}{{range=[[60]] yards}}{{duration=Permanent}}{{aoe=[@{selected|casting-level} x 10ft cubes](!rounds --aoe @{selected|token_id}|rectangle|feet|180|||fire)}}{{save=None or [Special](!\\amp#13;\\amp#47;gmroll 1d20 save vs. Transmute Water to Dust spell)}}{{reference=PHB p182}}SpellData=[w:Transmute Water to Dust,lv:6,sp:5,gp:500,cs:VSM]{{effects=Subject area instantly undergoes a change from liquid to powdery dust. Creatures of the Elemental Plane of Water suffer [@{selected|casting-level}d6](!\\amp#13;\\amp#47;r @{selected|casting-level}d6) HP damage, save to halve. Only one such creature can be affected by any single casting of this spell.\nSee PHB p182 for full details}}{{materials=Diamond dust of at least 500 gp value and a bit of seashell}}'},
						{name:'Trap-The-Soul',type:'MUspellL8',ct:'1',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casting\nTrap The Soul\nas a level @{selected|casting-level} caster}}{{splevel=Level 8 Wizard}}{{school=Conjuration-Summoning}}Specs=[Trap The Soul,MUspellL8,1H,Conjuration-Summoning]{{components=V,S,M}}{{time=Special+1}}{{range=[[10]] yards}}{{duration=Permanent until broken}}{{aoe=1 creature}}{{save=[Special](!\\amp#13;\\amp#47;gmroll 1d20 save vs. Screen spell)}}{{reference=PHB p193}}SpellData=[w:Trap The Soul,lv:8,sp:1,gp:0,cs:VSM]{{effects=Forces the creature\'s life force (and its material body) into a special prison gem enchanted by the spellcaster.}}'},
						{name:'True-Seeing',type:'MUspellL6',ct:'10',charge:'uncharged',cost:'300',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nTrue Seeing\nas a level @{selected|casting-level} caster}}{{splevel=Level 6 Wizard}}{{school=Divination}}Specs=[True Seeing,MUspellL6,1H,Divination]{{components=V,S,M}}{{time=[[1]] round}}{{range=Touch}}{{duration=[@{selected|casting-level} rounds](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Who wants True Seeing?|token_id}|True-seeing|@{selected|casting-level}|-1|Can see truly|bleeding-eye)}}{{aoe=Line of sight, 60ft}}{{save=None }}{{reference=PHB p182}}SpellData=[w:True Seeing,lv:6,sp:10,gp:300,cs:VSM]{{effects=Confers the ability to see all things as they actually are.}}{{materials=An ointment for the eyes that is made from a very rare mushroom powder, saffron, and fat. It costs no less than 300gp per use and must be aged for 1d6 months}}'},
						{name:'Undetectable-Alignment',type:'MUspellL2',ct:'10',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nUndetectable Alignment\nas a level @{selected|casting-level} caster}}{{splevel=Level 2 Wizard}}{{school=Divination (reversable)}}Specs=[Undetectable Alignment,MUspellL2,1H,Divination]{{components=V, S}}{{time=[[1]] round}}{{range=[10 yards](!rounds --aoe @{selected|token_id}|circle|yards|0|20||dark|true)}}{{duration=[[@{selected|casting-level}]]rounds}}{{aoe=[[1]]creature or object per [[2]]rounds}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 save vs. Know Alignment spell)}}{{reference=PHB p143 (reverse Know Alignment)}}SpellData=[w:Undetectable-Alignment,lv:2,sp:10,gp:0,cs:VS]{{effects=Conceals the alignment of an object or creature for 24 hours--even from a *know alignment* spell.}}'},
						{name:'Unseen-Servant',type:'MUspellL1',ct:'1',charge:'uncharged',cost:'0.01',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nUnseen Servant\nas a level @{selected|casting-level} caster}}{{splevel=Level 1 Wizard}}{{school=Conjuration/Summoning}}Specs=[Unseen Servant,MUspellL1,1H,Conjuration-Summoning]{{components=V, S, M}}{{time=[[1]]}}{{range=[[0]]}}{{duration=1 hour and [[@{selected|casting-level}]] turns}}{{aoe=[[30]]ft. radius}}{{save=None}}{{reference=PHB p138}}SpellData=[w:Unseen-Servant,lv:1,sp:1,gp:0.01,cs:VSM]{{effects=An invisible, mindless, and shapeless force, used to step and fetch, open unstuck doors, and hold chairs, as well as to clean and mend.}}{{materials=A piece of string and a bit of wood, worth 1cp.}}'},
						{name:'VT-Attack',type:'',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Vampiric Touch}}{{desc=@{selected|token_name} hits AC [[ [[0]] - [[1d20]] + @{selected|thac0} +@{selected|strengthhit|max} ]] with Vampiric Touch}}{{desc1=If you hit [Do Damage](~MU-Spells-DB|VT-Damage)}}'},
						{name:'VT-Damage',type:'',ct:'0',charge:'uncharged',cost:'0',body:'!setattr --silent --charid @{selected|character_id} --VT-original-hp|@{selected|hp}\n/w "@{selected|character_name}" \\amp{template}{{name=Vampiric Touch}} !modattr --charid @{selected|character_id} --silent --hp|{{desc=Drained [[[[floor(@{selected|level-class2}/2)]]d6]] HP of damage}} !!!\n!rounds --removestatus vampiric-touch --addtargetstatus @{selected|token_id}|VT-bonus|60|-1|Benefiting from extra Vampiric hit points|strong'},
						{name:'Vacancy',type:'MUspellL4',ct:'4',charge:'uncharged',cost:'100',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casting\nVacancy\nas a level @{selected|casting-level} caster}}{{splevel=Level 4 Wizard}}{{school=Alteration, Illusion-Phantasm}}Specs=[Vacancy,MUspellL4,1H,Alteration|Illusion-Phantasm]{{components=V,S,M}}{{time=[[4]]}}{{range=[[10*@{selected|casting-level}]] yards}}{{duration=[[@{selected|casting-level}]] hours}}{{aoe=[[[10*@{selected|casting-level}]]ft. radius](!rounds --aoe @{selected|token_id}|circle|feet|[[30*@{selected|casting-level}]]|[[10*@{selected|casting-level}]]||dark)}}{{save=None}}{{reference=PHB p163}}SpellData=[w:Vacancy,lv:4,sp:4,gp:100,cs:VSM]{{effects=Causes an area to appear to be vacant, neglected, and unused. }}{{materials=A square of the finest black silk. This material component must be worth at least 100gp and is used up during spellcasting}}'},
						{name:'Vampiric-Touch',type:'MUspellL3',ct:'3',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nVampiric Touch\nas a level @{selected|casting-level} caster}}{{splevel=Level 3 Wizard}}{{school=Necromancy}}Specs=[Vampiric Touch,MUspellL3,1H,Necromancy]{{components=V,S}}{{time=[[3]]}}{{range=[[0]]}}{{duration=[[1]] touch}}{{aoe=The caster}}{{save=None}}{{damage=[Gain the touch](!rounds --target caster|@{selected|token_id}|Vampiric-touch|10|-1|Has a Vampiric Touch for [[floor(@{selected|casting-level}/2)]]d6 damage if hit|death-zone)}}{{reference=PHB p153}}SpellData=[w:Vampiric-Touch,lv:3,sp:3,gp:0,cs:VS]{{effects=Touch an opponent in melee with a successful attack roll, and the opponent loses 1d6 hit points for every two caster levels, to a maximum drain of 6d6 points for a 12th-level caster, and the hit points are added to the caster\'s total.}}'},
						{name:'Vanish',type:'MUspellL7',ct:'2',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nVanish\nas a level @{selected|casting-level} caster}}{{splevel=Level 7 Wizard}}{{school=Alteration}}Specs=[Vanish,MUspellL7,0H,Alteration]{{components=V}}{{time=[[2]]}}{{range=Touch}}{{duration=Special}}{{aoe=1 object}}{{save=None}}{{reference=PHB p187}}SpellData=[w:Vanish,lv:7,sp:2,gp:0,cs:V]{{effects=Causes an object to vanish (i.e., to be teleported as if by a teleport spell) if it weighs no more than [[50*@{selected|casting-level}]] pounds. The maximum volume of material that can be affected is [[3*@{selected|casting-level}]] cu.ft. An object that exceeds either limitation is unaffected and the spell fails.}}'},
						{name:'Veil',type:'MUspellL6',ct:'6',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nVeil\nas a level @{selected|casting-level} caster}}{{splevel=Level 6 Wizard}}{{school=Illusion-Phantasm}}Specs=[Veil,MUspellL6,1H,Illusion-Phantasm]{{components=V,S}}{{time=[[6]]}}{{range=[[10*@{selected|casting-level}]] yards}}{{duration=[@{selected|casting-level} turns](!rounds --target caster|@{selected|token_id}|Veil|[[10*@{selected|casting-level}]]|-1|Drawn a veil over the party and/or area|stopwatch)}}{{aoe=[@{selected|casting-level} x 20ft cubes](!rounds --aoe @{selected|token_id}|rectangle|feet|[[10*@{selected|casting-level}]]|||magic)}}{{save=None}}{{reference=PHB p182}}SpellData=[w:Veil,lv:6,sp:6,gp:0,cs:VS]{{effects=Instantly change the appearance of the caster\'s surroundings and party or create hallucinatory terrain so as to fool even the most clever creatures.}}'},
						{name:'Ventriloquism',type:'MUspellL1',ct:'1',charge:'uncharged',cost:'0.1',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nVentriloquism\nas a level @{selected|casting-level} caster}}{{splevel=Level 1 Wizard}}{{school=Alteration}}Specs=[Ventriloquism,MUspellL1,0H,Alteration]{{components=V,M}}{{time=[[1]]}}{{range=[[[{{10*@{selected|Casting-level}},{90}}kl1]] yards](!rounds --aoe @{selected|token_id}|circle|yards|0|[[{{20*@{selected|Casting-level}},{180}}kl1]]||magic|true)}}{{duration=[[4+@{selected|Casting-level}]] rounds}}{{aoe=1 creature or object}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 saving throw vs Ventriloquism)}}{{reference=PHB p139}}{{healing=[Throw voice](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Select Ventriloquist|token_id}|Ventriloquism|[[4+@{selected|casting-level}]]|-1|Ventriloquist... Gottle O Geer... See? It works!|radioactive)}}SpellData=[w:Ventriloquism,lv:1,sp:1,gp:0.1,cs:VM]{{effects=Make the recipient\'s voice or a similar sound seem to issue from someplace else, such as from another creature, a statue, from behind a door, down a passage, etc.}}{{materials=A parchment rolled up into a small cone, costing 1sp.}}'},
						{name:'Vision',type:'MUspellL7',ct:'7',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nVision\nas a level @{selected|casting-level} caster}}{{splevel=Level 7 Wizard}}{{school=Divination}}Specs=[Vision,MUspellL7,0H,Divination]{{components=V,S,M}}{{time=[[7]]}}{{range=[[0]]}}{{duration=Special}}{{aoe=The caster}}{{save=None}}{{reference=PHB p187}}SpellData=[w:Vision,lv:7,sp:7,gp:0,cs:VSM]{{effects=Calls upon whatever power the caster desires aid from and can ask a question that will be answered with a vision.}}{{materials=The sacrifice of something valued by the spellcaster or by the power supplicated. The more precious the sacrifice, the better the chance of spell success. A very precious item grants a bonus of +1 to the dice roll, an extremely precious item adds +2, and a priceless item adds +3. DM will adjudicate the cost, which must be deducted from the character}}'},
						{name:'Wall-of-Fire',type:'MUspellL4',ct:'4',charge:'uncharged',cost:'0.5',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nWall of Fire\nas a level @{selected|casting-level} caster}}{{splevel=Level 4 Wizard}}{{school=Evocation}}Specs=[Wall of Fire,MUspellL4,1H,Evocation]{{components=V, S, M}}{{time=[[4]]}}{{range=[[60]] yds.}}{{duration=Special}}{{aoe=[Sheet of Flame](!rounds --aoe @{selected|token_id}|wall|feet|60|3||fire) or [A Ring](!rounds --aoe @{selected|token_id}|circle|feet|60|||fire)}}{{save=None}}{{reference=PHB p163}}{{damage=**Doubled for undead and susceptible creatures**\n[2d6+@{selected|casting-level}](!\\amp#13;\\amp#47;r 2d6+@{selected|casting-level} damage from passing through Wall of Fire)Passing through\n[2d4](!\\amp#13;\\amp#47;r 2d4 damage from within 10ft of Wall of Fire) within 10ft\n[1d4](!\\amp#13;\\amp#47;r 1d4 damage from within 20ft of Wall of Fire) within 20ft}}SpellData=[w:Wall-of-Fire,lv:4,sp:4,gp:0.5,cs:VSM]{{effects=Brings forth an immobile, blazing curtain of magical fire of shimmering color--violet or reddish blue. The spell creates either an opaque [sheet of flame](!rounds --aoe @{selected|token_id}|wall|feet|60|3||fire) of up to [[@{selected|casting-level}]] 20-foot squares, or [a ring](!rounds --aoe @{selected|token_id}|circle|feet|60|||fire) with a radius of up to [[10+(5*ceil(@{selected|casting-level}/2))]] feet. In either form, the wall of fire is 20 feet high.}}{{materials=Phosphorus worth 5sp}}'},
						{name:'Wall-of-Fog',type:'MUspellL1',ct:'1',charge:'uncharged',cost:'0.01',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nWall of Fog\nas a level @{selected|casting-level} caster}}{{splevel=Level 1 Wizard}}{{school=Evocation}}Specs=[Wall of Fog,MUspellL1,1H,Evocation]{{components=V, S, M}}{{time=[[1]]}}{{range=[[30]] yds.}}{{duration=[[2d4+@{selected|casting-level}]] rounds}}{{aoe=[20+(10*@{selected|casting-level})cu.ft](!rounds --aoe @{selected|token_id}|wall|feet|90|||white)}}{{save=None}}{{reference=PHB p139}}SpellData=[w:Wall-of-Fog,lv:1,sp:1,gp:0.01,cs:VSM]{{effects=Creates a billowing wall of misty vapors in any area within the spell range, which obscures all sight, normal and infravision, beyond 2 feet.}}{{materials=A pinch of split dried peas worth 1cp}}'},
						{name:'Wall-of-Force',type:'MUspellL5',ct:'5',charge:'uncharged',cost:'5000',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nWall of Force\nas a level @{selected|casting-level} caster}}{{splevel=Level 5 Wizard}}{{school=Evocation}}Specs=[Wall of Force,MUspellL5,1H,Evocation]{{components=V, S, M}}{{time=[[5]]}}{{range=[[30]] yds.}}{{duration=[[10+@{selected|casting-level}]] rounds}}{{aoe=[a wall](!rounds --aoe @{selected|token_id}|wall|feet|90||2|magic) [sphere](!rounds --aoe @{selected|token_id}|circle|feet|90|[[2*@{selected|casting-level}]]||magic) [hemisphere](!rounds --aoe @{selected|token_id}|circle|feet|90|[[(3*@{selected|casting-level})]]||magic)}}{{save=None}}{{reference=PHB p172}}SpellData=[w:Wall-of-Force,lv:5,sp:5,gp:5000,cs:VSM]{{effects=Creates an invisible barrier in the locale desired by the caster, up to the spell\'s range, which cannot move and is totally unaffected by most spells, including *Dispel Magic*.\nThe wizard can, if desired, form [a wall](!rounds --aoe @{selected|token_id}|wall|feet|90||2|magic) up to [[10*@{selected|casting-level}]]ft-sq. or [sphere](!rounds --aoe @{selected|token_id}|circle|feet|90|[[2*@{selected|casting-level}]]||magic) of [[@{selected|casting-level}]]ft radius or [hemisphere](!rounds --aoe @{selected|token_id}|circle|feet|90|[[(3*@{selected|casting-level})]]||magic) of [[(3*@{selected|casting-level})/2]]ft radius. The wall of force must be continuous and unbroken when formed; if its surface is broken by any object or creature, the spell fails. The caster can end the spell on command.}}{{materials=A pinch of powdered diamond worth 5,000 gp.}}'},
						{name:'Wall-of-Ice',type:'MUspellL4',ct:'4',charge:'uncharged',cost:'10',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casting\nWall of Ice\nas a level @{selected|casting-level} caster}}{{splevel=Level 4 Wizard}}{{school=Evocation}}Specs=[Wall of Ice,MUspellL4,1H,Evocation]{{components=V,S,M}}{{time=[[4]]}}{{range=[[10*@{selected|casting-level}]] yards}}{{duration=[[@{selected|casting-level}]] turns}}{{aoe=Special}}{{save=None}}{{reference=PHB p164}}SpellData=[w:Wall of Ice,lv:4,sp:4,gp:10,cs:VSM]{{effects=Three forms:\n**A)** [Ice plane](!rounds --aoe @{selected|token_id}|wall|feet|[[30*@{selected|casting-level}]]||[[ceil(@{selected|casting-level}/12)]]|cold). A sheet of strong, hard ice is created. Primarily defensive, stopping pursuers. [[@{selected|casting-level}]]inch thick covering [[@{selected|casting-level}]] x [[10]]ft.sq. (i.e. [[10*@{selected|casting-level}]]ft long and [[10]]ft high, or a wall [[5*@{selected|casting-level}]]ft long and [[20]]ft high, etc.). Breaking through ice suffers [[2]]HP damage per inch of thickness. Fire-using creatures suffer [[3]]HP damage, cold-using only [[1]]HP damage. Can be oriented in any fashion as long as it is anchored along one or more sides.\n**B)** [Hemisphere](!rounds --aoe @{selected|token_id}|circle|feet|[[30*@{selected|casting-level}]]|||cold).Max diameter is [[6+2*@{selected|casting-level}]]ft. Lasts until it is broken, dispelled, or melted. Possible but difficult to trap mobile opponents under it.\n**C)** [Ice sheet](!rounds --aoe @{selected|token_id}|rectangle|feet|[[30*@{selected|casting-level}]]|||cold). Falls upon opponents. Covers [[@{selected|casting-level}]] x 10ft.sq. area. The sheet has the same effect as an ice storm\'s hail stones--[3d10](!\\amp#13;\\amp#47;gmroll 3d10)HP inflicted to creatures beneath it.}}{{materials=A small piece of quartz (10gp) or similar rock crystal}}'},
						{name:'Wall-of-Iron',type:'MUspellL5',ct:'5',charge:'uncharged',cost:'0.1',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nWall of Iron\nas a level @{selected|casting-level} caster}}{{splevel=Level 5 Wizard}}{{school=Evocation}}Specs=[Wall of Iron,MUspellL5,1H,Evocation]{{components=V,S,M}}{{time=[[5]]}}{{range=[[5*@{selected|casting-level}]] yards}}{{duration=Permanent}}{{aoe=[[[@{selected|casting-level}*15]] sq.ft.](!rounds --aoe @{selected|token_id}|wall|feet|[[15*@{selected|casting-level}]]|||)}}{{save=None}}{{reference=PHB p172}}SpellData=[w:Wall of Iron,lv:5,sp:5,gp:0.1,cs:VSM]{{effects=Creates a vertical iron wall [[(@{selected|casting-level}/4)]] inch thick which can be used to seal off a passage or close a breach. Can be created vertically resting on a flat surface, so that it can be tipped over to fall on and crush any creature beneath it.}}{materials=A small piece of sheet iron}}'},
						{name:'Wall-of-Stone',type:'MUspellL5',ct:'5',charge:'uncharged',cost:'0.1',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nWall of Stone\nas a level @{selected|casting-level} caster}}{{splevel=Level 5 Wizard}}{{school=Evocation}}Specs=[Wall of Stone,MUspellL5,1H,Evocation]{{components=V,S,M}}{{time=[[5]]}}{{range=[[5*@{selected|casting-level}]] yards}}{{duration=Permanent}}{{aoe=[[[@{selected|casting-level}*20]] sq.ft.](!rounds --aoe @{selected|token_id}|wall|feet|[[20*@{selected|casting-level}]]|||)}}{{save=None}}{{reference=PHB p173}}SpellData=[w:Wall of Stone,lv:5,sp:5,gp:0.1,cs:VSM]{{effects=Creates a wall of granite rock [[@{selected|casting-level}/4]] inch thick that merges into adjoining rock surfaces.}}{materials=A small block of granite}}'},
						{name:'Water-Breathing',type:'MUspellL3',ct:'3',charge:'uncharged',cost:'0.01',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nWater Breathing\nas a level @{selected|casting-level} caster}}{{splevel=Level 3 Wizard}}{{school=Alteration}}Specs=[Water Breathing,MUspellL3,1H,Alteration]{{components=V, S, M}}{{time=3}}{{range=Touch}}{{duration=[1d4+@{selected|casting-level}](!\\amp#13;\\amp#47;gmroll 1d4+@{selected|casting-level} hours duration) hours}}{{aoe=Creatures touched}}{{save=None}}{{healing=[Cast water breathing](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Select first fish|token_id}|Water-Breathing|99|0|Comfortably breathe underwater|strong)}}{{reference=PHB p153}}SpellData=[w:Water-Breathing,lv:3,sp:3,gp:0.01,cs:VSM]{{effects=Able to breathe water freely for the duration of the spell. The caster can touch more than one creature with a single casting; in this case the duration is divided by the number of creatures touched.}}{{materials=A short reed or piece of straw costing 1cp.}}'},
						{name:'Web',type:'MUspellL2',ct:'2',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nWeb\nas a level @{selected|casting-level} caster}}{{splevel=Level 2 Wizard}}{{school=Evocation}}Specs=[Web,MUspellL2,1H,Evocation]{{components=V,S,M}}{{time=[[2]]}}{{range=[[5*@{selected|casting-level}]] yds}}{{duration=[[2*@{selected|casting-level}]] turns}}{{aoe=Max of [[8]] [10ft cubes](!rounds --aoe @{selected|token_id}|square|feet|[[15*@{selected|casting-level}]]|10||dark), min [[10]]ft thick}}{{save=[Special](!\\amp#13;\\amp#47;gmroll 1d20 saving throw) or 1/2 strength}}{{reference=PHB p146}}{{damage=[Web them](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Who to Web?|token_id}|Web|[[20*@{selected|casting-level}]]|-1|Webbed, no or slow movement|cobweb)}}SpellData=[w:Web,lv:2,sp:2,gp:,cs:VSM]{{effects=Webs shoot forth from @{selected|casting-name}\'s hands. Like spider web but stronger, must be anchored to at least [[2]] opposing points. Must be max of [[8]] [[10]]ft cubes, but min [[10]]ft thick.}}{{materials=A bit of spider web (free)}}'},
						{name:'Weird',type:'MUspellL9',ct:'9',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nWeird\nas a level @{selected|casting-level} caster}}{{splevel=Level 9 Wizard}}{{school=Illusion-Phantasm}}Specs=[Weird,MUspellL9,1H,Illusion-Phantasm]{{components=V,S}}{{time=9}}{{range=[[30]] yards}}{{duration=Concentration}}{{aoe=[20ft radius](!rounds --aoe @{selected|token_id}|circle|feet|90|40||magic)}}{{save=[Special](!\\amp#13;\\amp#47;gmroll 1d20 save vs. Weird spell)}}{{reference=PHB p197}}SpellData=[w:Weird,lv:9,sp:9,gp:0,cs:VS]{{effects=Confronts those affected by it with phantasmal images of their most feared enemies, forcing an imaginary combat that seems real, but actually occurs in the blink of an eye.}}'},
						{name:'Whispering-Wind',type:'MUspellL2',ct:'2',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nWhispering Wind\nas a level @{selected|casting-level} caster}}{{splevel=Level 2 Wizard}}{{school=Alteration, Phantasm}}Specs=[Whispering Wind,MUspellL2,1H,Alteration|Phantasm]{{components=V,S}}{{time=[[2]]}}{{range=[[@{selected|Casting-level}]] miles}}{{duration=Special}}{{aoe=[[2]]ft radius}}{{save=None}}{{reference=PHB p147}}SpellData=[w:Whispering-Wind,lv:2,sp:2,gp:0,cs:VS]{{effects=Able to either send a message or cause some desired sound effect, which can travel as many miles above ground as the spellcaster has levels of experience, to a specific location within range that is familiar to the wizard.}}'},
						{name:'Wind-Wall',type:'MUspellL3',ct:'3',charge:'uncharged',cost:'10',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nWind Wall\nas a level @{selected|casting-level} caster}}{{splevel=Level 3 Wizard}}{{school=Alteration}}Specs=[Wind Wall,MUspellL3,1H,Alteration]{{components=V,S,M}}{{time=[[3]]}}{{range=[[10*@{selected|casting-level}]] yds}}{{duration=[[@{selected|casting-level}]] rounds}}{{aoe=[10ft high x (@{selected|casting-level}x5)ft long x 2ft thick](!rounds --aoe @{selected|token_id}|wall|feet|[[10*@{selected|casting-level}]]||2|lightning)}}{{save=[Save](!\\amp#13;\\amp#47;gmroll 1d20 save vs. wind wall gust) or rip from hands}}{{reference=PHB p154}}SpellData=[w:Wind Wall,lv:3,sp:3,gp:10,cs:VSM]{{effects=Brings forth an invisible vertical curtain of wind 2 feet thick and of considerable strength--a strong breeze sufficient to blow away any bird smaller than an eagle or tear papers and like materials from unsuspecting hands.}}{{materials=A tiny fan and a feather of exotic origin costing 10gp to source}}'},
						{name:'Wish',type:'MUspellL9',ct:'1',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nWish\nas a level @{selected|casting-level} caster}}{{splevel=Level 9 Wizard}}{{school=Conjuration-Summoning}}Specs=[Wish,MUspellL9,0H,Conjuration-Summoning]{{components=V}}{{time=Special}}{{range=Unlimited}}{{duration=Special}}{{aoe=Special}}{{save=[Special](!\\amp#13;\\amp#47;gmroll 1d20 save vs. Wish spell)}}{{reference=PHB p197}}SpellData=[w:Wish,lv:9,sp:1,gp:0,cs:V]{{effects=The *wish* spell is a more potent version of a *limited wish*. If it is used to alter reality with respect to damage sustained by a party, to bring a dead creature to life, or to escape from a difficult situation by lifting the spellcaster (and his party) from one place to another, it will not cause the wizard any disability.}}'},
						{name:'Wizard-Eye',type:'MUspellL4',ct:'100',charge:'uncharged',cost:'0.05',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casting\nWizard Eye\nas a level @{selected|casting-level} caster}}{{splevel=Level 4 Wizard}}{{school=Alteration}}Specs=[Wizard Eye,MUspellL4,1H,Alteration]{{components=V,S,M}}{{time=[[1]] turn}}{{range=[[0]]}}{{duration=[[@{selected|casting-level}]] rounds}}{{aoe=Special}}{{save=None}}{{healing=[Create eye](!rounds --target caster|@{selected|token_id}|Wizard-eye|@{selected|casting-level}|-1|Able to see through a wizard eye|bleeding-eye)}}{{reference=PHB p164}}SpellData=[w:Wizard Eye,lv:4,sp:100,gp:0.05,cs:VSM]{{effects=Creates an invisible sensory organ that sends the caster visual information.}}{{materials=A bit of bat fur, costing 5cp to source}}'},
						{name:'Wizard-Lock',type:'MUspellL2',ct:'2',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}}{{title=@{selected|casting-name} casts\nWizard Lock\nas a level @{selected|casting-level} caster}}{{splevel=Level 2 Wizard}}{{school=Alteration}}Specs=[Wizard Lock,MUspellL2,1H,Alteration]{{components=V, S}}{{time=[[2]]}}{{range=Touch}}{{duration=Permanent}}{{aoe=[[30*@{selected|casting-level}]]sq.ft.}}{{save=None}}{{reference=PHB p147}}SpellData=[w:Wizard-Lock,lv:2,sp:2,gp:0,cs:VS]{{effects=Cast upon a door, chest, or portal magically locks it.}}'},
						{name:'Wizard-Mark',type:'MUspellL1',ct:'1',charge:'uncharged',cost:'100',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nWizard Mark\nas a level @{selected|casting-level} caster}}{{splevel=Level 1 Wizard}}{{school=Alteration}}Specs=[Wizard Mark,MUspellL1,1H,Alteration]{{components=V, S, M}}{{time=[[1]]}}{{range=Touch}}{{duration=Permanent}}{{aoe=Up to [[1]]sq.ft}}{{save=None}}{{reference=PHB p139}}SpellData=[w:Wizard-Mark,lv:1,sp:1,gp:100,cs:VSM]{{effects=Inscribe, visibly or invisibly, his personal rune or mark, as well as up to six additional characters of smaller size.}}{{materials=A pinch of diamond dust (about 100 gp worth) and a pigment or pigments for the coloration of the mark. If the mark is to be invisible, the pigments are still used, but the caster uses a stylus of some sort rather than his finger}}'},
						{name:'Wraithform',type:'MUspellL3',ct:'1',charge:'uncharged',cost:'0.02',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nWraithform\nas a level @{selected|casting-level} caster}}{{splevel=Level 3 Wizard}}{{school=Alteration, Illusion}}Specs=[Wraithform,MUspellL3,1H,Alteration]{{components=S, M}}{{time=[[1]]}}{{range=[[0]]}}{{duration=[[2*@{selected|casting-level}]] rounds}}{{aoe=The caster}}{{save=None}}{{healing=[Become Ethereal](!rounds --target caster|@{selected|token_id}|Wraithform|[[2*@{selected|casting-level}]]|-1|In Wraithform, better than +1 weapons to hit, ignored by most undead|half-haze)}}{{reference=PHB p154}}SpellData=[w:Wraithform,lv:3,sp:1,gp:0.02,cs:SM]{{effects=Causes the caster to become insubstantial, including all their gear, and as a result, they can only be affected weapons of +[[1]] or better while under the effects of this spell.}}{{materials=A bit of gauze and a wisp of smoke}}'},
					]},
	PR_Spells_DB:	{bio:'<blockquote>Priest Spell Database</blockquote><b>v5.6 01/01/2022</b><br><br>This database holds the definitions and API calls to enact Priest Spells.  Spells can be memorised, and once used disapear from memory, only being refreshed on a long rest (1st level spells can optionally be refreshed on a short rest).  Characters, NPCs and Monsters can learn, memorise and use these spells via the abilities, menus and commands of the MagicMaster API<br><br><b>Important Note:<b> most of the spell macros require a Roll20 Pro membership, and the installation of the ChatSetAttr, TokenMod, MagicMaster and RoundMaster API Scripts, to allow parameter passing between macros, update of character sheet variables, and marking spell effects on tokens.  If you do not have this level of subscription, I highly recommend you get it as a DM, as you get lots of other goodies as well.  If you want to know how to load the API Scripts to your game, the RoLL20 API help here gives guidance, or Richard can help you.<br><br>Instructions<br><br>In order to understand the format of spell macros in this database and how to change or add to them, please refer to the MagicMaster API documentation.',
					gmnotes:'Change Log:</blockquote>v5.6  01/01/2022  Added all remaining Priest spells from the PHB<br><br>v5.2 - 5.5 Skipped to even up version numbers<br><br>v5.11  13/12/2021  Hid non-castable versions of spells<br><br>v5.0  31/10/2021  Encoded using machine readable data to support API databases<br><br>v4.3.1  01/06/2021  Removed ammo reset calls from long rest macros, as this is now handled by the MagicMaster API long rest function<br><br>v4.3  25/02/2021  Eliminated ability macros that are no longer needed for spell use, replaced by MagicMaster API script<br><br>v4.2.1  21/02/2021  fixed initial wave of bugs in MagicMaster, and added short & long rest functions.<br><br>v4.2  18/02/2021  Integrated with the new MagicMaster API for casting, memorising and viewing spells.<br><br>v4.1.2 21/01/2021  Added tip text to numbers of spells at each level explaining the maths<br><br>v4.1  15/11/2020  Split macro library workings from spells database, and also added in sheet-flags attribute which, if 1, uses value of sheet-pr-spells-type to determine the size of the spellbook<br><br>v4.0  29/10/2020  v4 has the cost of spells turned on, as introduced in v3.4.  (v3 macros have them turned off)<br><br>v3.5.3  29/10/2020  Fixed bug with initialising sheet variables<br><br>v3.5.2  20/10/2020  Added a 1st level spell for Regenerate, which is actually a power that can me regained with a Short Rest.<br><br>v3.5.1 12/10/2020  Updated Long Rests to set ammo maximums to ammo remaining, to reflect that any not recovered when you rest are lost<br><br>v3.5  06/10/2020  Linked Long Rests with the Campaign Calendar, and prevented Long Rests until the DM does the "End of Day" procedure to charge daily costs.<br><br>v3.4.1  29/09/2020 Bug fix to allow older character sheets to use Short & Long Rests without errors.<br><br>v3.4  24/09/2020  Added costs of materials as \'max\' value of CT- spell entries, then deduct from gold when cast.<br><br>v3.3  18/09/2020  Changed to normally cast at spell-casters level, and allow separate change to level if needed.  Constructed so casting level and caster\'s name can be set separately<br><br>3.2.1 16/09/2020 Tweaked for Lost & Found campaign<br><br>v3.2  05/09/2020  Updated all the marker effect names to cater for the new Effect functionality, and allow multiple overlapping spell effects to work properly<br><br>v3.1  01/09/2020  Added the ability to [Review] spells from spells known/granted to the character before Memorising them.<br><br>v3.0  25/08/2020  Vetted & updated ready for Roger\'s campaign.  Also changed all calls to !tj to take \'--\' as the command introducer and allow multiple commands in one call and forcing execution in order, so as to overcome asynchronous processing issues.<br><br>v2.8  23/08/2020 Added all 1st & 2nd level Priest Spells, and ensured all othre spells were internally consistent.<br><br>v2.7 17/8/2020  Saving throw buttons were missing their \'!\', and so did not even appear!  Fixed<br><br>v2.6  8/8/2020  Changed whispers /w using Token_name to instead use Character_name, as if they were different, errors occurred.<br><br>v2.5   6/8/2020 Coordinated and updated all effect markers across all MIs and Spell libraries.<br><br>v2.4  3/8/2020  Added the PR-Spells-menu macro to provide a succinct menu to access PR-Spell functions.<br><br>v2.3 31/7/2020 Added the ability for spells to mark tokens with markers to indicate spell effects and durations<br><br>v2.2 16/7/2020 Added multiple spell use macros to cater for current spell knowledge in SB\'s Desecrated Temple party<br><br>v2.1 12/7/2020 Updated and corrected bugs in the Cast-spell, Memorise-Ln-spells, Reset-spells and Blank-Spellbook macros<br><br>v2.0 10/7/2020 Conversion of all spells to use default Roll Templates, with API Buttons for relevant dice rolls.  Addition of the Spellbook macro, and the capability to have a list of known spells from which spells for the day can be memorised.<br><br>v1.0 Initial release',
					controlledby:'all',
					root:'PR-Spells-DB',
					avatar:'https://s3.amazonaws.com/files.d20.io/images/163483347/1CLiNzi4jlxXK1-lVr7MTQ/max.png?1599726214',
					version:5.6,
					db:[{name:'-',type:'',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" @{selected|token_name} thinks there are more spells he can learn...'},
						{name:'Abjure',type:'PRspellL4',ct:'10',charge:'uncharged',cost:'100',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nAbjure\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 4 Priest}}{{school=Abjuration}}{{sphere=Summoning}}Specs=[Abjure,PRspellL4,1H,Abjuration]{{components=V,S,M}}{{time=[[10]]}}{{range=[10 yds](!rounds --aoe @{selected|token_id}|circle|yards|0|20||lightning|true)}}{{duration=Special}}{{aoe=1 creature}}{{save=[Special](!\\amp#13;\\amp#47;r 1d20 see Abjuration spell specs)}}{{reference=PHB p215}}SpellData=[w:Abjure,lv:4,sp:10,gp:100,cs:VSM,sph:Summoning]{{effects=Send an extraplanar creature back to its own plane of existence.}}{{materials=The priest\'s holy symbol, holy water, and some material inimical to the creature, worth at least 100gp.}}'},
						{name:'Aerial-Servant',type:'PRspellL6',ct:'9',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nAerial Servant\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 6 Priest}}{{school=Conjuration-Summoning}}{{sphere=Summoning}}Specs=[Aerial Servant,PRspellL6,1H,Conjuration-Summoning]{{components=V,S}}{{time=[[9]]}}{{range=[[[10]] yards](!rounds --aoe @{selected|token_id}|circle|yards|0|20||magic|true)}}{{duration=[[@{selected|casting-level}]] days}}{{aoe=Special}}{{save=None}}{{reference=PHB p226}}SpellData=[w:Aerial Servant,lv:6,sp:9,gp:0,cs:VS,sph:Summoning]{{effects=Summons an invisible aerial servant to find and bring back an object or creature described to it by the priest.}}'},
						{name:'Aid',type:'PRspellL2',ct:'5',charge:'uncharged',cost:'0.02',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nAid\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 2 Priest}}{{school=Necromancy,Conjuration}}{{sphere=Necromantic}}Specs=[Aid,PRspellL2,1H,Necromancy|Conjuration]{{components=V,S,M}}{{time=[[5]]}}{{range=Touch}}{{duration=[[1+@{selected|Casting-Level}]] rounds}}{{aoe= Creature touched}}{{save=None}}{{healing=[Give Aid](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Select first to aid|token_id}|Aid|[[1+@{selected|Casting-Level}]]|-1|Received Aid, +1 on attk, +saves vs fear, +extra HP|angel-outfit)}}{{reference=PHB p202}}SpellData=[w:Aid,lv:2,sp:5,gp:0.02,cs:VSM,sph:Necromantic]{{effects=Recipient gains +[[1]] to THAC0 and saves vs Fear. Also adds [1d8](!\\amp#13;\\amp#47;r 1d8) hit points for duration of spell. Damage comes first off the extra Hit Points. These points cannot be regained via cures.\nUsing the *Give Aid* button will automatically adjust Thac0 \\amp HP for the correct duration}}{{materials=A tiny strip of white cloth (worth 2cp) with a sticky substance (such as tree sap) on the ends, plus the priest\'s holy symbol.}}'},
						{name:'Air-Breathing',type:'PRspellL3',ct:'6',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nAir Breathing\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 3 Priest}}{{school=Alteration}}{{sphere=Elemental(Air)}}Specs=[Air-Breathing,PRspellL3,1H,Alteration]{{components=V,S}}{{time=[[6]]}}{{range=Touch}}{{duration=[[?{How many air breathers?|1}]] creatures for [[floor(@{selected|casting-level}/?{How many air breathers?|1})]]hours [[floor((60*@{selected|casting-level}/?{How many air breathers?|1})%60)]] minutes}}{{aoe=Special}}{{save=None}}{{healing=[Grant lungs](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Give aqualung to who?|token_id}|Air-Breathing|[[60*@{selected|casting-level}/([[?{How many air breathers?|1}]])]]|-1|Breath air like a person|ninja-mask)}}{{reference=PHB p215}}SpellData=[w:Air-Breathing,lv:3,sp:6,gp:0,cs:VS,sph:Elemental-Air]{{effects=Enables water-breathing creatures to survive comfortably in the atmosphere for the duration of the spell--i.e., one hour for each experience level of the caster.}}'},
						{name:'Air-Walk',type:'PRspellL5',ct:'8',charge:'uncharged',cost:'0.01',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nAir Walk\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 5 Priest}}{{school=Alteration}}{{sphere=Elemental (Air)}}Specs=[Air Walk,PRspellL5,1H,Alteration]{{components=V,S,M}}{{time=[[8]]}}{{range=Touch}}{{duration=[[6+@{selected|Casting-Level}]] turns}}{{aoe=[[1]] creature}}{{save=None}}{{healing=[Step lightly on air](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Who wants to be walking in the air?|token_id}|Air-Walk|[[60+(10*@{selected|casting-level})]]|-1|You\'re walking through the air!|fluffy-wing)}}{{reference=PHB p221}}SpellData=[w:Air Walk,lv:5,sp:8,gp:0.01,cs:VSM,sph:Elemental-Air]{{effects=Enables a creature, which can be as big as the largest giant, to tread upon air as if it were walking on solid ground.}}{{materials=The priest\'s holy symbol and a bit of thistledown at a cost of 1cp}}'},
						{name:'Animal-Friendship',type:'PRspellL1',ct:'600',charge:'uncharged',cost:'0.05',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nAnimal Friendship\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 1 Priest}}{{school=Enchantment/Charm}}{{sphere=Animal}}Specs=[Animal-Friendship,PRspellL1,1H,Enchantment-Charm]{{components=V,S,M}}{{time=[[1]] hour}}{{range=[10 yards](!rounds --aoe @{selected|token_id}|circle|yards|0|20||magic|true)}}{{duration=Permanent}}{{aoe=[[1]] animal per spell casting}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 saving throw)}}{{reference=PHB p198}}SpellData=[w:Animal-Friendship,lv:1,sp:600,gp:0.05,cs:VSM,sph:Animal]{{effects=Attracts up to [[2*@{selected|Casting-Level}]] HD animals. Max number of HD of animals as friends at any time is 2x caster\'s level at that time.}}{{materials=Caster\'s holy symbol and food that the animal likes worth 5cp.}}'},
						{name:'Animal-Growth',type:'PRspellL5',ct:'8',charge:'uncharged',cost:'0.01',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nAnimal Growth\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 5 Priest (Reversable)}}{{school=Alteration}}{{sphere=Animal}}Specs=[Animal Growth,PRspellL5,1H,Alteration]{{components=V,S,M}}{{time=[[8]]}}{{range=[[80]] yards}}{{duration=[[2*@{selected|Casting-Level}]] rounds}}{{aoe=Up to [[8]] creatures in a [20ft. square](!rounds --aoe @{selected|token_id}|square|feet|240|20||magic)}}{{save=None}}{{reference=PHB p221}}{{healing=[Grow](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Which animals to grow?|token_id}|Animal-Growth|[[2*@{selected|casting-level}]]|-1|Wow! So big - HDx2, HPx2, dmg x 2|strong)}}SpellData=[w:Animal Growth,lv:5,sp:8,gp:0.01,cs:VSM,sph:Animal]{{effects=Causes up to eight animals within a 20-foot square area to grow to twice their normal size, doubling Hit Dice (with resultant improvement in attack potential), hit points (except hit points added to Hit Dice), and damage in combat.}}{{materials=The priest\'s holy symbol and a scrap of food, cost 1cp}}'},
						{name:'Animal-Summoning-1',type:'PRspellL4',ct:'7',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nAnimal Summoning 1\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 4 Priest}}{{school=Conjuration,Summoning}}{{sphere=Animal,Summoning}}Specs=[Animal-Summoning-1,PRspellL4,1H,Conjuration-Summoning]{{components=V,S}}{{time=[[7]]}}{{range=[[1]]mile radius}}{{duration=Special}}{{aoe=Special}}{{save=None}}{{reference=PHB p216}}SpellData=[w:Animal-Summoning-1,lv:4,sp:7,gp:0,cs:VS,sph:Animal|Summoning]{{effects=Calls up to eight animals that have 4 Hit Dice or less, of whatever sort the caster names when the summoning is made.}}'},
						{name:'Animal-Summoning-II',type:'PRspellL5',ct:'8',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nAnimal Summoning II\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 5 Priest}}{{school=Conjuration,Summoning}}{{sphere=Animal,Summoning}}Specs=[Animal-Summoning-II,PRspellL5,1H,Conjuration-Summoning]{{components=V,S}}{{time=[[8]]}}{{range=[[[60*@{selected|casting-level}]] yards](!rounds --aoe @{selected|token_id}|circle|yards|0|[[120*@{selected|casting-level}]]||magic|true)}}{{duration=Special}}{{aoe=Special}}{{save=None}}{{reference=PHB p221}}SpellData=[w:Animal-Summoning-II,lv:5,sp:8,gp:0,cs:VS,sph:Animal|Summoning]{{effects=Calls up to six animals of 8 Hit Dice or less, or 12 animals of 4 Hit Dice or less--of whatever sort the caster names.}}'},
						{name:'Animal-Summoning-III',type:'PRspellL6',ct:'9',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nAnimal Summoning III\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 6 Priest}}{{school=Conjuration,Summoning}}{{sphere=Animal,Summoning}}Specs=[Animal-Summoning-III,PRspellL6,1H,Conjuration-Summoning]{{components=V,S}}{{range=[[[100*@{selected|casting-level}]] yards](!rounds --aoe @{selected|token_id}|circle|yards|0|[[200*@{selected|casting-level}]]||magic|true)}}{{time=[[9]]}}{{duration=Special}}{{aoe=Special}}{{save=None}}{{reference=PHB p226}}SpellData=[w:Animal-Summoning-III,lv:6,sp:9,gp:0,cs:VS,sph:Animal|Summoning]{{effects=Calls up to four animals of [[16]] Hit Dice or less, or eight of no more than [[8]] Hit Dice, or 16 animals of [[4]] Hit Dice or less--of whatever sort the caster names that are in range.}}'},
						{name:'Animate-Object',type:'PRspellL6',ct:'9',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nAnimate Object\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 6 Priest}}{{school=Alteration}}{{sphere=Creation, Summoning}}Specs=[Animate Object,PRspellL6,1H,Alteration]{{components=V,S}}{{range=[[30]] yards}}{{time=[[9]]}}{{duration=[[[@{selected|casting-level}]] rounds](!rounds --target caster|@{selected|token_id}|Animate-Object|@{selected|casting-level}|-1|Animating an object|spanner)}}{{aoe=[@{selected|casting-level} cu.ft.](!rounds --aoe @{selected|token_id}|rectangle|feet|90|||magic)}}{{save=[Special](!\\amp#13;\\amp#47;gmroll 1d20 save vs. Animate Object spell)}}{{reference=PHB p226}}SpellData=[w:Animate Object,lv:6,sp:9,gp:0,cs:VS,sph:Creation|Summoning]{{effects=Imbue inanimate objects with mobility and a semblance of life.}}'},
						{name:'Animate-Rock',type:'PRspellL7',ct:'10',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nAnimate Rock\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 7 Priest}}{{school=Alteration}}{{sphere=Elemental (Earth)}}Specs=[Animate Rock,PRspellL7,1H,Alteration]{{components=V,S,M}}{{range=[[40]] yards}}{{time=[[1]] round}}{{duration=[[[@{selected|casting-level}]] rounds](!rounds --target caster|@{selected|token_id}|Animate-Rock|@{selected|casting-level}|-1|Animated a rock which will obay simple commands|edge-crack)}}{{aoe=[[[2*@{selected|casting-level}]] cu.ft.](!rounds --movable-aoe @{selected|token_id}|rectangle|feet|120|||magic)}}{{save=None}}{{reference=PHB p230}}SpellData=[w:Animate Rock,lv:7,sp:10,gp:0,cs:VSM,sph:Elemental-Earth]{{effects=Causes a separated stone object of up to the indicated size to move (see the 6th-level *animate object* spell.), following the desire of the caster--attacking, breaking objects, blocking--while the magic lasts.}}{{materials=A stone and drop of the caster\'s blood, costing nothing}}'},
						{name:'Animate-dead',type:'PRspellL3',ct:'10',charge:'uncharged',cost:'10',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nAnimate Dead\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 3 Priest}}{{school=Necromancy}}{{sphere=Necromantic}}Specs=[Animate-Dead,PRspellL3,1H,Necromancy]{{components=V,S,M}}{{time=[[10]]}}{{range=[10 yards](!rounds --aoe @{selected|token_id}|circle|yards|0|20||magic|true)}}{{duration=Permanent}}{{aoe=Special}}{{save=None}}{{reference=PHB p208}}SpellData=[w:Animate-Dead,lv:3,sp:10,gp:10,cs:VSM,sph:Necromantic]{{effects=Creates the lowest of the undead monsters, skeletons or zombies, usually from the bones or bodies of dead humans, demihumans, or humanoids.}}{{materials=A drop of blood, a piece of flesh of the type of creature being animated, and a pinch of bone powder or a bone shard - 10gp as some types of flesh are hard to retrieve}}'},
						{name:'Anti-Animal-Shell',type:'PRspellL6',ct:'10',charge:'uncharged',cost:'0.01',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nAnti-Animal Shell\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 6 Priest}}{{school=Abjuration}}{{sphere=Animal, Protection}}Specs=[Anti-Animal Shell,PRspellL6,1H,Abjuration]{{components=V,S,M}}{{duration=[[[@{selected|casting-level}]] turns](!rounds --target caster|@{selected|token_id}|Anti-Animal-Shell|[[10*@{selected|casting-level}]]|-1|Protected by the Anti-Animal shell|white-tower)}}{{range=[[0]]}}{{time=[[1]] round}}{{aoe=[[10]] ft. radius (moves with caster)}}{{save=None}}{{reference=PHB p226}}SpellData=[w:Anti-Animal Shell,lv:6,sp:10,gp:0.01,cs:VSM,sph:Animal|Protection]{{effects=Brings into being a hemispherical force field that prevents the entrance of any sort of living creature that is wholly or partially animal (not magical or extraplanar).}}{{materials=The caster\'s holy symbol and a handful of pepper, costing 1cp}}'},
						{name:'Anti-Plant-Shell',type:'PRspellL5',ct:'8',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nAnti-Plant Shell\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 5 Priest}}{{school=Abjuration}}{{sphere=Plant, Protection}}Specs=[Anti-Plant Shell,PRspellL5,1H,Abjuration]{{components=V,S}}{{time=[[8]]}}{{range=[[0]]}}{{duration=[[[@{selected|casting-level}]] turns](!rounds --target caster|@{selected|token_id}|Anti-plant-shell|[[10*@{selected|casting-level}]]|-1|Protected from plant attack|white-tower)}}{{aoe=15ft Diameter}}{{save=None}}{{reference=PHB p221}}SpellData=[w:Anti-Plant Shell,lv:5,sp:8,gp:0,cs:VS,sph:Plant|Protection]{{effects=Creates an invisible, mobile barrier that keeps all creatures within the shell protected from attacking plants or vegetable creatures such as shambling mounds or treants.}}'},
						{name:'Astral-Spell',type:'PRspellL7',ct:'300',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nAstral Spell\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 7 Priest}}{{school=Alteration}}{{sphere=Astral}}Specs=[Astral Spell,PRspellL7,1H,Alteration]{{components=V,S}}{{range=Touch}}{{time=[[3]] turns}}{{duration=Special}}{{aoe=Special}}{{save=None}}{{reference=PHB p231}}SpellData=[w:Astral Spell,lv:7,sp:300,gp:0,cs:VS,sph:Astral]{{effects=A priest is able to project his astral body into the Astral plane, leaving his physical body and material possessions behind on the Prime Material plane.}}'},
						{name:'Atonement',type:'PRspellL5',ct:'100',charge:'uncharged',cost:'1000',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nAtonement\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 5 Priest}}{{school=Abjuration}}{{sphere=All}}Specs=[Atonement,PRspellL5,1H,Abjuration]{{components=V,S,M}}{{time=[[1]] turn}}{{range=Touch}}{{duration=Permanent}}{{aoe=1 person}}{{save=None}}{{reference=PHB p221}}SpellData=[w:Atonement,lv:5,sp:100,gp:1000,cs:VSM,sph:All]{{effects=Remove the burden of unwilling or unknown deeds from the person who is the subject of the atonement. The spell removes the effects of magical alignment changes as well.}}{{materials=The priest\'s religious symbol, prayer beads or wheel or book, and burning incense, and a donation of 1,000gp to the temple}}'},
						{name:'Attack-target',type:'',ct:'0',charge:'uncharged',cost:'0',body:'**@{selected|token_name} hits AC [[( ([[@{selected|thac0}]]) - ([[@{selected|strengthhit}]]) - [[1d20]] )]] with his spell.**\n/w "@{selected|character_name}" If hit, [Cast on them](!magic --target single|@{selected|token_id}|@{target|Who are you Attacking?|token_id}|@{selected|Spell-cast}|@{selected|Spell-duration}|@{selected|Spell-direction}|@{selected|Spell-msg}|@{selected|Spell-marker})'},
						{name:'Augury',type:'PRspellL2',ct:'2',charge:'uncharged',cost:'50',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nAugury\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 2 Priest}}{{school=Divination}}{{sphere=Divination}}Specs=[Augury,PRspellL2,1H,Divination]{{components=V,S,M}}{{time=[[2]] rounds}}{{range=[[0]]}}{{duration=Special}}{{aoe=Special}}{{save=None}}{{reference=PHB p203}}SpellData=[w:Augury,lv:2,sp:2,gp:50,cs:VSM,sph:Divination]{{effects=Asks divine guidance on whether action in next [[3]] turns will be for the benefit of or harmful to the party. If successful DM will reveal "weal" or "Woe" or perhaps some cryptic clue. Chance of success is [[70+@{selected|Casting-Level}]]% adjusted by DM for circumstances.}}{{materials=A set of gem-inlaid sticks, dragon bones, or similar tokens of at least 1,000gp value (which are ***not*** expended in casting and can be used up to 20 times)}} '},
						{name:'Badberry',type:'PRspellL2',ct:'10',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nBadberry\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 2 Priest}}{{school=Alteration,Evocation (reversable)}}{{sphere=Plant}}Specs=[Badberry,PRspellL2,1H,Alteration|Evocation]{{components=V,S,M}}{{time=[[1]] round}}{{range=Touch}}{{duration=[[1+@{selected|Casting-Level}]] days}}{{aoe=[2d4](!\\amp#13;\\amp#47;r 2d4) rotten berries}}{{save=None}}{{damage=[[1]]HP per berry}}{{reference=PHB p205}}SpellData=[w:Badberry,lv:2,sp:10,gp:0,cs:VSM,sph:Plant]{{effects=Causes 2d4 rotten berries to appear wholesome, but each actually delivers 1 point of poison damage (no saving throw) if ingested}}{{materials=The caster\'s holy symbol passed over the freshly picked, edible berries to be enspelled (blueberries, blackberries, raspberries, currants, gooseberries, etc.). No cost}}'},
						{name:'Barkskin',type:'PRspellL2',ct:'5',charge:'uncharged',cost:'0.01',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nBarkskin\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 2 Priest}}{{school=Alteration}}{{sphere=Protection,Plant}}Specs=[Barkskin,PRspellL2,1H,Alteration]{{components=V,S,M}}{{time=[[5]]}}{{range=Touch}}{{duration=[[4+@{selected|Casting-Level}]] rounds}}{{aoe=Creature touched}}{{save=None}}{{healing=[Wear Barkskin](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Who makes like a tree?|token_id}|Barkskin|[[4+@{selected|Casting-Level}]]|-1|Skin like bark, AC improved, +1 save except spell|bolt-shield)}}{{reference=PHB p203}}SpellData=[w:Barkskin,lv:2,sp:5,gp:0.01,cs:VSM,sph:Protection|Plant]{{effects=A selected creature\'s skin becomes as tough as bark, increasing its base Armor Class to AC 6, plus 1 AC for every four levels of the priest.\nSelecting the *Wear Barkskin* button and then selecting the target creature will automatically apply the correct AC for the correct duration.}}{{materials=The priest\'s holy symbol and a handful of bark from an oak, costing 1cp}}'},
						{name:'Bestow-Curse',type:'PRspellL3',ct:'6',charge:'uncharged',cost:'1',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nBestow Curse\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 3 Priest (reversable)}}{{school=Abjuration}}{{sphere=Protection}}Specs=[Bestow-Curse,PRspellL3,1H,Abjuration]{{components=V,S}}{{time=[[6]]}}{{range=Touch}}{{duration=[[@{selected|casting-level}]]turns}}{{aoe=Special}}{{save=[Special](!\\amp#13;\\amp#47;gmroll 1d20 saving throw)}}{{damage=[Bestow curse](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Who do you curse?|token_id}|Cursed|[[10*@{selected|casting-level}]]|-1|Curse bestowed - determined by DM \\amp/or caster|radioactive)}}{{reference=PHB p213 (reverse *Remove Curse*)}}SpellData=[w:Bestow-Curse,lv:3,sp:6,gp:1,cs:VS,sph:Protection]{{effects=Causes one of the following effects (roll percentile dice):\n[Roll percentile dice](!\\amp#13;\\amp#47;r 1d100)\n1-50 Lowers one ability of the subject to 3 (the DM determines which by random selection)\n51-75 Worsens the subject\'s attack rolls and saving throws by -4\n76-00 Makes the subject 50% likely per turn to drop whatever it is holding (or simply do nothing, in the case of creatures not using tools)}}'},
						{name:'Blade-Barrier',type:'PRspellL6',ct:'9',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nBlade Barrier\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 6 Priest}}{{school=Evocation}}{{sphere=Guardian, Creation}}Specs=[Blade Barrier,PRspellL6,1H,Evocation]{{components=V,S}}{{duration=[[[3*@{selected|casting-level}]] rounds](!rounds --target caster|@{selected|token_id}|Blade-Barrier|[[3*@{selected|casting-level}]]|-1|The blade barrier continues|all-for-one)}}{{range=[[30]] yards}}{{time=[[9]]}}{{aoe=[5 to 60 ft. sq.](!rounds --aoe @{selected|token_id}|square|feet|90|||lightning)}}{{save=[Special](!\\amp#13;\\amp#47;gmroll 1d20 save vs. Blade Barrier spell)}}{{reference=PHB p227}}{{damage=[8d8](!\\amp#13;\\amp#47;r 8d8 damage from passing through Blade Barrier)HP}}SpellData=[w:Blade Barrier,lv:6,sp:9,gp:0,cs:VS,sph:Guardian|Creation]{{effects=Set up a wall of circling, razor-sharp blades which whirl and flash around a central point, creating an immobile barrier.}}'},
						{name:'Bless',type:'PRspellL1',ct:'10',charge:'uncharged',cost:'1',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nBless\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 1 Priest}}{{school=Conjuration/Summoning}}{{sphere=All}}Specs=[Bless,PRspellL1,1H,Conjuration-Summoning]{{components=V,S,M}}{{time=[[1]] round}}{{range=[[60]] yards}}{{duration=[[6]] rounds}}{{aoe=[50ft cube](!range --aoe @{selected|token_id}|square|feet|180|50||light)}}{{save=None}}{{reference=PHB p198}}{{healing=[Bless them](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Select first supplicant|token_id}|Bless|6|-1|Blessed, attk+1, save vs fear+1|angel-outfit)}}SpellData=[w:Bless,lv:1,sp:10,gp:1,cs:VSM,sph:All]{{effects=Raises morale of friendly creatures *not yet in melee combat* adding +[[1]] to saves vs. fear effects and raises attack rolls by +[[1]]. Or can cast on a single object weighing no more than [[@{selected|Casting-Level}]] pounds and the plus lasts until the item is used or the duration ends}}{{marterials=Holy Water}}'},
						{name:'CLW',type:'PRspellL1',ct:'5',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nCure Light Wounds\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 1 Priest}}{{school=Necromancy}}{{sphere=Healing}}Specs=[CLW,PRspellL1,1H,Necromancy]{{components=V,S}}{{time=[[5]]}}{{range=Touch}}{{duration=Permanent}}{{aoe=Creature touched}}{{save=None}}{{reference=PHB p199}}{{healing=[1d8](!\\amp#13;\\amp#47;r 1d8) HP,\nor [1d8+3](!\\amp#13;\\amp#47;r 1d8+3) for a Priest of Life}}SpellData=[w:CLW,lv:1,sp:5,gp:0,cs:VS,sph:Healing]{{effects=Cannot cure non-corporeal or nonliving or extra-planar creatures.}}'},
						{name:'Call-Lightning',type:'PRspellL3',ct:'100',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nCall Lightning\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 3 Priest}}{{school=Alteration}}{{sphere=Weather}}Specs=[Call-Lightning,PRspellL3,1H,Alteration]{{components=V,S,M}}{{time=[[1]] turn}}{{range=[[0]]}}{{duration=[[@{selected|Casting-Level}]] turns}}{{aoe= [360ft radius](!rounds --aoe @{selected|token_id}|circle|feet|0|720||lightning)}}{{save=[To Half](!\\amp#13;\\amp#47;gmroll 1d20 saving throw)}}{{reference=PHB p209}}{{damage= [(level+2)d8](!\\amp#13;\\amp#47;r [[2+@{selected|Casting-Level}]]d8)}}SpellData=[w:Call-Lightning,lv:3,sp:100,gp:0,cs:VSM,sph:Weather]{{effects=Call down bolts on lightning, one bolt per turn (for [[1]] turn/level). When cast there must be a storm of some sort in the area such as a rain shower, clouds and wind, or even a tornado (including a whirlwind created by a djinn or air elemental).}}{{materials=A storm overhead}}'},
						{name:'Call-Woodland-Beings',type:'PRspellL4',ct:'200',charge:'uncharged',cost:'0.01',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nCall Woodland Beings\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 4 Priest}}{{school=Conjuration,Summoning}}{{sphere=Summoning}}Specs=[Call-Woodland-Beings,PRspellL4,1H,Conjuration-Summoning]{{components=V,S,M}}{{time=Special}}{{range=[[100*@{selected|Casting-level}]]yds}}{{duration=Special}}{{aoe=Special}}{{save=[Negates](!\\amp#13;\\amp#47;r 1d20 Save vs Call Woodland Beings spell)}}{{reference=PHB p216}}SpellData=[w:Call-Woodland-Beings,lv:4,sp:200,gp:0.01,cs:VSM,sph:Summoning]{{effects=Summon certain woodland creatures to the caster\'s location.}}{{materials=A pine cone and eight holly berries, costing 1cp to preserve.}}'},
						{name:'Cause-Blindness-not-deafness',type:'PRspellL0',ct:'10',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nCause Blindness or Deafness\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 3 Priest (reversable)}}{{school=Abjuration}}{{sphere=Necromantic}}Specs=[Cause-Blindness-or-Deafness,PRspellL0,1H,Abjuration]{{components=V,S}}{{time=[[10]]}}{{range=Touch}}{{duration=Permanent}}{{aoe=1 creature}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 saving throw)}}{{reference=PHB p209 (reverse Cure Blindness or Deafness)}}{{damage=Select type below then [Touch](~Selected|To-Hit-Spell)}}SpellData=[w:Cause-Blindness-or-Deafness,lv:3,sp:10,gp:0,cs:VS,sph:Necromantic]{{effects=Requires a successful touch (successful attack roll) on the victim, and a failed save vs. spell to cause a non-damaging magical blindness. Alternatively the victim can be [deafened](~Cause-Deafness-not-Blindness). A ***blinded*** creature suffers a -4 penalty to its attack rolls, a +4 penalty to its Armor Class, and a +2 penalty to its initiative rolls.}}\n!magic --touch @{selected|token_id}|Blindness|99|0|Blinded, Penalty of 4 to attk,AC|bleeding-eye\\amp#13;/w @{selected|character_name} '},
						{name:'Cause-Critical-Wounds',type:'PRspellL5',ct:'8',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nCause Critical Wounds\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 5 Priest}}{{school=Necromancy (Reversable)}}{{sphere=Healing}}Specs=[Cause-Critical-Wounds,PRspellL5,1H,Necromancy]{{components=V,S}}{{time=[[8]]}}{{range=Touch Attack}}{{duration=Permanent}}{{aoe=Creature Touched}}{{save=None}}{{reference=PHB p222}}{{damage=[3d8+3](!\\amp#13;\\amp#47;r 3d8+3) HP,\nor [3d8+10](!\\amp#13;\\amp#47;r 3d8+10) for a Priest of Death}}SpellData=[w:Cause-Critical-Wounds,lv:5,sp:8,gp:0,cs:VS,sph:Healing]{{effects=Cannot damage non-corporeal or nonliving or extraplanar creatures}}'},
						{name:'Cause-Deafness-not-Blindness',type:'PRspellL0',ct:'10',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nCause Blindness or Deafness\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 3 Priest (reversable)}}{{school=Abjuration}}{{sphere=Necromantic}}Specs=[Cause-Blindness-or-Deafness,PRspellL0,1H,Abjuration]{{components=V,S}}{{time=[[10]]}}{{range=Touch}}{{duration=Permanent}}{{aoe=1 creature}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 saving throw)}}{{reference=PHB p209 (reverse Cure Blindness or Deafness)}}{{damage=Select type below then [Touch](~Selected|To-Hit-Spell)}}SpellData=[w:Cause-Blindness-or-Deafness,lv:3,sp:10,gp:0,cs:VS,sph:Necromantic]{{effects=Requires a successful touch (successful attack roll) on the victim, and a failed save vs. spell to cause a non-damaging magical deafness.\nA ***deafened*** creature can react only to what it can see or feel, and suffers a -1 penalty to surprise rolls, a +1 penalty to its initiative rolls, and a 20% chance of spell failure for spells with verbal components.\nAlternatively, a victim can be [blinded](~Cause-Blindness-not-Deafness)}}\n!magic --touch @{selected|token_id}|Deafness|99|0|Deafened, 1 penalty on surprise + initiative, 20% spell fail|bleeding-eye'},
						{name:'Cause-Fear',type:'PRspellL1',ct:'1',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nCause Fear\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 1 Priest (reversable)}}{{school=Abjuration}}{{sphere=Charm}}Specs=[Cause-Fear,PRspellL1,1H,Abjuration]{{components=V,S}}{{time=[[1]]}}{{range=[10 yds](!rounds --aoe @{selected|token_id}|circle|yards|0|20||dark|true)}}{{duration=1d4 rounds}}{{aoe=[[1]] creature}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 saving throw)}}{{reference=PHB p202 (reverse Remove Fear)}}{{damage=[Scare Them](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Select a victim|token_id}|Cause-Fear|\\amp#91;[1d4]\\amp#93;|-1|Frightened, flee at maximum rate|screaming)}}SpellData=[w:Cause-Fear,lv:1,sp:1,gp:0,cs:VS,sph:Charm]{{effects=Cause fear causes one creature to flee in panic at maximum movement speed away from the caster for 1d4 rounds.}}'},
						{name:'Cause-Light-Wounds',type:'PRspellL1',ct:'5',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nCause Light Wounds\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 1 Priest}}{{school=Necromancy}}{{sphere=Healing}}Specs=[Cause-Light-Wounds,PRspellL1,1H,Necromancy]{{components=V,S}}{{time=[[5]]}}{{range=[Touch](!attk --attk-hit @{selected|token_id})}}{{duration=Permanent}}{{aoe=Creature touched}}{{save=None}}{{healing=[1d8](!\\amp#13;\\amp#47;r 1d8) HP,\nor [1d8+3](!\\amp#13;\\amp#47;r 1d8+3) for a Priest of Life}}{{reference=PHB p199 (reverse Cure Light Wounds)}}SpellData=[w:Cause-Light-Wounds,lv:1,sp:5,gp:0,cs:VS,sph:Healing]{{effects=Operates in the same manner as Cure Light Wounds, but inflicting 1d8 points of damage instead of curing. If a creature is avoiding this touch, a Touch attack is required to inflict the damage. Cannot damage non-corporeal or nonliving or extra-planar creatures.}}'},
						{name:'Cause-Serious-Wounds',type:'PRspellL4',ct:'7',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nCause Serious Wounds\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 4 Priest}}{{school=Necromancy}}{{sphere=Healing}}Specs=[Cause-Serious-Wounds,PRspellL4,1H,Necromancy]{{components=V,S}}{{time=[[7]]}}{{range=Touch attack}}{{duration=Permanent}}{{aoe=Creature Touched}}{{save=None}}{{reference=PHB p217}}{{damage=[2d8+1](!\\amp#13;\\amp#47;r 2d8+1) HP}}SpellData=[w:Cause-Serious-Wounds,lv:4,sp:7,gp:0,cs:VS,sph:Healing]{{effects=The victim has to be touched first - use a Touch weapon attack. If the touch is successful, 2d8+1 points of damage are inflicted}}'},
						{name:'Cause-blindness-or-deafness',type:'PRspellL3',ct:'10',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nCure Blindness or Deafness\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 3 Priest (reversable)}}{{school=Abjuration}}{{sphere=Necromantic}}Specs=[Cause-Blindness-or-Deafness,PRspellL3,1H,Abjuration]{{components=V,S}}{{time=[[10]]}}{{range=Touch}}{{duration=Permanent}}{{aoe=1 creature}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 saving throw)}}{{reference=PHB p209 (reverse Cure Blindness or Deafness)}}{{damage=Select type below then [Touch]}}SpellData=[w:Cause-Blindness-or-Deafness,lv:3,sp:10,gp:0,cs:VS,sph:Necromantic]{{effects=Requires a successful touch (successful attack roll) on the victim. If the victim rolls a successful saving throw, the effect is negated. If the saving throw is failed, a non-damaging magical blindness or deafness results.\nA [deafened](~Cause-Deafness-not-Blindness) creature can react only to what it can see or feel, and suffers a -1 penalty to surprise rolls, a +1 penalty to its initiative rolls, and a 20% chance of spell failure for spells with verbal components. A [blinded](~Cause-Blindness-not-Deafness) creature suffers a -4 penalty to its attack rolls, a +4 penalty to its Armor Class, and a +2 penalty to its initiative rolls.}}\n!magic --touch @{selected|token_id}|Deafness|99|0|Deafened, 1 penalty on surprise + initiative, 20% spell fail|bleeding-eye'},
						{name:'Cause-disease',type:'PRspellL3',ct:'10',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nCause Disease\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 3 Priest (reversable)}}{{school=Abjuration}}{{sphere=Necromantic}}Specs=[Cause-Disease,PRspellL3,1H,Abjuration]{{components=V,S}}{{time=[[10]]}}{{range=Touch}}{{duration=Permanent}}{{aoe=1 creature}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 saving throw)}}{{reference=PHB p209 (reverse Cure Disease)}}{{damage=Select type below then [Touch](~Selected|To-Hit-Spell)}}SpellData=[w:Cause-Disease,lv:3,sp:10,gp:0,cs:VS,sph:Necromantic]{{effects=Touch the intended victim to cause a disease (debilitating or fatal) unless save vs. spell. The exact details of the disease are decided by the DM., but the following are typical:\n[*Debilitating:*](!magic --touch @{selected|token_id}|Debilitating-disease|[[10*1d6]]|-1|Infected with debilitating disease which has yet to take effect|rolling-bomb) or [*Fatal:*](!magic --touch @{selected|token_id}|Fatal-disease|99|0|Fatal disease infection, cure wounds spells don\'t work, heal at 10% of normal|skull)}}\n!magic --touch @{selected|token_id}|Debilitating-disease|[[10*1d6]]|-1|Infected with debilitating disease which has yet to take effect|rolling-bomb'},
						{name:'Changestaff',type:'PRspellL7',ct:'4',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nChangestaff\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 7 Priest}}{{school=Evocation, Enchantment}}{{sphere=Plant, Creation}}Specs=[Changestaff,PRspellL7,1H,Evocation|Enchantment]{{components=V,S,M}}{{range=Touch}}{{time=[[4]]}}{{duration=[@{selected|casting-level} turns](!rounds --target caster|@{selected|token_id}|Changestaff|[[10*@{selected|casting-level}]]|-1|Your staff is acting as a treant, 12HD, 40HP, AC0|three-leaves)}}{{aoe=The caster\'s staff}}{{save=None}}{{reference=PHB p231}}SpellData=[w:Changestaff,lv:7,sp:4,gp:0,cs:VSM,sph:Plant|Creation]{{effects=Change a specially prepared staff into a treantlike creature of the largest size, about 24 feet tall.}}{{materials=Either his holy symbol or leaves (ash, oak, or yew) of the same sort as the staff (no cost)}}'},
						{name:'Chant',type:'PRspellL2',ct:'20',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nChant\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 2 Priest}}{{school=Conjuration/Summoning}}{{sphere=Combat}}Specs=[Chant,PRspellL2,1H,Conjuration-Summoning]{{components=V,S}}{{time=[[2]] rounds}}{{range=[[0]] yards}}{{duration=Time of chanting}}{{aoe=[30ft radius](!rounds --aoe @{selected|token_id}|circle|feet|0|60||magic|true)}}{{save=None}}{{reference=PHB p209}}{{healing=Select [friend](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Select first friend|token_id}|Chant-ally|99|0|Chanting, 1 bonus on attk,dmg,saves|angel-outfit) or [foe](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Select first foe|token_id}|Chant-foe|99|0|Chanting, 1 penalty on attk,dmg,saves|radioactive) 1-by-1 then do the other type}}SpellData=[w:Chant,lv:2,sp:20,gp:0,cs:VS,sph:Combat]{{effects=Brings special favour upon the caster and their party, and causes harm to his enemies.}}{{materials=Holy Water (no cost).}}'},
						{name:'Chariot-of-Sustarre',type:'PRspellL7',ct:'100',charge:'uncharged',cost:'0.01',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nChariot of Sustarre\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 7 Priest}}{{school=Evocation}}{{sphere=Elemental (Fire), Creation}}Specs=[Chariot of Sustarre,PRspellL7,1H,Evocation]{{components=V,S,M}}{{range=[[10]] yards}}{{time=[[1]] turn}}{{duration=[12 hours](!rounds --target caster|@{selected|token_id}|Chariot of Sustarre|720|-1|You have a flaming flying chariot, move 24, FL 48|overdrive)}}{{aoe=Special}}{{save=[Special](!\\amp#13;\\amp#47;gmroll 1d20 save vs petrification)}}{{reference=PHB p231}}SpellData=[w:Chariot of Sustarre,lv:7,sp:100,gp:0.01,cs:VSM,sph:Elemental-Fire|Creation]{{effects=Brings forth a large, flaming chariot pulled by two fiery horses from the elemental plane of Fire in a clap of thunder amid a cloud of smoke.}}{{materials=A small piece of wood, two holly berries, and a fire source at least equal to a torch. Total cost 1cp}}'},
						{name:'Charm-Person-or-Mammal',type:'PRspellL2',ct:'5',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nCharm Person or Mammal\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 2 Priest}}{{school=Enchantment/Charm}}{{sphere=Animal}}Specs=[Charm-Person-or-Mammal,PRspellL2,1H,Enchantment-Charm]{{components=V,S}}{{time=[[5]]}}{{range=[80 yards](!rounds --aoe @{selected|token_id}|circle|yards|0|160||magic)}}{{duration=Special - at least 1 day}}{{aoe=[[1]] person or mammal}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 saving throw)}}{{damage=[Charm them!](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Select new friend|token_id}|Charm-P-or-M|99|0|Charmed|chained-heart)}}{{reference=PHB p203}}SpellData=[w:Charm-Person-or-Mammal,lv:2,sp:5,gp:0,cs:VS,sph:Animal]{{effects=Charm one person, humanoid man size or smaller, or mammal. Save vs. spell or believes caster is trusted friend and ally to be protected.}}'},
						{name:'Chill-Metal',type:'PRspellL2',ct:'5',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nChill Metal\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 2 Priest}}{{school=Alteration}}{{sphere=Elemental(Fire)}}Specs=[Chill-Metal,PRspellL2,1H,Alteration]{{components=V,S,M}}{{time=[[5]]}}{{range=[40 yards](!rounds --aoe @{selected|token_id}|circle|yards|0|80||cold|true)}}{{duration=[[7]] rounds}}{{aoe= [[floor(@{selected|Casting-Level}/2)]] man-sized equivalent area of metal}}{{save=[Special](!\\amp#13;\\amp#47;gmroll 1d20 saving throw)}}{{reference=PHB p205}}{{damage=[Hey... Chill!](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Select what to chill|token_id}|Chill-Metal|7|-1|Chilling metal, increasing dmg|frozen-orb)}}SpellData=[w:Chill-Metal,lv:2,sp:5,gp:0,cs:VSM,sph:Elemental-Fire]{{effects=Makes ferrous metal very cold but not Elven chain. Magical armour saves vs. magical cold (DMG p38) for no effect.\nRound 1 and 7 uncomfortable.\nRound 2 and 6 [1d2](!\\amp#13;\\amp#47;r 1d2) damage.\nRound 3 / 4 / 5 does [1d4](!\\amp#13;\\amp#47;r 1d4) damage.\n\nIn round 5 must save vs. spell or suffer numbing effects of cold. Causes loss of feeling in a hand (or hands, if DM rules save failed badly) for 1d4 days. Character\'s grip extremely week \\amp cannot use for fighting or any activity requiring firm grip.}}{{materials=The metal to be chilled}}'},
						{name:'Cloak-of-Bravery',type:'PRspellL4',ct:'6',charge:'uncharged',cost:'1',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nCloak of Bravery\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 4 Priest}}{{school=Conjuration,Summoning}}{{sphere=Summoning}}Specs=[Cloak-of-Bravery,PRspellL4,1H,Conjuration-Summoning]{{components=V,S,M}}{{time=[[6]]}}{{range=Touch}}{{duration=Special}}{{aoe=1 to 4 creatures}}{{save=None}}{{reference=PHB p216}}{{healing=[Become a Hero](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Cloak which heroes?|token_id}|Bravery|99|0|Wearing Cloak of Bravery so save +4/3/2/1 vs Fear|Strong)}}SpellData=[w:Cloak-of-Bravery,lv:4,sp:6,gp:1,cs:VSM,sph:Summoning]{{effects=The protected individual(s) gain a bonus to their saving throw against any form of fear encountered (but not awe--an ability of some lesser and greater powers).}}{{materials=the feather of an eagle or hawk, often costing 1gp in the market}}'},
						{name:'Cloak-of-Fear',type:'PRspellL4',ct:'6',charge:'uncharged',cost:'0.01',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nCloak of Fear\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 4 Priest}}{{school=Conjuration,Summoning}}{{sphere=Summoning}}Specs=[Cloak-of-Fear,PRspellL4,1H,Conjuration-Summoning]{{components=V,S,M}}{{time=[[6]]}}{{range=Touch}}{{duration=Special}}{{aoe=1 creature}}{{save=[Negates](!\\amp#13;\\amp#47;r 1d20 save vs Cloak of Fear spell)}}{{reference=PHB p216 (reverse Cloak of Bravery)}}{{healing=[Wrap in Fear](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Who\'s Scary?|token_id}|Cloak_of_Fear|99|0|Scary person - save or run for 2d8)}}SpellData=[w:Cloak-of-Fear,lv:4,sp:6,gp:0.01,cs:VSM,sph:Summoning]{{effects=Empowers a single creature touched to radiate a personal aura of fear, at will, out to a 3-foot radius.}}{{materials=The tail feathers of a vulture or chicken (1cp).}}'},
						{name:'Combine',type:'PRspellL1',ct:'7',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nCombine\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 1 Priest}}{{school=Evocation}}{{sphere=All}}Specs=[Combine,PRspellL1,1H,Evocation]{{components=V,S}}{{time=[[10]]}}{{range=Touch}}{{duration=Special}}{{aoe=Circle of Priests}}{{save=None}}{{reference=PHB p198}}SpellData=[w:Combine,lv:1,sp:7,gp:0,cs:VS,sph:All]{{effects=Three to five priests combine their abilities so that one of them casts spells and turns undead at an enhanced level.}}'},
						{name:'Command',type:'PRspellL1',ct:'1',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nCommand\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 1 Priest}}{{school=Enchantment/Charm}}{{sphere=Charm}}Specs=[Command,PRspellL1,0H,Enchantment-Charm]{{components=V}}{{time=[[1]]}}{{range=[30 yards](!rounds --aoe @{selected|token_id}|circle|yards|0|60||magic|true)}}{{duration=[[1]] round}}{{aoe=[[1]] creature}}{{save=[Special](!\\amp#13;\\amp#47;gmroll 1d20 saving throw)}}{{reference=PHB p199}}SpellData=[w:,lv:1,sp:1,gp:0,cs:V,sph:Charm]{{effects=Command another creature with a single word, such as *back / halt / flee / run / stop / fall / go / leave / surrender / sleep / rest* etc.}}'},
						{name:'Commune',type:'PRspellL5',ct:'100',charge:'uncharged',cost:'0.07',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nCommune\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 5 Priest}}{{school=Divination}}{{sphere=Divination}}Specs=[Commune,PRspellL5,1H,Divination]{{components=V,S,M}}{{time=[[1]] turn}}{{range=[[0]]}}{{duration=[[@{selected|casting-level}]] questions}}{{aoe=Special}}{{save=None}}{{reference=PHB p222}}SpellData=[w:Commune,lv:5,sp:100,gp:0.07,cs:VSM,sph:Divination]{{effects=The priest is able to contact his deity--or agents thereof--and request information in the form of questions that can be answered by a simple "yes" or "no."}}{{materials=The priest\'s religious symbol, holy (unholy) water, and incense worth 7cp}}'},
						{name:'Commune-With-Nature',type:'PRspellL5',ct:'100',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nCommune With Nature\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 5 Priest}}{{school=Divination}}{{sphere=Divination, Elemental}}Specs=[Commune With Nature,PRspellL5,1H,Divination]{{components=V,S}}{{time=[[1]] turn}}{{range=[[0]]}}{{duration=[[@{selected|casting-level}]] facts become known}}{{aoe=Special}}{{save=None}}{{reference=PHB p222}}SpellData=[w:Commune With Nature,lv:5,sp:100,gp:0,cs:VS,sph:Divination|Elemental]{{effects=Become one with nature, thus being empowered with knowledge of the surrounding territory.}}'},
						{name:'Confusion',type:'PRspellL7',ct:'10',charge:'uncharged',cost:'0.01',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nConfusion\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 7 Priest}}{{school=Enchantment-Charm}}{{sphere=Charm}}Specs=[Confusion,PRspellL7,1H,Enchantment-Charm]{{components=V,S,M}}{{range=[[80]] yards}}{{time=[[1]] round}}{{duration=[[@{selected|casting-level}]] rounds}}{{aoe=[[[1d4+floor(@{selected|casting-level}/2)]] creatures](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Who\'s confused?|token_id}|Confusion|@{selected|casting-level}|-1|This is so confusing! This round roll is 1d10|broken-skull) in [40ft.sq.](!rounds --aoe @{selected|token_id}|square|feet|240|40||magic)}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 save vs Confusion spell)}}{{reference=PHB p231}}SpellData=[w:Confusion,lv:7,sp:10,gp:0.01,cs:VSM,sph:Charm]{{effects=Causes confusion in one or more creatures within the area, creating indecision and the inability to take effective action.}}{{materials=A set of three nut shells, costing 1cp to source}}'},
						{name:'Conjure-Animals',type:'PRspellL6',ct:'9',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nConjure Animals\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 6 Priest}}{{school=Conjuration-Summoning}}{{sphere=Summoning}}Specs=[Conjure-Animals,PRspellL6,1H,Conjuration-Summoning]{{components=V,S}}{{duration=[[[2*@{selected|casting-level}]] rounds](!rounds --target caster|@{selected|token_id}|Conjure Animals|[[2*@{selected|casting-level}]]|-1|The conjured animal continues to do your bidding|half-heart)}}{{range=[[[30]] yards](!rounds --aoe @{selected|token_id}|circle|yards|0|60||magic|true)}}{{time=[[9]]}}{{aoe=Special}}{{save=None}}{{reference=PHB p227}}SpellData=[w:Conjure Animals,lv:6,sp:9,gp:0,cs:VS,sph:Summoning]{{effects=Magically create one or more mammals to attack his opponents.}}'},
						{name:'Conjure-Earth-Elemental',type:'PRspellL7',ct:'100',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nConjure Earth Elemental\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 7 Priest}}{{school=Conjuration-Summoning (Reversable)}}{{sphere=Elemental (Earth), Summoning}}Specs=[Conjure Earth Elemental,PRspellL7,1H,Conjuration-Summoning]{{components=V,S}}{{range=[[[40]] yards](!rounds --aoe @{selected|token_id}|circle|yards|0|80||magic|true)}}{{duration=[[[@{selected|casting-level}]] turns](!rounds --target caster|@{selected|token_id}|Conjure-Earth-Elemental|[[10*@{selected|casting-level}]]|-1|The Earth Elemental continues to do your bidding... for now|fist)}}{{time=[[1]] turn}}{{aoe=Special}}{{save=None}}{{reference=PHB p232}}SpellData=[w:Conjure Earth Elemental,lv:7,sp:100,gp:0,cs:VS,sph:Elemental-Earth|Summoning]{{effects=An Earth Elemental is summoned. [[60]]% likely (01-60) to have 12 Hit Dice, [[35]]% likely (61-95) to have 16 Hit Dice, and [[5]]% likely (96-00) have [21 to 24](!\\amp#13;\\amp#47;r 20+1d4) Hit Dice. Roll [Percentile dice](!\\amp#13;\\amp#47;r 1d100).}}'},
						{name:'Conjure-Fire-Elemental',type:'PRspellL6',ct:'60',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nConjure Fire Elemental\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 6 Priest}}{{school=Conjuration-Summoning (Reversable)}}{{sphere=Elemental (Fire)}}Specs=[Conjure Fire Elemental,PRspellL6,1H,Conjuration-Summoning]{{components=V,S}}{{range=[[[80]] yards](!rounds --aoe @{selected|token_id}|circle|yards|0|160||magic|true)}}{{time=[[6]] rounds}}{{duration=[[[@{selected|casting-level}]] turns](!rounds --target caster|@{selected|token_id}|Conjure-Fire-Elemental|[[10*@{selected|casting-level}]]|-1|The conjured elemental continues to do your bidding|half-heart)}}{{aoe=Special}}{{save=None}}{{reference=PHB p227}}SpellData=[w:Conjure Fire Elemental,lv:6,sp:60,gp:0,cs:VS,sph:Elemental-Fire]{{effects=A fire elemental is summoned [[65]]% (1-65) likely that a 12 Hit Dice elemental appears, [[20]]% (66-85) likely that a 16 Hit Dice elemental appears,[[9]]% (86-94) likely that [two to four](!\\amp#13;\\amp#47;r 1d3+1) salamanders appear, [[4]]% (95-98) likely that an efreeti appears, and [[2]]% (99-00) likely that a huge fire elemental of [21 to 24](!\\amp#13;\\amp#47;r 1d4+20) Hit Dice appears.\nRoll [Percentile dice](!\\amp#13;\\amp#47;r 1d100).}}'},
						{name:'Continual-Darkness',type:'PRspellL3',ct:'6',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nContinual Darkness\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 3 Priest}}{{school=Alteration}}{{sphere=Sun}}Specs=[Continual-Darkness,PRspellL3,1H,Alteration]{{components=V,S}}{{time=[[6]]}}{{range=[[120]] yards}}{{duration=Permanent}}{{aoe=[60ft radius sphere](!rounds --aoe @{selected|token_id}|circle|yards|120|40||black)}}{{save=[Special](!\\amp#13;\\amp#47;gmroll 1d20 saving throw)}}{{reference=PHB p209 (reverse Continual Light)}}SpellData=[w:Continual-Darkness,lv:3,sp:6,gp:0,cs:VS,sph:Sun]{{effects=This spell is similar to a *darkness* spell, except that it is as dark as a cave with no light source and lasts until negated by magical light or by a dispel magic spell.}}'},
						{name:'Continual-Light',type:'PRspellL3',ct:'6',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nContinual Light\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 3 Priest}}{{school=Alteration}}{{sphere=Sun}}Specs=[Continual-Light,PRspellL3,1H,Alteration]{{components=V,S}}{{time=[[6]]}}{{range=[[120]] yards}}{{duration=Permanent}}{{aoe=[60ft radius sphere](!rounds --aoe @{selected|token_id}|circle|yards|120|40||light)}}{{save=[Special](!\\amp#13;\\amp#47;gmroll 1d20 saving throw)}}{{reference=PHB p209}}SpellData=[w:Continual-Light,lv:3,sp:6,gp:0,cs:VS,sph:Sun]{{effects=This spell is similar to a light spell, except that it is as bright as full daylight and lasts until negated by magical darkness or by a dispel magic spell.}}'},
						{name:'Control-Temperature-10ft-Radius',type:'PRspellL4',ct:'7',charge:'uncharged',cost:'0.02',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nControl-Temperature-10ft-Radius\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 4 Priest}}{{school=Alteration}}{{sphere=Weather}}Specs=[Control-Temperature-10ft-radius,PRspellL4,1H,Alteration]{{components=V,S,M}}{{time=[[7]]}}{{range=0}}{{duration=[[4+@{selected|casting-level}]]turns}}{{aoe=[10ft radius](!rounds --aoe @{selected|token_id}|circle|feet|0|20||magic)}}{{save=None)}}{{reference=PHB p216}}SpellData=[w:Control-Temperature-10ft-radius,lv:4,sp:7,gp:0.02,cs:VSM,sph:Weather]{{effects=The temperature surrounding the caster can be altered by 10 F., either upward or downward, per level of experience of the spellcaster (a total of [[10*@{selected|casting-level}]] F).\nThe spell also provides protection from intense normal and magical thermal attacks.}}{{materials=A strip of willow bark (to lower temperatures) or raspberry leaves (to raise temperatures, 1cp each)}}'},
						{name:'Control-Weather',type:'PRspellL7',ct:'100',charge:'uncharged',cost:'0.5',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nControl Weather\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 7 Priest}}{{school=Alteration}}{{sphere=Weather}}Specs=[Control Weather,PRspellL7,1H,Alteration]{{components=V,S,M}}{{range=[[0]]}}{{time=[[1]] turn}}{{duration=[[4d12]] hours}}{{aoe=[[4d4]] sq. miles}}{{save=None}}{{reference=PHB p232}}SpellData=[w:Control Weather,lv:7,sp:100,gp:0.5,cs:VSM,sph:Weather]{{effects=Change the weather in the local area. It requires an additional [1d4](!\\amp#13;\\amp#47;r 1d4) turns for the effects of the spell to be felt.}}{{materials=The priest\'s religious symbol, incense, and prayer beads or similar prayer object, total cost 5sp per casting}}'},
						{name:'Control-Winds',type:'PRspellL5',ct:'8',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nControl Winds\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 5 Priest}}{{school=Alteration}}{{sphere=Weather}}Specs=[Control Winds,PRspellL5,1H,Alteration]{{components=V,S}}{{time=[[8]]}}{{range=[[0]]}}{{duration=[@{selected|casting-level} turns](!rounds --target caster|@{selected|token_id}|Control-Winds|[[10*@{selected|casting-level}]]|-1|Able to control winds|lightning-helix)}}{{aoe=[[[40*@{selected|casting-level}]]ft radius](!rounds --aoe @{selected|token_id}|circle|feet|0|[[80*@{selected|casting-level}]]||lightning|true)}}{{save=None}}{{reference=PHB p222}}SpellData=[w:Control Winds,lv:5,sp:8,gp:0,cs:VS,sph:Weather]{{effects=Alter wind force in the area of effect. The caster can increase or decrease wind force by [[floor(@{selected|casting-level}/3)]] levels of strength. Wind strengths are as follows:\n\nWind Force ...... Miles Per Hour\nLight Breeze ........... 2-7\nModerate Breeze ..... 8-18\nStrong Breeze ........ 19-31\nGale ..................... 32-54\nStorm ................... 55-72\nHurricane .............. 73-176}}'},
						{name:'Create-Food-and-Water',type:'PRspellL3',ct:'6',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nCreate Food and Water\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 3 Priest}}{{school=Alteration}}{{sphere=Creation}}Specs=[Create-Food-and-Water,PRspellL3,1H,Alteration]{{components=V,S}}{{time=[[1]]turn}}{{range=[[10]] yards}}{{duration=Special}}{{aoe=[[@{selected|casting-level}]]cu.ft.}}{{save=None}}{{reference=PHB p209}}SpellData=[w:,lv:3,sp:6,gp:0,cs:VS,sph:]SpellData=[w:Create-Food-and-Water,lv:3,sp:100,gp:0,cs:VS,sph:Creation]{{effects=Causes food and water to appear.}}'},
						{name:'Create-Water',type:'PRspellL1',ct:'10',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nCreate-Water\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 1 Priest (reversable)}}{{school=Alteration}}{{sphere=Elemental(Water)}}Specs=[Create-Water,PRspellL1,1H,Alteration]{{components=V,S,M}}{{time=[[1]]round}}{{range=[30 yds](!rounds --aoe @{selected|token_id}|circle|yards|0|60||magic|true)}}{{duration=Permanent}}{{aoe=Up to [[27]]cu.ft}}{{save=None}}{{reference=PHB p199}}SpellData=[w:,lv:1,sp:10,gp:0,cs:VSM,sph:Elemental-Water]{{effects=Up to four gallons of water are generated for every experience level of the caster}}{{materials=The create water spell requires at least a drop of water.}}'},
						{name:'Creeping-Doom',type:'PRspellL7',ct:'10',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nCreeping Doom\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 7 Priest}}{{school=Conjuration-Summoning}}{{sphere=Animal, Summoning}}Specs=[Creeping Doom,PRspellL7,1H,Conjuration-Summoning]{{components=V,S}}{{range=[[0]]}}{{time=[[1]] round}}{{duration=[[4*@{selected|casting-level}]] rounds}}{{aoe=[20ft. sq. movable](!rounds --movable-aoe @{selected|token_id}|bolt|feet|0|20|20|acid)}}{{save=None}}{{reference=PHB p232}}SpellData=[w:Creeping Doom,lv:7,sp:10,gp:0,cs:VS,sph:Animal|Summoning]{{effects=Calls forth a mass of from 500 to 1,000 [(1d6 + 4) x 100](!\\amp#13;\\amp#47;r 100*(4+1d6\\amp#41;) venomous, biting and stinging arachnids, insects, and myriapods.}}'},
						{name:'Cure-Better',type:'PRspellL2',ct:'6',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nCure Better\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 2 Priest}}{{school=Healing,Necromantic}}{{sphere=Healing}}Specs=[Cure-Better,PRspellL2,1H,Necromantic]{{components=V,S}}{{time=[[6]]}}{{range=touch}}{{duration=Permanent}}{{aoe=[[1]] creature}}{{save=None}}{{healing=[1d8+1](!\\amp#13;\\amp#47;r 1d8+1),\nor [1d8+5](!\\amp#13;\\amp#47;r 1d8+5) for a Priest of Life}}SpellData=[w:Cure-Better,lv:2,sp:6,gp:0,cs:VS,sph:Healing]{{effects=The God of Healing created this new spell to help his clerics, but knowledge is creeping out into the wider community. \nIt is fundamentally the same as a “Cure Light Wounds Spell” except it cures [1d8+1](!\\amp#13;\\amp#47;r 1d8+1) points of damage in the hands of a generalist cleric, or one not of the Healing pantheon. (And takes slightly longer to cast)\nIn the hands of a priest of Life however, due to the bonuses they get, it cures [1d8+5](!\\amp#13;\\amp#47;r 1d8+5) points of damage.}}'},
						{name:'Cure-Critical-Wounds',type:'PRspellL5',ct:'8',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nCure Critical Wounds\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 5 Priest}}{{school=Necromancy (Reversable)}}{{sphere=Healing}}Specs=[Cure-Critical-Wounds,PRspellL5,1H,Necromancy]{{components=V,S}}{{time=[[8]]}}{{range=Touch}}{{duration=Permanent}}{{aoe=Creature Touched}}{{save=None}}{{healing=[3d8+3](!\\amp#13;\\amp#47;r 3d8+3) HP,\nor [3d8+10](!\\amp#13;\\amp#47;r 3d8+10) for a Priest of Life}}{{reference=PHB p222}}SpellData=[w:Cure-Critical-Wounds,lv:5,sp:8,gp:0,cs:VS,sph:Healing]{{effects=Cannot cure non-corporeal or nonliving or extraplanar creatures. Can restore someone between [[0-1]] and [[0-10]] to [[0]]HP.}}'},
						{name:'Cure-Further',type:'PRspellL2',ct:'6',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nCure Further\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 2 Priest}}{{school=Healing,Necromantic}}{{sphere=Healing}}Specs=[Cure-Further,PRspellL2,1H,Necromantic]{{components=V,S}}{{time=[[6]]}}{{range=[30 yards](!rounds --aoe @{selected|token_id}|circle|yards|0|60||magic|true)}}{{duration=Permanent}}{{aoe=[[1]] creature}}{{save=None}}{{healing=[1d8](!\\amp#13;\\amp#47;r 1d8),\nor [1d8+4](!\\amp#13;\\amp#47;r 1d8+4) for a Priest of Life}}SpellData=[w:Cure-Further,lv:2,sp:6,gp:0,cs:VS,sph:Healing]{{effects=The God of Healing created this new spell to help his clerics, but knowledge is creeping out into the wider community. \nIt is fundamentally the same as a Cure Light Wounds Spell except it can be cast on someone 30 yards away. in the hands of a generalist cleric, or one not of the Healing pantheon it cures [1d8](!\\amp#13;\\amp#47;r 1d8) points of damage. \nIn the hands of a priest of Life however, due to the bonuses they get, it cures [1d8+4](!\\amp#13;\\amp#47;r 1d8+4) points of damage.}}'},
						{name:'Cure-Light-Wounds',type:'PRspellL1',ct:'5',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nCure Light Wounds\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 1 Priest}}{{school=Necromancy}}{{sphere=Healing}}Specs=[CLW,PRspellL1,1H,Necromancy]{{components=V,S}}{{time=[[5]]}}{{range=Touch}}{{duration=Permanent}}{{aoe=Creature touched}}{{save=None}}{{reference=PHB p199}}{{healing=[1d8](!\\amp#13;\\amp#47;r 1d8) HP,\nor [1d8+3](!\\amp#13;\\amp#47;r 1d8+3) for a Priest of Life}}SpellData=[w:Cure-Light-Wounds,lv:1,sp:5,gp:0,cs:VS,sph:Healing]{{effects=Cannot cure non-corporeal or nonliving or extra-planar creatures.}}'},
						{name:'Cure-Serious-Wounds',type:'PRspellL4',ct:'7',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nCure Serious Wounds\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 4 Priest}}{{school=Necromancy}}{{sphere=Healing}}Specs=[Cure-Serious-Wounds,PRspellL4,1H,Necromancy]{{components=V,S}}{{time=[[7]]}}{{range=Touch}}{{duration=Permanent}}{{aoe=Creature Touched}}{{save=None}}{{reference=PHB p217}}{{healing=[2d8+1](!\\amp#13;\\amp#47;r 2d8+1) HP,\nor [2d8+7](!\\amp#13;\\amp#47;r 2d8+7) for a Priest of Life}}SpellData=[w:Cure-Serious-Wounds,lv:4,sp:7,gp:0,cs:VS,sph:Healing]{{effects=Cannot cure non-corporeal or nonliving or extraplanar creatures. Can restore someone between [[0-1]] and [[0-10]] to [[0]]HP.}}'},
						{name:'Cure-blindness-or-deafness',type:'PRspellL3',ct:'10',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nCure Blindness or Deafness\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 3 Priest (reversable)}}{{school=Abjuration}}{{sphere=Necromantic}}Specs=[Cure-Blindness-or-Deafness,PRspellL3,1H,Abjuration]{{components=V,S}}{{time=[[10]]}}{{range=Touch}}{{duration=Permanent}}{{aoe=1 creature}}{{save=[Special](!\\amp#13;\\amp#47;gmroll 1d20 saving throw)}}{{reference=PHB p209}}SpellData=[w:Cure-Blindness-or-Deafness,lv:3,sp:10,gp:0,cs:VS,sph:Necromantic]{{effects=By touching the creature afflicted, the priest employing the spell can permanently cure some forms of blindness or deafness. This spell does not restore or repair visual or auditory organs damaged by injury or disease.\nIts reverse, cause blindness or deafness, is a different spell macro}}'},
						{name:'Cure-disease',type:'PRspellL3',ct:'10',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nCure Disease\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 3 Priest (reversable)}}{{school=Abjuration}}{{sphere=Necromantic}}Specs=[Cure-Disease,PRspellL3,1H,Abjuration]{{components=V,S}}{{time=[[10]]}}{{range=Touch}}{{duration=Permanent}}{{aoe=1 creature}}{{save=None}}{{reference=PHB p209}}SpellData=[w:Cure-Disease,lv:3,sp:10,gp:0,cs:VS,sph:Necromantic]{{effects=Cure most diseases by placing his hand upon the diseased creature. The affliction rapidly disappears thereafter, making the cured creature whole and well in from one turn to 10 days, depending on the type of disease and the state of its advancement when the cure took place (the DM must adjudicate these conditions).}}'},
						{name:'Curse',type:'PRspellL1',ct:'10',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nCurse (Reverse Bless)\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 1 Priest}}{{school=Conjuration/Summoning}}{{sphere=All}}Specs=[Curse,PRspellL1,1H,Conjuration]{{components=V,S,M}}{{time=[[1]] round}}{{range=[[60]] yards}}{{duration=[[6]] rounds}}{{aoe=[50ft cube](!rounds --aoe @{selected|token_id}|square|feet|60|50||dark)}}{{save=None}}{{reference=PHB p198 (reverse Bless)}}{{damage=[Curse them!](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Select first cursed one|token_id}|Curse|6|-1|Cursed, 1 penalty on morale \\amp attk|radioactive)}}SpellData=[w:,lv:1,sp:10,gp:0,cs:VSM,sph:All]{{effects=Only effects enemies not already in combat lowering their morale and attack roles by [[0-1]]. Selecting the *Curse them* button automatically changes their Thac0 for the correct duration}}{{materials=A sprinkling of Unholy Water (no cost).}}'},
						{name:'Darkness',type:'PRspellL1',ct:'4',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nDarkness\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 1 Priest (reversable)}}{{school=Alteration}}{{sphere=Sun}}Specs=[Darkness,PRspellL1,1H,Alteration]{{components=V,S}}{{time=[[4]]}}{{range=[[120]] yards}}{{duration=1 hour + [[@{selected|Casting-Level}]] turns}}{{aoe=[20ft radius globe](!rounds --aoe @{selected|token_id}|circle|feet|360|40||black)}}{{save=[Special](!\\amp#13;\\amp#47;gmroll 1d20 saving throw)}}{{reference=PHB p201 (reverse Light)}}{{damage=[Blind them](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Select who to brighten|token_id}|Light|[[60+(10*@{selected|Casting-Level})]]|-1|Blinded by the Darkness in eyes, 4 penalty on attk+AC|bleeding-eye)}}SpellData=[w:Darkness,lv:1,sp:4,gp:0,cs:VS,sph:Sun]{{effects=Equal to the darkest night. Immobile unless cast on a movable object or creature. If on a creature, magic resistance and save vs. spell applies.}}'},
						{name:'Destroy-Water',type:'PRspellL1',ct:'10',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nDestroy Water\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 1 Priest (reversable)}}{{school=Alteration}}{{sphere=Elemental(Water)}}Specs=[Destroy-Water,PRspellL1,1H,Alteration]{{components=V,S,M}}{{time=[[1]]round}}{{range=[30 yds](!rounds --aoe @{selected|token_id}|circle|yards|0|60||magic|true)}}{{duration=Permanent}}{{aoe=Up to [[27]]cu.ft}}{{save=None}}{{reference=PHB p199}}SpellData=[w:Destroy Water,lv:1,sp:10,gp:0,cs:VSM,sph:Elemental-Water]{{effects=Obliterates without trace (no vapor, mist, fog, or steam) up to [[4*@{selected|casting-level}]] gallons of water.}}{{materials=At least a pinch of dust (no cost).}}'},
						{name:'Detect-Charm',type:'PRspellL2',ct:'10',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nDetect Charm\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 2 Priest}}{{school=Divination}}{{sphere=Divination}}Specs=[Detect-Charm,PRspellL2,1H,Divination]{{components=V,S}}{{time=[[1]] round}}{{range=[30 yds](!rounds --aoe @{selected|token_id}|circle|yards|0|60||magic|true)}}{{duration=[[1]] turn}}{{aoe=[[@{selected|Casting-Level}]] creatures}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 saving throw)}}{{reference=PHB p204}}SpellData=[w:Detect-Charm,lv:2,sp:10,gp:0,cs:VS,sph:Divination]{{effects=Detect if a person or monster is under the influence of a charm spell, or similar control such as hypnosis, suggestion, beguiling, possession, etc.}}'},
						{name:'Detect-Evil',type:'PRspellL1',ct:'10',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nDetect-Evil\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 1 Priest (reversable)}}{{school=Divination}}{{sphere=All}}Specs=[Detect-Evil,PRspellL1,1H,Divination]{{components=V,S,M}}{{time=[[1]]round}}{{range=[[0]]}}{{duration=[[10+(5*@{selected|Casting-Level})]] rounds}}{{aoe=[10ft x 120yds path](!rounds --aoe @{selected|token_id}|bolt|feet|0|360|10|magic)}}{{save=None}}{{reference=PHB p199}}{{healing=[Evil radar on](!rounds --target caster|@{selected|token_id}|Detect-Evil|[[10+(5*@{selected|Casting-Level})]]|-1|Detecting Evil|aura)}}SpellData=[w:Detect-Evil,lv:1,sp:10,gp:0,cs:VS,sph:Divination]{{effects=This spell discovers emanations of evil from any creature, object, or area. Character alignment, however, is revealed only under unusual circumstances: characters who are strongly aligned, who do not stray from their faith, and who are of at least 9th level might radiate evil *if intent upon appropriate actions.*}}{{materials=The priest\'s holy symbol, with the priest holding it before him.}}'},
						{name:'Detect-Good',type:'PRspellL1',ct:'10',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nDetect Good\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 1 Priest (reversable)}}{{school=Divination}}{{sphere=All}}Specs=[Detect-Good,PRspellL1,1H,Divination]{{components=V,S,M}}{{time=[[1]]round}}{{range=[[0]]}}{{duration=[[10+(5*@{selected|Casting-Level})]] rounds}}{{aoe=[10ft x 120yds path](!rounds --aoe @{selected|token_id}|bolt|feet|0|360|10|magic)}}{{save=None}}{{reference=PHB p199 (reverse Detect Evil)}}{{healing=[Good radar on](!rounds --target caster|@{selected|token_id}|Detect-Good|[[10+(5*@{selected|Casting-Level})]]|-1|Detecting Good|aura)}}SpellData=[w:Detect-Good,lv:1,sp:10,gp:0,cs:VS,sph:Divination]{{effects=Discovers emanations of good from any creature, object, or area. Character alignment, however, is revealed only under unusual circumstances: characters who are strongly aligned, who do not stray from their faith, and who are of at least 9th level might radiate good *if intent upon appropriate actions.*}}{{materials=The priest\'s un-holy symbol, with the priest holding it before him.}}'},
						{name:'Detect-Lie',type:'PRspellL4',ct:'7',charge:'uncharged',cost:'1',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nDetect Lie\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 4 Priest (reversable)}}{{school=Divination}}{{sphere=Divination}}Specs=[Detect-Lie,PRspellL4,1H,Divination]{{components=V,S,M}}{{time=[[7]]}}{{range=[30 yards](!rounds --aoe @{selected|token_id}|circle|yards|0|60||magic|true)}}{{duration=[[@{selected|Casting-Level}]] rounds}}{{aoe=[[1]] creature}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 save vs spell for detect lie)}}{{reference=PHB p217}}{{healing=[Attach Polygraph](!rounds --target caster|@{selected|token_id}|Detect-Lie|[[@{selected|Casting-Level}]]|-1|Detecting Lies|aura)}}SpellData=[w:,lv:4,sp:7,gp:1,cs:VSM,sph:Divination]{{effects=Immediately able to determine if the subject creature deliberately and knowingly speaks a lie.}}{{materials=one gp worth of gold dust}}'},
						{name:'Detect-Magic',type:'PRspellL1',ct:'100',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nDetect-Magic\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 1 Priest}}{{school=Divination}}{{sphere=Divination}}Specs=[Detect-Magic,PRspellL1,1H,Divination]{{components=V,S,M}}{{time=[[1]] turn}}{{range=[[30]] yds}}{{duration=[[1]] Turn}}{{aoe=[10ft path](!rounds --aoe @{selected|token_id}|rectangle|feet|0|90|10|magic)}}{{save=None}}{{reference=PHB p199}}SpellData=[w:Detect-Magic,lv:1,sp:100,gp:0,cs:VSM,sph:Divination]{{effects=Detects magical radiations in a path [[10]] feet wide and up to 30 yards long, in the direction the caster is facing.}}{{materials=Use of the priest\'s holy symbol}}'},
						{name:'Detect-Poison',type:'PRspellL1',ct:'4',charge:'uncharged',cost:'10',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nDetect Poison\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 1 Priest}}{{school=Divination}}{{sphere=Divination}}Specs=[Detect-Poison,PRspellL1,1H,Divination]{{components=V,S,M}}{{time=[[4]]}}{{range=[[0]]}}{{duration=[[1]] Turn + [[@{selected|Casting-Level}]] rounds}}{{aoe=Special}}{{save=None}}{{reference=PHB p199}}SpellData=[w:Detect-Poison,lv:1,sp:4,gp:10,cs:VSM,sph:Divination]{{effects=This spell enables the priest to determine if an object has been poisoned or is poisonous. One object, or one [[5]] foot cubic mass, can be checked per round. The priest has a [[5*@{selected|Casting-Level}]]% chance of determining the exact type of poison}}{{materials=A strip of specially blessed vellum, costing a 10gp donation to the temple, which turns black if poison is present}}'},
						{name:'Detect-Snares-and-Pits',type:'PRspellL1',ct:'4',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nDetect Snares and Pits\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 1 Priest}}{{school=Divination}}{{sphere=Divination}}Specs=[Detect-Snares-and-Pits,PRspellL1,1H,Divination]{{components=V,S,M}}{{time=[[4]]}}{{range=[[0]]}}{{duration=[[4*@{selected|Casting-Level}]] rounds}}{{aoe=[10ft path, 40ft long](!rounds --aoe @{selected|token_id}|rectangle|feet|0|40|10|magic)}}{{save=None}}{{reference=PHB p200}}SpellData=[w:Detect-Snares-and-Pits,lv:1,sp:4,gp:0,cs:VSM,sph:Divination]{{effects=Detect snares, pits, deadfalls and similar hazards along a path 10 feet wide and 40 feet long.}}{{materials=The Priest\'s holy symbol}}'},
						{name:'Dismiss-Earth-Elemental',type:'PRspellL7',ct:'100',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nDismiss Earth Elemental\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 7 Priest}}{{school=Conjuration-Summoning (Reversable)}}{{sphere=Elemental (Earth), Summoning}}Specs=[Dismiss Earth Elemental,PRspellL7,1H,Conjuration-Summoning]{{components=V,S}}{{range=[[[40]] yards](!rounds --aoe @{selected|token_id}|circle|yards|0|80||magic|true)}}{{time=[[1]] turn}}{{duration=Instantaneous}}{{aoe=Special}}{{save=None}}{{reference=PHB p232}}SpellData=[w:Dismiss Earth Elemental,lv:7,sp:100,gp:0,cs:VS,sph:Elemental-Earth|Summoning]{{effects=Dismisses an earth elemental conjured by a *conjure earth elemental* spell or similar means.}}'},
						{name:'Dismiss-Fire-Elemental',type:'PRspellL6',ct:'60',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nDismiss Fire Elemental\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 6 Priest}}{{school=Conjuration-Summoning (Reversable)}}{{sphere=Elemental (Fire)}}Specs=[Dismiss Fire Elemental,PRspellL6,1H,Conjuration-Summoning]{{components=V,S}}{{range=[[[80]] yards](!rounds --aoe @{selected|token_id}|circle|yards|0|160||magic|true)}}{{time=[[6]] rounds}}{{duration=Instantaneous}}{{aoe=1 Fire Elemental}}{{save=None}}{{reference=PHB p227}}SpellData=[w:Dismiss Fire Elemental,lv:6,sp:60,gp:0,cs:VS,sph:Elemental-Fire]{{effects=Sends a Fire Elemental back to the plane it came from. Dispels a *Conjure Fire Elemental* spell}}'},
						{name:'Dispel-Evil',type:'PRspellL5',ct:'8',charge:'uncharged',cost:'0.01',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nDispel Evil\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 5 Priest}}{{school=Abjuration (Reversable)}}{{sphere=Protection, Summoning}}Specs=[Dispel Evil,PRspellL5,1H,Abjuration]{{components=V,S,M}}{{time=[[8]]}}{{range=[Touch attack](!attk --attk-hit @{selected|token_id})}}{{duration=[[[@{selected|casting-level}]] rounds](!rounds --target caster|@{selected|token_id}|Dispel-Evil|@{selected|casting-level}|-1|Able to Dispel Evil, and evil attks get -7 penalty|white-tower)}}{{aoe=Dispel 1 creature}}{{reference=PHB p222}}{{save=None}}SpellData=[w:Dispel Evil,lv:5,sp:8,gp:0.01,cs:VSM,sph:Protection|Summoning]{{effects=Causes a summoned creature of evil nature, an evil creature from another plane, or a creature summoned by an evil caster, to return to its own plane or place when the caster successfully strikes it in melee combat.}}{{materials=The priest\'s religious object and holy water costing 1cp}}'},
						{name:'Dispel-Good',type:'PRspellL5',ct:'8',charge:'uncharged',cost:'0.01',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nDispel Good\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 5 Priest}}{{school=Abjuration (Reversable)}}{{sphere=Protection, Summoning}}Specs=[Dispel Good,PRspellL5,1H,Abjuration]{{components=V,S,M}}{{time=[[8]]}}{{range=[Touch attack](!attk --attk-hit @{selected|token_id})}}{{duration=[[[@{selected|casting-level}]] rounds](!rounds --target caster|@{selected|token_id}|Dispel-Good|@{selected|casting-level}|-1|Able to Dispel Good, and good attks get -7 penalty|white-tower)}}{{aoe=Dispel 1 creature}}{{reference=PHB p222}}{{save=None}}SpellData=[w:Dispel Good,lv:5,sp:8,gp:0.01,cs:VSM,sph:Protection|Summoning]{{effects=Causes a summoned creature of good nature, a good creature from another plane, or a creature summoned by a good caster, to return to its own plane or place when the caster successfully strikes it in melee combat.}}{{materials=The priest\'s religious object and unholy water costing 1cp}}'},
						{name:'Dispel-Hallucinatory-Forest',type:'PRspellL4',ct:'7',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nDispel Hallucinatory Forest\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 4 Priest}}{{school=Illusion/Phantasm}}{{sphere=Plant}}Specs=[Dispel-Hallucinatory-Forest,PRspellL4,1H,Illusion-Phantasm]{{components=V,S}}{{time=[[7]]}}{{range=[[80]yds}}{{duration=Permanent}}{{aoe=[[[40*@{selected|casting-level}]]sq.ft.](!rounds --aoe @{selected|token_id}||feet|240|||green)}}{{save=None}}{{reference=PHB p218 (reverse Hallucinatory Forect)}}SpellData=[w:Dispel-Hallucinatory-Forest,lv:4,sp:7,gp:0,cs:VS,sph:Plant]{{effects=This spell does nothing other than dispel a hallucinatory forest created by the spell of the same name.}}'},
						{name:'Dispel-Magic',type:'PRspellL3',ct:'6',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nDispel Magic\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 3 Priest}}{{school=Abjuration}}{{sphere=Protection}}Specs=[Dispel-Magic,PRspellL3,1H,Abjuration]{{components=V,S}}{{time=[[6]]}}{{range=[[60]] yards}}{{duration=Special}}{{aoe=[30ft cube](!rounds --aoe @{selected|token_id}|square|yards|60|10||magic) or [1 item](!rounds --aoe @{selected|token_id}|circle|yards|0|120||magic)}}{{save=Other creature\'s item [Negates](!\\amp#13;\\amp#47;gmroll 1d20 save vs. Dispel Magic spell)}}{{reference=PHB p210}}SpellData=[w:Dispel-Magic,lv:3,sp:6,gp:0,cs:VS,sph:Protection]{{effects=Grants a chance to neutralize or negate the magic it comes in contact with.}}'},
						{name:'Divination',type:'PRspellL4',ct:'100',charge:'uncharged',cost:'50',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nDispel Magic\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 4 Priest}}{{school=Divination}}{{sphere=Divination}}Specs=[Divination,PRspellL4,1H,Divination]{{components=V,S,M}}{{time=[[1]] turn}}{{range=[[0]]}}{{duration=Special}}{{aoe=Special}}{{save=None}}{{reference=PHB p217}}SpellData=[w:,lv:4,sp:100,gp:50,cs:VSM,sph:Divination]{{effects=Garner a useful piece of advice concerning a specific goal, event, or activity that will occur within a one-week period. This can be as simple as a short phrase, or it might take the form of a cryptic rhyme or omen. Unlike the augury spell, this gives a specific piece of advice.}}{{materials=a sacrificial offering worth a minimum 50gp, incense, and the holy symbol of the priest. If an unusually important divination is attempted, sacrifice of particularly valuable gems, jewellery, or magical items may be required.}}'},
						{name:'Dust-Devil',type:'PRspellL2',ct:'20',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nDust Devil\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 2 Priest}}{{school=Conjuration/Summoning}}{{sphere=Elemental(Air)}}Specs=[Dust-Devil,PRspellL2,1H,Conjuration-Summoning]{{components=V,S}}{{time=[[2]] rounds}}{{range=[30 yards](!rounds --aoe @{selected|token_id}|circle|yards|0|60||lightning|true)}}{{duration=[[2*@{selected|Casting-Level}]] rounds}}{{aoe=Special}}{{save=None}}{{reference=PHB p204}}SpellData=[w:Dust-Devil,lv:2,sp:20,gp:0,cs:VS,sph:Elemental-Air]{{effects=Conjures a weak air elemental AC[[4]] / [[2]]HD / move [[18]] / [[1]] attack of [1d4](!\\amp#13;\\amp#47;r 1d4) / can be hit by normal weapons. Appears as small whirlwind 1ft dia at base / 5ft tall / 3ft to 4ft across at top. Moves as directed by priest but dissipates if out of range.}}'},
						{name:'Earthquake',type:'PRspellL7',ct:'100',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nEarthquake\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 7 Priest}}{{school=Alteration}}{{sphere=Elemental (Earth)}}Specs=[Earthquake,PRspellL7,1H,Alteration]{{components=V,S,M}}{{range=[[120]] yards}}{{time=[[1]] turn}}{{duration=[[1]] round}}{{aoe=[[[5*@{selected|casting-level}]]ft diameter](!rounds --aoe @{selected|token_id}|circle|feet|360|[[5*@{selected|casting-level}]]||lightning)}}{{save=None}}{{reference=PHB p233}}SpellData=[w:Earthquake,lv:7,sp:100,gp:0,cs:VSM,sph:Elemental-Earth]{{effects=A local tremor of fairly high strength rips the ground. The shock is over in one round.}}{{materials=A pinch of dirt, a piece of rock, and a lump of clay (no cost)}}'},
						{name:'Endure-Cold',type:'PRspellL1',ct:'10',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nEndure Cold\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 1 Priest}}{{school=Alteration}}{{sphere=Protection}}Specs=[Endure-Cold,PRspellL1,1H,Alteration]{{components=V,S}}{{time=[[1]] round}}{{range=Touch}}{{duration=[[3*@{selected|Casting-Level}/2]] hours}}{{aoe=Creature touched}}{{save=None}}{{reference=PHB p200}}{{healing=[Grant Endurance](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Select a beneficiary|token_id}|Endure-Cold|99|0|Can endure cold to -34C, absorb 10HP of magic cold|white-tower)}}SpellData=[w:Endure-Cold,lv:1,sp:10,gp:0,cs:VS,sph:Protection]{{effects=Can withstand normal extremes of cold down to [[0-30]]F ([[0-34]]C) and suffers [[1]]HP per hour per degree below this. Magical cold (or heat) will break spell but first [[10]]HP will be absorbed. Ends immediately if either type of Resist spell is cast on recipient}}'},
						{name:'Endure-Heat',type:'PRspellL1',ct:'10',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nEndure Heat\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 1 Priest}}{{school=Alteration}}{{sphere=Protection}}Specs=[Endure-Heat,PRspellL1,1H,Alteration]{{components=V,S}}{{time=[[1]] round}}{{range=Touch}}{{duration=[[3*@{selected|Casting-Level}/2]] hours}}{{aoe=Creature touched}}{{save=None}}{{reference=PHB p200}}{{healing=[Grant Endurance](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Select a beneficiary|token_id}|Endure-Heat|99|0|Can endure heat to 54C, absorb 10HP of magic heat|white-tower)}}SpellData=[w:Endure-Heat,lv:1,sp:10,gp:0,cs:VS,sph:Protection]{{effects=Can withstand normal extremes of heat up to [[130]]F ([[54]]C) and suffers [[1]]HP per hour per degree above this. Magical fire will break spell but first [[10]]HP will be absorbed. Ends immediately if either type of Resist spell is cast on recipient}}'},
						{name:'Entangle',type:'PRspellL1',ct:'4',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nEntangle\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 1 Priest}}{{school=Alteration}}{{sphere=Plant}}Specs=[Entangle,PRspellL1,1H,Alteration]{{components=V, S, M}}{{time=[[4]]}}{{range=[[80]] yards}}{{duration=[[1]] turn or [[10]] rounds}}{{aoe=[40 foot cube](!rounds --aoe @{selected|token_id}|square|feet|240|40||magic)}}{{save=[Reduced movement](!\\amp#13;\\amp#47;gmroll 1d20 saving throw)}}{{reference=PHB p200}}{{damage=[Entangle them](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Select first entangled creature|token_id}|Entangle|10|-1|Entangled, immobile|cobweb)}}SpellData=[w:Entangle,lv:1,sp:4,gp:0,cs:VSM,sph:Plant]{{effects=Causes grass, weeds, bushes and even trees to wrap, twist and entwine about creatures in the Area of Effect, which must then Save vs. Spell or be held fast.}}{{materials=The caster\'s holy symbol}}'},
						{name:'Enthrall',type:'PRspellL2',ct:'10',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nEnthrall\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 2 Priest}}{{school=Enchantment/Charm}}{{sphere=Charm}}Specs=[Enthrall,PRspellL2,1H,Enchantment-Charm]{{components=V,S}}{{time=[[1]]round}}{{range=[[0]]}}{{duration=Special}}{{aoe=[90ft radius](!rounds --aoe @{selected|token_id}|circle|yards|0|60||magic|true)}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 saving throw)}}{{reference=PHB p204}}{{healing=[Enthrall Them](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Select first audience member|token_id}|Enthrall|99|0|Enthralled while caster speaks unless attacked|chained-heart)}}SpellData=[w:Enthrall,lv:2,sp:10,gp:0,cs:VS,sph:Charm]{{effects=Enthrall an audience that can fully understand his language, which must save vs. spell or give the caster their undivided attention, totally ignoring their surroundings.}}'},
						{name:'Exaction',type:'PRspellL7',ct:'10',charge:'uncharged',cost:'1000',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nExaction\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 7 Priest}}{{school=Evocation, Alteration}}{{sphere=Charm, Summoning}}Specs=[Exaction,PRspellL7,1H,Evocation|Alteration]{{components=V,S,M}}{{range=[[10]] yards}}{{time=[[1]] round}}{{duration=Special}}{{aoe=1 creature}}{{save=None}}{{reference=PHB p233}}SpellData=[w:Exaction,lv:7,sp:10,gp:1000,cs:VSM,sph:Charm|Summoning]{{effects=Confront some powerful creature from another plane (including devas and other powerful minions, for instance, but not demigods or deities of any sort) and requires of it some duty or quest.}}{{materials=The priest\'s holy symbol, some matter or substance from the plane of the creature from whom an exaction is expected costing 1,000gp to source, and knowledge of the creature\'s nature or actions that is written out on a parchment that is burned to seal the pledge}}'},
						{name:'Faerie-Fire',type:'PRspellL1',ct:'4',charge:'uncharged',cost:'10',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nFaerie Fire\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 1 Priest}}{{school=Alteration}}{{sphere=Weather}}Specs=[Faerie-Fire,PRspellL1,1H,Alteration]{{components=V,M}}{{time=[[4]]}}{{range=[[80]] yards}}{{duration=[[4*@{selected|Casting-Level}]] rounds}}{{aoe=[[10*@{selected|Casting-Level}]] sq.ft. within [40ft radius](!rounds --aoe @{selected|token_id}|circle|feet|240|80||light)}}{{save=None}}{{reference=PHB p200}}{{damage=Select one of the two buttons below, *darkness* or *twilight*, to target creatures and automatically apply penaties for correct duration}}SpellData=[w:Faerie-Fire,lv:1,sp:4,gp:10,cs:VM,sph:Weather]{{effects=Outline creatures in 40ft radius of each other with a total of [[10*@{selected|pr-Casting-Level}]]sq.ft of faerie fire - the square footage relates to the surface area of the targets. In [darkness](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Select first target|token_id}|Faerie-Fire-darkness|[[4*@{selected|Casting-Level}]]|-1|Outlined in bright Faerie Fire, 2 penalty to AC|aura) +[[2]] on attacks against outlined creatures or +[[1]] in [twilight](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Select first target|token_id}|Faerie-Fire-twilight|[[4*@{selected|Casting-Level}]]|-1|Outlined in dim Faerie Fire, 1 penalty to AC|aura) or brighter. A [[2]]nd level priest will outline [[2]] human sized creatures.}}{{materials=A small piece of foxfire, costing10gp.}}'},
						{name:'False-Seeing',type:'PRspellL5',ct:'8',charge:'uncharged',cost:'300',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nFalse Seeing\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 5 Priest}}{{school=Divination (Reversable)}}{{sphere=Divination}}Specs=[False Seeing,PRspellL5,1H,Divination]{{components=V,S,M}}{{time=[[8]]}}{{range=Touch}}{{duration=[[@{selected|casting-level}]] rounds}}{{aoe=[1 creature](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Who will see falsely?|token_id}|False-Seeing|@{selected|casting-level}|-1|Can you believe your eyes?|bleeding-eye)}}{{save=None}}{{reference=PHB p225}}SpellData=[w:False Seeing,lv:5,sp:8,gp:300,cs:VSM,sph:Divination]{{effects=Causes the person to see things as they are not: rich is poor, rough is smooth, beautiful is ugly. The victim must be fooled, charmed or otherwise persuaded to use the ointment}}{{materials=An ointment for the eyes that is made from oil, poppy dust, and pink orchid essence and costs no less than 300 gp per use \\amp 1d6 months to make}}'},
						{name:'Feign-Death',type:'PRspellL3',ct:'1',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nFeign-Death\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 3 Priest}}{{school=Necromancy}}{{sphere=Necromantic}}Specs=[Feign-Death,PRspellL3,0H,Necromantic]{{components=V}}{{time=[[1]]}}{{range=Touch}}{{duration=[[10+@{selected|Casting-Level}]]rounds}}{{aoe=Person touched}}{{save=None}}{{reference=PHB p210}}{{healing=[Feign Death](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Select a target|token_id}|Feign-Death|[[10+@{selected|Casting-Level}]]|-1|Catatonic state, can\'t feel or see, 1/2 dmg to body|skull)}}SpellData=[w:Feign-Death,lv:3,sp:1,gp:0,cs:V,sph:Necromantic]{{effects=The caster or any other willing person can be put into a cataleptic state that is impossible to distinguish from actual death, in which they can smell, hear, and know what is going on, but no feeling or sight of any sort is possible; thus, any wounding or mistreatment of the body is not felt, no reaction occurs, and damage is only one-half normal.}}'},
						{name:'Find-Traps',type:'PRspellL2',ct:'5',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nFind Traps\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 2 Priest}}{{school=Divination}}{{sphere=Divination}}Specs=[Find-Traps,PRspellL2,1H,Divination]{{components=V,S}}{{time=[[5]]}}{{range=[[30]] yards}}{{duration=[[3]] turns}}{{aoe=[10ft path to range](!rounds --aoe @{selected|token_id}|bolt|feet|0|90|10|magic) in direction caster is facing}}{{save=None}}{{reference=PHB p204}}SpellData=[w:Find-Traps,lv:2,sp:5,gp:0,cs:VS,sph:Divination]{{effects=All traps, normal or magical become visible to the caster. Traps meet 3 criteria: can inflict a sudden or unexpected result; spellcaster would view result as undesirable or harmful; and result specifically intended as such by creator.}}'},
						{name:'Find-the-Path',type:'PRspellL6',ct:'30',charge:'uncharged',cost:'0.01',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nFind the Path\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 6 Priest}}{{school=Divination (Reversable)}}{{sphere=Divination}}Specs=[Find the Path,PRspellL6,1H,Divination]{{components=V,S,M}}{{range=Touch}}{{time=[[3]] rounds}}{{duration=[[@{selected|casting-level}]] turns}}{{aoe=[1 Creature](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Give GPS to whom?|token_id}|Find-the-Path|[[10*@{selected|casting-level}]]|-1|Has a really good sense of direction|flying-flag)}}{{save=None}}{{reference=PHB p227}}SpellData=[w:Find the Path,lv:6,sp:30,gp:0.01,cs:VSM,sph:Divination]{{effects=Find the shortest, most direct physical route that he is seeking, be it the way into or out of a locale.}}{{materials=A set of divination counters of the sort favoured by the priest--bones, ivory counters, sticks, carved runes, or whatever, costing 1gp that can be reused 100 times}}'},
						{name:'Fire-Quench',type:'PRspellL7',ct:'10',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nFire Quench\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 7 Priest}}{{school=Evocation (Reversable)}}{{sphere=Elemental (Fire)}}Specs=[Fire Quench,PRspellL7,1H,Evocation]{{components=V,S}}{{range=[[160]] yards}}{{time=[[1]] round}}{{duration=Instantaneous}}{{aoe=vs. magical [[[2*@{selected|casting-level}]] x 10ft cubes](!rounds --aoe @{selected|token_id}|rectangle|feet|480|||cold)\nor vs. normal [[[4*@{selected|casting-level}]] x 10ft cubes](!rounds --aoe @{selected|token_id}|rectangle|feet|480|||cold)}}{{save=[Special](!\\amp#13;\\amp#47;gmroll 1d20 save vs. Fire Quench spell)}}{{reference=PHB p234}}SpellData=[w:Fire Quench,lv:7,sp:10,gp:0,cs:VS,sph:Elemental-Fire]{{effects=Smothers twice the area of effect of a fire storm spell with respect to normal fires, and the normal area of effect with respect to magical fires.}}'},
						{name:'Fire-Seeds',type:'PRspellL6',ct:'80',charge:'uncharged',cost:'0.01',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nFire Seeds\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 6 Priest}}{{school=Conjuration}}{{sphere=Elemental (Fire)}}Specs=[Fire Seeds,PRspellL6,1H,Conjuration]{{components=V,S,M}}{{range=Touch}}{{time=[[1]] round per seed (1 to 8 rounds)}}{{duration=[[@{selected|casting-level}]] turns}}{{aoe=[Acorn Missile](!rounds --target caster|@{selected|token_id}|Fire-Seed-Acorn|[[10*@{selected|casting-level}]]|-1|You have Acorn Missiles as weapons?|all-for-one) or [Berry Incendiaries](!rounds --target caster|@{selected|token_id}|Fire-Seed-Holly-Berry|[[10*@{selected|casting-level}]]|-1|You can place Holly Berry incendiaries and set them off.|all-for-one)}}{{save=[Halves](!\\amp#13;\\amp#47;gmroll 1d20 save vs. Fire Seeds spell)}}{{reference=PHB p227}}SpellData=[w:Fire Seeds,lv:6,sp:80,gp:0.01,cs:VSM,sph:Elemental-Fire]{{effects=Creates special missiles or timed incendiaries that burn with great heat. Two options chosen when the spell is cast.\n**Fire seed missiles:** Turns up to [[4]] acorns into special grenade-like missiles with range 40 yards. Use Acorn Fire Seed as a weapon - if using this spell ask the DM to give you Acorns.\n**Fire seed incendiaries:** Turns up to [[8]] holly berries into special incendiaries. Select berry incendiaries button above and you\'ll be asked each round if you want to place or explode them.}}{{materials=The acorns or berries costing 1cp to source}}'},
						{name:'Fire-Storm',type:'PRspellL7',ct:'10',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nFire Storm\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 7 Priest}}{{school=Evocation (Reversable)}}{{sphere=Elemental (Fire)}}Specs=[Fire Storm,PRspellL7,1H,Evocation]{{components=V,S}}{{range=[[160]] yards}}{{time=[[1]] round}}{{duration=[While concentrating](!rounds --target caster|@{selected|token_id}|Wall-of-Fire-PR|99|0|The Fire Storm rages while you concentrate|radioactive)}}{{aoe=[[[2*@{selected|casting-level}]] x 10ft cubes](!rounds --aoe @{selected|token_id}|rectangle|feet|480|||fire)}}{{save=[Halves](!\\amp#13;\\amp#47;gmroll 1d20 save vs. Fire Storm spell)}}{{damage=[2d8 + @{selected|casting-level}](!\\amp#13;\\amp#47;r 2d8+@{selected|casting-level})}}{{reference=PHB p234}}SpellData=[w:Fire Storm,lv:7,sp:10,gp:0,cs:VS,sph:Elemental-Fire]{{effects=The whole area is shot through with sheets of roaring flame that equal a wall of fire spell in effect.}}'},
						{name:'Fire-Trap',type:'PRspellL2',ct:'100',charge:'uncharged',cost:'0.1',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nFire Trap\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 2 Priest}}{{school=Abjuration,Evocation}}{{sphere=Elemental (Fire)}}Specs=[Fire-Trap,PRspellL2,1H,Abjuration|Evocation]{{components=V,S,M}}{{time=[[1]]turn}}{{range=Touch}}{{duration=Permanent until Discharged}}{{aoe=Object touched}}{{save=[Half damage](!\\amp#13;\\amp#47;gmroll 1d20 Save vs. Fire spell)}}{{reference=PHB p204}}SpellData=[w:Fire-Trap,lv:2,sp:100,gp:0.1,cs:VSM,sph:Elemental-Fire]{{effects=Any closeable item can be warded. When discharged, explodes to [[5]]ft radius from the spell\'s center; Damage is [1d4+@{selected|casting-level}](!\\amp#13;\\amp#47;r 1d4+@{selected|casting-level} HP dmg from Fire Trap) HP, or save to half (round up). The item trapped is not harmed by this explosion.}}{{materials=The material components are holly berries, costing 1sp to preserve for use}}'},
						{name:'Flame-Blade',type:'PRspellL2',ct:'4',charge:'uncharged',cost:'0.1',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nFlame Blade\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 2 Priest}}{{school=Evocation}}{{sphere=Elemental (Fire)}}Specs=[Flame-Blade,PRspellL2,1H,Evocation]{{components=V,S,M}}{{time=[[4]]}}{{range=[[0]]}}{{duration=[[4+floor(@{selected|Casting-Level}/2)]] rounds}}{{aoe=[[3]]ft long blade}}{{save=None}}{{reference=PHB p205}}{{healing=[Gain Flameblade](!rounds --target caster|@{selected|token_id}|Flame-Blade|[[4+floor(@{selected|Casting-Level}/2)]]|-1|If hit, Flameblade does 1d4+4 dmg, +2 fire dmg|all-for-one)}}SpellData=[w:Flame-Blade,lv:2,sp:4,gp:0.1,cs:VSM,sph:Elemental-Fire]{{effects=Causes a blazing ray of red-hot fire to spring forth from the caster\'s hand, which is wielded as if it were a scimitar.\n**Instructions:** Use the *Gain Flameblade* button above to set the duration marker, then take a *Flame Blade* weapon in hand to wield - if you don\'t have a *Flame Blade* in your weapons list, ask the DM to give it to you. Once taken \'in-hand\' you can wield the *Flame Blade* like any other weapon.\n}}{{materials=The caster\'s holy symbol, and a leaf of sumac (1sp)}}'},
						{name:'Flame-Strike',type:'PRspellL5',ct:'8',charge:'uncharged',cost:'0.03',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nFlame Strike\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 5 Priest}}{{school=Evocation}}{{sphere=Combat}}Specs=[Flame Strike,PRspellL5,1H,Evocation]{{components=V,S,M}}{{time=[[8]]}}{{range=[[60]] yards}}{{duration=Instantaneous}}{{aoe=[5ft radius x 30ft column](!rounds --aoe @{selected|token_id}|circle|feet|180|10||fire)}}{{save=[Halves](!\\amp#13;\\amp#47;gmroll 1d20 save vs. Flame Strike spell)}}{{reference=PHB p223}}{{damage=[6d8](!\\amp#13;\\amp#47;gmroll 6d8)hp}}SpellData=[w:Flame Strike,lv:5,sp:8,gp:0.03,cs:VSM,sph:Combat]{{effects=A vertical column of fire roars downward in the location called for by the caster. Any creatures within the area of effect sustain 6d8 points of damage, save to halve}}{{materials=A pinch of sulphur costing 3cp}}'},
						{name:'Flame-Walk',type:'PRspellL3',ct:'5',charge:'uncharged',cost:'500',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nFlame Walk\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 3 Priest}}{{school=Alteration}}{{sphere=Elemental(Fire)}}Specs=[Flame-Walk,PRspellL3,1H,Alteration]{{components=V,S,M}}{{time=[[5]]}}{{range=Touch}}{{duration=[[1+@{selected|casting-level}]]rounds}}{{aoe=Up to [[{{1},{[[@{selected|casting-level}-4]]} }kh1]] Creature(s) touched}}{{save=None}}{{reference=PHB p210}}{{healing=[Take the Heat](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Who has asbestos feet?|token_id}|Flame-walk|[[1+@{selected|casting-level}]]|-1|Granted asbestos boots,+2 save vs magic fire+half damage|tread)}}SpellData=[w:,lv:3,sp:5,gp:500,cs:VSM,sph:Elemental-Fire]{{effects=Empowers one or more creatures to withstand nonmagical fires of temperatures up to 2,000 F. (enabling them to walk upon molten lava). It also confers a +2 bonus to saving throws against magical fire and reduces damage from such fires by one-half, even if the saving throw is failed.}}{{materials=The priest\'s holy symbol and at least 500 gp of powdered ruby per affected creature.}}'},
						{name:'Forbiddance',type:'PRspellL6',ct:'60',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nForbiddance\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 6 Priest}}{{school=Abjuration}}{{sphere=Protection}}Specs=[Forbiddance,PRspellL6,1H,Protection]{{components=V,S,M}}{{range=[[30]] yards}}{{time=[[6]] rounds}}{{duration=Permanent}}{{aoe=[@{selected|casting-level} x 20 yard cube](!rounds --aoe @{selected|token_id}|rectangle|yards|30|||dark)}}{{save=[Special](!\\amp#13;\\amp#47;gmroll 1d20 save vs. Forbiddance spell)}}{{reference=PHB p228}}SpellData=[w:Forbiddance,lv:6,sp:60,gp:0,cs:VSM,sph:Protection]{{effects=Secure a consecrated area from teleportation, plane shifting, and ethereal penetration.}}'},
						{name:'Free-Action',type:'PRspellL4',ct:'7',charge:'uncharged',cost:'0.01',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nFree Action\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 4 Priest}}{{school=Abjuration,Enchantment}}{{sphere=Charm}}Specs=[Free-Action,PRspellL4,1H,Abjuration|Enchantment]{{components=V,S,M}}{{time=[[7]]}}{{range=Touch}}{{duration=[[@{selected|casting-level}]]turns}}{{aoe=1 creature}}{{save=None}}{{reference=PHB p217}}{{healing=[Act Freely](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Who\'s the Hippie?|token_id}|Free-Action|[[10*@{selected|casting-level}]]|-1|Acting Freely in air and under water - but how are you breathing?|Strong)}}SpellData=[w:,lv:4,sp:7,gp:0.01,cs:VSM,sph:Charm]{{effects=Move and attack normally for the duration of the spell, even under the influence of magic that impedes movement (such as web or slow spells) or while under water.}}{{materials=A leather thong costing 1cp, bound around the arm or similar appendage, which disintegrates when the spell expires}}'},
						{name:'Gate',type:'PRspellL7',ct:'5',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nGate\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 7 Priest}}{{school=Conjuration-Summoning}}{{sphere=Summoning}}Specs=[Gate,PRspellL7,1H,Conjuration-Summoning]{{components=V,S}}{{range=[30 yards](!rounds --aoe @{selected|token_id}|circle|yards|0|60||magic|true)}}{{time=[[5]]}}{{duration=Special}}{{aoe=Special}}{{save=None}}{{reference=PHB p234}}SpellData=[w:Gate,lv:7,sp:5,gp:0,cs:VS,sph:Summoning]{{effects=Causes an interdimensional connection between the plane of existence the priest is in and the plane in which dwells a specific being of great power. The result of this connection is that the sought-after being can step through the gate or portal, from its plane to that of the priest.}}'},
						{name:'Giant-Insect',type:'PRspellL4',ct:'7',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nGiant Insect\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 4 Priest}}{{school=Alteration}}{{sphere=Animal}}Specs=[Giant-Insect,PRspellL4,1H,Alteration]{{components=V,S,M}}{{time=[[7]]}}{{range=[20 yards](!rounds --aoe @{selected|token_id}|circle|yards|0|40||magic)}}{{duration=Permanent}}{{aoe=1 to 6 insects}}{{save=None}}{{reference=PHB p217}}SpellData=[w:Giant-Insect,lv:4,sp:7,gp:0,cs:VSM,sph:Animal]{{effects=Turn one or more normal-sized insects into larger forms resembling the giant insects described in the Monstrous Manual. \nThe DM will need to alter the Character Sheets for these tokens, or replace them with the right ones...}}{{materials=Priest\'s holy symbol}}'},
						{name:'Glyph-of-Warding',type:'PRspellL3',ct:'20',charge:'uncharged',cost:'2000',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nGlyph of Warding\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 3 Priest}}{{school=Abjuration,Evocation}}{{sphere=Guardian}}Specs=[Glyph-of-Warding,PRspellL3,1H,Abjuration|Evocation]{{components=V,S,M}}{{time=1 round per 5 sq.ft.}}{{range=Touch}}{{duration=Until discharged}}{{aoe=Special}}{{save=None}}{{reference=PHB p210}}SpellData=[w:Glyph-of-Warding,lv:3,sp:20,gp:2000,cs:VSM,sph:Guardian]{{effects=A powerful inscription magically drawn to prevent unauthorized or hostile creatures from passing, entering, or opening. The priest must set the conditions of the ward; typically any creature violating the warded area without speaking the name of the glyph is subject to the magic it stores, unless it saves vs. spell.}}{{materials=The priest traces the glyph with incense, which, if the area exceeds 50 square feet, must be sprinkled with powdered diamond (at least 2,000 gp worth).}}'},
						{name:'Goodberry',type:'PRspellL2',ct:'10',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nGoodberry\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 2 Priest}}{{school=Alteration,Evocation}}{{sphere=Plant}}Specs=[Goodberry,PRspellL2,1H,Alteration|Evocation]{{components=V,S,M}}{{time=[[1]] round}}{{range=Touch}}{{duration=[[1+@{selected|Casting-Level}]] days}}{{aoe=[2d4](!\\amp#13;\\amp#47;r 2d4) fresh berries}}{{save=None}}{{reference=PHB p205}}{{healing=[[1]]HP per berry}}SpellData=[w:Goodberry,lv:2,sp:10,gp:0,cs:VSM,sph:Plant]{{effects=Either [[1]] berry is equivalent of a full meal, or heals [[1]] HP of damage up to max [[8]] per [[24]] hours.}}{{materials=the caster\'s holy symbol passed over the freshly picked, edible berries to be enspelled (blueberries, blackberries, raspberries, currants, gooseberries, etc.).}}'},
						{name:'Hallucinatory-Forest',type:'PRspellL4',ct:'7',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nHallucinatory Forest\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 4 Priest}}{{school=Illusion/Phantasm}}{{sphere=Plant}}Specs=[Hallucinatory-Forest,PRspellL4,1H,Illusion-Phantasm]{{components=V,S}}{{time=[[7]]}}{{range=[[80]]yds}}{{duration=Permanent}}{{aoe=[[[40*@{selected|casting-level}]]sq.ft.](!rounds --aoe @{selected|token_id}|rectangle|feet|240|||green)}}{{save=None}}{{reference=PHB p218}}SpellData=[w:Hallucinatory-Forest,lv:4,sp:7,gp:0,cs:VS,sph:Plant]{{effects=A hallucinatory forest comes into existence, which appears to be perfectly natural and is indistinguishable from a real forest.}}'},
						{name:'Harm',type:'PRspellL6',ct:'10',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nHarm\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 6 Priest}}{{school=Necromancy (Reversable)}}{{sphere=Healing}}Specs=[Harm,PRspellL6,1H,Necromancy]{{components=V,S}}{{range=[Touch Attack](!attk --attk-hit @{selected|token_id})}}{{time=[[1]] round}}{{duration=Permanent}}{{aoe=1 creature}}{{save=None}}{{reference=PHB p228}}SpellData=[w:Harm,lv:6,sp:10,gp:0,cs:VS,sph:Healing]{{effects=Infects the victim with a disease and causes loss of all but 1d4 hit points, if a successful touch is inflicted. Cannot harm non-corporeal or nonliving or extra-planar creatures}}'},
						{name:'Heal',type:'PRspellL6',ct:'10',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nHeal\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 6 Priest}}{{school=Necromancy (Reversable)}}{{sphere=Healing}}Specs=[Heal,PRspellL6,1H,Necromancy]{{components=V,S}}{{range=Touch}}{{time=[[1]] round}}{{duration=Permanent}}{{aoe=1 creature}}{{save=None}}{{reference=PHB p228}}SpellData=[w:Heal,lv:6,sp:10,gp:0,cs:VS,sph:Healing]{{effects=Wipe away disease and injury in the creature who receives the benefits of the spell}}'},
						{name:'Heat-Metal',type:'PRspellL2',ct:'5',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nHeat Metal\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 2 Priest}}{{school=Alteration}}{{sphere=Elemental(Fire)}}Specs=[Heat-Metal,PRspellL2,1H,Alteration]{{components=V,S,M}}{{time=[[5]]}}{{range=[40 yards](!rounds --aoe @{selected|token_id}|circle|yards|0|80||fire|true)}}{{duration=[[7]] rounds}}{{aoe= [[floor(@{selected|Casting-Level}/2)]] man-sized equivalent area of metal}}{{save=[Special](!\\amp#13;\\amp#47;gmroll 1d20 saving throw)}}{{reference=PHB p205}}{{damage=[Heat it up!](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Select who to heat|token_id}|Heat-Metal|7|-1|Metal is heated, doing increasing dmg|lightning-helix)}}SpellData=[w:,lv:2,sp:5,gp:0,cs:VSM,sph:Elemental-Fire]{{effects=Makes ferrous metal very hot but not Elven chain. Magical armour saves vs. magical fire (DMG p38) for no effect.\nRound 1 and 7 uncomfortable.\nRound 2 and 6 [1d4](!\\amp#13;\\amp#47;r 1d4) damage.\nRound 3 / 4 / 5 does [2d4](!\\amp#13;\\amp#47;r 2d4) damage.\n\nIn round 5 must save vs. spell or suffer a disability. Roll [1d3](!\\amp#13;\\amp#47;r 1d3) to determine which: \n[[1]]:hand or foot unusable for [2d4](!\\amp#13;\\amp#47;r 2d4) days \n[[2]]:body totally disabled for [1d4](!\\amp#13;\\amp#47;r 1d4) days\n[[3]]:head-unconscious [1d4](!\\amp#13;\\amp#47;r 1d4) turns\nEffect can be totally removed by 5th level *Heal* spell or normal rest. Flammable materials touching metal smoulder and burn [[1]] round later causing [2d4](!\\amp#13;\\amp#47;r 2d4) damage. Fire resistance (spell/potion/ring) or *Protection from Fire* or *Cold* or *Ice Storm* spell negate as does immersion in water or snow.}}{{materials=A holy symbol and the metal to be heated}}'},
						{name:'Heroes-Feast',type:'PRspellL6',ct:'100',charge:'uncharged',cost:'1',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nHeroes\' Feast\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 6 Priest}}{{school=Evocation}}{{sphere=Creation}}Specs=[Heroes Feast,PRspellL6,1H,Evocation]{{components=V,S,M}}{{range=[[10]] yards}}{{time=[[1]] turn}}{{duration=[[[1]] hour](!rounds --target caster|@{selected|token_id}|Heroes-Feast|60|-1|Put on a feast fit for Heroes|trophy)}}{{aoe=[[@{selected|casting-level}]] feasters}}{{save=None}}{{reference=PHB p228}}{{healing=[Make Heroes](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Select first target|token_id}|Heroes-Feast|99|0|Blessed, +1 to attk, immune to fear, hopelessness, panic|angel-outfit)}}SpellData=[w:Heroes Feast,lv:6,sp:100,gp:1,cs:VSM,sph:Creation]{{effects=Bring forth a great feast that serves [[12]] creatures, cures wounds, blesses them and gives other benefits.}}'},
						{name:'Hold-Animal',type:'PRspellL3',ct:'6',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nHold Animal\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 3 Priest}}{{school=Enchantment/Charm}}{{sphere=Animal}}Specs=[Hold-Animal,PRspellL3,1H,Enchantment-Charm]{{components=V,S}}{{time=[[6]]}}{{range=[[80]]yds}}{{duration=[[2*@{selected|casting-level}]]rounds}}{{aoe=1 to 4 animals in [40ft. cube](!rounds --aoe @{selected|token_id}|square|feet|240|40||magic)}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 save vs. Hold Animal spell)}}{{reference=PHB p211}}{{damage=[Hold the Animal](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Control which animal?|token_id}|Hold-Animal|[[2*@{selected|casting-level}]]|-1|Held fast on a tight leash|fishing-net)}}SpellData=[w:Hold-Animal,lv:3,sp:6,gp:0,cs:VS,sph:Animal]{{effects=Holds one to four animals rigid. Animals affected are normal or giant-sized mammals, birds, or reptiles, but not monsters such as centaurs, gorgons, harpies, naga, etc. Apes, bears, crocodiles, dogs, eagles, foxes, giant beavers, and similar animals are subject to this spell.}}'},
						{name:'Hold-Person',type:'PRspellL2',ct:'5',charge:'uncharged',cost:'0.05',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nHold Person\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 2 Priest}}{{school=Enchantment/Charm}}{{sphere=Charm}}Specs=[Hold-Person,PRspellL2,1H,Enchantment-Charm]{{components=V,S,M}}{{time=[[5]]}}{{range=[[120]] yards}}{{duration=[[2*@{selected|Casting-Level}]] rounds}}{{aoe=[1d4](!\\amp#13;\\amp#47;r 1d4) persons in [20ft. cube](!rounds --aoe @{selected|token_id}|square|feet|360|20||magic)}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 saving throw)}}{{reference=PHB p205}}{{damage=[Hold them!](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Select first target|token_id}|Hold-Person|[[2*@{selected|Casting-Level}]]|-1|Held|fishing-net)}}SpellData=[w:Hold-Person,lv:2,sp:5,gp:0.05,cs:VSM,sph:Charm]{{effects=Holds [1d4](!\\amp#13;\\amp#47;r 1d4) humanoid creatures man-size or smaller (not undead) rigidly in place (but can do actions that don\'t require motion or speech) but caster can choose to hold fewer. [[3]] or [[4]] get normal saving throw. [[2]] get [[0-1]] penalty. Just [[1]] suffers [[0-2]] penalty. Saves are adjusted for Wisdom. Caster can end at will.}}{{materials=A small, straight piece of iron worth 5cp.}}'},
						{name:'Hold-Plant',type:'PRspellL4',ct:'7',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nHold Plant\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 4 Priest}}{{school=Enchantment/Charm}}{{sphere=Plant}}Specs=[Hold-Plant,PRspellL4,1H,Enchantment-Charm]{{components=V,S}}{{time=[[7]]}}{{range=[[80]yds}}{{duration=[[@{selected|casting-level}]]rounds}}{{aoe=[1d4](!\\amp#13;\\amp#47;r 1d4 plants can be held) plants or [40sq.ft.](!rounds --aoe @{selected|token_id}|square|feet|240|40||magic) or [up to 16sq.ft.](!rounds --aoe @{selected|token_id}|square|feet|240|||magic)}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 save vs. Hold Plant spell)}}{{reference=PHB p218}}SpellData=[w:,lv:4,sp:7,gp:0,cs:VS,sph:Plant]{{effects=Affects vegetable matter as follows: 1) it causes ambulatory vegetation to cease moving; 2) it prevents vegetable matter from entwining, grasping, closing, or growing; 3) it prevents vegetable matter from making any sound or movement that is not caused by wind.}}'},
						{name:'Holy-Word',type:'PRspellL7',ct:'1',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nHoly Word\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 7 Priest}}{{school=Conjuration-Summoning (Reversable)}}{{sphere=Combat}}Specs=[Holy Word,PRspellL7,0H,Conjuration-Summoning]{{components=V}}{{range=[[0]]}}{{time=[[1]]}}{{duration=Special}}{{aoe=[30ft radius](!rounds --aoe @{selected|token_id}|circle|feet|0|60||light|true)}}{{save=None}}{{reference=PHB p234}}SpellData=[w:Holy Word,lv:7,sp:1,gp:0,cs:V,sph:Combat]{{effects=Creates magic of tremendous power. It drives off evil creatures from other planes, forcing them to return to their own planes of existence, provided the speaker is in his home plane.}}'},
						{name:'Identify',type:'PRspellL1',ct:'100',charge:'uncharged',cost:'100',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nIdentify\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 1 Wizard}}{{school=Divination}}Specs=[Identify,PRspellL1,1H,Divination]{{components=V, S, M}}{{time=[[1]] turn}}{{range=[[0]]}}{{duration=[[1*@{selected|Casting-Level}]] rounds}}{{aoe=[[1*@{selected|Casting-Level}]] items}}{{save=None}}{{reference=PHB p205}}SpellData=[w:,lv:1,sp:100,gp:100,cs:VSM,sph:Divination]{{effects=Unlike PHB no need to prepare item. Can Identify a total of [[@{selected|Casting-Level}]] items or attributes - 1 per round. Touch item to attempt to Identify it which might activate any curse (DMs discretion or item description). DM rolls d100. Chance of learning information is [[[{(10*@{selected|Casting-Level}),90}kl1]]](!\\amp#13;\\amp#47;gmroll 1d100)%.}}'},
						{name:'Imbue-with-Spell-Ability',type:'PRspellL4',ct:'100',charge:'uncharged',cost:'50',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nImbue With Spell Ability\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 4 Priest}}{{school=Enchantment}}{{sphere=Charm}}Specs=[Imbue-with-Spell-Ability,PRspellL4,1H,Enchantment-Charm]{{components=V,S,M}}{{time=[[1]]turn}}{{range=Touch}}{{duration=Until used}}{{aoe=Person touched}}{{save=None}}{{reference=PHB p218}}SpellData=[w:,lv:4,sp:100,gp:50,cs:VSM,sph:Charm]{{effects=Transfer a limited number and selection of his currently memorized spells, and the ability to cast them, to another person, who is a non-spellcaster.}}'},
						{name:'Insect-Plague',type:'PRspellL5',ct:'100',charge:'uncharged',cost:'0.01',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nInsect Plague\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 5 Priest}}{{school=Conjuration-Summoning}}{{sphere=Combat}}Specs=[Insect Plague,PRspellL5,1H,Conjuration-Summoning]{{components=V,S,M}}{{time=[[1]] turn}}{{range=[[120]] yards}}{{duration=[[[2*@{selected|casting-level}]] rounds](!rounds --target caster|@{selected|token_id}|Insect-Plague|[[2*@{selected|casting-level}]]|-1|A plague of Insects is attacking at your command|chemical-bolt)}}{{aoe=[180ft x 60ft cloud](!rounds --aoe @{selected|token_id}|rectangle|yards|120|60|20|acid)}}{{save=None}}{{reference=PHB p223}}SpellData=[w:Insect Plague,lv:5,sp:100,gp:0.01,cs:VSM,sph:Combat]{{effects=A horde of creeping, hopping, and flying insects gather and swarm in a thick cloud which obscures vision, limiting it to 10 feet, prevents spellcasting, and inflicts damage.}}{{materials=A few granules of sugar, some kernels of grain, and a smear of fat, costing 1cp in total}}'},
						{name:'Invisibility-to-Animals',type:'PRspellL1',ct:'4',charge:'uncharged',cost:'0.01',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nInvisibility to Animals\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 1 Priest}}{{school=Alteration}}{{sphere=Animal}}Specs=[Invisibility-to-Animals,PRspellL1,1H,Alteration]{{components=S,M}}{{time=[[4]]}}{{range=Touch}}{{duration=[[10+@{selected|Casting-Level}]] rounds}}{{aoe=[[@{selected|Casting-Level}]] creatures touched}}{{save=Special}}{{reference=PHB p200}}{{healing=[Make Invisible](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Select a beneficiary|token_id}|Invisibility-to-Animals|[[10+@{selected|Casting-Level}]]|-1|Invisible to animals, no powers + Int\\lt6|half-haze)}}SpellData=[w:Invisibility-to-Animals,lv:1,sp:4,gp:0.01,cs:SM,sph:Animal]{{effects=Totally invisible to normal animals of Intelligence less than 6, inc giant (that have no magic or powers). Attacking reveals that individual}}{{materials=1cp of holly rubbed over the recipient}}'},
						{name:'Invisibility-to-Undead',type:'PRspellL1',ct:'4',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nInvisibility to Undead\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 1 Priest}}{{school=Abjuration}}{{sphere=Necromantic}}Specs=[Invisibility-to-Undead,PRspellL1,1H,Abjuration]{{components=V,S,M}}{{time=[[4]]}}{{range=Touch}}{{duration=[[6]] rounds}}{{aoe=Creature touched}}{{save=Special}}{{reference=PHB p200}}{{[Make Invisible](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Select a beneficiary|token_id}|Invisibility-to-Undead|6|-1|Invisible to undead of \\lt=4HD, others get save vs spell|half-haze)}}SpellData=[w:Invisibility-to-Undead,lv:1,sp:4,gp:0,cs:VSM,sph:Necromantic]{{effects=Causes affected undead to lose track of and ignore the warded creature for the duration of the spell.}}{{materials=The priest\'s holy symbol}}'},
						{name:'Know-Alignment',type:'PRspellL2',ct:'10',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nKnow Alignment\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 2 Priest}}{{school=Divination}}{{sphere=Divination}}Specs=[Know-Alignment,PRspellL2,1H,Divination]{{components=V,S}}{{time=[[1]] round}}{{range=[10 yards](!rounds --aoe @{selected|token_id}|circle|yards|0|20||magic|true)}}{{duration=[[1]] turn}}{{aoe=[[1]] creature or object}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 saving throw)}}{{reference=PHB p206}}SpellData=[w:Know-Alignment,lv:2,sp:10,gp:0,cs:VS,sph:Divination]{{effects=Exactly read the aura of a creature or an aligned object (unaligned objects reveal nothing).}}'},
						{name:'LT-Give-Life',type:'',ct:'0',charge:'uncharged',cost:'0',body:'/r [[ {{ [[ {{ ?{How many d8 (min. 4, max (4+(@{selected|casting-level}-5)/2))} },{4}}kh1]]},{[[4+floor((@selected|casting-level}-5)/2)]]}}kl1]]d8'},
						{name:'Life-Transference',type:'PRspellL3',ct:'1',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nLife Transference\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 3 Priest}}{{school=Necromancy}}{{sphere=Necromantic}}Specs=[Life-Transference,PRspellL3,1H,Necromancy]{{components=V,S}}{{time=[[1]]}}{{range=[30 ft.](!rounds --aoe @{selected|token_id}|circle|feet|0|30||magic|true)}}{{duration=Instantaneous}}{{aoe=[[1]] Creature}}{{save=None}}{{healing=[Give life](~PR-Spells-DB|LT-Give-Life)}}SpellData=[w:Life-Transference,lv:3,sp:1,gp:0,cs:VS,sph:Necromantic]{{effects=You sacrifice some of your health to mend another creature. You take 4d8 damage + up to 1d8 for every 2 levels above 5th and one creature of your choice that you can see within range regains twice the damage you take.\nThere is no saving throw against the spell. The damage experienced is necrotic. (An item that reduced damage from necrotic spells would work)}}'},
						{name:'Light',type:'PRspellL1',ct:'4',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nLight\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 1 Priest (reversable)}}{{school=Alteration}}{{sphere=Sun}}Specs=[Light,PRspellL1,1H,Alteration]{{components=V,S}}{{time=[[4]]}}{{range=[[120]] yards}}{{duration=1 hour + [[@{selected|Casting-Level}]] turns}}{{aoe=[20ft radius globe](!rounds --aoe @{selected|token_id}|circle|feet|360|20||light)}}{{save=[Special](!\\amp#13;\\amp#47;gmroll 1d20 saving throw)}}{{reference=PHB p201}}{{damage=[Blind them](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Select who to brighten|token_id}|Light|[[60+(10*@{selected|Casting-Level})]]|-1|Blinded by the Light in eyes, 4 penalty on attk+AC|bleeding-eye)}}SpellData=[w:Light,lv:1,sp:4,gp:0,cs:VS,sph:Sun]{{effects=Equal to torch light. Immobile unless cast on a movable object or creature. If on a creature, magic resistance and save vs. spell applies. Resistance negates, and save means light is centred immediately behind creature. Light on eyes blinds creature giving [[0-4]] on attack and worsening AC by [[4]]. Caster can extinguish at any time. Lights are not cumulative.}}'},
						{name:'Liveoak',type:'PRspellL6',ct:'100',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nLiveoak\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 6 Priest}}{{school=Enchantment}}{{sphere=Plant}}Specs=[Liveoak,PRspellL6,1H,Enchantment]{{components=V,S,M}}{{range=Touch}}{{time=[[1]] turn}}{{duration=[[@{selected|casting-level}]] days}}{{aoe=1 oak tree}}{{save=None}}{{reference=PHB p228}}SpellData=[w:Liveoak,lv:6,sp:100,gp:0,cs:VSM,sph:Plant]{{effects=Charm a healthy oak tree (or other type if the DM allows) to cause it to serve as a protector.}}'},
						{name:'Locate-Animals-or-Plants',type:'PRspellL1',ct:'10',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nLocate Animals or Plants\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 1 Priest}}{{school=Divination}}{{sphere=Divination(Animal,Plant)}}Specs=[Locate-Animals-or-Plants,PRspellL1,1H,Divination]{{components=V,S,M}}{{time=[[1]] round}}{{range=[[100+(20*@{selected|Casting-Level})]] yards}}{{duration=[[@{selected|Casting-Level}]] rounds}}{{aoe=[[[20*@{selected|Casting-Level}]] x 20 yds long](!rounds --aoe @{selected|token_id}|bolt|yards|[[100+20*@{selected|Casting-Level}]]|[[20*@{selected|Casting-Level}]]|20|magic)}}{{save=Negates}}{{reference=PHB p201}}SpellData=[w:Locate-Animals-or-Plants,lv:1,sp:10,gp:0,cs:VSM,sph:Divination]{{effects=Find direction \\amp distance of any one type of animal or plant desired.}}{{materials=The caster\'s holy symbol}}'},
						{name:'Locate-Object',type:'PRspellL3',ct:'100',charge:'uncharged',cost:'0.1',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nLocate Object\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 3 Priest (reversable)}}{{school=Divination}}{{sphere=Divination}}Specs=[Locate-Object,PRspellL3,1H,Divination]{{components=V,S,M}}{{time=[[1]] turn}}{{range=[[[60+(10*@{selected|Casting-Level})]] yards](!rounds --aoe @{selected|token_id}|circle|yards|0|[[60+(10*@{selected|Casting-Level})]]||magic|true)}}{{duration=[[8]] hours}}{{aoe=[[1]] object}}{{save=None}}{{reference=PHB p211}}SpellData=[w:,lv:3,sp:100,gp:0.1,cs:VSM,sph:Divination]{{effects=Helps locate a known or familiar object by casting the spell, slowly turning, and will then sense when they are facing in the direction of the object to be located, provided the object is within range.}}{{materials=A piece of lodestone costing 1sp.}}'},
						{name:'Lose-the-Path',type:'PRspellL6',ct:'30',charge:'uncharged',cost:'0.01',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nLose the Path\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 6 Priest}}{{school=Divination (Reversable)}}{{sphere=Divination}}Specs=[Lose the Path,PRspellL6,1H,Divination]{{components=V,S,M}}{{range=Touch}}{{time=[[3]] rounds}}{{duration=[[@{selected|casting-level}]] turns}}{{aoe=[1 Creature](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Give GPS to whom?|token_id}|Lose-the-Path|[[10*@{selected|casting-level}]]|-1|Has a *really bad* sense of direction|black-flag)}}{{save=None}}{{reference=PHB p227}}SpellData=[w:Find the Path,lv:6,sp:30,gp:0.01,cs:VSM,sph:Divination]{{effects=Makes the creature touched totally lost and unable to find its way for the duration of the spell--although it can be led, of course}}{{materials=A set of divination counters of the sort favoured by the priest--bones, ivory counters, sticks, carved runes, or whatever, costing 1gp which can be reused 100 times}}'},
						{name:'Lower-Water',type:'PRspellL4',ct:'100',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nLower Water\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 4 Priest}}{{school=Alteration}}{{sphere=Elemental(Water)}}Specs=[Lower-Water,PRspellL4,1H,Alteration]{{components=V,S,M}}{{time=[[1]]turn}}{{range=[[120]]yds}}{{duration=[[@{selected|casting-level}]]turns}}{{aoe=[Special](!rounds --aoe @{selected|token_id}|square|feet|360|||magic)}}{{save=None}}{{reference=PHB p218}}SpellData=[w:Lower-Water,lv:4,sp:100,gp:0,cs:VSM,sph:Elemental-Water]{{effects=Causes water or similar fluid in the area of effect to sink away to a minimum depth of 1 inch at 2 feet for every experience level of the priest.}}{{materials=The priest\'s holy (or unholy) symbol and a pinch of dust.}}'},
						{name:'Magic-Font',type:'PRspellL5',ct:'600',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nMagic Font\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 5 Priest}}{{school=Divination}}{{sphere=Divination}}Specs=[Magic Font,PRspellL5,1H,Divination]{{components=V,S,M}}{{time=[[1]] hour}}{{range=Touch}}{{duration=Special}}{{aoe=Special}}{{save=None}}{{reference=PHB p223}}SpellData=[w:Magic Font,lv:5,sp:600,gp:0,cs:VSM,sph:Divination]{{effects=Causes a holy water font to serve as a scrying device.}}{{materials=The priest\'s holy symbol and the font and its trappings are not consumed by the spell (no cost)}}'},
						{name:'Magical-Stone',type:'PRspellL1',ct:'4',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nMagical Stone\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 1 Priest}}{{school=Enchantment}}{{sphere=Combat}}Specs=[Magical-Stone,PRspellL1,1H,Enchantment]{{components=V,S,M}}{{time=[[4]]}}{{range=[[0]]}}{{duration=[[[30]] rounds](!rounds --target caster|@{selected|token_id}|Magical-Stone|30|-1|You have 3 magical stones - use them wisely|grenade)}}{{aoe=Up to [[3]] stones}}{{save=None}}{{reference=PHB p201}}{{damage=To use, ensure you have Magical Stones in your MIs (ask DM to give you them) then take them or a sling in hand as a weapon, or give them to another character}}SpellData=[w:Magical-Stone,lv:1,sp:4,gp:0,cs:VSM,sph:Combat]{{effects=Temporarily enchant up to three small pebbles, no larger than sling bullets to then be hurled or slung at an opponent up to [[30]] yards away, and all three can be thrown in one round.}}{{materials=The priest\'s holy symbol and three small pebbles, unworked by tools or magic of any type.}}'},
						{name:'Magical-Vestment',type:'PRspellL3',ct:'5',charge:'uncharged',cost:'10',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nMagical Vestment\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 3 Priest}}{{school=Enchantment}}{{sphere=Protection}}Specs=[Magical-Vestment,PRspellL3,1H,Enchantment]{{components=V,S,M}}{{time=[[1]] round}}{{range=[[0]]}}{{duration=[[5*@{selected|Casting-Level}]] rounds}}{{aoe=The caster}}{{save=None}}{{reference=PHB p211}}{{healing=[Enchant vestment](!rounds --target caster|@{selected|token_id}|Magical-Vestment|[[5*@{selected|Casting-Level}]]|-1|Vestment AC5+[[floor((@{selected|Casting-Level}-5)/3)]]|bolt-shield)}}SpellData=[w:Magical-Vestment,lv:3,sp:5,gp:10,cs:VSM,sph:Protection]{{effects=This spell enchants the caster\'s vestment, providing protection at least the equivalent of chain mail (AC 5) +1 enchantment for each three levels of the priest beyond 5th level, to a maximum of AC 1.}}{{materials=The vestment to be enchanted, costing at least 100gp and can be used 20 times, and the priest\'s holy symbol}}'},
						{name:'Meld-into-Stone',type:'PRspellL3',ct:'6',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nMeld Into Stone\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 3 Priest}}{{school=Alteration}}{{sphere=Elemental(Earth)}}Specs=[Meld-into-Stone,PRspellL3,1H,Alteration]{{components=V,S,M}}{{time=[[6]]}}{{range=[[0]] }}{{duration=8 rounds + 1d8}}{{aoe=The Caster}}{{save=None}}{{reference=PHB p211}}{{healing=[Meld away](!rounds --target caster|@{selected|token_id}|Meld-into-stone|\\amp#91;[80+10*(\\amp#91;[1d8]\\amp#93;\\amp#41;]\\amp#93;|-10|Melded in stone|White-tower)}}SpellData=[w:Meld-into-Stone,lv:3,sp:6,gp:0,cs:VSM,sph:Elemental-Earth]{{effects=Meld the caster\'s body and possessions into a single block of stone, which must be large enough to accommodate his body in all three dimensions.}}{{materials=The stone wall}}'},
						{name:'Messenger',type:'PRspellL2',ct:'10',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nMessenger\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 2 Priest}}{{school=Enchantment/Charm}}{{sphere=Animal}}Specs=[Messenger,PRspellL2,1H,Enchantment-Charm]{{components=V,S}}{{time=[[10]]}}{{range=[[[20*@{selected|Casting-Level}]] yards](!rounds --aoe @{selected|token_id}|circle|yards|0|[[20*@{selected|Casting-Level}]]||red)}}{{duration=[[@{selected|Casting-Level}]]days}}{{aoe=1 creature}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 saving throw)}}{{reference=PHB p206}}SpellData=[w:Messenger,lv:2,sp:10,gp:0,cs:VS,sph:Animal]{{effects=This spell enables the priest to call upon a tiny (size T) creature of at least animal intelligence to act as his messenger.}}'},
						{name:'Moonbeam',type:'PRspellL5',ct:'7',charge:'uncharged',cost:'50',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nMoonbeam\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 5 Priest}}{{school=Evocation, Alteration}}{{sphere=Sun}}Specs=[Moonbeam,PRspellL5,1H,Evocation|Alteration]{{components=V,S,M}}{{time=[[7]]}}{{range=[[60+(10*@{selected|casting-level})]] yards}}{{duration=[[[@{selected|casting-level}]] rounds](!rounds --target caster|@{selected|token_id}|Moonbeam|@{selected|casting-level}|-1|Casting a moonbeam|half-haze)}}{{aoe=[5ft radius + Special](!rounds --movable-aoe @{selected|token_id}|circle|feet|[[180+(30*@{selected|casting-level})]]|10||light)}}{{save=None}}{{reference=PHB p223}}SpellData=[w:Moonbeam,lv:5,sp:7,gp:50,cs:VSM,sph:Sun]{{effects=Cause a beam of soft, pale light to strike down from overhead and illuminate whatever area the caster is pointing at. The light is exactly the same as moonlight, so that colors other than shades of black, gray, or white are vague.}}{{materials=Several seeds of any moonseed plant and a piece of opalescent feldspar (moonstone) costing 50gp}}'},
						{name:'Negative-Plane-Protection',type:'PRspellL3',ct:'10',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nNegative Plane Protection\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 3 Priest}}{{school=Abjuration}}{{sphere=Necromantic}}Specs=[Negative-Plane-Protection,PRspellL3,1H,Abjuration]{{components=V,S}}{{time=[[1]] round}}{{range=Touch}}{{duration=[[@{selected|Casting-Level}]] turns, negates 1 attack}}{{aoe=1 creature}}{{save=None}}{{reference=PHB p212}}{{healing=[Protect them](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Select who to protect|token_id}|Negative-Plane-Protection|[[10*@{selected|Casting-Level}]]|-1|Save to negate 1 energy drain attack, fail=dmg*2|white-tower)}}SpellData=[w:Negative-Plane-Protection,lv:3,sp:10,gp:0,cs:VS,sph:Necromantic]{{effects=Affords partial protection from undead monsters with Negative Energy plane connections (such as shadows, wights, wraiths, spectres, or vampires) and certain weapons and spells that drain energy levels, granting a protected creature a [saving throw](!\\amp#13;\\amp#47;gmroll 1d20 Save vs. Death Magic) vs. death magic. Success means it suffers only normal HP damage, and an attacking undead creature suffers [2d6](!\\amp#13;\\amp#47;r 2d6 damage to the undead) HP; a draining wizard or weapon receives no damage. Proof against only one such attack, whether successful or not. If failed to save, recipient suffers ***double the usual physical damage***, in addition to the loss of experience or Strength that normally occurs.}}'},
						{name:'Neutralise-Poison',type:'PRspellL4',ct:'7',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nNeutralise Poison\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 4 Priest}}{{school=Necromancy (Reversable)}}{{sphere=Healing}}Specs=[Neutralise-Poison,PRspellL4,1H,Necromancy]{{components=V,S}}{{time=[[7]]}}{{range=Touch}}{{duration=Permanent}}{{aoe=Creature touched or [[@{selected|Casting-Level}/2]] cu.ft. of substance}}{{save=None}}{{reference=PHB p219}}SpellData=[w:Neutralise-Poison,lv:4,sp:7,gp:0,cs:VS,sph:Healing]{{effects=Detoxifies any venom in creature or substance touched. To remove Poison from an unwilling creature (such as a poisonous snake) needs a \'to hit\' roll.}}'},
						{name:'Obscure-Object',type:'PRspellL3',ct:'100',charge:'uncharged',cost:'0.1',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nObscure Object\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 3 Priest (reversable)}}{{school=Divination}}{{sphere=Divination}}Specs=[Obscure-Object,PRspellL3,1H,Divination]{{components=V,S,M}}{{time=[[1]] turn}}{{duration=[[8]] hours}}{{aoe=[[1]] object}}{{save=None}}{{reference=PHB p211 (reverse of *Locate Object*)}}{{range=[[[60+(10*@{selected|Casting-Level})]] yards](!rounds --aoe @{selected|token_id}|circle|yards|0|[[120+20*@{selected|Casting-Level}]]||dark|true)}}SpellData=[w:,lv:3,sp:100,gp:0.1,cs:VSM,sph:Divination]{{effects=Hides an object from location by spell, crystal ball, or similar means for eight hours.}}{{materials=A piece of lodestone, costing 1sp.}}'},
						{name:'Obscurement',type:'PRspellL2',ct:'5',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nObscurement\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 2 Priest}}{{school=Alteration}}{{sphere=Weather}}Specs=[Obscurement,PRspellL2,1H,Alteration]{{components=V,S}}{{time=[[5]]}}{{range=[[0]]}}{{duration=[[4*@{selected|Casting-Level}]]rounds}}{{aoe=10ft high by [[[10*@{selected|Casting-Level}]]ft.sq](!rounds --aoe @{selected|token_id}|square|feet|0|[[10*@{selected|Casting-Level}]]||light|true)}}{{save=None}}{{reference=PHB p206}}SpellData=[w:Obscurement,lv:2,sp:5,gp:0,cs:VS,sph:Weather]{{effects=Causes a misty vapor to arise around the caster, which persists for four rounds per caster level and reduces the visibility ranges of all types of vision (including infravision) to [2d4 feet](!\\amp#13;\\amp#47;r 2d4).}}'},
						{name:'Part-Water',type:'PRspellL6',ct:'100',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nPart Water\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 6 Priest}}{{school=Alteration}}{{sphere=Elemental (Water)}}Specs=[Part Water,PRspellL6,1H,Alteration]{{components=V,S,M}}{{range=[[20*@{selected|casting-level}]] yards}}{{time=[[1]] turn}}{{duration=[[[@{selected|casting-level}]] turns](!rounds --target caster|@{selected|token_id}|Part-Water|[[10*@{selected|casting-level}]]|-1|The water has parted for you|stopwatch)}}{{aoe=[[3*@{selected|casting-level}]]ft deep x [[[60*@{selected|casting-level}]]ft long x 30 yards wide](!rounds --aoe @{selected|token_id}|rectangle|feet|[[30*@{selected|casting-level}]]|[[60*@{selected|casting-level}]]|90|magic)}}{{save=None}}{{reference=PHB p229}}SpellData=[w:Part Water,lv:6,sp:100,gp:0,cs:VSM,sph:Elemental-Water]{{effects=Cause water or similar liquid to move apart, thus forming a trough.}}'},
						{name:'Pass-Plant',type:'PRspellL5',ct:'8',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nPass Plant\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 5 Priest}}{{school=Alteration}}{{sphere=Plant}}Specs=[Pass Plant,PRspellL5,1H,Alteration]{{components=V,S,M}}{{time=[[8]]}}{{range=Touch}}{{duration=Special}}{{aoe=Special}}{{save=None}}{{reference=PHB p223}}SpellData=[w:Pass Plant,lv:5,sp:8,gp:0,cs:VSM,sph:Plant]{{effects=Enter a tree and move from inside it to inside another tree in approximately the direction desired by the spell user, and must be within the range shown in the table on PHB p223.}}'},
						{name:'Pass-without-trace',type:'PRspellL1',ct:'10',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nPass Without Trace\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 1 Priest}}{{school=Enchantment/Charm}}{{sphere=Plant}}Specs=[Pass-Without-Trace,PRspellL1,1H,Enchantment]{{components=V,S,M}}{{time=[[1]] round}}{{range=Touch}}{{duration=[[@{selected|Casting-Level}]] turns}}{{aoe=[[@{selected|Casting-Level}]] creatures touched}}{{save=None}}{{reference=PHB p201}}{{damage=[Pass without trace](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Select to make sneaky|token_id}|Pass-Without-Trace|[[10*@{selected|Casting-Level}]]|-1|Only leave a slight magical trail|ninja-mask)}}SpellData=[w:Pass-Without-Trace,lv:1,sp:10,gp:0,cs:VSM,sph:Plant]{{effects=Leave no physical trace but a magical trail for [1d6](!\\amp#13;\\amp#47;r 1d6) turns.}}{{materials=a sprig of pine or evergreen, which must be burned and the ashes powdered and scattered when the spell is cast}}'},
						{name:'Plane-Shift',type:'PRspellL5',ct:'8',charge:'uncharged',cost:'1',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nPlane Shift\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 5 Priest}}{{school=Alteration}}{{sphere=Astral}}Specs=[Plane Shift,PRspellL5,1H,Alteration]{{components=V,S,M}}{{time=[[8]]}}{{range=Touch [Attack if unwilling](!attk --attk-hit @{selected|token_id})}}{{duration=Permanent}}{{aoe=1 creature (Special)}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 saves vs. Plane Shift spell)}}{{reference=PHB p224}}SpellData=[w:Plane Shift,lv:5,sp:8,gp:1,cs:VSM,sph:Astral]{{effects=Moves the caster or some other creature to another plane of existence. The recipient of the spell remains in the new plane until sent forth by some like means.}}{{materials=A small, forked metal rod costing 10gp to make, that can be used 10 times}}'},
						{name:'Plant-Door',type:'PRspellL4',ct:'7',charge:'uncharged',cost:'0.01',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nPlant Door\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 4 Priest}}{{school=Alteration}}{{sphere=Plant}}Specs=[Plant-Door,PRspellL4,1H,Alteration]{{components=V,S,M}}{{time=[[7]]}}{{range=Touch to create a path 8ft high by [[[12*@{selected|casting-level}]]ft x 4ft](!rounds --aoe @{selected|token_id}|bolt|feet|0|[[12*@{selected|casting-level}]]|4|magic)}}{{duration=Special}}{{aoe=Special}}{{save=None}}{{reference=PHB p219}}SpellData=[w:Plant-Door,lv:4,sp:7,gp:0.01,cs:VSM,sph:Plant]{{effects=Opens a magical portal or passageway through trees, undergrowth, thickets, or any similar growth--even growth of a magical nature, or enter a solid tree trunk and remain hidden there until the spell ends. If the caster opts to [stay within an oak](!rounds --target caster|@{selected|token_id}|Plant-Door|[[90*@{selected|casting-level}]]|-1|Hiding in an Oak tree|ninja-mask), the spell lasts nine turns per level of the caster; if [within an ash tree](!rounds --target caster|@{selected|token_id}|Plant-Door|[[30*@{selected|casting-level}]]|-1|Hiding in an Oak tree|ninja-mask), it lasts three turns per level. [Otherwise](!rounds --target caster|@{selected|token_id}|Plant-Door|[[10*@{selected|casting-level}]]|-1|Hiding in an Oak tree|tread), the duration of the spell is one turn per level.}}{{materials=A piece of charcoal and the caster\'s holy symbol costing 1cp.}}'},
						{name:'Plant-Growth',type:'PRspellL3',ct:'10',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nPlant Growth\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 3 Priest}}{{school=Alteration}}{{sphere=Plant}}Specs=[Plant-Growth,PRspellL3,1H,Alteration]{{components=V,S,M}}{{time=[[1]]round}}{{range=[[160]]yds }}{{duration=Permanent}}{{aoe=[An entangled thicket](!rounds --aoe @{selected|token_id}|rectangle|feet|480|||acid) or encourage growth in 1sq.mile}}{{save=[Special](!\\amp#13;\\amp#47;gmroll 1d20 save vs spell as caster)}}{{reference=PHB p212}}SpellData=[w:Plant-Growth,lv:3,sp:10,gp:0,cs:VSM,sph:Plant]{{effects=Choose either of two different uses.\n[[1]].Cause normal vegetation to grow, entwine, and entangle to form a thicket or jungle that creatures must hack or force a way through at a movement rate of 10 feet per round (or 20 feet per round for larger-than-man-sized creatures).\n[[2]].Or affect a one-mile square area to render plants more vigorous, fruitful, and hardy, increasing yields by 20% to 50% ([1d4+1] x 10%), given a normal growing season. The DM secretly makes a saving throw (based on the caster\'s level) to see if the spell takes effect.}}{{materials=Plants in the area of effect}}'},
						{name:'Poison',type:'PRspellL4',ct:'7',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nPoison\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 4 Priest}}{{school=Necromancy (reversable)}}{{sphere=Healing}}Specs=[Poison,PRspellL4,1H,Necromancy]{{components=V,S}}{{time=[[7]]}}{{range=Touch}}{{duration=Permanent}}{{aoe=Creature touched or [[@{selected|Casting-Level}/2]] cu.ft. of substance}}{{save=None}}{{reference=PHB p219 (reverse Neutralise Poison)}}{{damage=[Try to Touch](~selected|To-Hit-Spell)}}SpellData=[w:Poison,lv:4,sp:7,gp:0,cs:VS,sph:Healing]{{effects=Introduces venom in creature or substance touched. Requires an attack roll and subject gets a saving throw, if that fails subject is incapacitated and dies in [[1]] turn.}}\n!magic --touch @{selected|token_id}|Poison|10|-1|Poisoned, counting down to Death|skull '},
						{name:'Prayer',type:'PRspellL3',ct:'6',charge:'uncharged',cost:'1',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nPrayer\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 3 Priest}}{{school=Conjuration/Summoning}}{{sphere=Combat}}Specs=[Prayer,PRspellL3,1H,Conjuration-Summoning]{{components=V,S,M}}{{time=[[6]]}}{{range=[[0]]}}{{duration=[[@{selected|Casting-Level}]] rounds}}{{aoe=[60ft radius](!rounds --aoe @{selected|token_id}|circle|feet|0|120||light|true)}}{{save=None}}{{reference=PHB p212}}SpellData=[w:Prayer,lv:3,sp:6,gp:1,cs:VSM,sph:Combat]{{healing=Select *[Friends]* button below and target all your friends, then select the *[Enemies]* button below and target your enemies}}{{effects=Affects all in the area of the spell. [Friends](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Select first target|token_id}|Prayer-ally|[[@{selected|Casting-Level}]]|-1|Prayer, [[+1]] on attack, dmg + saves|angel-outfit) get +[[1]] benefit on all attack, damage and saves. All [Enemies](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Select first target|token_id}|Prayer-foe|[[@{selected|Casting-Level}]]|-1|Prayer foe, [[-1]] on attack, dmg + saves|radioactive) in area at time of cast get [[0-1]] penalty. Once cast priest can do other things. If another priest of same religious persuasion (not just alignment) is *Chanting* at the same time, get +[[2]] and [[0-2]]}}{{materials=Silver holy symbol, prayer beads, or similar device, costing 10sp.}}'},
						{name:'Preserve-Life',type:'PRspellL0',ct:'5',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nPreserve Life\nas a level @{selected|Casting-Level} caster}}{{splevel=Special}}{{school=Healing,Necromantic}}{{sphere=Necromantic}}Specs=[Preserve-Life,PRspellL0,1H,Necromantic]{{components=V,S}}{{time=[[5]]}}{{range=[30 ft radius](!rounds --aoe @{selected|token_id}|circle|feet|0|60||light|true)}}{{duration=Permanent}}{{aoe=Creatures in 30ft radius}}{{save=None}}{{healing=distribute [[5*@{selected|Casting-Level}]] HP curing over selected creatures}}SpellData=[w:,lv:0,sp:5,gp:0,cs:VS,sph:Healing]{{effects=At Second level a Priest of Life (a Healer) gets a special ability **Preserve Life**. A Healer can spend five times his level in healing points over specific characters within 30ft, however this cannot raise a character to more than half their normal hit points. This can be done a number of times a day equal to their level.}}'},
						{name:'Produce-Fire',type:'PRspellL4',ct:'7',charge:'uncharged',cost:'0.1',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nProduce Fire\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 4 Priest}}{{school=Alteration}}{{sphere=Elemental(Fire)}}Specs=[Produce-Fire,PRspellL4,1H,Alteration]{{components=V,S,M}}{{time=[[7]]}}{{range=[[40]]yds}}{{duration=[[1]]round}}{{aoe=[12sq.ft.](!rounds --aoe @{selected|token_id}|square|feet|120|12||fire)}}{{save=None}}{{reference=PHB p219}}SpellData=[w:,lv:4,sp:7,gp:0.1,cs:VSM,sph:Elemental-Fire]{{effects=Creates a common fire of up to 12 feet per side in area.}}{{materials=A paste of sulfur and wax costing 10cp to produce, formed into a ball and thrown at the target.}}'},
						{name:'Produce-Flame',type:'PRspellL2',ct:'5',charge:'uncharged',cost:'0',body:'!magic --touch @{selected|token_id}|Produce-flame-on-fire|99|0|On fire and takes 1d4+1 HP damage|lightning-helix)\n/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nProduce Flame\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 2 Priest}}{{school=Alteration}}{{sphere=Elemental (Fire)}}Specs=[Produce-Fire,PRspellL2,1H,Alteration]{{components=V,S}}{{time=[[5]]}}{{range=[[40]] yards}}{{duration=[[@{selected|Casting-Level}]] rounds}}{{aoe=3ft diameter pool of fire when thrown}}{{save=None}}{{reference=PHB p206}}{{damage=[Create Flames](!rounds --target caster|@{selected|token_id}|Produce-Flame|@{selected|casting-level}|-1|Able to create little fire bombs|three-leaves)\n[1d4+1](!\\amp#13;\\amp#47;r 1d4+1 fire damage and if catch fire spend a round putting it out or suffer more damage) if struck}}SpellData=[w:Produce-Flame,lv:2,sp:5,gp:0,cs:VS,sph:Elemental-Fire]{{effects=A bright flame, equal in brightness to a torch, springs forth from the caster\'s palm which does not harm the caster, but it is hot and it causes the combustion of flammable materials (paper, cloth, dry wood, oil, etc.). Can be hurled as a missile which flashes on impact, igniting combustibles within a 3-foot diameter of its centre of impact, and then it goes out.}}'},
						{name:'Protection-From-Good-10ft',type:'PRspellL4',ct:'7',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nProtection from Good, 10ft radius\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 4 Priest}}{{school=Abjuration}}{{sphere=Protection}}Specs=[Protection-from-Good-10ft,PRspellL4,1H,Abjuration]{{components=V,S,M}}{{time=[[7]]}}{{range=Touch}}{{duration=[[@{selected|Casting-Level}]] turns}}{{aoe=[[10]]ft radius}}{{save=None}}{{healing=[Protect them](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Select who to Protect|token_id}|Prot-from-Good-10ft|[[10*@{selected|Casting-Level}]]|-1|2 bonus vs good attk+save, block control, block attk by conjured+x-planar|white-tower)}}{{reference=PHB p219}}SpellData=[w:Protection-from-Good-10ft,lv:4,sp:7,gp:0,cs:VSM,sph:Protection]{{effects=Identical in all respects to that of a *protection from good* spell, except that it encompasses a much larger area and its duration is greater.}}{{materials=A circle 20 feet in diameter using unholy water and smouldering dung (found for free), according to the protection from good spell}}'},
						{name:'Protection-from-Evil',type:'PRspellL1',ct:'4',charge:'uncharged',cost:'0.1',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nProtection from Evil\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 1 Priest}}{{school=Abjuration}}{{sphere=Protection}}Specs=[Protection-from-Evil,PRspellL1,1H,Abjuration]{{components=V,S,M}}{{time=[[4]]}}{{range=Touch}}{{duration=[[3*@{selected|Casting-Level}]] rounds}}{{aoe=Creature touched}}{{save=None}}{{reference=PHB p201}}{{healing=[Protect them](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Select who to Protect|token_id}|Protection-from-Evil|[[3*@{selected|Casting-Level}]]|-1|2 bonus vs evil attk+save, block control, block attk by conjured+x-planar|white-tower)}}SpellData=[w:Protection-from-Evil,lv:1,sp:4,gp:0.1,cs:VSM,sph:Protection]{{effects=Creates a magical barrier around the recipient at a distance of 1 foot. The barrier moves with the recipient and has three major effects:\n[[1]]: attacks by evil or evilly enchanted creatures are at -2 and saves have a +2 bonus.\n[[2]]: mental control over the protected creature or invading and taking over its mind is blocked.\n[[3]]: prevents bodily contact by creatures of an extraplanar or conjured nature.\nEnds if the protected character makes a melee attack against or tries to force the barrier against the blocked creature.}}{{materials=Holy water or burning incense costing 1sp}}'},
						{name:'Protection-from-Evil-10ft',type:'PRspellL4',ct:'7',charge:'uncharged',cost:'0.5',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nProtection from Evil, 10ft radius\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 4 Priest}}{{school=Abjuration}}{{sphere=Protection}}Specs=[Protection-from-Evil-10ft,PRspellL4,1H,Abjuration]{{components=V,S,M}}{{time=[[7]]}}{{range=Touch}}{{duration=[[@{selected|Casting-Level}]] turns}}{{aoe=[[10]] ft radius}}{{save=None}}{{reference=PHB p219}}{{healing=[Protect them](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Select who to Protect|token_id}|Prot-from-Evil-10ft|[[10*@{selected|Casting-Level}]]|-1|2 bonus vs evil attk+save, block control, block attk by conjured+x-planar|white-tower)}}SpellData=[w:Protection-from-Evil-10ft,lv:4,sp:7,gp:0.5,cs:VSM,sph:Protection]{{effects=The globe of protection of this spell is identical in all respects to that of a *protection from evil* spell, except that it encompasses a much larger area and its duration is greater. Effect moves with the creature touched.}}{{materials=Trace a circle 20 feet in diameter using 5sp-worth of holy water and incense, according to the *protection from evil* spell.}}'},
						{name:'Protection-from-Fire',type:'PRspellL3',ct:'6',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nProtection from Fire\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 3 Priest}}{{school=Abjuration}}{{sphere=Protection,Elemental(Fire)}}Specs=[Protection-from-Fire,PRspellL3,1H,Abjuration]{{components=V,S,M}}{{time=[[6]]}}{{range=Touch}}{{duration=[[@{selected|Casting-Level}]] turns (max)}}{{aoe=Creature touched}}{{save=None}}{{reference=PHB p212}}{{healing=[Protect them](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Select who to Protect|token_id}|Protection-from-Fire|[[10*@{selected|Casting-Level}]]|-1|Immune to normal fire. If caster, absorbs 12*@{selected|Casting-Level} HP magic fire dmg|white-tower)}}SpellData=[w:Protection-from-Fire,lv:3,sp:6,gp:0,cs:VSM,sph:Protection|Elemental-Fire]{{effects=*If cast on caster:* totally immune to normal fires of all types. Absorbs [[12*@{selected|Casting-Level}]] HP damage from all magical fires then dispelled. *If cast on another creature:* immune to ordinary fire. +[[4]] on saving throws against magical fire and [[50]]% damage ([[25]]% if save).}}{{materials=Caster\'s holy symbol.}}'},
						{name:'Protection-from-Lightning',type:'PRspellL4',ct:'7',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nProtection from Lightning\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 4 Priest}}{{school=Abjuration}}{{sphere=Protection,Weather)}}Specs=[Protection-from-Lightning,PRspellL4,1H,Abjuration]{{components=V,S,M}}{{time=[[7]]}}{{range=Touch}}{{duration=Special}}{{aoe=[[1]] creature}}{{save=None}}{{reference=PHB p219}}SpellData=[w:Protection-from-Lightning,lv:4,sp:7,gp:0,cs:VSM,sph:Protection|Weather]{{effects=Depends on who it is cast upon.\n**If cast upon the [Caster](!rounds --target caster|@{selected|token_id}|Prot-caster-vs-Lightning|[[10*@{selected|Casting-Level}]]|-1|Immune to electrical dmg. Absorbs [[10*@{selected|Casting-Level}]] HP electrical dmg|white-tower)**, confers complete invulnerability to electrical attack until has absorbed [[10*@{selected|casting-level}]] HP of electrical damage.\n**If cast upon [Another creature](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Select who to Protect|token_id}|Prot-vs-Lightning|[[10*@{selected|Casting-Level}]]|-1|+[[4]] on saves vs electrical dmg + dmg is halved|white-tower)**, gives a save bonus of +4 vs. electrical attacks, and reduces damage by 50%.}}{{materials=Caster\'s holy symbol.}}'},
						{name:'Purify-Food-and-Drink',type:'PRspellL1',ct:'10',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nPurify Food and Drink\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 1 Priest}}{{school=Alteration (reversable)}}{{sphere=All}}Specs=[Purify-Food-and-Drink,PRspellL1,1H,Alteration]{{components=V,S}}{{time=[[1]] round}}{{range=[[30]] yds}}{{duration=Permanent}}{{aoe=[[@{selected|Casting-Level}]] cu.ft.}}{{save=None}}{{reference=PHB p202}}SpellData=[w:Purify-Food-and-Drink,lv:1,sp:10,gp:0,cs:VS,sph:All]{{effects=Makes spoiled, rotten, poisonous, or otherwise contaminated food and water pure and suitable for eating and drinking.}}'},
						{name:'Putrify-Food-and-Drink',type:'PRspellL1',ct:'10',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nPutrify Food and Drink\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 1 Priest}}{{school=Alteration (reversable)}}{{sphere=All}}Specs=[Putrify-Food-and-Drink,PRspellL1,1H,Alteration]{{components=V,S}}{{time=[[1]] round}}{{range=[[30]] yds}}{{duration=Permanent}}{{aoe=[[@{selected|Casting-Level}]] cu.ft.}}{{save=None}}{{reference=PHB p202 (reverse of *Purify Food \\amp Drink*)}}SpellData=[w:Putrify-Food-and-Drink,lv:1,sp:10,gp:0,cs:VS,sph:All]{{effects=Makes pure food and water into spoiled, rotten, poisonous, or otherwise contaminated food and water totally unsuitable for eating and drinking.}}'},
						{name:'Pyrotechnics',type:'PRspellL3',ct:'6',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nPyrotechnics\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 3 Priest}}{{school=Alteration}}{{sphere=Elemental(Fire)}}Specs=[Pyrotechnics,PRspellL3,1H,Alteration]{{components=V,S,M}}{{time=[[6]]}}{{range=[[160]]yds }}{{duration=Special}}{{aoe=10x or 100x fire source}}{{save=[Special](!\\amp#13;\\amp#47;gmroll 1d20 save vs Pyrotechnics spell)}}{{reference=PHB p212}}SpellData=[w:Pyrotechnics,lv:3,sp:6,gp:0,cs:VSM,sph:Elemental-Fire]{{effects=Draws on an existing fire source to produce either of two effects, at the option of the caster.\n[[1]]: produce coloured aerial fireworks that [Blinds](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Who\'s blinded by fireworks?|token_id}|Pyro-blinded|[[1+([[1d4]])]]|-1|Blinded by bright flashes, AC \\amp Attack at -4|bleeding-eye) creatures in, under, or within [120 feet](!rounds --aoe @{selected|token_id}|circle|feet|480|120||light) that have an unobstructed line of sight to the effect for 1d4+1 rounds (save vs. spell to negate).\n[[2]]: cause a thick, writhing stream of smoke to arise from the source and form a [Choking cloud](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Who\'s choking in smoke?|token_id}|Pyro-smoke|[[@{selected|casting-level}]]|-1|Choking in smoke, and only 2ft vision|bleeding-eye) for [[@{selected|casting-level}]] rounds covering a roughly hemispherical volume from the ground or floor up totally obscuring vision beyond 2 feet. Fills a volume [100 times the fire source](!rounds --aoe @{selected|token_id}|circle|feet|480|||black).}}{{materials=Fire source}}'},
						{name:'Quench-Fire',type:'PRspellL4',ct:'7',charge:'uncharged',cost:'0.1',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nQuench Fire\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 4 Priest}}{{school=Alteration (reversable)}}{{sphere=Elemental(Fire)}}Specs=[Quench-Fire,PRspellL4,1H,Alteration]{{components=V,S,M}}{{time=[[7]]}}{{range=[[40]]yds}}{{duration=[[1]]round}}{{aoe=[12sq.ft.](!rounds --aoe @{selected|token_id}|square|feet|120|12||cold)}}{{save=None}}{{reference=PHB p219 (reverse of *Produce Fire*)}}SpellData=[w:Quench-Fire,lv:4,sp:7,gp:0.1,cs:VSM,sph:Elemental-Fire]{{effects=*Quench fire* extinguishes any normal fire (coals, oil, tallow, wax, wood, etc.) within the area of effect.}}{{materials=A paste of sulphur and wax costing 1sp to prepare, formed into a ball and thrown at the target.}}'},
						{name:'Quest',type:'PRspellL5',ct:'8',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nQuest\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 5 Priest}}{{school=Enchartment-Charm}}{{sphere=Charm}}Specs=[Quest,PRspellL5,1H,Enchantment-Charm]{{components=V,S,M}}{{time=[[8]]}}{{range=[[[60]] yards](!rounds --aoe @{selected|token_id}|circle|yards|0|120||magic|true)}}{{duration=Until Fulfilled}}{{aoe=1 creature}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 saves vs. Quest spell)}}{{reference=PHB p224}}SpellData=[w:Quest,lv:5,sp:8,gp:0,cs:VSM,sph:Charm]{{effects=Require the affected creature to perform a service and return to the priest with proof that the deed was accomplished.}}{{materials=The priest\'s holy symbol}}'},
						{name:'Rainbow',type:'PRspellL5',ct:'7',charge:'uncharged',cost:'1000',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nRainbow\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 5 Priest}}{{school=Evocation, Alteration}}{{sphere=Weather, Sun}}Specs=[Rainbow,PRspellL5,1H,Evocation|Alteration]{{components=V,S,M}}{{time=[[7]]}}{{range=[[[120]] yards](!rounds --aoe @{selected|token_id}|circle|yards|0|240||magic|true)}}{{duration=[[[@{selected|casting-level}]] rounds](!rounds --target caster|@{selected|token_id}|Rainbow|@{selected|casting-level}|-1|The lovely rainbow is still working for you|stopwatch)}}{{aoe=Special}}{{save=None}}{{reference=PHB p224}}SpellData=[w:Rainbow,lv:5,sp:7,gp:1000,cs:VSM,sph:Weather|Sun]{{effects=Two applications:\n**Bow:** Creates a shimmering, multi-layered short composite bow of rainbow hues, with 7 missiles each a +2 weapon described in the table on PHB p 224. To use this spell, add a Rainbow-Bow and 7 Rainbow-Sheaf-Arrows to your bag and use them as weapons.\n**Bridge:** Causes the rainbow to form a seven-hued bridge up to 3 feet wide per level of the caster.}}{{materials=The priest\'s holy symbol, a vial of holy water, and either a rainbow or a diamond of not less than 1,000 gp value, specially prepared with bless and prayer spells while in sight of a rainbow}}'},
						{name:'Raise-Dead',type:'PRspellL5',ct:'10',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nRaise Dead\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 5 Priest}}{{school=Necromancy (Reversable)}}{{sphere=Necromantic}}Specs=[Raise Dead,PRspellL5,1H,Necromancy]{{components=V,S}}{{time=[[1]] round}}{{range=[[[30]] yards](!rounds --aoe @{selected|token_id}|circle|yards|0|60||magic|true)}}{{duration=Permanent}}{{aoe=1 creature}}{{save=[Special](!\\amp#13;\\amp#47;gmroll 1d20 saves vs. Raise Dead spell)}}{{reference=PHB p224}}SpellData=[w:Raise Dead,lv:5,sp:10,gp:0,cs:VS,sph:Necromantic]{{effects=Restore life to a dwarf, gnome, half-elf, halfling, or human (other creatures may be allowed, at the DM\'s option).}}{{materials=The priest\'s holy symbol}}'},
						{name:'Raise-Water',type:'PRspellL4',ct:'100',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nRaise Water\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 4 Priest}}{{school=Alteration (reversable)}}{{sphere=Elemental(Water)}}Specs=[Raise-Water,PRspellL4,1H,Alteration]{{components=V,S,M}}{{time=[[1]]turn}}{{range=[[120]]yds}}{{duration=[[@{selected|casting-level}]]turns}}{{aoe=Special}}{{save=None}}{{reference=PHB p218 (reverse of *Lower Water*)}}SpellData=[w:Raise-Water,lv:4,sp:100,gp:0,cs:VSM,sph:Elemental-Water]{{effects=*Raise Water* causes water or similar fluids to return to their highest natural level: spring flood, high tide, etc. }}{{materials=The priest\'s holy (or unholy) symbol and a pinch of dust.}}'},
						{name:'Reflecting-Pool',type:'PRspellL4',ct:'1200',charge:'uncharged',cost:'1',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nReflecting Pool\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 4 Priest}}{{school=Divination}}{{sphere=Divination}}Specs=[Reflecting-Pool,PRspellL4,1H,Divination]{{components=V,S,M}}{{time=[[2]] hours}}{{range=[[10]] yds}}{{duration=[[@{selected|casting-level}]] rounds}}{{aoe=Special}}{{save=None}}{{reference=PHB p219}}SpellData=[w:,lv:4,sp:1200,gp:1,cs:VSM,sph:Divination]{{effects=Cause a pool of normal water found in a natural setting to act as a scrying device.}}{{materials=oil extracted from such nuts as the hickory and the walnut, costing 1gp to refine, and dropped in three measures upon the surface of the pool. (A measure need be no more than a single ounce of oil.)}}'},
						{name:'Remove-Curse',type:'PRspellL3',ct:'6',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nRemove Curse\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 3 Priest (reversable)}}{{school=Abjuration}}{{sphere=Protection}}Specs=[Remove-Curse,PRspellL3,1H,Abjuration]{{components=V,S}}{{time=[[6]]}}{{range=Touch}}{{duration=Permanent}}{{aoe=Special}}{{save=[Special](!\\amp#13;\\amp#47;gmroll 1d20 saving throw)}}{{reference=PHB p213}}SpellData=[w:Remove-Curse,lv:3,sp:6,gp:0,cs:VS,sph:Protection]{{effects=Usually able to remove a curse on an object, on a person, or in the form of some undesired sending or evil presence.}}'},
						{name:'Remove-Fear',type:'PRspellL1',ct:'1',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nRemove Fear\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 1 Priest (reversable)}}{{school=Abjuration}}{{sphere=Charm}}Specs=[Remove-Fear,PRspellL1,1H,Abjuration]{{components=V,S}}{{time=[[1]]}}{{range=[10 yards](!rounds --aoe @{selected|token_id}|circle|yards|0|20||light|true)}}{{duration=[[1]]turn}}{{aoe=[[floor(@{selected|Casting-Level}/4)]] creatures}}{{save=[At +4](!\\amp#13;\\amp#47;gmroll 1d20+4 saving throw)}}{{reference=PHB p202}}{{healing=[Protect Them](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Select who to make brave|token_id}|Protection|10|-1|Save vs. Fear at +4|white-tower)}}SpellData=[w:Remove-Fear,lv:1,sp:1,gp:0,cs:VS,sph:Charm]{{effects=Instills courage in the spell recipient, raising the creature\'s saving throw rolls against magical fear attacks by +4 for one turn, and grants another save vs. any previous failed save vs. fear, with a +4 bonus to the die roll.}}'},
						{name:'Remove-Paralysis',type:'PRspellL3',ct:'6',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nRemove Paralysis\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 3 Priest}}{{school=Abjuration}}{{sphere=Protection}}Specs=[Remove-Paralysis,PRspellL3,1H,Abjuration]{{components=V,S}}{{time=[[6]]}}{{range=[[10*@{selected|Casting-Level}]]yds}}{{duration=Permanent}}{{aoe=[1d4](!\\amp#13;\\amp#47;r 1d4)creatures in a [20ft cube](!rounds --aoe @{selected|token_id}|square|feet|[[30*@{selected|Casting-Level}]]|20||light)}}{{save=Special}}{{reference=PHB p213}}SpellData=[w:Remove-Paralysis,lv:3,sp:6,gp:0,cs:VS,sph:Protection]{{effects=Free one or more creatures from any paralyzation or from related magic.}}'},
						{name:'Repel-Insects',type:'PRspellL4',ct:'10',charge:'uncharged',cost:'0.01',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nRepel Insects\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 4 Priest}}{{school=Abjuration,Alteration}}{{sphere=Animal,Protection}}Specs=[Repel-Insects,PRspellL4,1H,Abjuration|Alteration]{{components=V,S,M}}{{time=[[1]] round}}{{range=[[0]]}}{{duration=[[@{selected|Casting-Level}]] turns}}{{aoe=[[10]]ft radius}}{{save=None}}{{reference=PHB p220}}{{healing=[Apply Repellant](!rounds --target caster|@{selected|token_id}|Repel-Insects|[[10*@{selected|Casting-Level}]]|-1|Repels all natural insects+others\\lt[[floor(@{selected|casting-level}/3)]]HD. Others save to pass with 1d6 dmg|white-tower)}}SpellData=[w:Repel-Insects,lv:4,sp:10,gp:0.01,cs:VSM,sph:Protection|Animal]{{effects=Creates an invisible barrier to all sorts of insects, and normal insects do not approach within 10 feet of the caster while the spell is in effect: giant insects with less than [[floor(@{selected|casting-level}/3)]] Hit Dice are also repelled but insects with more Hit Dice can enter the protected area if the insect is especially aggressive and saves vs. spell - if save, can pass but take [1d6](!\\amp#13;\\amp#47;r 1d6) damage.}}{{materials=any one of the following, each costing just 1cp: several crushed marigold flowers, a whole crushed leek, seven crushed stinging nettle leaves, or a small lump of resin from a camphor tree.}}'},
						{name:'Resist-Cold',type:'PRspellL2',ct:'5',charge:'uncharged',cost:'1',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nResist Cold\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 2 Priest}}{{school=Alteration}}{{sphere=Protection}}Specs=[Resist-Cold,PRspellL2,1H,Alteration]{{components=V,S,M}}{{time=[[5]]}}{{range=Touch}}{{duration=[[@{selected|Casting-Level}]] rounds}}{{aoe=Creature touched}}{{save=None}}{{reference=PHB p206}}{{healing=[Grant Resistance](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Select who to Protect|token_id}|Resist-Cold|[[@{selected|Casting-Level}]]|-1|Immune to normal cold, magic cold +3 save + 50 dmg|white-tower)}}SpellData=[w:Resist-Cold,lv:2,sp:5,gp:1,cs:VSM,sph:Protection]{{effects=Complete immunity to mild conditions. Can resist normal cold, and magical cold to gain +[[3]] on saves and [[50]]% damage ([[25]]% if save) from e.g. frostbrand swords, ice storms, wand of frost, or white dragon\'s breath}}{{materials=A drop of mercury, a rare \'magical\' liquid metal costing 1gp a drop}}'},
						{name:'Resist-Fire',type:'PRspellL2',ct:'5',charge:'uncharged',cost:'1',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nResist Fire\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 2 Priest}}{{school=Alteration}}{{sphere=Protection}}Specs=[Resist-Fire,PRspellL2,1H,Alteration]{{components=V,S,M}}{{time=[[5]]}}{{range=Touch}}{{duration=[[@{selected|Casting-Level}]] rounds}}{{aoe=Creature touched}}{{save=None}}{{reference=PHB p206}}{{healing=[Grant Resistance](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Select the fireman|token_id}|Resist-Fire|[[@{selected|Casting-Level}]]|-1|Immune to normal fire, magic fire +3 save + 50% dmg|white-tower)}}SpellData=[w:Resist-Fire,lv:2,sp:5,gp:1,cs:VSM,sph:Protection]{{effects=Complete immunity to mild conditions. Can resist normal fire, and magical fire to gain +[[3]] on saves and [[50]]% damage ([[25]]% if save) from e.g. burning oil or fireball or flaming swords or fire storm or meteors or red dragon breath.}}{{materials=A drop of mercury, a rare \'magical\' liquid metal costing 1gp a drop}}'},
						{name:'Reverse-Tongues',type:'PRspellL4',ct:'7',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nReverse Tongues\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 4 Priest}}{{school=Alteration}}{{sphere=Divination}}Specs=[Reverse Tongues,PRspellL4,1H,Alteration]{{components=V,S}}{{time=[[7]]}}{{range=[[0]]}}{{duration=[[1]] turn}}{{aoe=[Hearing range - 60ft radius](!rounds --aoe @{selected|token_id}|circle|feet|0|120||magic|true)}}{{save=None}}{{damage=[Speak in Tongues](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Speak Gobbledegook|token_id}|PR-Reverse-Tongues|10|-1|Do not understand - reverse Tongues|Edge-crack)}}{{reference=PHB p220}}SpellData=[w:Tongues,lv:4,sp:7,gp:0,cs:VS,sph:Divination]{{effects=This spell cancels the effect of the *tongues* spell or confuses verbal communication of any sort within the area of effect.}}'},
						{name:'Sanctuary',type:'PRspellL1',ct:'4',charge:'uncharged',cost:'0.1',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nSanctuary\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 1 Priest}}{{school=Abjuration}}{{sphere=Protection}}Specs=[Sanctuary,PRspellL1,1H,Abjuration]{{components=V,S,M}}{{time=[[4]]}}{{range=Touch}}{{duration=[[2+@{selected|Casting-Level}]] rounds}}{{aoe=Creature touched}}{{save=None}}{{reference=PHB p202}}{{healing=[Grant Sanctuary](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Select who gets Sanctuary|token_id}|Sanctuary|[[2+@{selected|Casting-Level}]]|-1|Can\'t attk, foes save or can\'t hit|white-tower)}}SpellData=[w:Sanctuary,lv:1,sp:4,gp:0.1,cs:VSM,sph:Protection]{{effects=Any opponent attempting to strike or otherwise directly attack the protected creature must save vs. spell to attack normally and be unaffected, otherwise the opponent loses track of and totally ignores the warded creature for the duration of the spell.}}{{materials=The priest\'s holy symbol and a small silver mirror costing 1gp which can be used at least 10 times}}'},
						{name:'Shillelagh',type:'PRspellL1',ct:'2',charge:'uncharged',cost:'0.01',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nShillelagh\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 1 Priest}}{{school=Alteration}}{{sphere=Combat,Plant}}Specs=[Shillelagh,PRspellL1,1H,Alteration]{{components=V,S,M}}{{time=[[2]]}}{{range=Touch}}{{duration=[[4+@{selected|Casting-Level}]] rounds}}{{aoe=[[1]]oak club or staff}}{{save=None}}{{reference=PHB p202}}{{healing=[Bless the Club](!rounds --target caster|@{selected|token_id}|Shillelagh|[[4+@{selected|Casting-Level}]]|-1|Club is +1 to-hit, does 2d4/1d4+1 damage|angel-outfit)}}SpellData=[w:Shillelagh,lv:1,sp:2,gp:0.01,cs:VSM,sph:Combat|Plant]{{effects=Change the caster\'s own oak cudgel or unshod staff into a magical weapon that gains a +1 bonus to its attack roll and inflicts 2d4 points of damage on opponents up to man size, and 1d4+1 points of damage on larger opponents. The spell inflicts no damage to the staff or cudgel. The caster must wield the shillelagh, of course.}}{{materials=A shamrock leaf costing 1cp and the caster\'s holy symbol.}}'},
						{name:'Shrink-Animal',type:'PRspellL5',ct:'8',charge:'uncharged',cost:'0.01',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nShrink Animal\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 5 Priest (Reversable)}}{{school=Alteration}}{{sphere=Animal}}Specs=[Shrink Animal,PRspellL5,1H,Alteration]{{components=V,S,M}}{{time=[[8]]}}{{range=[[80]] yards}}{{duration=[[2*@{selected|Casting-Level}]] rounds}}{{aoe=Up to [[8]] creatures in a [20ft. square](!rounds --aoe @{selected|token_id}|square|feet|240|20||magic)}}{{save=None}}{{reference=PHB p221}}{{healing=[Shrink](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Which animals to shrink?|token_id}|Shrink-Animal|[[2*@{selected|casting-level}]]|-1|So small - HD/2, HP/2, dmg/2|back-ache)}}SpellData=[w:Shrink Animal,lv:5,sp:8,gp:0.01,cs:VSM,sph:Animal]{{effects=Causes up to eight animals within a 20-foot square area to shrink to half their normal size, halving Hit Dice (with resultant reduction in attack potential), hit points (except hit points added to Hit Dice), and damage in combat. Movement and AC are not affected}}{{materials=The priest\'s holy symbol and a scrap of food, cost 1cp}}'},
						{name:'Shrink-Insect',type:'PRspellL4',ct:'7',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nShrink Insect\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 4 Priest}}{{school=Alteration}}{{sphere=Animal}}Specs=[Shrink-Insect,PRspellL4,1H,Alteration]{{components=V,S,M}}{{time=[[7]]}}{{range=[20 yards](!rounds --aoe @{selected|token_id}|circle|yards|0|40||yellow|true)}}{{duration=Permanent}}{{aoe=1 to 6 insects}}{{save=None}}{{reference=PHB p217 (reverse of *Giant Insect*)}}SpellData=[w:Shrink-Insect,lv:4,sp:7,gp:0,cs:VSM,sph:Animal]{{effects=Reduces any giant insect to normal insect size.}}{{materials=Priest\'s holy symbol.}}'},
						{name:'Silence-15ft-radius',type:'PRspellL2',ct:'5',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nSilence 15ft radius\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 2 Priest}}{{school=Alteration}}{{sphere=Guardian)}}Specs=[Silence-15ft-radius,PRspellL2,1H,Alteration]{{components=V,S}}{{time=[[5]]}}{{range=[[120]] yards}}{{duration=[[2*@{selected|Casting-Level}]] rounds}}{{aoe=[15ft radius sphere](!rounds --aoe @{selected|token_id}|circle|yards|120|10||dark)}}{{save=None}}{{reference=PHB p206}}SpellData=[w:Silence-15ft-radius,lv:2,sp:5,gp:0,cs:VS,sph:Guardian]{{damage=[Silence them](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Who should be silenced?|token_id}|Silence-15ft|[[2*@{selected|casting-level}]]|-1|Silenced - no verbalisation possible|ninja-mask)}}{{effects=All sound stopped in affected area: conversation impossible and spells with V components can\'t be cast. Centre stationary unless cast on movable object or creature. Unwilling creature gets save vs. spell and success indicates silence centred behind creature.}}'},
						{name:'Slay-Living',type:'PRspellL5',ct:'10',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nSlay Living\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 5 Priest}}{{school=Necromancy (Reversable)}}{{sphere=Necromantic}}Specs=[Slay Living,PRspellL5,1H,Necromancy]{{components=V,S}}{{time=[[1]] round}}{{range=[[[30]] yards](!rounds --aoe @{selected|token_id}|circle|yards|0|60||magic|true)}}{{duration=Permanent}}{{aoe=1 creature}}{{save=[Special](!\\amp#13;\\amp#47;gmroll 1d20 saves vs. Slay Living spell)}}{{reference=PHB p224}}SpellData=[w:Slay Living,lv:5,sp:10,gp:0,cs:VS,sph:Necromantic]{{effects=Grants the victim a saving throw vs. death magic. If the saving throw is successful, the victim sustains damage equal to that of a *cause serious wounds* spell--i.e., [2d8+1](!\\amp#13;\\amp#47;gmroll 2d8+1) points. Failure means the victim dies instantly}}{{materials=The priest\'s holy symbol}}'},
						{name:'Slow-Poison',type:'PRspellL2',ct:'1',charge:'uncharged',cost:'0.02',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nSlow Poison\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 2 Priest}}{{school=Necromancy}}{{sphere=Healing}}Specs=[Slow-Poison,PRspellL2,1H,Necromancy]{{components=V,S,M}}{{time=[[1]]}}{{range=Touch}}{{duration=[[@{selected|Casting-Level}]] hours}}{{aoe= Creature touched}}{{save=None}}{{reference=PHB p207}}{{healing=[Slow the poison](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Select sufferer|token_id}|Slow-Poison|[[60*@{selected|Casting-Level}]]|-1|Slowed poison, no substantial harm yet|stopwatch)}}SpellData=[w:Slow-Poison,lv:2,sp:1,gp:0.02,cs:VSM,sph:Healing]{{effects=Reduces effect of poison if cast during onset time (DMG p73 table 51). Does not neutralise the poison but stops it substantially harming the victim for duration in hope of finding a cure.}}{{materials=Cleric\'s holy symbol and a clove of garlic costing 2cp to crush and smear on the wound, or eaten for ingested poisons.}}'},
						{name:'Snake-Charm',type:'PRspellL2',ct:'5',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nSnake Charm\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 2 Priest}}{{school=Enchantment/Charm}}{{sphere=Animal}}Specs=[Snake-Charm,PRspellL2,1H,Enchantment-Charm]{{components=V,S}}{{time=[[5]]}}{{range=[[30]] yards}}{{duration=Special}}{{aoe=[30ft cube](!rounds --aoe @{selected|token_id}|square|yards|30|10||magic)}}{{save=None}}{{reference=PHB p207}}SpellData=[w:Snake-Charm,lv:2,sp:5,gp:0,cs:VS,sph:Animal]{{effects=Causes one or more snakes to cease all activity except a semi-erect, swaying movement. If charmed while [in a torpor](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Select first target|token_id}|Snake-Charm|\\amp#91;[10\\amp#42;\\amp#91;[\\amp#91;[1d4]\\amp#93;+2]\\amp#93;]\\amp#93;|-1|Charmed the snakes, at least for now!|chained-heart), duration of the spell is 1d4+2 turns; if [not torpid](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Select first target|token_id}|Snake-Charm|[\\amp#91;[\\amp#91;1d3\\amp#93;]\\amp#42;10\\amp#93;]|-1|Charmed the snakes, at least for now!|chained-heart), the charm lasts 1d3 turns; if the snakes are [angry or attacking](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Select first target|token_id}|Snake-Charm|[\\amp#91;[\\amp#91;1d4\\amp#93;]+4\\amp#93;]|-1|Charmed the snakes, at least for now!|chained-heart), the spell lasts 1d4+4 ***rounds***. Can charm snakes whose total HP are less than or equal to those of the priest.}}'},
						{name:'Snakes-to-Sticks',type:'PRspellL4',ct:'7',charge:'uncharged',cost:'0.5',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nSnakes to Sticks\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 4 Priest}}{{school=Alteration}}{{sphere=Animal}}Specs=[Snakes-to-Sticks,PRspellL4,1H,Alteration]{{components=V,S,M}}{{time=[[7]]}}{{range=[[30]]yds}}{{duration=[[2*@{selected|casting-level}]]rounds}}{{aoe=[1d4](!\\amp#13;\\amp#47;r 1d4) + [[@{selected|casting-level}]] snakes in a [10ft. cube](!rounds --aoe @{selected|token_id}|square|feet|90|10||acid)}}{{save=None}}{{reference=PHB p220 (reverse of *Sticks to Snakes*)}}SpellData=[w:Snakes-to-Sticks,lv:4,sp:7,gp:0.5,cs:VSM,sph:Animal]{{effects=This spell changes normal-sized snakes to sticks, or it negates the *sticks to snakes* spell according to the level of the priest countering the spell.}}{{materials=A small piece of bark and several snake scales, costing 5sp.}}'},
						{name:'Snare',type:'PRspellL3',ct:'30',charge:'uncharged',cost:'0.5',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nSnare\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 3 Priest}}{{school=Enchantment/Charm}}{{sphere=Plant}}Specs=[Snare,PRspellL3,1H,Enchantment]{{components=V,S,M}}{{time=[[3]] rounds}}{{range=Touch}}{{duration=Permanent until triggered}}{{aoe=[[24+(2*@{selected|Casting-Level}]] inches}}{{save=None}}{{reference=PHB p213}}SpellData=[w:Snare,lv:3,sp:30,gp:0.5,cs:VSM,sph:Plant]{{effects=Snare is 90% undetectable without magic, will tighten on limb or neck. If attached to tree, will bend \\amp spring \\amp does [1d6](!\\amp#13;\\amp#47;r 1d6) damage (\\amp strangle if neck). [[23]] strength to break in 1st hour, [[1]] less per hour for [[6]] hours ([[18]]), then collapses after [[12]] hours. Can be cut with any magical weapon or edged weapon wielded with +[[2]] mods.}}{{materials=a snake skin and a piece of sinew from a strong animal, costing 5sp to source, to weave into the cordlike object from which he will make the snare. Only the caster\'s holy symbol is otherwise needed}}'},
						{name:'Speak-With-Animals',type:'PRspellL2',ct:'5',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nSpeak With Animals\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 2 Priest}}{{school=Alteration}}{{sphere=Animal,Divination}}Specs=[Speak-with-Animals,PRspellL2,1H,Alteration]{{components=V,S}}{{time=[[5]]}}{{range=[30 ft](!rounds --aoe @{selected|token_id}|circle|feet|0|60||magic|true)}}{{duration=[[[2*@{selected|Casting-Level}]] rounds](!rounds --target caster|@{selected|token_id}|Speak-With-Animals|[[2*@{selected|casting-level}]]|-1|Able to speak with the animals, no guarantee they\'ll deign to talk to you!|snail)}}{{aoe=[[1]] normal or giant animal that is not mindless}}{{save=None}}{{reference=PHB p207}}SpellData=[w:,lv:2,sp:5,gp:0,cs:VS,sph:Animal|Divination]{{effects=Communicate with any warm- or cold-blooded normal or giant animal that is not mindless. Terse \\amp evasive likely, stupid ones make inane comments. If same alignment, might do a favour. Differs from *Speak with Monsters* for this spell allows conversation only with non-fantastic creatures.}}'},
						{name:'Speak-With-Dead',type:'PRspellL3',ct:'100',charge:'uncharged',cost:'10',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nSpeak With Dead\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 3 Priest}}{{school=Necromancy}}{{sphere=Divination}}Specs=[Speak-with-Dead,PRspellL3,1H,Necromancy]{{components=V,S,M}}{{time=[[1]]turn}}{{range=[[1]]yd}}{{duration=Special}}{{aoe=[[1]] creature}}{{save=[Special](!\\amp#13;\\amp#47;gmroll 1d20 Saving Throw)}}{{reference=PHB p214}}SpellData=[w:Speak-With-Dead,lv:3,sp:100,gp:10,cs:VSM,sph:Divination]{{effects=Ask several questions of a dead creature in a set period of time and receive answers according to the knowledge of that creature.}}{{materials=The priest needs a holy symbol and 10gp of burning incense in order to cast this spell upon the body, remains, or a portion thereof. The remains are not expended.}}'},
						{name:'Speak-With-Plants',type:'PRspellL4',ct:'100',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nSpeak With Plants\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 4 Priest}}{{school=Alteration}}{{sphere=Plant}}Specs=[Speak-with-Plants,PRspellL4,1H,Alteration]{{components=V,S,M}}{{time=[[1]]turn}}{{range=[[0]]}}{{duration=[[@{selected|casting-level}]]rounds}}{{aoe=[30ft. radius](!rounds --aoe @{selected|token_id}|circle|feet|0|60||magic|true)}}{{save=None}}{{reference=PHB p220}}SpellData=[w:Speak-with-Plants,lv:4,sp:100,gp:0,cs:VSM,sph:Plant]{{effects=Converse, in very rudimentary terms, with all sorts of living vegetables (including fungi, molds, and plantlike monsters, such as shambling mounds) and to exercise limited control over normal plants (i.e., not monsters or plantlike creatures).}}{{materials=A drop of water, a pinch of dung, and a flame (all free).}}'},
						{name:'Speak-with-Monsters',type:'PRspellL6',ct:'9',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nSpeak with Monsters\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 6 Priest}}{{school=Alteration}}{{sphere=Divination}}Specs=[Speak With Monsters,PRspellL6,1H,Alteration]{{components=V,S}}{{range=[[[30]] yards](!rounds --aoe @{selected|token_id}|circle|yards|0|60||magic|true)}}{{time=[[9]]}}{{duration=[[[2*@{selected|casting-level}]] rounds](!rounds --target caster|@{selected|token_id}|Speak-with-monsters|[[2*@{selected|casting-level}]]|-1|Doing a Dolittle - speaking with monsters|overdrive)}}{{aoe=The caster}}{{save=None}}{{reference=PHB p229}}SpellData=[w:Speak with Monsters,lv:6,sp:9,gp:0,cs:VS,sph:Divination]{{effects=Converse with any type of creature that has any form of communicative ability (including empathic, tactile, pheromonic, etc.).}}'},
						{name:'Spectral-Senses',type:'PRspellL1',ct:'4',charge:'uncharged',cost:'5',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nSpectral Senses\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 1 Priest}}{{school=Divination/Necromancy}}{{sphere=Divination,Nectomantic}}Specs=[Spectral-Senses,PRspellL1,1H,Divination|Necromancy]{{components=V,S,M}}{{time=[[4]]}}{{range=[[[30*@{selected|Casting-Level}]] yards](!rounds --aoe @{selected|token_id}|circle|yards|0|[[60*@{selected|Casting-Level}]]||magic|true)}}{{duration=[[[@{selected|Casting-Level}]] hours](!rounds --target caster|@{selected|token_id}|Spectral-Senses|[[60*@{selected|casting-level}]]|-1|Borrowing the senses of a skeleton or zombie|skull)}}{{aoe=Caster}}{{save=None}}{{reference=The Complete Book of Necromancers, by Steve Kurtz}}SpellData=[w:Spectral-Senses,lv:1,sp:4,gp:5,cs:VSM,sph:Divination|Necromantic]{{effects=Establishes sensual link between caster and a skeleton or zombie in range. Caster sees and hears as if they were exactly where the undead creature is. Can also issue simple commands - link is spiritual so language is irrelevant. Ends abruptly if caster or creature moves out of range or to another plane. Can alternatively cast on an inanimate corpse. See and hear as if there but can\'t command or animate.}}{{materials=Priests holy symbol and a black hooded cowl costing 100gp which can be used 20 times, worn over eyes \\amp ears to aid concentration.}}'},
						{name:'Spell-Immunity',type:'PRspellL4',ct:'10',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nSpell Immunity\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 4 Priest}}{{school=Abjuration}}{{sphere=Protection}}Specs=[Spell-Immunity,PRspellL4,1H,Abjuration]{{components=V,S,M}}{{time=[[1]] round}}{{range=Touch}}{{duration=[[[@{selected|Casting-Level}]] turns](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Who is immune?|token_id}|Spell-Immunity|[[10*@{selected|casting-level}]]|-1|Immune from \\amp#63;{Immunity from which spell?}|Interdiction)}}{{aoe=[[1]] creature}}{{save=None}}{{reference=PHB p220}}SpellData=[w:Spell-Immunity,lv:4,sp:10,gp:0,cs:VSM,sph:Protection]{{effects=Renders a creature touched immune to the effects of a specified spell of 4th level or lower.}}{{materials=the same as that for the spell to be protected against.}}'},
						{name:'Spike-Growth',type:'PRspellL3',ct:'6',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nSpike Growth\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 3 Priest}}{{school=Alteration,Enchantment}}{{sphere=Plant}}Specs=[Spike-Growth,PRspellL3,1H,Alteration|Enchantment]{{components=V,S,M}}{{time=[[6]]}}{{range=[[60]]yds }}!setattr --silent --charid @{selected|character_id} --spell-duration|{{duration=[[10*(@{selected|casting-level}+([[3d4]]))]]rounds}}!!!{{aoe=[[[10*@{selected|casting-level}]]sq.ft.](!rounds --aoe @{selected|token_id}||feet|180|||acid)}}{{save=None}}{{reference=PHB p214}}{{damage=[Make spikey](!rounds --target caster|@{selected|token_id}|Spike-Growth|\\amp#64;{selected|spell-duration}|-1|The designated area is very spikey|tread)}}SpellData=[w:Spike-Growth,lv:3,sp:6,gp:0,cs:VSM,sph:Plant]{{effects=Wherever any type of plant growth of moderate size or density is found, this spell can be used to make the ground-covering vegetation or roots and rootlets in the area become very hard and sharply pointed, like caltrops, meaning that for each 10 feet of movement through the area, the victim suffers 2d4 points of damage and save vs spell or their movement rate is reduced by 1/3 of its current total.}}{{materials=The priest\'s holy symbol and either seven sharp thorns or seven small twigs, costing nothing, each sharpened to a point.}}'},
						{name:'Spike-Stones',type:'PRspellL5',ct:'6',charge:'uncharged',cost:'0.5',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nSpike Stones\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 5 Priest}}{{school=Alteration, Enchantment}}{{sphere=Elemental (Earth)}}Specs=[Spike Stones,PRspellL5,1H,Alteration|Enchantment]{{components=V,S,M}}{{time=[[6]]}}{{range=[[30]] yards}}!setattr --silent --charid @{selected|character_id} --spell-duration|{{duration=[[3d4+@{selected|casting-level}]] turns}}!!!{{aoe=[@{selected|casting-level} x 10sq.ft.](!rounds --aoe @{selected|token_id}|rectangle|feet|90|||acid), 1 spike per sq.ft.}}{{save=None}}{{damage=[Make spikes](!rounds --target caster|@{selected|token_id}|Spike-Stones|\\amp#91;[\\amp#64;{selected|spell-duration}*10]\\amp#93;|-1|The stone spikes are still sharp|edge-crack)}}{{reference=PHB p225}}SpellData=[w:Spike Stones,lv:5,sp:6,gp:0.5,cs:VSM,sph:Elemental-Earth]{{effects=Causes rock to shape itself into long, sharp points that tend to blend into the background, which impede progress through an area and to inflict damage.}}{{materials=Four tiny stalactites, which cost 5sp to collect}}'},
						{name:'Spiritual-Hammer',type:'PRspellL2',ct:'5',charge:'uncharged',cost:'2',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nSpiritual Hammer\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 2 Priest}}{{school=Invocation}}{{sphere=Combat}}Specs=[Spiritual-Hammer,PRspellL2,1H,Evocation]{{components=V,S,M}}{{time=[[5]]}}{{range=[[10*@{selected|Casting-Level}]] yards}}{{duration=[[3+@{selected|Casting-Level}]] rounds}}{{aoe=Special}}{{save=None}}{{reference=PHB p207}}{{healing=[Cast it](!rounds --target caster|@{selected|token_id}|Spiritual-Hammer|[[3+@{selected|Casting-Level}]]|-1|Magical weapon in direction facing requires concentration|archery-target) and equip yourself with a Spiritual Hammer+[[{{(ceil(@{selected|Casting-Level}/6)),3}kl1}]]}}{{damage=SM [1d4+1](!\\amp#13;\\amp#47;r 1d4+1) or L [1d4](!\\amp#13;\\amp#47;r 1d4) +[[{{(ceil(@{selected|Casting-Level}/6)),3}kl1}]]}}{{damagetype=Bludgeoning}}SpellData=[w:Spiritual-Hammer,lv:2,sp:5,gp:2,cs:VSM,sph:Combat]{{effects=Base Thac0 same as caster [[@{selected|thac0-base}]] without strength bonus plus magical plus of +[[{{(ceil(@{selected|Casting-Level}/6)),3}kl1}]]. Damage is plus magical bonus but no others.}}{{materials=A normal war hammer (cost 2gp) hurled towards opponent, which disappears as spell is cast.}}'},
						{name:'Starshine',type:'PRspellL3',ct:'6',charge:'uncharged',cost:'0.5',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nStarshine\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 3 Priest}}{{school=Evocation,Illusion/Phantasm}}{{sphere=Sun}}Specs=[Starshine,PRspellL3,1H,Evocation|Illusion-Phantasm]{{components=V,S,M}}{{time=[[6]]}}{{range=[[10*@{selected|casting-level}]]yds }}{{duration=[[[@{selected|casting-level}]]turns](!rounds --target caster|@{selected|token_id}|Starshine|[[10*@{selected|casting-level}]]|-1|Starshine gives sight as per bright moonlit night|frozen-orb)}}{{aoe=[[[10*@{selected|casting-level}]]sq.ft.](!rounds --aoe @{selected|token_id}||feet|[[30*@{selected|casting-level}]]|||light)}}{{save=None}}{{reference=PHB p214}}SpellData=[w:Starshine,lv:3,sp:6,gp:0.5,cs:VSM,sph:Sun]{{effects=Softly illuminate an area as if it were exposed to a clear night sky filled with stars.}}{{materials=Several stalks from an amaryllis plant (especially Hypoxis) costing 5sp, and several holly berries.}}'},
						{name:'Sticks-to-Snakes',type:'PRspellL4',ct:'7',charge:'uncharged',cost:'0.5',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nSticks to Snakes\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 4 Priest}}{{school=Alteration}}{{sphere=Plant}}Specs=[Sticks-to-Snakes,PRspellL4,1H,Alteration]{{components=V,S,M}}{{time=[[7]]}}{{range=[[30]]yds}}{{duration=[[[2*@{selected|casting-level}]] rounds](!rounds --target caster|@{selected|token_id}|Sticks-to-Snakes|[[2*@{selected|casting-level}]]|-1|Sticks have become snakes \\amp attack as you comand!|all-for-one)}}{{aoe=[1d4](!\\amp#13;\\amp#47;r 1d4) + [[@{selected|casting-level}]] sticks in a [10ft. cube](!rounds --aoe @{selected|token_id}|square|feet|90|10||magic)}}{{save=None}}{{reference=PHB p220}}SpellData=[w:Sticks-to-Snakes,lv:4,sp:7,gp:0.5,cs:VSM,sph:Plant]{{effects=Change 1d4 sticks, plus one stick per experience level, into snakes which attack as commanded by the priest. Typical snakes have 2HD, AC 6, move of 9, and either constricts for 1d4+1HP per round or bites for 1HP plus poison (if any - venomous chance is 5% per caster level, if the spellcaster desires).}}{{materials=A small piece of bark and several snake scales, costing 5sp.}}'},
						{name:'Stone-Shape',type:'PRspellL3',ct:'10',charge:'uncharged',cost:'0.01',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nStone Shape\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 3 Priest}}{{school=Alteration}}{{sphere=Elemental(Earth)}}Specs=[Stone-Shape,PRspellL3,1H,Alteration]{{components=V,S,M}}{{time=[[10]]}}{{range=Touch}}{{duration=Permanent}}{{aoe=[[9+@{selected|casting-level}]]sq.ft.}}{{save=None}}{{reference=PHB p214}}SpellData=[w:Stone-Shape,lv:3,sp:10,gp:0.01,cs:VSM,sph:Elemental-Earth]{{effects=Form an existing piece of stone into any shape that suits the caster\'s purposes.}}{{materials=Soft clay that must be worked into roughly the desired shape of the stone object, and then touched to the stone when the spell is uttered. 1cp of materials \\amp effort}}'},
						{name:'Stone-Tell',type:'PRspellL6',ct:'100',charge:'uncharged',cost:'1',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nStone Tell\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 6 Priest}}{{school=Divination}}{{sphere=Elemental (Earth), Divination}}Specs=[Stone Tell,PRspellL6,1H,Divination]{{components=V,S,M}}{{range=Touch}}{{time=[[1]] turn}}{{duration=[[[1]] turn](!rounds --target caster|@{selected|token_id}|Stone-tell|10|-1|Communing with a rock...|broken-skull)}}{{aoe=[1 cubic yard](!rounds --aoe @{selected|token_id}|square|yards|0|1|1|magic|true)}}{{save=None}}{{reference=PHB p229}}SpellData=[w:Stone Tell,lv:6,sp:100,gp:1,cs:VSM,sph:Elemental-Earth|Divination]{{effects=The very stones speak and relate to the caster who or what has touched them as well as revealing what is covered, concealed, or simply behind them.}}{{materials=A drop of mercury, a rare \'magical\' liquid metal costing 1gp a drop, and a bit of clay}}'},
						{name:'Straighten-Wood',type:'PRspellL2',ct:'5',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nStraighten Wood\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 2 Priest (reversable)}}{{school=Alteration}}{{sphere=Plant}}Specs=[Straighten Wood,PRspellL2,1H,Alteration]{{components=V,S}}{{time=[[5]]}}{{range=[[[10*@{selected|Casting-Level}]] yards](!rounds --aoe @{selected|token_id}|circle|yards|0|[[20*@{selected|Casting-Level}]]||lightning)}}{{duration=Permanent}}{{aoe=[[15]]x[[1]]inch dia. x [[@{selected|Casting-Level}]] of wood}}{{save=[Special](!\\amp#13;\\amp#47;gmroll 1d20 save vs. spell (Straighten Wood)}}{{reference=PHB p208 (reverse of *Warp Wood*)}}SpellData=[w:Straighten Wood,lv:2,sp:5,gp:0,cs:VS,sph:Plant]{{effects=Straightens bent or crooked wood, or reverses the effects of a *warp wood* spell.}}'},
						{name:'Summon-Insects',type:'PRspellL3',ct:'10',charge:'uncharged',cost:'0.01',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nSummon Insects\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 3 Priest}}{{school=Conjuration/Summoning}}{{sphere=Animal}}Specs=[Summon-Insects,PRspellL3,1H,Conjuration-Summoning]{{components=V,S,M}}{{time=[[1]] round}}{{range=[30 yards](!rounds --aoe @{selected|token_id}|circle|yards|0|60||acid|true)}}{{duration=[[@{selected|Casting-Level}]] rounds}}{{aoe=[[1]] creature}}{{save=None}}{{reference=PHB p214}}{{damage=[[2]]HP/rd if flee or defend, [[4]]HP otherwise}}{{damagetype=\nBites or Stings}}SpellData=[w:Summon-Insects,lv:3,sp:10,gp:0.01,cs:VSM,sph:Animal]{{effects=Roll [1d100](!\\amp#13;\\amp#47;r 1d100) - 70% summons bees or biting flies or hornets or wasps. 30% summons biting ants or pinching beetles. 2pts per round if just flee \\amp fend off, 4pts otherwise and [[0-2]] on attack \\amp +[[2]] on AC. Can then go after 2nd target after 1 round.}}{{materials=The caster\'s holy symbol, a flower petal, and a bit of mud or wet clay. Total cost 1cp}}'},
						{name:'Tongues',type:'PRspellL4',ct:'7',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nTongues\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 4 Priest}}{{school=Alteration}}{{sphere=Divination}}Specs=[Tongues,PRspellL4,1H,Alteration]{{components=V,S}}{{time=[[7]]}}{{range=[[0]]}}{{duration=[[1]] turn}}{{aoe=The caster}}{{save=None}}{{reference=PHB p220}}{{healing=[Universal Translator](!rounds --target caster|@{selected|token_id}|PR-Tongues-Translate|10|-1|Speaks your language|flying-flag)}}SpellData=[w:Tongues,lv:4,sp:7,gp:0,cs:VS,sph:Divination]{{effects=Speak and understand additional specified languages, whether they are racial tongues or regional dialects, but not communications of animals or mindless creatures.}}'},
						{name:'Transmute-Dust-to-Water',type:'PRspellL6',ct:'8',charge:'uncharged',cost:'500',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nTransmute Dust to Water\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 6 Priest}}{{school=Alteration (Reversable)}}{{sphere=Elemental (Water, Earth)}}Specs=[Transmute Water to Dust,PRspellL6,1H,Alteration]{{components=V,S,M}}{{range=[[60]] yards}}{{time=[[8]]}}{{duration=Permanent}}{{aoe=[@{selected|casting-level} cubic yards](!rounds --aoe @{selected|token_id}|rectangle|yards|60|||magic)}}{{save=None}}{{reference=PHB p229}}SpellData=[w:Transmute Water to Dust,lv:6,sp:8,gp:500,cs:VSM,sph:Elemental-Water|Elemental-Earth]{{effects=Simply a very high-powered create water spell.}}{{materials=Diamond dust of at least 500 gp value, a bit of sea shell, and the caster\'s holy symbol}}'},
						{name:'Transmute-Mud-to-Rock',type:'PRspellL5',ct:'8',charge:'uncharged',cost:'00.2',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nTransmute Mud to Rock\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 5 Priest}}{{school=Alteration (Reversable)}}{{sphere=Elemental (Earth, Water)}}Specs=[Transmute Mud to Rock,PRspellL5,1H,Alteration]{{components=V,S,M}}{{time=[[8]]}}{{range=[[160]] yards}}{{duration=Special}}{{aoe=[@{selected|casting-level} x 20ft.cube](!rounds --aoe @{selected|token_id}|rectangle|feet|480|||magic)}}{{save=None}}{{reference=PHB p225}}SpellData=[w:Transmute Mud to Rock,lv:5,sp:8,gp:00.2,cs:VSM,sph:Elemental-Earth-Water]{{effects=Hardens normal mud or quicksand into soft stone (sandstone or similar mineral) permanently unless magically changed. Creatures in the mud are allowed a saving throw to escape before the area is hardened to stone. Dry sand is unaffected}}{{materials=Sand, lime (costing 2cp), and water}}'},
						{name:'Transmute-Rock-to-Mud',type:'PRspellL5',ct:'8',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nTransmute Rock to Mud\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 5 Priest}}{{school=Alteration (Reversable)}}{{sphere=Elemental (Earth, Water)}}Specs=[Transmute Rock to Mud,PRspellL5,1H,Alteration]{{components=V,S,M}}{{time=[[8]]}}{{range=[[160]] yards}}{{duration=Special}}{{aoe=[@{selected|casting-level} x 20ft.cube](!rounds --aoe @{selected|token_id}|rectangle|feet|480|||magic)}}{{save=None}}{{reference=PHB p225}}SpellData=[w:Transmute Rock to Mud,lv:5,sp:8,gp:0,cs:VSM,sph:Elemental-Earth-Water]{{effects=Turns natural rock of any sort into an equal volume of mud.}}{{materials=Clay and water (free)}}'},
						{name:'Transmute-Water-to-Dust',type:'PRspellL6',ct:'8',charge:'uncharged',cost:'500',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nTransmute Water to Dust\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 6 Priest}}{{school=Alteration (Reversable)}}{{sphere=Elemental (Water, Earth)}}Specs=[Transmute Water to Dust,PRspellL6,1H,Alteration]{{components=V,S,M}}{{range=[[60]] yards}}{{time=[[8]]}}{{duration=Permanent}}{{aoe=[@{selected|casting-level} cubic yards](!rounds --aoe @{selected|token_id}|rectangle|yards|60|||magic)}}{{save=[Special](!\\amp#13;\\amp#47;gmroll 1d20 save vs. Transmute Water to Dust spell)}}{{reference=PHB p229}}SpellData=[w:Transmute Water to Dust,lv:6,sp:8,gp:500,cs:VSM,sph:Elemental-Water|Elemental-Earth]{{effects=The subject area instantly undergoes a change from liquid to powdery dust.}}{{materials=Diamond dust of at least 500 gp value, a bit of sea shell, and the caster\'s holy symbol}}'},
						{name:'Transport-via-Plants',type:'PRspellL6',ct:'4',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nTransport via Plants\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 6 Priest}}{{school=Alteration}}{{sphere=Plant}}Specs=[Transport via Plants,PRspellL6,1H,Alteration]{{components=V,S}}{{range=Touch}}{{time=[[4]]}}{{duration=Special}}{{aoe=Special}}{{save=None}}{{reference=PHB p229}}SpellData=[w:Transport via Plants,lv:6,sp:4,gp:0,cs:VS,sph:Plant]{{effects=Enter any plant (human-sized or larger) and pass any distance to a plant of the same species in a single round, regardless of the distance separating the two. }}'},
						{name:'Tree',type:'PRspellL3',ct:'6',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nTree\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 3 Priest}}{{school=Alteration}}{{sphere=Plant}}Specs=[Tree,PRspellL3,1H,Alteration]{{components=V,S,M}}{{time=[[6]]}}{{range=[[0]]}}{{duration=[[6+@{selected|Casting-Level}]] turns}}{{aoe=The caster}}{{save=None}}{{reference=PHB p215}}{{healing=[Make like a tree...](!rounds --target caster|@{selected|token_id}|Tree|[[10*(6+@{selected|Casting-Level})]]|-1|Make like a tree... dude! Normal AC \\amp HP, instant revert|three-leaves)}}SpellData=[w:Tree,lv:3,sp:6,gp:0,cs:VSM,sph:Plant]{{effects=Caster assumes form of small living tree, or large dead tree.}}{{materials=The priest\'s holy symbol and a twig from a tree (no cost).}}'},
						{name:'Trip',type:'PRspellL2',ct:'5',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nTrip\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 2 Priest}}{{school=Enchantment/Charm}}{{sphere=Plant}}Specs=[Trip,PRspellL2,1H,Enchantment]{{components=V,S}}{{time=[[5]]}}{{range=Touch}}{{duration=[[@{selected|Casting-Level}]]turns}}{{aoe=[[1]]object up to [[10]]ft long}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 save vs. spell (Trip)}}{{reference=PHB p207}}{{damage=[[1]]HP and [1d4+1](!\\amp#13;\\amp#47;r 1d4+1 rounds stunned)rounds stunned if on hard surface}}SpellData=[w:Trip,lv:2,sp:5,gp:0,cs:VS,sph:Plant]{{effects=Causes an object to rise slightly off the ground or floor it is resting on to trip most creatures crossing it, if they fail to save vs. spell.}}'},
						{name:'True-Seeing',type:'PRspellL5',ct:'8',charge:'uncharged',cost:'300',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nTrue Seeing\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 5 Priest}}{{school=Divination (Reversable)}}{{sphere=Divination}}Specs=[True Seeing,PRspellL5,1H,Divination]{{components=V,S,M}}{{time=[[8]]}}{{range=Touch}}{{duration=[[@{selected|casting-level}]] rounds}}{{aoe=[1 creature](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Who will see truly?|token_id}|True-Seeing|@{selected|casting-level}|-1|Can see truly now|bleeding-eye)}}{{save=None}}{{reference=PHB p225}}SpellData=[w:True Seeing,lv:5,sp:8,gp:300,cs:VSM,sph:Divination]{{effects=Confers upon the recipient the ability to see all things as they actually are.}}{{materials=An ointment for the eyes that is made from very rare mushroom powder, saffron, and fat and costs no less than 300 gp per use \\amp 1d6 months to create}}'},
						{name:'Turn-Wood',type:'PRspellL6',ct:'9',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nTurn Wood\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 6 Priest}}{{school=Alteration}}{{sphere=Plant}}Specs=[Turn Wood,PRspellL6,1H,Alteration]{{components=V,S}}{{range=[[0]]}}{{time=[[9]]}}{{duration=[@{selected|casting-level} rounds](!rounds --target caster|@{selected|token_id}|Turn-Wood|@{selected|casting-level}|-1|The wood is pushed away|strong)}}{{aoe=[[[20*@{selected|casting-level}]]ft x 120ft](!rounds --aoe @{selected|token_id}|bolt|feet|0|[[20*@{selected|casting-level}]]|120|magic|)}}{{save=None}}{{reference=PHB p229}}SpellData=[w:Turn Wood,lv:6,sp:9,gp:0,cs:VS,sph:Plant]{{effects=Waves of force roll forth from the caster, moving in the direction he faces and causing all wooden objects in the path of the spell to be pushed away from the caster to the limit of the area of effect.}}'},
						{name:'Undetectable-Alignment',type:'PRspellL2',ct:'10',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nUndetectable Alignment\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 2 Priest}}{{school=Divination}}{{sphere=Divination}}Specs=[Undetectable Alignment,PRspellL2,1H,Divination]{{components=V,S}}{{time=[[1]] round}}{{range=[10 yards](!rounds --aoe @{selected|token_id}|circle|yards|0|20||magic|true)}}{{duration=[[[24]] hours](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Who\'s alignment do you want to hide?|token_id}|Undetectable-Alignment|1440|-1|Noone can detect your alignment|white-tower)}}{{aoe=[[1]] creature or object}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 saving throw)}}{{reference=PHB p206}}SpellData=[w:Undetectable Alignment,lv:2,sp:10,gp:0,cs:VS,sph:Divination]{{effects=Conceals the alignment of an object or creature for [[24]] hours}}'},
						{name:'Undetectable-Lie',type:'PRspellL4',ct:'7',charge:'uncharged',cost:'0.1',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nUndetectable Lie\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 4 Priest (reversable)}}{{school=Divination}}{{sphere=Divination}}Specs=[Undetectable-Lie,PRspellL4,1H,Divination]{{components=V,S,M}}{{time=[[7]]}}{{range=[30 yards](!rounds --aoe @{selected|token_id}|circle|yards|0|60||magic|true)}}{{duration=[[@{selected|Casting-Level}]] rounds}}{{aoe=[[1]] creature}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 save vs spell for detect lie)}}{{reference=PHB p217}}{{healing=[Make very believable](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Who wants to be believable?|token_id}|Undetectable-Lie|1440|-1|Lies very convincingly|aura)}}SpellData=[w:Undetectable Lie,lv:4,sp:7,gp:0.1,cs:VSM,sph:Divination]{{effects=Prevents the magical detection of lies spoken by the creature for 24 hours. However, does not prevent normal determination of a lie by other means}}{{materials=1sp worth of brass dust}}'},
						{name:'Unholy-Word',type:'PRspellL7',ct:'1',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nUnholy Word\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 7 Priest}}{{school=Conjuration-Summoning (Reversable)}}{{sphere=Combat}}Specs=[Unholy Word,PRspellL7,0H,Conjuration-Summoning]{{components=V}}{{range=[[0]]}}{{time=[[1]]}}{{duration=Special}}{{aoe=[30ft radius](!rounds --aoe @{selected|token_id}|circle|feet|0|60||light|true)}}{{save=None}}{{reference=PHB p234}}SpellData=[w:Unholy Word,lv:7,sp:1,gp:0,cs:V,sph:Combat]{{effects=Creates magic of tremendous power. It drives off good creatures from other planes, forcing them to return to their own planes of existence, provided the speaker is in his home plane.}}'},
						{name:'Wall-of-Fire',type:'PRspellL5',ct:'8',charge:'uncharged',cost:'0.05',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nWall of Fire\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 5 Priest}}{{school=Conjuration-Summoning}}{{sphere=Elemental (Fire)}}Specs=[Wall of Fire,PRspellL5,1H,Conjuration-Summoning]{{components=V,S,M}}{{time=[[8]]}}{{range=[[80]] yards}}{{duration=[While concentrating](!rounds --target caster|@{selected|token_id}|Wall-of-Fire-PR|99|0|Concentrating on maintaining the Wall of Fire|radioactive)}}{{aoe=[Sheet of Flame](!rounds --aoe @{selected|token_id}|wall|feet|240||3|fire) or [A Ring](!rounds --aoe @{selected|token_id}|circle|feet|240|||fire)}}{{save=None}}{{damage=[passing through 4d4+@{selected|casting-level}](!\\amp#13;\\amp#47;gmroll 4d4+@{selected|casting-level} fire damage) [within 10ft 2d4](!\\amp#13;\\amp#47;gmroll 2d4 fire damage) [within 20ft 1d4](!\\amp#13;\\amp#47;gmroll 1d4 fire damage)}}{{reference=PHB p225}}SpellData=[w:Wall of Fire,lv:5,sp:8,gp:0.05,cs:VSM,sph:Elemental-Fire]{{effects=Brings forth an immobile, blazing curtain of magical fire of shimmering color--yellow-green or amber (different from the 4th-level wizard version).}}{{materials=Phosphorus worth 5cp}}'},
						{name:'Wall-of-Thorns',type:'PRspellL6',ct:'9',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nWall of Thorns\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 6 Priest}}{{school=Conjuration-Summoning}}{{sphere=Plant, Creation}}Specs=[Wall of Thorns,PRspellL6,1H,Conjuration-Summoning]{{components=V,S}}{{range=[[80]] yards}}{{time=[[9]]}}{{duration=[@{selected|casting-level} turns](!rounds --target caster|@{selected|token_id}|Wall-of-Thorns|[[10@{selected|casting-level}]]|-1|A wall of spikey growth exists|interdiction)}}{{aoe=[[[@{selected|casting-level}]] x 10ft cubes](!rounds --aoe @{selected|token_id}|wall|feet|240|||acid)}}{{save=None}}{{reference=PHB p230}}SpellData=[w:Wall of Thorns,lv:6,sp:9,gp:0,cs:VS,sph:Plant|Creation]{{effects=Creates a barrier of very tough, pliable, tangled brush bearing needle-sharp thorns as long as a person\'s finger. Any creature breaking through (or crashing into) the wall of thorns suffers 8 points of damage, plus an additional amount of damage equal to the creature\'s AC.}}'},
						{name:'Warp-Wood',type:'PRspellL2',ct:'5',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nWarp Wood\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 2 Priest (reversable)}}{{school=Alteration}}{{sphere=Plant}}Specs=[Warp-Wood,PRspellL2,1H,Alteration]{{components=V,S}}{{time=[[5]]}}{{range=[[[10*@{selected|Casting-Level}]] yards](!rounds --aoe @{selected|token_id}|circle|yards|0|[[20*@{selected|Casting-Level}]]||lightning)}}{{duration=Permanent}}{{aoe=[[15]]x[[1]]inch dia. x [[@{selected|Casting-Level}]] of wood}}{{save=[Special](!\\amp#13;\\amp#47;gmroll 1d20 save vs. spell (Warp Wood)}}{{reference=PHB p208}}SpellData=[w:Warp-Wood,lv:2,sp:5,gp:0,cs:VS,sph:Plant]{{effects=Causes a volume of wood to bend and warp, permanently destroying its straightness, form, and strength.}}'},
						{name:'Water-Breathing',type:'PRspellL3',ct:'6',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nWater Breathing\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 3 Priest}}{{school=Alteration}}{{sphere=Elemental(Water)}}Specs=[Water-Breathing,PRspellL3,1H,Alteration]{{components=V,S}}{{time=[[6]]}}{{range=Touch}}{{duration=[[?{How many water breathers?|1}]] creatures for [[floor(@{selected|casting-level}/?{How many water breathers?|1})]]hours [[floor((60*@{selected|casting-level}/?{How many water breathers?|1})%60)]] minutes}}{{aoe=Special}}{{save=None}}{{reference=PHB p215}}{{healing=[Grant gills](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Give aqualung to who?|token_id}|Water-Breathing|[[60*@{selected|casting-level}/([[?{How many water breathers?|1}]])]]|-1|Breath water like a fish|ninja-mask)}}SpellData=[w:Water-Breathing,lv:3,sp:6,gp:0,cs:VS,sph:Elemental-Water]{{effects=The recipient is able to breathe under water freely for the duration of the spell--i.e., one hour for each experience level of the caster. The priest can divide the base duration between multiple characters.\nNote that the spell does not prevent the recipient creature from breathing in its natural element.}}'},
						{name:'Water-Summoning',type:'PRspellL6',ct:'100',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nWater Summoning\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 6 Priest}}{{school=Conjuration-Summoning}}{{sphere=Weather}}Specs=[Water Summoning,PRspellL6,1H,Conjuration-Summoning]{{components=V,S}}{{range=[[0]]}}{{time=[[1]] turn}}{{duration=Special}}{{aoe=Special}}{{save=None}}{{reference=PHB p230}}SpellData=[w:Water Summoning,lv:6,sp:100,gp:0,cs:VS,sph:Weather]{{effects=Calls forth weather appropriate to the climate and season of the area he is in, which is not under the control of the caster.}}'},
						{name:'Water-Walk',type:'PRspellL3',ct:'6',charge:'uncharged',cost:'0.01',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nWater Walk\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 3 Priest}}{{school=Alteration}}{{sphere=Elemental(Water)}}Specs=[Water-Walk,PRspellL3,1H,Alteration]{{components=V,S,M}}{{time=[[6]]}}{{range=Touch}}{{duration=[[1+@{selected|casting-level}]]Turns}}{{aoe=[[@{selected|casting-level}-4]] creatures}}{{save=None}}{{reference=PHB p215}}{{healing=[Splash don\'t drown](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Give wellies to who?|token_id}|Water-Breathing|[[10+(10*@{selected|casting-level})]]|-1|Walk on water|tread)}}SpellData=[w:Water-Walk,lv:3,sp:6,gp:0.01,cs:VSM,sph:Elemental-Water]{{effects=Empower one or more creatures to tread upon any liquid as if it were firm ground; this includes mud, quicksand, oil, running water, and snow.}}{{materials=A piece of cork costing 1cp and the priest\'s holy symbol.}}'},
						{name:'Withdraw',type:'PRspellL2',ct:'5',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nWithdraw\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 2 Priest}}{{school=Alteration}}{{sphere=Protection}}Specs=[Withdraw,PRspellL2,1H,Alteration]{{components=V,S}}{{time=[[5]]}}{{range=[[0]]}}{{duration=Special}}{{aoe=The caster}}{{save=None}}{{reference=PHB p208}}SpellData=[w:Withdraw,lv:2,sp:5,gp:0,cs:VS,sph:Protection]{{effects=In effect alters the flow of time with regard to the caster. While but one round of time passes for those not affected by the spell, the priest is able to spend two rounds, plus one round per level = [[2+@{selected|Casting-Level}]], in contemplation.}}'},
						{name:'Word-of-Recall',type:'PRspellL6',ct:'1',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nWord of Recall\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 6 Priest}}{{school=Alteration}}{{sphere=Summoning}}Specs=[Word of Recall,PRspellL6,0H,Alteration]{{components=V}}{{range=[[0]]}}{{time=[[1]]}}{{duration=Special}}{{aoe=The caster}}{{save=None}}{{reference=PHB p230}}SpellData=[w:Word of Recall,lv:6,sp:1,gp:0,cs:V,sph:Summoning]{{effects=Takes the priest instantly back to his sanctuary when the word is uttered.}}'},
						{name:'Wyvern-Watch',type:'PRspellL2',ct:'5',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nWyvern Watch\nas a level @{selected|Casting-Level} caster}}{{splevel=Level 2 Priest}}{{school=Evocation}}{{sphere=Guardian}}Specs=[Wyvern-Watch,PRspellL2,1H,Evocation]{{components=V,S,M}}{{time=[[5]]}}{{range=[[30]] yards}}{{duration=[[8]] hours or until strike}}{{aoe=[10ft radius sphere](!rounds --aoe @{selected|token_id}|circle|feet|90|20||magic)}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 saving throw)}}{{reference=PHB p208}}SpellData=[w:Wyvern-Watch,lv:2,sp:5,gp:0,cs:VSM,sph:Guardian]{{effects=Creates an insubstantial haze. Used to guard an area. Any creature approaching within [[10]]ft of area must make a save vs spell or be paralysed for [[@{selected|Casting-Level}]] rounds.}}{{materials=Requires the Priest\'s holy symbol.}}'},
					]},
	Powers_DB:		{bio:'<blockquote>Powers Database</blockquote><b>v5.7 04/02/2022</b><br><br>This database holds the definitions and API calls to enact Character, NPC & Monster Powers.  Powers can be memorised and, unlike spells, can be specified for use more than once a day or even at will.  If all daily uses are used, they can be refreshed on a long rest (short rests have no effect).  Characters, NPCs and Monsters can learn, memorise and use these spells via the abilities, menus and commands of the MagicMaster API<br><br><br><b>Important Note:</b> most of the spell macros require a Roll20 Pro membership, and the installation of the ChatSetAttr, TokenMod, MagicMaster and RoundMaster API Scripts, to allow parameter passing between macros, update of character sheet variables, and marking spell effects on tokens.  If you do not have this level of subscription, I highly recommend you get it as a DM, as you get lots of other goodies as well.  If you want to know how to load the API Scripts to your game, the RoLL20 API help here gives guidance, or Richard can help you.<br><br>Instructions<br><br>In order to understand the format of spell macros in this database and how to change or add to them, please refer to the MagicMaster API documentation.',
					gmnotes:'<blockquote>Change Log:</blockquote>v5.7  04/02/2022  Added "End Effect" buttons to "Rage" power<br><br>v5.6  01/01/2022  Updated to common release version<br><br>v5.4 - 5.5 Skipped to even up version numbers<br><br>v5.3  07/12/2021  Added turning dice roll to *Turn Undead* power<br>v5.2  29/11/2021  Swapped PR-Light to Light-PR for more intuitive listing, and did same for similar powers<br><br>v5.1  31/10/2021  Added Powers for monsters from "The Undiscovered Caverns"<br><br>v5.0  31/10/2021  Encoded using machine readable data to support API databases<br><br>v4.6.5  04/09/2021  Added powers for WPM Undiscovered Caverns<br><br>v4.6.4  15/07/2021  Expanded Manticore Tail Spikes to not need character sheet macros<br><br>v4.6.3  11/06/2021  Added powers for Ghosts of Saltmarsh<br><br>v4.6.2  01/05/2021  Extensive bug checking & fixing<br><br>v4.6.1  14/04/2021  Added Spiritual Hammer and Prayer as powers for a Priest of War<br><br>v4.6  28/03/2021  Edited all macros to use the MagicMaster API for targeting and charges<br><br>v4.5.3  26/03/2021  Added regeneration every turn capability to Regenerate power (in addition to ability for each use of the power).<br><br>v4.5.2  14/03/2021  Changed cost for using Command power to 0GP<br><br>v4.5.1  09/03/2021  Added the missing \'ct--\' required for removing Powers to set the speed & cost for a '-'<br><br>v4.5  27/02/2021  Changed calls to @{Powers|Use-Another-Charge} to use the MagicMaster API call instead<br><br>v4.4.4  14/02/2021  Changed all !setattr --sel parameters to be --charid instead, so they can work more easily with the MagicMaster API.<br><br>v4.4.3  04/02/2021  Added fear power for mummies, and corrected some targeting bugs<br><br>v4.4.2  19/01/2021  Added Priest of Life class spells as powers.<br><br>v4.4.1 17/12/2020  Added in missing Spectral Hand power<br><br>v4.4  22/11/2020  Separated out mu-casting-level and pr-casting-level (casting-level also retained for backwards compatibility).  This is needed as casters with dual MU/PR class may cast some powers at different levels.<br><br>v4.3  17/11/2020  Split off the mechanics of the Powers execution into the Powers library. leaving the Power description macros here.<br><br>v4.2  09/11/2020  Added special menus for adding and managing Magic Item powers<br><br>v4.1  01/11/2020  Added NWP Healing as a power: requires the new feature of multiple use decrementing the power uses.<br><br>v4.0  29/10/2020  Same as v3.4.1 just aligning version numbers with v4 macro library release<br><br>v3.4.1 29/10/2020  Fixed bug with initialising sheet variables<br><br>v3.4 20/10/2020 Updated to support Lost & Found campaign<br><br>v3.3.1 12/10/2020  Updated Long Rests to set ammo maximums to ammo remaining, to reflect that any not recovered when you rest are lost<br><br>v3.3   06/10/2020 Added thieving abilities as powers (mainly to add markers), linked Long Rests to the DMs "End of Day" routine, and added a rest selection for non-spell users that restores Powers & recharging MIs<br><br>v3.2   22/09/2020 Updated to use new lag detection and selection control mechanisms<br><br>v3.1   03/09/2020 Added all powers for Arc and Hubert<br><br>v3.0   01/09/2020 Initial Release<br><br>v1-v2 Skipped these versions to bring in line with release numbers for other macro libraries<br><br>v0.1  26/08/2020 Initial Creation',
					root:'Powers-DB',
					controlledby:'all',
					avatar:'https://s3.amazonaws.com/files.d20.io/images/3077760/Vg6r8vmy8ANNrCZHGtul2w/thumb.png?1392175066',
					version:5.7,
					db:[{name:'-',type:'',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" @{selected|token_name} suddenly realises he is powerless! Choose another power instead.'},
						{name:'Augury',type:'Power',ct:'2',charge:'uncharged',cost:'50',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nAugury\nas a level @{selected|PR-Casting-Level} caster}}{{splevel=Level 2 Priest}}{{school=Divination}}{{sphere=Divination}}Specs=[Augury,Power,1H,Divination]{{components=V,S}}{{time=[[2]] rounds}}{{range=[[0]]}}{{duration=Special}}{{aoe=Special}}{{save=None}}SpellData=[w:Augury,sp:2,gp:50,cs:VSM]{{effects=Asks divine guidance on whether action in next [[3]] turns will be for the benefit of or harmful to the party. If successful DM will reveal "weal" or "Woe" or perhaps some cryptic clue. Chance of success is [[70+@{selected|PR-Casting-Level}]]% adjusted by DM for circumstances.}}{{materials=A set of gem-inlaid sticks, dragon bones, or similar tokens of at least 1,000gp value (which are ***not*** expended in casting and can be used again)}} '},
						{name:'Beastmaster-Animal-Telepathy',type:'Power',ct:'10',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Beastmaster\nAnimal Telepathy}}{{splevel=Class Ability}}{{school=Enchantment-Charm}}Specs=[Beastmaster-Animal-Telepathy,Power,1H,Enchantment-Charm]{{components=None}}{{time=[[10]]}}{{range=[30 feet](!rounds --aoe @{selected|token_id}|circle|feet|0|60||magic|true)}}{{duration=Special}}{{aoe=Special}}{{save=[Recruit](!\\amp#13;\\amp#47;gmroll 1d20 minus [[ceil(@{selected|casting-level}/3)]] save vs Rod) save vs Rod for animal to save vs being recruited}}SpellData=[w:Beastmaster Animal Telepathy,sp:10,cs:None]{{effects=The Beastmaster can establish telepathic communication with any normal or giant animal within 30\', if he does nothing else in the round. The animal must have a minimum Intelligence of 1. This has the following benefits:\n• The Beastmaster can communicate to the creature that he desires its friendship. If the offer is sincere (and the animal will be able to sense if it isn\'t), the creature can be calmed and will not attack or flee unless it is attacked.\n• The Beastmaster can recruit an animal he has befriended as a henchman if he is not at his limit and if the creature fails a saving throw vs. rods. The saving throw is penalized by -1 for every three levels of experience the Beastmaster has earned.\n*Animal Bonding:* The Beastmaster forms a mental bond with any animal he recruits as a henchman. There is no distance limit, but this ability does not cross planar boundaries. This bond has the following effects:\n•The Beastmaster can communicate directly with any animal henchman to which he has a bond.\n• He can see through the eyes of the animal by concentrating on the mental link. He can see through the eyes of only one creature in a round (himself included).\n• He has the animal lore proficiency with respect to the bonded animal. Furthermore, if he is mentally linked to the animal, success with the proficiency is automatic.}}'},
						{name:'Blackrazor-Haste',type:'ItemPower',ct:'3',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Blackrazor casts\nHaste\nas a level 12 caster}}{{splevel=Power}}{{school=Alteration}}Specs=[Blackrazor-Haste,ItemPower,1H,Alteration]{{components=V, S}}{{time=[[3]]}}{{range=[[60]]yds}}{{duration=[[36]] rounds}}{{aoe=[[12]]creatures in a [40ft. cube](!rounds --aoe @{selected|token_id}|square|feet|180|40||magic)}}{{save=None}}{{healing=[Super-Speed](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Select who to hurry up|token_id}|Haste|15|-1|Hasted, double attacks, move etc|Strong)}}SpellData=[w:Blackrazor Haste,sp:3,cs:VS]{{effects=When this spell is cast, each affected creature functions at double its normal movement and attack rates. A hasted creature gains a -2 initiative bonus. Thus, a creature moving at 6 and attacking once per round would move at 12 and attack twice per round. Spellcasting and spell effects are not sped up. The number of creatures that can be affected is equal to the caster\'s experience level; those creatures closest to the centre of effect are affected first. All affected by haste must be in the designated area of effect. Note that this spell negates the effects of a slow spell. Additionally, this spell ages the recipient by one year, because of sped-up metabolic processes. This spell is not cumulative with itself or with other similar magic.}}{{materials=A shaving of liquorice root.}}'},
						{name:'Bless',type:'Power',ct:'10',charge:'uncharged',cost:'1',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nBless\nas a level @{selected|Casting-Level} caster}}{{splevel=Power}}{{school=Conjuration/Summoning}}{{sphere=All}}Specs=[Bless,Power,1H,Conjuration-Summoning]{{components=V,S}}{{time=[[1]] round}}{{range=[[60]] yards}}{{duration=[[6]] rounds}}{{aoe=[50ft cube](!rounds --aoe @{selected|token_id}|square|feet|180|50||light)}}{{save=None}}{{healing=[Bless them](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Select first supplicant|token_id}|Bless|6|-1|Blessed, attk+1, save vs fear+1|angel-outfit)}}SpellData=[w:Bless,sp:10,gp:1,cs:VSM,sph:All]{{effects=Raises morale of friendly creatures *not yet in melee combat* adding +[[1]] to saves vs. fear effects and raises attack rolls by +[[1]]. Or can cast on a single object weighing no more than [[@{selected|Casting-Level}]] pounds and the plus lasts until the item is used or the duration ends}}{{marterials=Holy Water}}'},
						{name:'Cantrip',type:'Power',ct:'1',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nCantrip\nas a level @{selected|mu-casting-level} caster}}{{splevel=Level 0 Wizard}}{{school=Illusion/Phantasm}}Specs=[Cantrip,Power,1H,Evocation]{{components=V,S}}{{time=[[1]]}}{{range=[[10]]ft.}}{{duration=[[@{selected|mu-casting-level}]] hours}}{{aoe=Special}}{{save=None}}SpellData=[w:Cantrip,sp:1,cs:VSM]{{effects=Cantrips are minor spells studied by wizards during their apprenticeship, regardless of school. The *cantrip* spell is a practice method for the apprentice, teaching him how to tap minute amounts of magical energy. Once cast, the *cantrip* spell enables the caster to create minor magical effects for the duration of the spell. However, these effects are so minor that they have severe limitations. They are completely unable to cause a loss of hit points, cannot affect the concentration of spellcasters, and can only create small, obviously magical materials. Furthermore, materials created by a cantrip are extremely fragile and cannot be used as tools of any sort. Lastly, a cantrip lacks the power to duplicate any other spell effects.\nWhatever manifestation the cantrip takes, it remains in effect only as long as the wizard concentrates. Wizards typically use cantrips to impress common folk, amuse children, and brighten dreary lives. Common tricks with cantrips include tinklings of ethereal music, brightening faded flowers, glowing balls that float over the caster\'s hand, puffs of wind to flicker candles, spicing up aromas and flavors of bland food, and little whirlwinds to sweep dust under rugs. Combined with the *unseen servant* spell, it\'s a tool to make housekeeping and entertaining simpler for the wizard.}}'},
						{name:'Charm-Person',type:'Power',ct:'1',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nCharm Person\nas a level @{selected|casting-level} caster}}{{splevel=Power}}{{school=Enchantment/Charm}}Specs=[Charm-Person,Power,1H,Enchantment-Charm]{{components=V, S}}{{time=[[1]]}}{{range=[120 yards](!rounds --aoe @{selected|token_id}|circle|yards|0|240||magic)}}{{duration=Time based}}{{aoe=[[1]] person}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 saving throw)}}{{damage=[Charm them](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Select a target|token_id}|Charm-person|99|0|Charmed, I\'m sure|chained-heart)}}SpellData=[w:Charm-Person,sp:1,cs:VS]{{effects=The person being targets must make a Save vs. Spell adjusted for Wisdom or become charmed by the spellcaster. A further bonus of +[[1]] for each point of damage the target has received is add to the Saving Throw if hurt by the caster\'s group. If the target fails, they consider the caster a trusted friend and ally that is to be heeded and protected. The target is allowed another Saving Throw on a periodic basis based on their Intelligence. If two or more charms effects hit the target simultaneously, it is up to the DM to decide what happens. It is important to note that the subject will have a full memory of the events that take place while they were charmed. \n[[3]] or less: [[3]] months \n[[4]]-[[6]]: [[2]] months \n[[7]]-[[9]]: [[1]] month \n[[10]]-[[12]]: [[3]] weeks \n[[13]]-[[14]]: [[2]] weeks \n[[15]]-[[16]]: [[1]] week \n[[17]]: [[3]] days \n[[18]]: [[2]] days \n[[19]] or more: [[1]] day}}'},
						{name:'Clairaudience',type:'Power',ct:'3',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|mu-casting-name} casts\nClairaudience\nas a level @{selected|mu-casting-level} caster}}{{splevel=Power}}{{school=Divination}}Specs=[Clairaudience,Power,1H,Divination]{{components=V, S}}{{time=[[3]]}}{{range=Unlimited}}{{duration=[[@{selected|mu-casting-level}]] rounds}}{{aoe=[[60]]ft radius of selected spot}}{{save=None}}{{healing=[Super-Hearing](!rounds --target caster|@{selected|token_id}|Clairaudience|[[@{selected|mu-casting-level}]]|-1|Normal hearing but at a distance|Strong)}}SpellData=[w:Clairaudience,sp:3,cs:VSM]{{effects=The clairaudience spell enables the wizard to concentrate upon some locale and hear in his mind any noise within a 60-foot radius of that point. Distance is not a factor, but the locale must be known--a place familiar to the spellcaster or an obvious one (such as behind a door, around a corner, in a copse of trees, etc.). Only sounds that are normally detectable by the wizard can be heard by use of this spell. Lead sheeting or magical protections prevent the operation of the spell, and the wizard has some indication that the spell is so blocked. The spell creates an invisible sensor, similar to that created by a crystal ball spell, that can be dispelled. The spell functions only on the wizard\'s current plane of existence}}{{materials=A small horn of at least 100 gp value.}}'},
						{name:'Command',type:'Power',ct:'1',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nCommand\nas a level @{selected|Casting-Level} caster}}{{splevel=Power}}{{school=Enchantment/Charm}}{{sphere=Charm}}Specs=[Command,Power,0H,Enchantment-Charm]{{components=V}}{{time=[[1]]}}{{range=[30 yards](!rounds --aoe @{selected|token_id}|circle|yards|0|60||magic|true)}}{{duration=[[1]] round}}{{aoe=[[1]] creature}}{{save=[Special](!\\amp#13;\\amp#47;gmroll 1d20 saving throw)}}SpellData=[w:Command,sp:1,cs:V]{{effects=Command another creature with a single word. Creatures with Intelligence 13 or more or 6HD or more save vs. spell adjusted by Wisdom to negate. No command affects a creature for more than 1 round and undead are not affected at all. Must be in language that creature understands. Will obey to best of ability as long as unequivocal and clear. Command to "Die" causes creature to faint for 1 round then revives alive and well. Typical commands are *back / halt / flee / run / stop / fall / go / leave / surrender / sleep / rest* etc.}}'},
						{name:'Contaminate-Water',type:'Power',ct:'10',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nContaminate Water\nas a level @{selected|Casting-Level} caster}}{{splevel=Power}}{{school=Alteration}}{{sphere=All}}Specs=[Contaminate-Water,Power,1H,Alteration]{{components=V,S}}{{time=[[1]] round}}{{range=[[30]] yds}}{{duration=Permanent}}{{aoe=[[@{selected|Casting-Level}]] cu.ft.}}{{save=None}}SpellData=[w:Contaminate Water,sp:10,cs:VS,sph:All]{{effects=When cast, this spell makes pure food and water into spoiled, rotten, poisonous, or otherwise contaminated food and water totally unsuitable for eating and drinking. Up to 1 cubic foot of food and drink per level can be thus contaminated. This spoils even holy water; however, it has no effect upon creatures or potions}}'},
						{name:'Control-undead',type:'Power',ct:'10',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|token_name} attempts to\nControl Undead\nas a level @{selected|pr-casting-level} @{selected|class3}}}{{splevel=Power}}{{school=Necromancy}}Specs=[Control-Undead,Power,1H,Necromancy]{{components=V,S,M}}{{time=[[10]]}}{{range=0}}{{duration=Until broken}}{{aoe=Up to [[12]] Undead within line of sight}}{{save=See turning table}}{{reference=PHB p103}}{{damage=[Control It](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Select first undead|token_id}|Controlled|99|0|Controlled-undead, subservient to @{selected|character_name}|chained-heart)}}SpellData=[w:Control-Undead,sp:10,cs:VSM]{{effects=An ability of Evil Clerics, and Shamen of all persuasions. Attempting to control counts as an action, requiring one round and occurring during the character\'s turn in the initiative order (thus, the undead may get to act before the character can control them). The mere presence of the character is not enough--a touch of drama from the character is important. Speech and gestures are important, so the character must have his hands free and be in a position to speak. However, controlling is not like spellcasting and is not interrupted if the character is attacked during the attempt.\nTo resolve a attempt, look on Table 61. Cross-index the Hit Dice or type of the undead with the level of the character. If there is a number listed, roll 1d20. If the number rolled is equal to or greater than that listed, the attempt is successful. If the letter "T" appears, the attempt is automatically successful without a die roll, and the undead will follow orders if they can. If the letter "D" is given, the controlling makes the undead utterly subservient. A dash (--) means that a priest of that level cannot control that type of undead. A successful controlling affects 2d6 undead. If the undead are a mixed group, the lowest Hit Dice creatures are controlled first.\nOnly one die is rolled regardless of the number of undead the character is attempting to control in a given round. The result is read individually for each type of undead.}}{{material=The Priest\'s holy symbol}}'},
						{name:'Cure-Disease',type:'Power',ct:'10',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nCure Disease\nas a level @{selected|Casting-Level} caster}}{{splevel=Power}}{{school=Abjuration}}{{sphere=Necromantic}}Specs=[Cure-Disease,Power,1H,Abjuration]{{components=V,S}}{{time=[[10]]}}{{range=Touch}}{{duration=Permanent}}{{aoe=1 creature}}{{save=None}}SpellData=[w:Cure-Disease,sp:10,cs:VS]{{effects=This spell enables the caster to cure most diseases by placing his hand upon the diseased creature. The affliction rapidly disappears thereafter, making the cured creature whole and well in from one turn to 10 days, depending on the type of disease and the state of its advancement when the cure took place. (The DM must adjudicate these conditions.) The spell is also effective against parasitic monsters such as green slime, rot grubs, and others. When cast by a priest of at least 12th level, this spell cures lycanthropy if cast within three days of the infection. Note that the spell does not prevent reoccurrence of a disease if the recipient is again exposed.\nThe reverse of this spell is *Cause Disease*}}'},
						{name:'Cure-Light-Wounds',type:'Power',ct:'5',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nCure Light Wounds\nas a level @{selected|Casting-Level} caster}}{{splevel=Power}}{{school=Necromancy}}{{sphere=Healing}}Specs=[Cure-Light-Wounds,Power,1H,Necromancy]{{components=V,S}}{{time=[[5]]}}{{range=Touch}}{{duration=Permanent}}{{aoe=Creature touched}}{{save=None}}{{healing=[1d8](!\\amp#13;\\amp#47;r 1d8) HP,\nor [1d8+3](!\\amp#13;\\amp#47;r 1d8+3) for a Priest of Life)}}SpellData=[w:Cure Light Wounds,sp:5,cs:VS]{{effects=Cannot cure non-corporeal or nonliving or extra-planar creatures.}}'},
						{name:'Cure-Serious-Wounds',type:'Power',ct:'7',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nCure Serious Wounds\nas a level @{selected|Casting-Level} caster}}{{splevel=Power}}{{school=Necromancy}}{{sphere=Healing}}Specs=[Cure-Serious-Wounds,Power,1H,Necromancy]{{components=V,S}}{{time=[[7]]}}{{range=Touch}}{{duration=Permanent}}{{aoe=Creature Touched}}{{save=None}}{{healing=[2d8+1](!\\amp#13;\\amp#47;r 2d8+1) HP,\nor [2d8+7](!\\amp#13;\\amp#47;r 2d8+7) for a Priest of Life}}SpellData=[w:Cure Serious Wounds,sp:7,cs:VS]{{effects=Cannot cure non-corporeal or nonliving or extraplanar creatures. Can restore someone between [[0-1]] and [[0-10]] to [[0]]HP.}}'},
						{name:'Darkness-10ft-radius',type:'Power',ct:'2',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nDarkness, 10\' Radius\nas a level @{selected|mu-casting-level} caster}}{{splevel=Power}}{{school=Alteration}}Specs=[Darkness-10ft-radius,Power,1H,Alteration]{{components=V, S}}{{time=[[2]]}}{{range=[[@{selected|mu-casting-level}*10]] yds}}{{duration=[[@{selected|mu-casting-level}+10]] rounds}}{{aoe=[10ft. radius (or as cast)](!rounds --aoe @{selected|token_id}|circle|feet|[[@{selected|casting-level}*30]]||20|black)}}{{save=None}}SpellData=[w:Darkness 10ft radius,sp:2,cs:VS]{{effects=This spell causes total, impenetrable darkness in the area of effect. Infravision is useless. Neither normal nor magical light works unless a *Light* or *Continual Light* spell is used. Only *Light* or *Continual Light* work, with *Light* and *Darkness* cancelling out, but *Continual Light* creating light.}}{{materials=A bit of bat fur and either a drop of pitch or a piece of coal.}}'},
						{name:'Defence-Stance',type:'Power',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|token_name} starts\nDefence Stance\nas a level @{selected|level-class1} Dwarven Defender}}{{splevel=Power}}{{school=Dwarven Defender}}Specs=[Defence-Stance,Power,1H,Innate Ability]{{components=S}}{{time=[[0]]}}{{range=[[0]]}}{{duration=[[10]] Rounds}}{{aoe=Self}}{{save=None}}{{healing=[Adopt the Position!](!rounds --target caster|@{selected|token_id}|Defence-stance|10|-1|Defence Stance, 1/2 damage, +2 on saves, 50% move|overdrive)}}SpellData=[w:Defence Stance,sp:0,cs:S]{{effects=This Dwarven Defender gets [[{ceil(@{selected|level-class1}/4),3}kl1]] Defensive Stances a Day. This lasts for [[10]] rounds and can be invoked instantly. While they have Defensive staff active, they suffer only **half damage** from all forms of physical damage, a +[[2]] on **saving throws** and a [[50]]% **penalty to their move**}}'},
						{name:'Detect-Evil',type:'Power',ct:'10',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nDetect-Evil\nas a level @{selected|pr-casting-level} caster}}{{splevel=Power}}{{school=Divination}}{{sphere=All}}Specs=[Detect-Evil,Power,1H,Divination]{{components=V,S}}{{time=[[1]]round}}{{range=[[0]]}}{{duration=[[10+(5*@{selected|pr-Casting-Level})]] rounds}}{{aoe=[10ft x 120yds path](!rounds --aoe @{selected|token_id}|bolt|feet|0|360|10|magic)}}{{save=None}}{{healing=[Evil radar on](!rounds --target caster|@{selected|token_id}|Detect-Evil|[[10+(5*@{selected|Casting-Level})]]|-1|Detecting Evil|aura)}}SpellData=[w:Detect-Evil,sp:10,cs:VS]{{effects=This spell discovers emanations of evil, or of good in the case of the reverse spell, from any creature, object, or area. Character alignment, however, is revealed only under unusual circumstances: characters who are strongly aligned, who do not stray from their faith, and who are of at least 9th level might radiate good or evil *if intent upon appropriate actions.* Powerful monsters, such as rakshasas or ki-rin, send forth emanations of evil or good, even if polymorphed. Aligned undead radiate evil, for it is this power and negative force that enable them to continue existing. An evilly cursed object or unholy water radiates evil, but a hidden trap or an unintelligent viper does not. \nThe degree of evil (dim, faint, moderate, strong, or overwhelming) and possibly its general nature (expectant, malignant, gloating, etc.) can be noted. If the evil is overwhelming, the priest has a 10% chance per level of detecting its general bent (lawful, neutral, or chaotic). The duration of a *detect evil *(or *detect good*) spell is one turn plus five rounds per level of the priest. Thus, a 1st-level priest can cast a spell with a 15-round duration, a 2nd-level priest can cast a spell with a 20-round duration, etc. The spell has a path of detection 10 feet wide in the direction the priest is facing. The priest must concentrate--stop, have quiet, and intently seek to detect the aura--for at least one round to receive a reading}}{{materials=The spell requires the use of the priest\'s holy symbol, with the priest holding it before him.}}'},
						{name:'Detect-Good',type:'Power',ct:'10',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nDetect Good\nas a level @{selected|pr-Casting-Level} caster}}{{splevel=Power}}{{school=Divination}}{{sphere=All}}Specs=[Detect-Good,Power,1H,Divination]{{components=V,S}}{{time=[[1]]round}}{{range=[[0]]}}{{duration=[[10+(5*@{selected|pr-Casting-Level})]] rounds}}{{aoe=[10ft x 120yds path](!rounds --aoe @{selected|token_id}|bolt|feet|0|360|10|magic)}}{{save=None}}{{healing=[Good radar on](!rounds --target caster|@{selected|token_id}|Detect-Good|[[10+(5*@{selected|Casting-Level})]]|-1|Detecting Good|aura)}}SpellData=[w:Detect-Good,sp:10,cs:VS]{{effects=This spell discovers emanations of evil, or of good in the case of the reverse spell, from any creature, object, or area. Character alignment, however, is revealed only under unusual circumstances: characters who are strongly aligned, who do not stray from their faith, and who are of at least 9th level might radiate good or evil *if intent upon appropriate actions.* Powerful monsters, such as rakshasas or ki-rin, send forth emanations of evil or good, even if polymorphed. Aligned undead radiate evil, for it is this power and negative force that enable them to continue existing. An evilly cursed object or unholy water radiates evil, but a hidden trap or an unintelligent viper does not. \nThe degree of evil (dim, faint, moderate, strong, or overwhelming) and possibly its general nature (expectant, malignant, gloating, etc.) can be noted. If the evil is overwhelming, the priest has a 10% chance per level of detecting its general bent (lawful, neutral, or chaotic). The duration of a *detect evil *(or *detect good*) spell is one turn plus five rounds per level of the priest. Thus, a 1st-level priest can cast a spell with a 15-round duration, a 2nd-level priest can cast a spell with a 20-round duration, etc. The spell has a path of detection 10 feet wide in the direction the priest is facing. The priest must concentrate--stop, have quiet, and intently seek to detect the aura--for at least one round to receive a reading}}{{materials=The spell requires the use of the priest\'s holy symbol, with the priest holding it before him.}}'},
						{name:'Detect-Magic',type:'Power',ct:'1',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}}{{title=@{selected|casting-name} casts\nDetect Magic\nas a level @{selected|mu-casting-level} caster}}{{splevel=Power}}{{school=Divination}}Specs=[Detect-Magic,Power,1H,Divination]{{components=V, S}}{{time=[[1]]}}{{range=[[0]]}}{{duration=[[2*@{selected|mu-casting-level}]] Rounds}}{{aoe=[10ft x 60ft long](!rounds --aoe @{selected|token_id}|bolt|feet|0|60|10|magic) in direction facing}}{{save=None}}{{healing=[Turn on magic radar](!rounds --target caster|@{selected|token_id}|Detect-Magic|[[2*@{selected|mu-Casting-Level}]]|-1|Detecting Magic|aura)}}SpellData=[w:Detect Magic,sp:1,cs:VS]{{effects=Detect magic strength (dim/ faint/ moderate/ strong/ overwhelming) and [[[10*@{selected|mu-casting-level}]]](!\\amp#13;\\amp#47;r 1d100)% chance of determining type (alteration/ conjuration/ etc). Can scan [[60]] degree arc per round. Stone of 1ft thick or solid metal of 1 inch or 1 yard of wood blocks the spell. Strong magic can confuse weaker signals. Does not reveal alignment aspects.}}'},
						{name:'Divine-Favour',type:'Power',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Divine Favour}}Specs=[Divine-Favour,Power,1H,Alteration]{{Range=[[30]]ft}}{{Speed=0}}SpellData=[w:Divine Favour,sp:0,cs:None]{{desc=@{selected|casting-name} calls on a [Divine Favour](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Select Beneficiary|token_id}|Divine-favour|6|-1|In Divine Favour +[[4]] to hit if within [[30]]ft of @{selected|casting-name}|fist) for someone giving +[[4]] to hit for [[6]] rounds as long as they are within [[30]]ft of @{selected|token_name}}}'},
						{name:'Do-1HP-care',type:'',ct:'0',charge:'uncharged',cost:'0',body:'!setattr --silent --charid @{selected|character_id} --spell-cast|Do-day-care\n!token-mod --ignore-selected --ids @{target|Tend to which creature?|token_id} --set bar3_value|+1! --report control|"{name} is healed by 1 from {bar3_value:change}HP"\n!magic --cast-again power|@{selected|token_id}|Do-1HP-care'},
						{name:'Do-1st-aid',type:'',ct:'0',charge:'uncharged',cost:'0',body:'!setattr --silent --charid @{selected|character_id} --spell-cast|Do-1st-aid\n!token-mod --ignore-selected --ids @{target|Tend to which creature?|token_id} --set bar3_value|+[[?{How much First Aid?|1d3}]]! --report control|"{name} is healed from {bar3_value:change}HP"\n!magic --cast-again power|@{selected|token_id}|Do-1st-aid'},
						{name:'Do-2HP-care',type:'',ct:'0',charge:'uncharged',cost:'0',body:'!setattr --silent --charid @{selected|character_id} --spell-cast|Do-2HP-care\n!token-mod --ignore-selected --ids @{target|Tend to which creature?|token_id} --set bar3_value|+2! --report control|"{name} is healed by 2 from {bar3_value:change}HP"\n!magic --cast-again power|@{selected|token_id}|Do-2HP-care'},
						{name:'Do-3HP-care',type:'',ct:'0',charge:'uncharged',cost:'0',body:'!setattr --silent --charid @{selected|character_id} --spell-cast|Do-3HP-care\n!token-mod --ignore-selected --ids @{target|Tend to which creature?|token_id} --set bar3_value|+3! --report control|"{name} is healed by 3 from {bar3_value:change}HP"\n!magic --cast-again power|@{selected|token_id}|Do-3HP-care'},
						{name:'Dream',type:'Power',ct:'100',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nDream\nas a level @{selected|casting-level} caster}}{{splevel=Power}}{{school=Illusion/Phantasm (reversable)}}Specs=[Dream,Power,1H,Illusion-Phantasm]{{components=V,S}}{{time=[[1]] Turn}}{{range=Touch}}{{duration=Special}}{{aoe=[[1]]creature}}{{save=None}}SpellData=[w:Dream,sp:100,cs:VS]{{effects=Enables the caster, or a messenger touched by the caster, to send messages to others in the form of dreams. At the beginning of the spell, the caster must name the recipient or identify him by some title that leaves no doubt as to his identity.\nAs the caster completes the spell, the person sending the spell falls into a deep trancelike sleep, and instantaneously projects his mind to the recipient. The sender then enters the recipient\'s dream and delivers the message unless the recipient is magically protected. If the recipient is awake, the message sender can choose to remain in the trancelike sleep. If the sender is disturbed during this time, the spell is immediately cancelled and the sender comes out of the trance. The whereabouts and current activities of the recipient cannot be learned through this spell.\nThe sender is unaware of his own surroundings or the activities around him while he is in his trance. He is totally defenceless, both physically and mentally (i.e., he always fails any saving throw) while in the trance.\nOnce the recipient\'s dreams are entered, the sender can deliver a message of any length, which the recipient remembers perfectly upon waking. The communication is one-way; the recipient cannot ask questions or offer information, nor can the sender gain any information by observing the dreams of the recipient. Once the message is delivered, the sender\'s mind returns instantly to his body. The duration of the spell is the time required for the sender to enter the recipient\'s dream and deliver the message.\nThe reverse of this spell, nightmare, enables the caster to send a hideous and unsettling vision to the recipient, who is allowed a saving throw vs. spell to avoid the effect. The nightmare prevents restful sleep and causes 1d10 points of damage. The nightmare leaves the recipient fatigued and unable to regain spells for the next day. A dispel evil spell cast upon the recipient stuns the caster of the nightmare for one turn per level of the cleric countering this evil sending.}}'},
						{name:'Enlarge',type:'Power',ct:'1',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}}{{title=@{selected|casting-name} casts\nEnlarge\nas a level @{selected|mu-casting-level} caster}}{{splevel=Power}}{{school=Alteration}}Specs=[Enlarge,Power,1H,Alteration]{{components=V, S}}{{time=[[1]]}}{{range=[[[5*@{selected|casting-level}]] yards](!rounds --aoe @{selected|token_id}|circle|yards|0|[[10*@{selected|casting-level}]]||magic|true)}}{{duration=[[5*@{selected|mu-casting-level}]] Rounds}}{{aoe=1 creature or object no larger than [[10*@{selected|mu-casting-level}]]cu.ft}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 saving throw vs. spell Enlarge)}}{{healing=[Enlarge it](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Select a beneficiary|token_id}|Enlarge|[[5*@{selected|mu-casting-level}]]|-1|Enlarged, Damage x [[1+(@{selected|mu-casting-level}/10)]]|overdrive)}}SpellData=[w:Enlarge,sp:1,cs:VS]{{effects=This spell causes instant growth of a creature or object, increasing both size and weight. It can be cast only upon a single creature (or a symbiotic or community entity) or upon a single object that does not exceed 10 cubic feet in volume per caster level. The object or creature must be seen to be affected. It grows by up to [[10*@{selected|mu-casting-level}]]%, increasing this amount in height, width, and weight.\nAll equipment worn or carried by a creature is enlarged by the spell. Unwilling victims are entitled to a saving throw vs. spell. A successful saving throw means the spell fails. If insufficient room is available for the desired growth, the creature or object attains the maximum possible size, bursting weak enclosures in the process, but it is constrained without harm by stronger materials--the spell cannot be used to crush a creature by growth.\nMagical properties are not increased by this spell--a huge sword +1 is still only +1, a staff-sized wand is still only capable of its normal functions, a giant-sized potion merely requires a greater fluid intake to make its magical effects operate, etc. Weight, mass, and strength are affected, though. Thus, a table blocking a door would be heavier and more effective, a hurled stone would have more mass (and cause more damage), chains would be more massive, doors thicker, a thin line turned to a sizeable, longer rope, and so on. A creature\'s hit points, Armour Class, and attack rolls do not change, but damage rolls increase proportionately with size.\nFor example, a fighter at 160% normal size hits with his long sword and rolls a 6 for damage. The adjusted damage roll is 10 (that is, 6 x 1.6 = 9.6, rounded up). Bonuses due to Strength, class, and magic are not altered.}}{{materials=A pinch of powdered iron}}'},
						{name:'Enthrall',type:'Power',ct:'10',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nEnthrall\nas a level @{selected|pr-casting-Level} caster}}{{splevel=Power}}{{school=Enchantment/Charm}}{{sphere=Charm}}Specs=[Enthrall,Power,1H,Enchantment-Charm]{{components=V,S}}{{time=[[1]]round}}{{range=[[0]]}}{{duration=Special}}{{aoe=[90ft radius](!rounds --aoe @{selected|token_id}|circle|yards|0|60||magic|true)}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 saving throw)}}{{healing=[Enthrall Them](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Select first audience member|token_id}|Enthrall|99|0|Enthralled while caster speaks unless attacked|chained-heart)}}SpellData=[w:Enthrall,sp:10,cs:VS]{{effects=A priest using this spell can enthrall an audience that can fully understand his language. Those in the area of effect must successfully save vs. spell or give the caster their undivided attention, totally ignoring their surroundings. Those of a race or religion unfriendly to the caster\'s have a +4 bonus to the roll. Any Wisdom adjustment also applies. Creatures with 4 or more levels or Hit Dice, or with a Wisdom of 16 or better, are unaffected.\nTo cast the spell, the caster must speak without interruption for a full round. Thereafter, the enchantment lasts as long as the priest speaks, to a maximum of one hour. Those enthralled take no action while the priest speaks, and for [1d3](!\\amp#13;\\amp#47;gmroll 1d3)rounds thereafter while they discuss the matter. Those entering the area of effect must also successfully save vs. spell or become enthralled. Those not enthralled are [50%](!\\amp#13;\\amp#47;gmroll 1d100\\gt50)likely every turn to hoot and jeer in unison. If there is excessive jeering, the rest are allowed a new saving throw. The speech ends (but the 1d3 round delay still applies) if the priest is successfully attacked or performs any action other than speaking.\nIf the audience is attacked, the spell ends and the audience reacts immediately, rolling a reaction check with respect to the source of the interruption, at a penalty of [[0-10]]. Note: When handling a large number of saving throws for similar creatures, the DM can assume an average to save time; for example, a crowd of 20 men with a base saving throw of 16 (25% success chance) will have 15 men enthralled and five not.}}'},
						{name:'Faerie-Fire',type:'Power',ct:'4',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nFaerie Fire\nas a level @{selected|pr-Casting-Level} caster}}{{splevel=Power}}{{school=Alteration}}{{sphere=Weather}}Specs=[Faerie-Fire,Power,0H,Alteration]{{components=V}}{{time=[[4]]}}{{range=[[80]] yards}}{{duration=[[4*@{selected|pr-Casting-Level}]] rounds}}{{aoe=[[10*@{selected|pr-Casting-Level}]] sq.ft. within [40ft radius](!rounds --aoe @{selected|token_id}|circle|feet|240|80||light)}}{{save=None}}SpellData=[w:Faerie-Fire,sp:4,cs:V]{{effects=Outline creatures in 40ft radius of each other with a total of [[10*@{selected|pr-Casting-Level}]]sq.ft of faerie fire - the square footage relates to the surface area of the targets. In [Darkness](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Select creature to enlighten|token_id}|Faerie-Fire-darkness|[[4*@{selected|pr-Casting-Level}]]|-1|Outlined in bright Faerie Fire, 2 penalty to AC|aura) +[[2]] on attacks against outlined creatures or +[[1]] in [Twilight](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Select creature to enlighten|token_id}|Faerie-Fire-twilight|[[4*@{selected|pr-Casting-Level}]]|-1|Outlined in dim Faerie Fire, 1 penalty to AC|aura) or brighter. Can outline invisible creatures but not non-corporeal or ethereal or gaseous creatures and no harm done to creatures by the faerie fire itself including undead. As a guide use height x half-height of creature in feet to get square footage. E.g. a 6ft person with a 36 inch waist has approx 18sq.ft surface. A [[2]]nd level priest will outline [[2]] human sized creatures.}}{{materials=A small piece of foxfire.}}'},
						{name:'Firedrake-Breath',type:'Power',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Firedrake uses\nFire Breath}}{{splevel=Breath Weapon}}{{school=Power}}Specs=[Firedrake-Breath,Power,0H,Innate Ability]{{components=S}}{{time=[[0]]}}{{range=[[0]]}}{{duration=Instantaneous}}{{aoe=[60ft cone, 10ft dia. at end](!rounds --aoe @{selected|token_id}|cone|feet|0|60|10|fire|true)}}{{save=[Halves](!\\amp#13;\\amp#47;gmroll 1d20 save vs. Breath Weapon)}}SpellData=[w:Firedrake Breath,sp:0,cs:S]{{effects=The firedrake\'s primary attack is its breath weapon (fire), which it can use up to five times daily. The fire forms a cone from the snout of the dragonet to a 10\' diameter circle at the extreme end of its 60\' range, and causes 2-16 points on all affected (save vs. breath weapon for half damage).\nThe dragonet\'s blood burns fiercely in air, as there is a high phosphorous content to the blood. In fact, the fire-breathing of these creatures is actually the voluntary expelling of a jet of its pyrophoric blood. Because of the flammability of the dragon\'s blood, blunt weapons such as staves or clubs are less dangerous than those which cause blood loss. Any creature making a successful slashing or piercing attack on a firedrake must save vs. breath weapon, or take 1-2 points of fire damage.}}'},
						{name:'Fly',type:'Power',ct:'3',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nFly\nas a level @{selected|mu-casting-level} caster}}{{splevel=Power}}{{school=Alteration}}Specs=[Fly,Power,1H,Alteration]{{components=V, S}}{{time=[[3]]}}{{range=Touch}}{{duration=[DM: 1d6+@{selected|mu-casting-level}](!\\amp#13;\\amp#47;gmroll 1d6+@{selected|mu-casting-level}) turns}}{{aoe=Creature touched}}{{save=None}}{{healing=[Who\'s Flying?](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Who has a Boarding Pass?|token_id}|Fly|99|-1|Flying, speed of 18 horiz or down, 9 up|fluffy-wing)}}SpellData=[w:Fly,sp:3,cs:VS]{{effects=This spell enables the wizard to bestow the power of magical flight. The creature affected is able to move vertically and horizontally at a rate of [[18]] (half that if ascending,\ntwice that if descending in a dive). The manoeuvrability class is B. Using the fly spell requires as much concentration as walking, so most spells can be cast while hovering or moving slowly (movement of [[3]]). Possible combat penalties while flying are known to the DM (found in the "Aerial Combat" section of Chapter 9 of the DMG). The exact duration of the spell is always unknown to the spellcaster, as the variable addition is determined secretly by the DM.}}{{materials=A wing feather of any bird.}}'},
						{name:'Gaseous-Form',type:'Power',ct:'1',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nGaseous Form\nas a level @{selected|casting-level} caster}}{{splevel=Power}}{{school=Alteration}}Specs=[Gaseous-Form,Power,1H,Alteration]{{components=S}}{{time=[[1]]}}{{range=[[0]]}}{{duration=4+1d4 turns}}{{aoe=The caster}}{{save=None}}{{healing=[Go Gaseous](!rounds --target caster|@{selected|token_id}|Gaseous-Form|\\amp#91;[4+1d4]\\amp#93;|-1|In gaseous form, drift at 3, dmg by magic fire/lightning only|half-haze)}}SpellData=[w:Gaseous Form,sp:1,cs:S]{{effects=This power grants the same effect as consuming a Potion of Gaseous Form.\nThe individual causes his body, as well as anything he\'s carrying or wearing, to become gaseous. The gaseous form is able to flow at a base speed of 3/round. (A gust of wind spell, or even normal strong air currents, will blow the gaseous form at air speed.)\nThe gaseous form is transparent and insubstantial. It wavers and shifts, and can\'t be harmed except by magical fire or lightning, which do normal damage. A whirlwind inflicts double damage upon a creature in gaseous form. When in such condition the individual is able to enter any space that is not airtight-even a small crack or hole that allows air to penetrate also allows entry by a creature in gaseous form. The effects last the entire duration (4+1d4turns).}}'},
						{name:'Gate-Mephit',type:'Power',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Mephit *gates* another Mephit}}{{splevel=Power}}{{school=Conjuration/Summoning}}Specs=[Gate-Mephit,Power,0H,Conjuration-Summoning]{{components=None}}{{time=[[0]]}}{{range=[[0]]}}{{duration=Instantaneous}}{{aoe=1 creature}}{{save=None}}SpellData=[w:Gate Mephit,sp:0,cs:None]{{effects=Mephits of different types can *gate* another Mephit to join them, once per hour. Different types of Mephit can *gate* specific other types, at varying rates of success:\n**Fire Mephit:**\n25% 1 Fire/Lava/Smoke/Steam\n**Ice Mephit:**\n25% 1 Ice/Mist\n**Lava Mephit:**\n25% 1-2 Fire/Lava/Smoke/Steam\n**Mist Mephit:**\n20% 1-2 Ice/Mist\n**Smoke Mephit:**\n20% 1-2 Fire/Lava/Smoke/Steam\n**Steam Mephit:**\n30% 1-2 Fire/Lava/Smoke/Steam}}'},
						{name:'Gorgon-Breath',type:'Power',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Gorgon uses\nParalysis Breath}}{{splevel=Breath Weapon}}{{school=Power}}Specs=[Gorgon-Breath,Power,0H,Innate Ability]{{components=S}}{{time=[[0]]}}{{range=[[0]]}}{{duration=Instantaneous}}{{aoe=[60ft cone, 5ft at mouth,20ft dia. at end](!rounds --aoe @{selected|token_id}|cone|feet|0|60|20|acid|true)}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 save vs. Petrification) vs. Petrification}}{{damage=[Petrify Them](!rounds --addtargetstatus \\amp#64;{target|Who is petrified?|token_id}|Petrified|99|0|Petrified by Gorgon Breath|sleepy)}}SpellData=[w:Gorgon Breath,sp:0,cs:S]{{effects=Four times per day gorgons can make a breath weapon attack (their preferred means of attack). Their breath shoots forth in a truncated cone, five feet wide at the base and 20 feet wide at its end, with a maximum range of 60 feet. Any creature caught in this cone must roll a saving throw vs. petrification. Those who fail are turned to stone immediately!}}'},
						{name:'Hairy-Spider-Poison',type:'Power',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Hairy Spider Poison}}{{splevel=Innate Ability}}{{school=Poison}}Specs=[Hairy-Spider-Poison,Power,0H,Innate Ability]{{components=S}}{{time=[[0]]}}{{range=Bite}}{{duration=1d4+1 rounds}}{{aoe=Bitten creature}}{{save=None}}{{damage=[Bite](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Who has been poisoned?|token_id}|Hairy-Spider-Poison|\\amp#91;[1d4+1]\\amp#93;|-1|Poisoned, Thac0 \\amp AC 1 worse, DX -3|death-zone)}}SpellData=[w:Hairy Spider Poison,sp:0,cs:S]{{effects=This creature can use Hairy Spider poison. Victims receive a +2 bonus to saving throws vs. the hairy spiders\' weak poison. If the saving throw fails, the victim\'s AC and attack rolls are penalized by 1, and Dexterity is penalized by -3 with respect to Dexterity checks. These effects begin one round after the bite and last for 1d4+1 rounds.}}'},
						{name:'Haste',type:'Power',ct:'3',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nHaste\nas a level @{selected|mu-casting-level} caster}}{{splevel=Power}}{{school=Alteration}}Specs=[Haste,Power,1H,Alteration]{{components=V, S}}{{time=[[3]]}}{{range=[[60]]yds}}{{duration=[[3+@{selected|mu-casting-level}]] rounds}}{{aoe=[[@{selected|mu-casting-level}]]creatures in a [40ft. cube](!rounds --aoe @{selected|token_id}|square|feet|180|40||magic)}}{{save=None}}{{healing=[Super-Speed](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Select who to hurry up|token_id}|Haste|[[3+@{selected|mu-casting-level}]]|-1|Hasted, double attacks, move etc|Strong)}}SpellData=[w:Haste,sp:3,cs:VS]{{effects=When this spell is cast, each affected creature functions at double its normal movement and attack rates. A hasted creature gains a -2 initiative bonus. Thus, a creature moving at 6 and attacking once per round would move at 12 and attack twice per round. Spellcasting and spell effects are not sped up. The number of creatures that can be affected is equal to the caster\'s experience level; those creatures closest to the centre of effect are affected first. All affected by haste must be in the designated area of effect. Note that this spell negates the effects of a slow spell. Additionally, this spell ages the recipient by one year, because of sped-up metabolic processes. This spell is not cumulative with itself or with other similar magic.}}{{materials=A shaving of liquorice root.}}'},
						{name:'Hide-in-Shadows',type:'Power',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|token_name} attempts to\nHide in Shadows\nas a level @{selected|level-class4} @{selected|class4}}}{{splevel=Skill}}{{school=Thieving}}Specs=[Hide-in-Shadows,Power,1H,Innate Ability]{{components=S}}{{time=[[0]]}}{{range=Self}}{{duration=Until attack}}{{aoe=The character}}{{save=None}}{{healing=[Hide in Shadows](!rounds --target caster|@{selected|token_id}|Hide-in-Shadow|99|0|Hiding in Shadows, DM determine success, chance @{selected|hst}pct.|ninja-mask)}}SpellData=[w:Hide in Shadows,sp:0,cs:S]{{effects=The character attempts to move into the shadows and move unseen. This may or may not be successful, and depends on their skill. The DM determines success or otherwise but does not tell the player until it becomes relevant to the character.}}'},
						{name:'Hold-Breath',type:'Power',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Hold Breath}}{{splevel=Innate Ability}}{{school=Innate Ability}}Specs=[Hold-Breath,Power,1H,Innate Ability]{{components=S}}{{time=[[0]]}}{{range=[[0]]}}{{duration=Special}}{{aoe=Self}}{{save=None}}{{healing=[Hold Breath](!rounds --target caster|@{selected|token_id}|Hold-Breath|\\amp#63;{How many minutes can breath be held?}|-1|Holding Breath|sleepy)}}SpellData=[w:Hold Breat,sp:0,cs:S]{{effects=This creature is able to hold its breath for an unusually long time. For normal rules on holding breath, see the PHB.}}'},
						{name:'Hypnotic-Pattern',type:'Power',ct:'2',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nHypnotic Pattern\nas a level @{selected|casting-level} caster}}{{splevel=Power}}{{school=Illusion/Phantasm}}Specs=[Hypnotic Pattern,Power,1H,Illusion-Phantasm]{{components=S}}{{time=[[2]]}}{{range=[[30]] yds}}{{duration=Special}}{{aoe=[30ft. cube](!rounds --aoe @{selected|token_id}|square|yards|30|10||magic)}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 saving throw vs Hypnotic Pattern spell)}}{{damage=[Hypnotise](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Select first victim|token_id}|Hypnotic-Pattern|99|0|Hypnotised|fishing-net)}}SpellData=[w:Hypnotic-Pattern,sp:2,cs:S]{{effects=When this spell is cast, the wizard creates a weaving, twisting pattern of subtle colours in the air. This pattern causes any creature looking at it to become fascinated and stand gazing at it as long as the spellcaster maintains the display, plus two rounds thereafter. The spell can captivate a maximum of 24 levels, or Hit Dice, of creatures (for example, 24 creatures with 1 Hit Die each, 12 with 2 Hit Dice, etc.). All creatures affected must be within the area of effect, and each is entitled to a saving throw vs. spell. A damage-inflicting attack on an affected creature frees it from the spell immediately.}}{{materials=The wizard need not utter a sound, but he must gesture appropriately while holding a\nglowing stick of incense or a crystal rod filled with phosphorescent material.}}'},
						{name:'Ice-Mephit-Volley',type:'Power',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Ice Mephit uses\nIce Shard Volley}}{{splevel=Breath Weapon}}{{school=Power}}Specs=[Ice-Mephit-Volley,Power,0H,Innate Ability]{{components=S}}{{time=[[0]]}}{{range=[[0]]}}{{duration=Instantaneous}}{{aoe=[15ft cone](!rounds --aoe @{selected|token_id}|cone|feet|0|15|5|cold|true), 1 creature only}}{{save=[Halves](!\\amp#13;\\amp#47;gmroll 1d20 save vs. Breath Weapon) vs. Breath Weapon}}{{damage=[1d6](!\\amp#13;\\amp#47;gmroll 1d6) save to half}}SpellData=[w:Ice Mephit Volley,sp:0,cs:S]{{effects=Ice mephits may breathe a volley of ice shards three times per day. This volley automatically hits a single victim within 15 feet of the mephit. Damage is 1d6, halved if the victim rolls a successful saving throw.}}'},
						{name:'Identify',type:'Power',ct:'100',charge:'uncharged',cost:'100',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nIdentify\nas a level @{selected|pr-casting-level} caster}}{{splevel=Power}}{{school=Divination}}Specs=[Identify,Power,1H,Divination]{{components=V, S, M}}{{time=[[1]] turn}}{{range=[[0]]}}{{duration=[[1*@{selected|pr-casting-level}]] rounds}}{{aoe=[[@{selected|pr-casting-level}]] items}}{{save=None}}SpellData=[w:Identify,sp:100,gp:100,cs:VSM]{{effects=Unlike PHB no need to prepare item. Can Identify a total of [[@{selected|pr-casting-level}]] items or attributes - 1 per round. Touch item to attempt to Identify it which might activate any curse (DMs discretion or item description). DM rolls d100. Chance of learning information is [[[{(10*@{selected|pr-casting-level}),90}kl1]]](!\\amp#13;\\amp#47;gmroll 1d100)%. Any roll of 96-00 indicates a false reading, and any failure ends the Identify spell even if Duration has not expired. Only 1 piece of information is revealed at a time - e.g. a 5th level Wizard can Identify one attribute of 5 different objects, or 5 attributes of one item, or any combination. The first attribute revealed is always any plusses, and the second and subsequent attributes will indicate more and more accurately what the item does. E.g. 1st "this is a +1 ring" / 2nd "You will discover what the plus is good for if you face a MU" / 3rd "It is a +1 Ring of Protection". Another example: 1st "This ring has plusses on an attribute" / 2nd "This is useful in crowds of people" / 3rd "You will appear charming" / 4th "This is a Ring of Human Influence". Unlike PHB there is no effect on Constitution.}}{{materials=a pearl (of at least 100 gp value) and an owl feather steeped in wine; the infusion must be drunk prior to spellcasting. If a luckstone is powdered and added to the infusion, the divination becomes much more potent: Exact bonuses or charges can be determined, and the functions of a multifunctional item can be learned from a single reading. At the DM\'s option, certain properties of an artifact or relic might also be learned.}}'},
						{name:'Identify-MU',type:'Power',ct:'100',charge:'uncharged',cost:'100',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nIdentify\nas a level @{selected|mu-casting-level} caster}}{{splevel=Power}}{{school=Divination}}Specs=[Identify-MU,Power,1H,Divination]{{components=V, S}}{{time=[[1]] turn}}{{range=[[0]]}}{{duration=[[1*@{selected|mu-casting-level}]] rounds}}{{aoe=[[@{selected|mu-casting-level}]] items}}{{save=None}}SpellData=[w:MU Identify,sp:100,gp:100,cs:VS]{{effects=Unlike PHB no need to prepare item. Can Identify a total of [[@{selected|mu-casting-level}]] items or attributes - 1 per round. Touch item to attempt to Identify it which might activate any curse (DMs discretion or item description). DM rolls d100. Chance of learning information is [[[{(10*@{selected|mu-casting-level}),90}kl1]]](!\\amp#13;\\amp#47;gmroll 1d100)%. Any roll of 96-00 indicates a false reading, and any failure ends the Identify spell even if Duration has not expired. Only 1 piece of information is revealed at a time - e.g. a 5th level Wizard can Identify one attribute of 5 different objects, or 5 attributes of one item, or any combination. The first attribute revealed is always any plusses, and the second and subsequent attributes will indicate more and more accurately what the item does. E.g. 1st "this is a +1 ring" / 2nd "You will discover what the plus is good for if you face a MU" / 3rd "It is a +1 Ring of Protection". Another example: 1st "This ring has plusses on an attribute" / 2nd "This is useful in crowds of people" / 3rd "You will appear charming" / 4th "This is a Ring of Human Influence". Unlike PHB there is no effect on Constitution.}}{{materials=a pearl (of at least 100 gp value) and an owl feather steeped in wine; the infusion must be drunk prior to spellcasting. If a luckstone is powdered and added to the infusion, the divination becomes much more potent: Exact bonuses or charges can be determined, and the functions of a multifunctional item can be learned from a single reading. At the DM\'s option, certain properties of an artefact or relic might also be learned.}}'},
						{name:'Identify-PR',type:'Power',ct:'100',charge:'uncharged',cost:'100',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nIdentify\nas a level @{selected|pr-casting-level} caster}}{{splevel=Power}}{{school=Divination}}Specs=[Identify-PR,Power,1H,Divination]{{components=V, S}}{{time=[[1]] turn}}{{range=[[0]]}}{{duration=[[1*@{selected|pr-casting-level}]] rounds}}{{aoe=[[@{selected|pr-casting-level}]] items}}{{save=None}}SpellData=[w:PR Identify,sp:100,gp:100,cs:VS]{{effects=Unlike PHB no need to prepare item. Can Identify a total of [[@{selected|pr-casting-level}]] items or attributes - 1 per round. Touch item to attempt to Identify it which might activate any curse (DMs discretion or item description). DM rolls d100. Chance of learning information is [[[{(10*@{selected|pr-casting-level}),90}kl1]]](!\\amp#13;\\amp#47;gmroll 1d100)%. Any roll of 96-00 indicates a false reading, and any failure ends the Identify spell even if Duration has not expired. Only 1 piece of information is revealed at a time - e.g. a 5th level Wizard can Identify one attribute of 5 different objects, or 5 attributes of one item, or any combination. The first attribute revealed is always any plusses, and the second and subsequent attributes will indicate more and more accurately what the item does. E.g. 1st "this is a +1 ring" / 2nd "You will discover what the plus is good for if you face a MU" / 3rd "It is a +1 Ring of Protection". Another example: 1st "This ring has plusses on an attribute" / 2nd "This is useful in crowds of people" / 3rd "You will appear charming" / 4th "This is a Ring of Human Influence". Unlike PHB there is no effect on Constitution.}}{{materials=a pearl (of at least 100 gp value) and an owl feather steeped in wine; the infusion must be drunk prior to spellcasting. If a luckstone is powdered and added to the infusion, the divination becomes much more potent: Exact bonuses or charges can be determined, and the functions of a multifunctional item can be learned from a single reading. At the DM\'s option, certain properties of an artifact or relic might also be learned.}}'},
						{name:'Indomitable',type:'Power',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Indomitable\n@{selected|token_name} can Save Again}}{{splevel=Innate Power}}{{school=Alteration}}Specs=[Indomitable,Power,1H,Alteration]{{components=S}}{{time=[[0]] and in parallel with other activity}}{{range=[[0]]}}{{duration=Instantanious}}{{aoe=The creature}}{{save=None)}}SpellData=[w:Indomitable,sp:0,cs:S]{{effects=This creature can choose to re-roll a failed saving throw due to his Indomitable nature}}'},
						{name:'Invisibility',type:'Power',ct:'2',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nInvisibility\nas a level @{selected|casting-level} caster}}{{splevel=Power}}{{school=Illusion/Phantasm}}Specs=[Invisibility,Power,1H,Illusion-Phantasm]{{components=V, S}}{{time=[[2]]}}{{range=Touch}}{{duration=Until attack or [[24]] hours}}{{aoe=Creature touched}}{{save=None}}{{healing=[Make them invisible](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Select Invisible One|token_id}|Invisibility|99|0|Invisible except slight haze, 4 bonus to AC \\amp saves, until attack|half-haze)}}SpellData=[w:Invisibility,sp:2,cs:VS]{{effects=Creature touched vanishes from sight, undetectable by normal vision or infravision. Not magically silenced. Allies cannot see the invisible creature or gear, unless can normally see invisible things or employ magic to do so. Items put down become visible; items picked up disappear if tucked into the clothing or pouches. Light never becomes invisible, although source of light can become so.\nRemains in effect until magically broken or dispelled, until wizard or recipient cancels it, until recipient attacks any creature, or until [[24]] hours have passed. Thus, invisible being can open doors, talk, eat, climb stairs, etc., but if he attacks, immediately becomes visible, although the invisibility enables him to attack first. Note that priest spells bless, chant, and prayer are not attacks for this purpose. All Intelligence [[13]] or more creatures with \\gt [[10]] Hit Dice or Levels can roll saving throws vs. spell; success means they noticed the invisible object.}}{{materials=An eyelash and a bit of gum arabic, the former encased in the latter.}}'},
						{name:'Jims-Fear',type:'ItemPower',ct:'4',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nFear\nas a level @{selected|Casting-Level} caster}}{{splevel=Power}}{{school=Illusion/Phantasm}}Specs=[Jims-Fear,ItemPower,1H,Illusion-Phantasm]{{components=V, S}}{{time=[[4]]}}{{range=[[0]]}}{{duration=1d4 rounds}}{{aoe=[60ft. cone, 30ft. at end, 5ft. at base](!rounds --aoe @{selected|token_id}|cone|yards|0|20|10|magic)}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 saving throw)}}{{damage=[Frighten them](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Select first target|token_id}|Fear|[[@{selected|casting-level}]]|-1|Frightened, flee at fastest rate from @{selected|Casting-name}|screaming)}}SpellData=[w:Jims Fear,sp:4,cs:VS]{{effects=Sends forth invisible cone of terror. Creatures within area of effect to turn away from the caster and flee. Affected creatures are likely to drop whatever they are holding; base chance is [[60]]% at 1st level/1HD, each level/HD above reduces probability by [[5]]%. Creatures affected flee at fastest rate for Duration. Undead and successful saves vs. spell are not affected.}}{{materials=Either the heart of a hen or a white feather.}}'},
						{name:'Jims-Find-Traps',type:'ItemPower',ct:'5',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nFind Traps\nas a level @{selected|Casting-Level} caster}}{{splevel=Power}}{{school=Divination}}{{sphere=Divination}}Specs=[Jims-Find-Traps,ItemPower,1H,Divination]{{components=V,S}}{{time=[[5]]}}{{range=[[30]] yards}}{{duration=[[3]] turns}}{{aoe=[10ft path to range](!rounds --aoe @{selected|token_id}|bolt|feet|0|90|10|magic) in direction caster is facing}}{{save=None}}SpellData=[w:Jims Find Traps,sp:5,cs:VS]{{effects=All traps, normal or magical become visible to the caster. "Traps" includes alarms. Traps meet 3 criteria: can inflict a sudden or unexpected result; spellcaster would view result as undesirable or harmful; and result specifically intended as such by creator. Caster leans general nature of trap but not exact effect or how to disarm it, but can get sense of what might trigger it. Note - an Ambush is not a trap.}}'},
						{name:'Jims-Levitation',type:'ItemPower',ct:'2',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Jim casts\nLevitate\nas a level 1 caster}}{{splevel=Power}}{{school=Alteration}}Specs=[Jims-Levitation,ItemPower,1H,Alteration]{{components=V, S}}{{time=[[2]]}}{{range=Wielder of Jim}}{{duration=[[1]] turn}}{{aoe=[[1]] creature or object}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 saving throw)}}{{healing=[Levitate](!rounds --target caster|@{selected|token_id}|Levitate|10|-1|Levitating vertical not horizontal, minuses on missile fire|fluffy-wing)}}SpellData=[w:Jims Levitation,sp:2,cs:VS]{{effects=Subject to a maximum weight limit of [[100*@{selected|casting-level}]] pounds. Wielder can move vertically up or down at a movement rate of [[2]] per round. This spell does not empower horizontal movement, but the recipient could push along the face of a cliff, for example, to move laterally. The spellcaster can cancel the spell as desired. If the subject of the spell is unwilling, or the object is in the possession of a creature, a saving throw vs. spell is allowed to determine if the levitate spell affects it.\nOnce cast, the spell requires no concentration, except when changing height. A levitating creature attempting to use a missile weapon finds himself increasingly unstable; the first attack has an attack roll penalty of [[0-1]], the second [[0-2]], the third [[0-3]], etc., up to a maximum of [[0-5]]. A full round spent stabilising allows the creature to begin again at [[0-1]]. Lack of leverage makes it impossible to cock a medium or heavy crossbow)}}{{materials=Jim the Sunblade}}'},
						{name:'Jims-Locate-Object',type:'ItemPower',ct:'1',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Jim the Sunblade casts\nLocate Object\nas a level 6 caster}}{{splevel=Power}}{{school=Divination}}{{sphere=Divination}}Specs=[Jims-Locate-Object,ItemPower,1H,Divination]{{components=V,S}}{{time=[[1]] turn}}{{range=[120 yards](!rounds --aoe @{selected|token_id}|circle|yards|0|240||magic|true)}}{{duration=[[8]] hours}}{{aoe=[[1]] object}}{{save=None}}SpellData=[w:Jims Locate Object,sp:1,cs:VS]{{effects=This spell helps locate a known or familiar object. The priest casts the spell, slowly turns, and will sense when he is facing in the direction of the object to be located, provided the object is within range--for example, 90 yards for 3rd-level priests, 100 yards for 4th, 110 yards for 5th, etc. The spell locates such objects as apparel, jewellery, furniture, tools, weapons, or even a ladder or stairway. Once the caster has fixed in his mind the items sought, the spell locates only that item. Attempting to find a specific item, such as a kingdom\'s crown, requires an accurate mental image. If the image is not close enough to the actual item, the spell does not work; in short, desired but unique objects cannot be located by this spell unless they are known by the caster. The spell is blocked by lead.\nThe reversal, obscure object, hides an object from location by spell, crystal ball, or similar means for eight hours. The caster must touch the object being concealed.\nNeither application of the spell affects living creatures.}}{{materials=Jim the Sunblade}}'},
						{name:'Jims-Sunlight',type:'ItemPower',ct:'3',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|token_name} swings\nJim the Sun Blade\nto create Sunlight}}{{splevel=Power}}{{school=Alteration}}Specs=[Jims-Sunlight,ItemPower,1H,Alteration]{{components=S}}{{time=[[3]]}}{{range=[[0]]}}{{duration=While swung}}{{aoe=[Up to 120ft diameter](!rounds --aoe @{selected|token_id}|circle|feet|0|||light|true)}}{{save=None}}{{healing=[Light-em-up!](!rounds --target caster|@{selected|token_id}|SunBlade-Daylight|1|1|Spreading daylight +5ft radius/round to 60ft|aura)}}SpellData=[w:Jims Sunlight,sp:3,cs:VS]{{effects=Once a day, upon command, the blade can be swung vigorously above the head, and it will shed a bright yellow radiance that is like full daylight. The radiance begins shining in a 10-foot radius around the sword-wielder, spreading outward at 5 feet per round for 10 rounds thereafter, creating a globe of light with a 60-foot radius. When the swinging stops, the radiance fades to a dim glow that persists for another turn before disappearing entirely. }}'},
						{name:'Keraptis-Soul-Trap',type:'',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nKeraptis\' Soul Trap\nas a level @{selected|casting-level} caster}}{{splevel=Level 9 Wizard}}{{school=Necromancy}}{{components=V,S,M}}{{time=2+2d8 days}}{{range=Touch}}{{duration=Permanent}}{{aoe=Creatures/Objects touched}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20-4 save vs. Soul Trap death magic)}}{{effects=The ritual that created *Happy the Dummy* from the souls of a LG Magic User and a CE Witchwood Alter - the details of this ritual will help to indicate what has to be done to remove the curse of the dummy, and to release the souls contained.\nThe ritual is similar to a combination of the 6th level Wizard spell *Enchant an Item*, and the 8th level Wizard spells *Maze*,*Trap the Soul* and *Permanency* all used together}}'},
						{name:'Leadership',type:'Power',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Leadership}}{{splevel=Power}}{{school=Alteration}}Specs=[Leadership,Power,0H,Alteration]{{components=V}}{{time=[[0]]}}{{range=[30 foot](!rounds --aoe @{selected|token_id}|circle|feet|0|60||light|true)}}{{duration=[[1]] turn}}{{aoe=[[1]] creature or object}}{{save=None}}{{healing=Shout a [Warning](!rounds --target caster|@{selected|token_id}|Leadership|10|-1|Leading, can command ally to add d4 to to-hit or save rolls|fist)}}SpellData=[w:Leadership,sp:0,cs:V]{{desc=For the duration, @{selected|token_name} can shout warnings to any nonhostile creature that it can see within [[30]]ft. of it that makes an attack roll or a saving throw. The creature can add a d4 to its roll provided it can hear and understand the knight. A creature can benefit from only one Leadership die at a time. This effect ends if the knight is incapacitated.}}'},
						{name:'Light',type:'Power',ct:'1',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nLight\nas a level @{selected|mu-casting-level} caster}}{{splevel=Power}}{{school=Alteration}}Specs=[Light,Power,0H,Alteration]{{components=V}}{{time=[[1]]}}{{range=[[60]] yards}}{{duration=[[@{selected|mu-casting-level}]] turns}}{{aoe=[20ft radius globe](!rounds --aoe @{selected|token_id}|circle|feet|360|20||light)}}{{save=[Special](!\\amp#13;\\amp#47;gmroll 1d20 saving throw)}}{{damage=[Cast on eyes](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Select one to enlighten|token_id}|Light|[[10*@{selected|mu-casting-level}]]|-1|Blinded by Light in eyes|bleeding-eye)}}SpellData=[w:Light,sp:1,cs:V]{{effects=This spell creates a luminous glow, equal to torchlight, within a fixed radius of the spell\'s centre. The spell is centred on a point selected by the caster (must have a line of sight to the target). Immobile unless cast on mobile object. If cast on a creature, successful resistance negates the spell, while a successful saving throw indicates that the spell is centred immediately behind the creature. Light taken into an area of magical darkness does not function, but if cast directly against magical darkness negates it (only temporarily if the darkness effect is continual). May be used to blind a creature if targeted on the eyes. Blinded creatures suffer a [[0-4]] penalty to AC, attack rolls, and Saves for the spells duration. The caster can end the spell at any time by uttering a single word.}}{{materials=A firefly or a piece of phosphorescent moss}}'},
						{name:'Light-MU',type:'Power',ct:'1',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nLight\nas a level @{selected|mu-casting-level} caster}}{{splevel=Power}}{{school=Alteration}}Specs=[Light-MU,Power,0H,Alteration]{{components=V}}{{time=[[1]]}}{{range=[[60]] yards}}{{duration=[[@{selected|mu-casting-level}]] turns}}{{aoe=[Cast on Area 20 ft radius](!rounds --aoe @{selected|token_id}|circle|feet|120|40||light)}}{{save=[Special](!\\amp#13;\\amp#47;gmroll 1d20 saving throw)}}{{damage=[Cast on eyes](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Select one to illuminate|token_id}|Light|[[10*@{selected|mu-casting-level}]]|-1|Blinded by Light in eyes|bleeding-eye)}}SpellData=[w:MU Light,sp:1,cs:V]{{effects=This spell creates a luminous glow, equal to torchlight, within a fixed radius of the spell\'s centre. The spell is centred on a point selected by the caster (must have a line of sight to the target). Immobile unless cast on mobile object. If cast on a creature, successful resistance negates the spell, while a successful saving throw indicates that the spell is centred immediately behind the creature. Light taken into an area of magical darkness does not function, but if cast directly against magical darkness negates it (only temporarily if the darkness effect is continual). May be used to blind a creature if targeted on the eyes. Blinded creatures suffer a [[0-4]] penalty to AC, attack rolls, and Saves for the spells duration. The caster can end the spell at any time by uttering a single word.}}{{materials=A firefly or a piece of phosphorescent moss}}'},
						{name:'Light-PR',type:'Power',ct:'4',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nLight\nas a level @{selected|pr-Casting-Level} caster}}{{splevel=Power}}{{school=Alteration}}{{sphere=Sun}}Specs=[Light-PR,Power,1H,Alteration]{{components=V,S}}{{time=[[4]]}}{{range=[[120]] yards}}{{duration=1 hour + [[@{selected|pr-Casting-Level}]] turns}}{{aoe=[20ft radius globe](!rounds --aoe @{selected|token_id}|circle|feet|360|20||light)}}{{save=[Special](!\\amp#13;\\amp#47;gmroll 1d20 saving throw)}}{{damage=[Blind them](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Select one to illuminate|token_id}|Light|[[60+(10*@{selected|pr-Casting-Level})]]|-1|Blinded by Light in eyes|bleeding-eye)}}SpellData=[w:PR Light,sp:4,cs:VS]{{effects=Equal to torch light. Immobile unless cast on a movable object or creature. If on a creature, magic resistance and save vs. spell applies. Resistance negates, and save means light is centred immediately behind creature. Light on eyes blinds creature giving [[0-4]] on attack and worsening AC by [[4]]. Caster can extinguish at any time. Lights are not cumulative.}}\n!setattr --charid @{selected|character_id} --silent --Spell-cast|Light --Spell-direction|-1 --Spell-duration|[[60+(10*@{selected|pr-Casting-Level})]] --Spell-msg|Blinded by Light in eyes, 4 penalty on attk+AC --Spell-marker|bleeding-eye'},
						{name:'Locate-Object',type:'Power',ct:'1',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nLocate Object\nas a level @{selected|pr-Casting-Level} caster}}{{splevel=Power}}{{school=Divination}}{{sphere=Divination}}Specs=[Locate-Object,Power,1H,Divination]{{components=V,S}}{{time=[[1]] turn}}{{range=[[[60+(10*@{selected|Casting-Level})]] yards](!rounds --aoe @{selected|token_id}|circle|yards|0|[[60+(10*@{selected|Casting-Level})]]||magic|true)}}{{duration=[[8]] hours}}{{aoe=[[1]] object}}{{save=None}}SpellData=[w:Locate Object,sp:1,cs:VS]{{effects=This spell helps locate a known or familiar object. The priest casts the spell, slowly turns, and will sense when he is facing in the direction of the object to be located, provided the object is within range--for example, 90 yards for 3rd-level priests, 100 yards for 4th, 110 yards for 5th, etc. The spell locates such objects as apparel, jewellery, furniture, tools, weapons, or even a ladder or stairway. Once the caster has fixed in his mind the items sought, the spell locates only that item. Attempting to find a specific item, such as a kingdom\'s crown, requires an accurate mental image. If the image is not close enough to the actual item, the spell does not work; in short, desired but unique objects cannot be located by this spell unless they are known by the caster. The spell is blocked by lead.\nThe reversal, obscure object, hides an object from location by spell, crystal ball, or similar means for eight hours. The caster must touch the object being concealed.\nNeither application of the spell affects living creatures.}}{{materials=The casting requires the use of a piece of lodestone.}}'},
						{name:'Move-Silently',type:'Power',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|token_name} attempts to\nMove Silently\nas a level @{selected|level-class4} @{selected|class4}}}{{splevel=Skill}}{{school=Thieving}}Specs=[Move-Silently,Power,0H,Innate Ability]{{components=S}}{{time=[[0]]}}{{range=Self}}{{duration=Until attack}}{{aoe=The character}}{{save=None}}{{healing=[Move Silently](!rounds --target caster|@{selected|token_id}|Move-Silently|99|0|Moving Silently, DM determines success, chance @{selected|mst}pct.|ninja-mask)}}SpellData=[w:Move Silently,sp:0,cs:S]{{effects=The character attempts to move totally silently so as not to attract attention. This may or may not be successful, and depends on their skill. The DM determines success or otherwise but does not tell the player until it becomes relevant to the character.}}'},
						{name:'Mummy-fear',type:'Power',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Fear of the Mummy}}{{splevel=Innate Ability}}{{school=Necromancy}}Specs=[Mummy-Fear,Power,1H,Innate Ability]{{components=S}}{{time=[[0]]}}{{range=Line of Sight}}{{duration=1d4 rounds}}{{aoe=Line of Sight}}{{save=[Negates](!\\amp#13;\\amp#47;r 1d4 rounds paralysed with fear)}}{{damage=[Paralyse with Fear](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Select first to haunt|token_id}|Mummy-fear|\\amp#91;[1d4]\\amp#93;|-1|Petrified! Oh Mummy!|screaming)}}SpellData=[w:Mummy Fear,sp:0,cs:S]{{effects=The mere sight of a mummy causes such terror in any creature that a saving throw versus spell must be made or the victim becomes paralyzed with fright for 1 to 4 rounds. Numbers will bolster courage; for each six creatures present, the saving throw is improved by +1. Humans save against mummies at an additional +2.}}'},
						{name:'NWP-Healing',type:'Power',ct:'60',charge:'uncharged',cost:'0',body:'!setattr --silent --name @{selected|character_name} --power-exhausted|I\'m afraid you have tended to the maximum 6 creatures today. You deserve a rest!\n/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|token_name} performs\nNWP Healing}}{{splevel=Non-Weapon Proficiency}}{{school=Healing}}Specs=[NWP-Healing,Power,1H,Necromancy]{{components=V,S}}{{time=[[60]]}}{{range=Touch}}{{duration=Permanent}}{{aoe=Up to [[6]] creatures}}{{save=None}}{{healing=Select type below. Only 1 healing attempt per character per day}}SpellData=[w:NWP Healing,sp:60,cs:VS]{{effects=[1st Aid](~Do-1st-aid):Tending within 1 round of wounding (needs **proficiency check**) restores 1d3 HP (limited to loss in previous round).\nFor daily care no proficiency check is needed. Up to 6 patients, once/day:\n[Day care 1HP](~Do-1HP-care):Recover 1 HP/day during nonstrenuous activity.\n[Overnight Care 2HP](~Do-2HP-care):Complete rest overnight can recover 2 HP overnight.\n*[NWP Healing + Herbalism 3HP](~Do-3HP-care)*: gives 3 HP overnight.\n**Poison:** Aid if poison entered through a wound. Tending within 1 round of poisoning and continuing for 5 rounds, victim gains +2 bonus to saves (delay throw until last round of tending). No proficiency check required **if sacrificing any other action** by either character. If interrupted, poisoned character must roll normal saving throw for the poison: more healing doesn\'t help. Both *healing + herbalism* required to treat poisons swallowed or touched.\n**Disease:** Can attempt to diagnose and treat diseases. For normal diseases, successful **proficiency check** automatically reduces disease to mildest form and shortest duration. If also have *herbalism* gain an additional +[[2]] bonus to check. Can also attempt to diagnose magical diseases: successful **proficiency check** diagnoses the cause. As disease is magical, can be treated only by magical means.}}'},
						{name:'Nightmare',type:'Power',ct:'100',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nNightmare\nas a level @{selected|casting-level} caster}}{{splevel=Power}}{{school=Illusion/Phantasm (reversable)}}Specs=[Nightmare,Power,1H,Illusion-Phantasm]{{components=V,S}}{{time=[[1]] Turn}}{{range=Touch}}{{duration=Special}}{{aoe=[[1]]creature}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 save vs. Nightmare spell)}}SpellData=[w:Nightmare,sp:100,cs:VS]{{effects=Enables the caster, or a messenger touched by the caster, to disturb the sleep of others by sending a nightmare. At the beginning of the spell, the caster must name the recipient or identify him by some title that leaves no doubt as to his identity.\nAs the caster completes the spell, the person sending the spell falls into a deep trancelike sleep, and instantaneously projects his mind to the recipient. The sender then enters the recipient\'s dream and turns it into a nightmare unless the recipient is magically protected. If the recipient is awake, the message sender can choose to remain in the trancelike sleep. If the sender is disturbed during this time, the spell is immediately cancelled and the sender comes out of the trance. The whereabouts and current activities of the recipient cannot be learned through this spell.\nThe recipient is allowed a saving throw vs. spell to avoid the effect. The nightmare prevents restful sleep and causes 1d10 points of damage. The nightmare leaves the recipient fatigued and unable to regain spells for the next day. A dispel evil spell cast upon the recipient stuns the caster of the nightmare for one turn per level of the cleric countering this evil sending.\nThe sender is unaware of his own surroundings or the activities around him while he is in his trance. He is totally defenceless, both physically and mentally (i.e., he always fails any saving throw) while in the trance.\nOnce the recipient\'s dreams are entered, the sender can create a nightmare seeming to be of any length, which the recipient remembers perfectly upon waking. The communication is one-way; the recipient cannot ask questions or offer information, nor can the sender gain any information by observing the dreams of the recipient. Once the nightmare is delivered, the sender\'s mind returns instantly to his body. The duration of the spell is the time required for the sender to enter the recipient\'s dream and impose the nightmare.\nThe reverse of this spell, *dream*, enables the caster to send a message in the form of a dream to the recipient. }}'},
						{name:'Oni-Cone-of-Cold',type:'Power',ct:'5',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|token_name} casts\nCone of Cold\nas an Oni}}{{splevel=Power}}{{school=Evocation}}Specs=[Oni-Cone-of-Cold,Power,1H,Evocation]{{components=V, S}}{{time=[[5]]}}{{range=[[0]]}}{{duration=Instantanious}}{{aoe=[60ft cone, 20ft dia. base](!rounds --aoe @{selected|token_id}|cone|feet|0|60|20|cold|true)}}{{save=[Half](!\\amp#13;\\amp#47;gmroll 1d20 save vs. Cone of Cold spell)}}{{damage=[8d8](!\\amp#13;\\amp#47;gmroll 8d8 HP damage, save to half)}}SpellData=[w:Oni Cone of Cold,sp:5,cs:VS]{{effects=When this spell is cast, it causes a cone-shaped area of extreme cold, originating at the wizard\'s hand and extending outward in a cone 60 feet long and 20 foot in diameter at its base. It drains heat and causes 8d8 points of damage}}{{material=A crystal or glass cone of very small size.}}'},
						{name:'Paladin-Detect-Evil',type:'Power',ct:'10',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|token_name} attempts to\nDetect Evil Intent\nas a level @{selected|level-class1} @{selected|class1}}}{{splevel=Power}}{{school=Divination}}Specs=[Paladin-Detect-Evil,Power,1H,Divination]{{components=S}}{{time=[[10]]}}{{range=0}}{{duration=[[1]] round}}{{aoe=[60ft radius](!rounds --aoe @{selected|token_id}|circle|feet|0|120||magic|true)}}{{save=None}}{{reference=PHB p27}}SpellData=[w:Paladin Detect Evil,sp:10,cs:S]{{effects=A paladin can detect the presence of evil intent up to 60 feet away by concentrating on locating evil in a particular direction. He can do this as often as desired, but each attempt takes one round. This ability detects evil monsters and characters.}}'},
						{name:'Paladin-lay-on-hands',type:'Power',ct:'10',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|token_name} attempts to\nLay on Hands\nas a level @{selected|level-class1} @{selected|class1}}}{{splevel=Power}}{{school=Healing}}Specs=[Paladin-lay-on-Hands,Power,1H,Necromantic]{{components=S}}{{time=[[10]]}}{{range=Touch}}{{duration=Permanent}}{{aoe=[[1]] creature}}{{save=None}}{{reference=PHB p27}}SpellData=[w:Paladin Lay on Hands,sp:10,cs:S]{{effects=A paladin can heal by laying on hands. The paladin restores [[2*@{selected|level-class1}]] hit points. They can heal themselves or someone else, but only once per day.}}'},
						{name:'Paralyse',type:'Power',ct:'2',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nParalyse\nas a level @{selected|casting-level} caster}}{{splevel=Monster ability}}{{school=Alteration}}Specs=[Paralyse,Power,1H,Alteration]{{components=S}}{{time=[[2]]}}{{range=Touch}}{{duration=1d4 rounds}}{{aoe=varies}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 saving throw)}}{{damage=[Paralyse](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Select future statues|token_id}|Paralyse|\\amp#91;[\\amp#63;{Duration?|1d4}]\\amp#93;|-1|Paralysed|fishing-net) }}SpellData=[w:Paralyse,sp:2,cs:S]{{effects=A paralysation effect is often caused by monsters attacking the party, and is similar in effect to a \'Hold\' spell}}'},
						{name:'Permanency',type:'Power',ct:'20',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nPermanency\nas a level @{selected|casting-level} caster}}{{splevel=Power}}{{school=Alteration}}Specs=[Permanency,Power,1H,Alteration]{{components=V,S}}{{time=[[2]] Rounds}}{{range=Special}}{{duration=Permanent}}{{aoe=Special}}{{save=None}}SpellData=[w:Permanency,sp:20,cs:VS]{{effects=This spell affects the duration of certain other spells, making the duration permanent. The personal spells upon which a permanency is known to be effective are as follows: *comprehend languages, protection from evil, detect evil, protection from normal missiles, detect invisibility, read magic, detect magic, tongues, infravision, unseen servant, protection from cantrips*\nThe wizard casts the desired spell and then follows it with the *permanency* spell. Each *permanency* spell lowers the wizard\'s Constitution by [[1]] point. The wizard cannot cast these spells upon other creatures. This application of permanency can be dispelled only by a wizard of greater level than the spellcaster was when he cast the spell.\nIn addition to personal use, the permanency spell can be used to make the following object/creature or area-effect spells permanent: *enlarge, prismatic sphere, fear, stinking cloud, gust of wind, wall of fire, invisibility, wall of force, magic mouth, web*\nAdditionally, the following spells can be cast upon objects or areas only and rendered permanent:\n*alarm, wall of fire, audible glamer, distance distortion, dancing lights, teleport, solid fog*\nThese applications to other spells allow it to be cast simultaneously with any of the latter when no living creature is the target, but the entire spell complex then can be dispelled normally, and thus negated.\nThe *permanency* spell is also used in the fabrication of magical items (see the 6th-level spell enchant an item). At the DM\'s option, permanency might become unstable or fail after a long period of at least 1,000 years. Unstable effects might operate intermittently or fail altogether.\nThe DM may allow other selected spells to be made permanent. Researching this possible application of a spell costs as much time and money as independently researching the selected spell. If the DM has already determined that the application is not possible, the research automatically fails. Note that the wizard never learns what is possible except by the success or failure of his research.}}'},
						{name:'Polymorph-Self',type:'Power',ct:'4',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nPolymorph Self\nas a level @{selected|mu-casting-level} caster}}{{splevel=Power}}{{school=Alteration}}Specs=[Polymorph-Self,Power,0H,Alteration]{{components=V}}{{time=[[4]]}}{{range=[[0]]}}{{duration=[[2*@{selected|mu-casting-level}]] turns}}{{aoe=The caster}}{{save=None}}{{healing=[Polymorph](!rounds --target caster|@{selected|token_id}|Polymorph-Self|[[2*@{selected|mu-casting-level}]]|-1|Polymorphed, normal attk+dmg+spells, can change shape as desired|strong)}}SpellData=[w:Polymorph Self,sp:4,cs:V]{{effects=Assume the form of any creature (not noncorporeal) from small as a wren to as large as a hippopotamus. Gains physical mode of locomotion and breathing. Does not give attack, magic, special movement, etc. Equipment melds into the new form. At DMs discretion, may allow protective devices, such as a ring of protection, to continue operating, but this is unusual. Retains all mental abilities, including spell use, if form allows V and S components and the M components are available - i.e. able to speak words, wave hands, have pockets. Can change form as often as desired for duration of spell, each change needs a round. Retains own HP, attack rolls, and saving throws. Can end the spell at any time; voluntarily returning to own form and ending the spell, regains [1d12](!\\amp#13;\\amp#47;r 1d12) hit points. Will return to his own form when slain or dispelled, but no hit points are restored in these cases.}}'},
						{name:'Prayer',type:'Power',ct:'6',charge:'uncharged',cost:'1',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nPrayer\nas a level @{selected|Casting-Level} caster}}{{splevel=Power}}{{school=Conjuration/Summoning}}{{sphere=Combat}}Specs=[Prayer,Power,1H,Conjuration-Summoning]{{components=V,S,M}}{{time=[[6]]}}{{range=[[0]]}}{{duration=[[@{selected|Casting-Level}]] rounds}}{{aoe=[60ft radius](!rounds --aoe @{selected|token_id}|circle|feet|0|120||light|true)}}{{save=None}}SpellData=[w:Prayer,sp:6,gp:1,cs:VSM,sph:Combat]{{healing=Select *[Friends]* button below and target all your friends, then select the *[Enemies]* button below and target your enemies}}{{effects=Affects all in the area of the spell. [Friends](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Select first target|token_id}|Prayer-ally|[[@{selected|Casting-Level}]]|-1|Prayer, [[+1]] on attack, dmg + saves|angel-outfit) get +[[1]] benefit on all attack, damage and saves. All [Enemies](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Select first target|token_id}|Prayer-foe|[[@{selected|Casting-Level}]]|-1|Prayer foe, [[-1]] on attack, dmg + saves|radioactive) in area at time of cast get [[0-1]] penalty. Once cast priest can do other things. If another priest of same religious persuasion (not just alignment) is *Chanting* at the same time, get +[[2]] and [[0-2]]}}{{materials=Silver holy symbol, prayer beads, or similar device.}}'},
						{name:'Preserve-Life',type:'Power',ct:'5',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nPreserve Life\nas a level @{selected|PR-Casting-Level} caster}}{{splevel=Power}}{{school=Healing,Necromantic}}{{sphere=Necromantic}}Specs=[Preserve-Life,Power,1H,Necromancy]{{components=V,S}}{{time=[[5]]}}{{range=[[30]] ft radius}}{{duration=Permanent}}{{aoe=Creatures in [30ft radius](!rounds --aoe @{selected|token_id}|circle|feet|30|60||light)}}{{save=None}}{{healing=distribute [[5*@{selected|PR-Casting-Level}]] HP curing over selected creatures}}SpellData=[w:Preserve Life,sp:5,cs:VS]{{effects=At Second level a Priest of Life (a Healer) gets a special ability **Preserve Life**. A Healer can spend five times his level in healing points over specific characters within 30ft, however this cannot raise a character to more than half their normal hit points. This can be done a number of times a day equal to their level.}}'},
						{name:'Prestidigitation',type:'Power',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Prestidigitation}}{{splevel=Cantrip}}{{school=Alteration}}Specs=[Prestidigitation,Power,1H,Alteration]{{components=V,S}}{{time=[[0]]}}{{range=[[10]] feet}}{{duration=Up to [[1]] hour}}{{aoe=Special}}{{save=None}}SpellData=[w:Prestidigitation,sp:0,cs:VS]{{effects=This spell is a minor magical trick that novice spellcasters use for practice. You create one of the following magical effects within range: You create an instantaneous, harmless sensory effect, such as a shower of sparks, a puff of wind, faint musical notes, or an odd odour. You instantaneously light or snuff out a candle, a torch, or a small campfire. You instantaneously clean or soil an object no larger than 1 cubic foot. You chill, warm, or flavour up to 1 cubic foot of non-living material for 1 hour. You make a colour, a small mark, or a symbol appear on an object or a surface for 1 hour. You create a nonmagical trinket or an illusory image that can fit in your hand and that lasts until the end of your next turn. If you cast this spell multiple times, you can have up to three of its non-instantaneous effects active at a time, and you can dismiss such an effect as an action.}}'},
						{name:'Pyrotechnics',type:'Power',ct:'2',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nPyrotechnics\nas a level @{selected|casting-level} caster}}{{splevel=Power}}{{school=Alteration}}Specs=[Pyrotechnics,Power,1H,Alteration]{{components=V, S}}{{time=[[2]]}}{{range=[120 yards](!rounds --aoe @{selected|token_id}|circle|yards|0|240||lightning|true)}}{{duration=Special}}{{aoe=[[1]] fire source}}{{save=[Special](!\\amp#13;\\amp#47;gmroll 1d20 saving throw vs. Pyrotechnics spell)}}SpellData=[w:Pyrotechnics,sp:2,gp:0,cs:VS]{{effects=A pyrotechnics spell draws on an existing fire source to produce one of two effects, at the option of the caster. \nFirst, it can produce a flashing and fiery burst of glowing, colored aerial [fireworks](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Select a target|token_id}|Pyrotechnics-fireworks|\\amp#63;{Duration if fireworks?|\\amp#91;[1d4+1]\\amp#93;}|-1|\'Temporarily blinded by fireworks\'|bleeding-eye) that lasts one round. This effect temporarily blinds those creatures in, under, or within [[120]] feet of the area and that have an unobstructed line of sight to the burst. Creatures viewing this are blinded for 1d4+1 rounds unless they successfully save vs. spell. The fireworks fill a volume 10 times greater than that of the original fire source.\nThis spell can also cause a thick, writhing stream of [smoke](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Select a target|token_id}|Pyrotechnics-smoke|@{selected|casting-level}|-1|\'Cannot see more than 2ft in smoke\'|edge-crack) to arise from the source and form a choking cloud that lasts for one round per experience level of the caster. This covers a roughly spherical volume from the ground or floor up (or conforming to the shape of a confined area) that totally obscures vision beyond 2 feet. The smoke fills a volume 100 times that of the fire source. All within the cloud must roll successful saving throws vs. spell or suffer [[0-2]] penalties to all combat rolls and Armor Class.}}{{materials=One fire source within a 20-foot cube, which is immediately extinguished. An extremely large fire used as a source might be only partially extinguished. Magical fires are not extinguished, although a fire-based creature (such as a fire elemental) used as a source suffers 1 point of damage per caster level.}}'},
						{name:'Quasit-Fear',type:'Power',ct:'4',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} uses their\nFear power}}{{splevel=Quasit power}}{{school=Illusion/Phantasm}}Specs=[Quasit-Fear,Power,0H,Illusion-Phantasm]{{components=None}}{{time=[[4]]}}{{range=[[0]]}}{{duration=[[3]] rounds}}{{aoe=[30ft. radius](!rounds --aoe @{selected|token_id}|circle|feet|0|60||acid|true)}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 saving throw vs. Fear spell)}}{{damage=[Frighten them](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Select first target|token_id}|Fear|3|-1|Frightened, flee at fastest rate from @{selected|Casting-name}|screaming)}}SpellData=[w:Quasit Fear,sp:4,cs:None]{{effects=Sends forth invisible circle of terror. Creatures within area of effect turn away from the caster and flee. Affected creatures are likely to drop whatever they are holding; base chance is [[60]]% at 1st level/1HD, each level/HD above reduces probability by [[5]]%. Creatures affected flee at fastest rate for 3 rounds. Undead and successful saves vs. spell are not affected.}}'},
						{name:'Rage',type:'Power',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|token_name} starts\nRaging\nas a level @{selected|level-class1} Barbarian}}{{splevel=Power}}{{school=Barbarian}}Specs=[Rage,Power,0H,Innate Ability]{{components=S}}{{time=[[0]]}}{{range=Self}}{{duration=[[10]] Rounds Rage, then [[10]] Rounds recovery}}{{aoe=Self}}{{save=None}}{{healing=[Rage!](!rounds --target caster|@{selected|token_id}|Rage|10|-1|RAGE +2 bonus on att+dam+AC|overdrive)}}SpellData=[w:Rage,sp:0,cs:S]{{effects=This Barbarian may "Rage" [[{ceil(@{selected|level-class1}/4),3}kl1]] times a day for [[10]] melee rounds. When raging his AC, Thac0 and Damage all improve by [[2]]. When raging he gains [[15]] temporary hit points. After the 10 melee rounds he loses those. If that would take him below zero, he falls unconscious. He does not attack team-mates when raging but does not accept surrender from enemies. After raging if still conscious he is winded and his THAC0 AC and Damage decrease by [[0-2]] for [[10]] rounds. While Raging he is immune to *Sleep, Charm, Fear, Confusion, Level Drain, Maze, Stun, Imprisonment, Feeblemind* and *Hold* spells.\nIf desired, to end Rage early after melee use "View Powers" to view "Rage", then use\n[End Current Rage](!rounds --removetargetstatus @{selected|token_id}|Rage) or\n[End Exhaustion](!rounds --removetargetstatus @{selected|token_id}|Exhausted)}}'},
						{name:'Reduce',type:'Power',ct:'1',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}}{{title=@{selected|casting-name} casts\nReduce\nas a level @{selected|mu-casting-level} caster}}{{splevel=Power}}{{school=Alteration}}Specs=[Reduce,Power,1H,Alteration]{{components=V, S}}{{time=[[1]]}}{{range=[[[5*@{selected|casting-level}]] yards](!rounds --aoe @{selected|token_id}|circle|yards|0|[[10*@{selected|casting-level}]]||magic|true)}}{{duration=[[5*@{selected|mu-casting-level}]] Rounds}}{{aoe=1 creature or object no larger than [[10*@{selected|mu-casting-level}]]cu.ft}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 saving throw vs. spell Reduce)}}{{damage=[Reduce it](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Select a victim|token_id}|Reduce|[[5*@{selected|mu-casting-level}]]|-1|Reduced, Damage \\amp#214; [[1+(@{selected|mu-casting-level}/10)]]|edge-crack)}}SpellData=[w:Reduce,sp:1,cs:VS]{{effects=Negates an *Enlarge* spell or makes creatures or objects smaller. The creature or object loses 10% of its original size for every level of the caster, to a minimum of 10% of the original size. Thereafter, the size shrinks by 1-foot increments to less than 1 foot, by 1-inch increments to 1 inch, and by 1/10-inch increments to a minimum of 1/10 of an inch--the recipient cannot dwindle away to nothingness.\nFor example, a 16-foot-tall giant reduced by a 15th-level wizard (15 steps) would be reduced to 1.6 feet (in nine steps), then to 6/10 of a foot or 7.2 inches (in one step), and finally to 2.2 inches (in the last five steps). A shrinking object may damage weaker materials affixed to it, but an object will shrink only as long as the object itself is not damaged. Unwilling creatures are allowed a saving throw vs. spell}}{{materials=A pinch of powdered iron}}'},
						{name:'Regenerate',type:'Power',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|token_name} Regenerates HP}}{{splevel=Innate Power}}{{school=Necromancy}}Specs=[Regenerate,Power,0H,Necromancy]{{components=S}}{{time=[[0]] and in parallel with other activity}}{{range=[[0]]}}{{duration=Instantanious}}{{aoe=The creature}}{{save=None)}}{{healing=[Regenerates @{selected|conregen}HP](!modbattr --fb-header Regenerating --fb-content @{selected|token_name} regenerates _TCUR0_ HP and now has _CUR0_ HP --charid @{selected|character_id} --hp|@{selected|conregen}) or [Regen every round](!rounds --target caster|@{selected|token_id}|Regeneration|99|0|Regenerating at @{selected|conregen}HP per round|strong)}}SpellData=[w:Regenerate,sp:0,cs:S]{{effects=This creature can regenerate damage up to their maximum HP at the rate of [[@{selected|conregen}]] per use of the Power}}'},
						{name:'Rite-of-Arcs-Dilemma',type:'',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nThe Rite of Arc\'s Dilemma\nas a level @{selected|casting-level} caster}}{{splevel=Level 7 Wizard}}{{school=Alteration}}{{components=V, S}}{{time=[[1]] day per level transferred}}{{range=[[0]]}}{{duration=Permanent}}{{aoe=Caster}}{{save=None}}{{effects=A ritual that will allow reassignment of experience between classes. The subject of the casting must undertake the ritual for 1 hour each day for as many days as levels to be gained. Each day, the subject must roll percentile dice to see if the rite has been performed correctly, the chance of it working being 70% + the subject\'s Intelligence score (max 90%). If the check fails, no more performances of the rite at this level will work, and as per the specification of the Tome the avatar of Math Mathonwy may appear and attempt to reclaim the Tome (20% + 5% chance per level successfully being reassigned, max 90% chance - see AD\\ampD Legends \\amp Lore - Celtic Mythos for details of the avatar). Another attempt can be made as the subject gains levels of experience in the normal way.\nThe subject loses 1 level per day from the original class and gains 1 level per day in the new class up to the number transferred - this does not include any necessary training: the subject will need to locate and organise their own training in the necessary skills. \nThe DM may rule that action may need to be taken to pay penance for the loss of the class whose levels have been reduced: a Priest may need to *atone* to their (ex-) god or priesthood, a Rogue pay reparations to their guild for the lost talent and income, etc.}}'},
						{name:'RoE-Clairaudience',type:'ItemPower',ct:'3',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|mu-casting-name} casts\nClairaudience\nas a level @{selected|mu-casting-level} caster}}{{splevel=Power}}{{school=Divination}}Specs=[RoE-Clairaudience,ItemPower,0H,Divination]{{components=V}}{{time=[[3]]}}{{range=Unlimited}}{{duration=[[@{selected|mu-casting-level}]] rounds}}{{aoe=[[60]]ft radius of selected spot}}{{save=None}}{{healing=[Super-Hearing](!rounds --target caster|@{selected|token_id}|Clairaudience|[[@{selected|mu-casting-level}]]|-1|Normal hearing but at a distance|Strong)}}SpellData=[w:RoE-Clairaudiece,sp:3,cs:VSM]{{effects=The clairaudience spell enables the wizard to concentrate upon some locale and hear in his mind any noise within a 60-foot radius of that point. Distance is not a factor, but the locale must be known--a place familiar to the spellcaster or an obvious one (such as behind a door, around a corner, in a copse of trees, etc.). Only sounds that are normally detectable by the wizard can be heard by use of this spell. Lead sheeting or magical protections prevent the operation of the spell, and the wizard has some indication that the spell is so blocked. The spell creates an invisible sensor, similar to that created by a crystal ball spell, that can be dispelled. The spell functions only on the wizard\'s current plane of existence}}{{materials=A small horn of at least 100 gp value.}}'},
						{name:'RoSS-Ball-Lightning',type:'ItemPower',ct:'5',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Ring of Spell Storing casts\nBall Lightning}}{{school=Evocation}}Specs=[RoSS-Ball-Lightning,ItemPower,1H,Evocation]{{splevel=Power}}{{components= S}}{{time=[[5]]}}{{range=[[120]]ft.}}{{duration=[[4]]rounds}}{{aoe=[Create a Ball](!rounds --aoe @{selected|token_id}|circle|feet|120|3||lightning)}}{{save=[Half damage](!\\amp#13;\\amp#47;gmroll 1d20 saving throw vs. spell)}}{{damage=Select number of balls below}}{{damagetype=Lightning}}SpellData=[w:RoSS-Ball-Lightning,sp:5,cs:SM]{{effects=The *ball lightning* function releases 1d4 balls of lightning, at the wearer\'s option. These glowing globes resemble dancing lights, and the ring wearer controls them as he would control dancing lights. These spheres have a 120-foot range and a four round duration. They can be moved at 120 feet per round. Each sphere is about 3 feet in diameter, and any creature it touches or approaches within 5 feet dissipates its charge (a successful save vs. spell halves damage—the contact was across an air gap). The charge damage values are:\n[4 lightning balls](!\\amp#13;\\amp#47;r 2d4 HP damage from ball lightning).........2d4 HP each\n[3 lightning balls](!\\amp#13;\\amp#47;r 2d6 HP damage from ball lightning).........2d6 HP each\n[2 lightning balls](!\\amp#13;\\amp#47;r 5d4 HP damage from ball lightning).........5d4 HP each\n[1 lightning ball](!\\amp#13;\\amp#47;r 4d12 HP damage from ball lightning)...........4d12 HP\nRelease can be one at a time or all at once, during the course of one round or as needed throughout the night.}}'},
						{name:'RoSS-Dancing-Lights',type:'ItemPower',ct:'1',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nDancing Lights\nas a level @{selected|mu-casting-level} caster}}{{splevel=Power}}{{school=Alteration}}Specs=[RoSS-Dancing-Lights,ItemPower,1H,Alteration]{{components=V, S}}{{time=[[1]]}}{{range=[[[40+(10*@{selected|casting-level})]] yards](!rounds --aoe @{selected|token_id}|circle|yards|0|[[40+(10*@{selected|casting-level})]]||light|true)}}{{duration=[[2*@{selected|mu-casting-level}]] rounds}}{{aoe=Special}}{{save=None}}{{healing=[Turn on the Lights](!rounds --target caster|@{selected|token_id}|Dancing-Lights|[[2*@{selected|mu-casting-level}]]|-1|Pretty Dancing Lights!|aura)}}SpellData=[w:RoSS-Dancing-Lights,sp:1,cs:VS]{{effects=When a dancing lights spell is cast, the wizard creates, at his option, from one to four lights that resemble either torches or lanterns (and cast that amount of light), glowing spheres of light (such as evidenced by will-o-wisps), or one faintly glowing, vaguely manlike shape, somewhat similar to that of a creature from the Elemental Plane of Fire. The dancing lights move as the spellcaster desires, forward or back, straight or turning corners, without concentration upon such movement by the wizard. The spell cannot be used to cause blindness (see the 1st-level light spell), and it winks out if the range or duration is exceeded}}{{materials=Either a bit of phosphorus or wychwood, or a glowworm.}}'},
						{name:'RoSS-Faerie-Fire',type:'ItemPower',ct:'4',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Ring of Shooting Stars casts\nFaerie Fire\nas a level 12 caster}}{{splevel=Power}}{{school=Alteration}}{{sphere=Weather}}Specs=[RoSS-Faerie-Fire,ItemPower,0H,Alteration]{{components=V}}{{time=[[4]]}}{{range=[[80]] yards}}{{duration=[[48]] rounds}}{{aoe=[[120]] sq.ft. within [40ft radius](!rounds --aoe @{selected|token_id}|circle|feet|240|80||light)}}{{save=None}}SpellData=[w:RoSS Faerie Fire,sp:4,cs:V]{{effects=Outline creatures in 40ft radius of each other with a total of [[120]]sq.ft of faerie fire - the square footage relates to the surface area of the targets. In [Darkness](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Select creature to enlighten|token_id}|Faerie-Fire-darkness|48|-1|Outlined in bright Faerie Fire, 2 penalty to AC|aura) +[[2]] on attacks against outlined creatures or +[[1]] in [Twilight](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Select creature to enlighten|token_id}|Faerie-Fire-twilight|48|-1|Outlined in dim Faerie Fire, 1 penalty to AC|aura) or brighter. Can outline invisible creatures but not non-corporeal or ethereal or gaseous creatures and no harm done to creatures by the faerie fire itself including undead. As a guide use height x half-height of creature in feet to get square footage. E.g. a 6ft person with a 36 inch waist has approx 18sq.ft surface. A [[2]]nd level priest will outline [[2]] human sized creatures.}}{{materials=The ring}}'},
						{name:'RoSS-Light',type:'ItemPower',ct:'1',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Ring of Shooting Stars casts\nLight\nas a level 12 caster}}{{splevel=Power}}{{school=Alteration}}Specs=[RoSS-Light,ItemPower,0H,Alteration]{{components=V}}{{time=[[1]]}}{{range=[[60]] yards}}{{duration=[[12]] turns}}{{aoe=[20ft radius globe](!rounds --aoe @{selected|token_id}|circle|feet|360|20||light)}}{{save=[Special](!\\amp#13;\\amp#47;gmroll 1d20 saving throw)}}{{damage=[Cast on eyes](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Select one to enlighten|token_id}|Light|120|-1|Blinded by the Light|bleeding-eye)}}SpellData=[w:RoSS Light,sp:1,cs:V]{{effects=This spell creates a luminous glow, equal to torchlight, within a fixed radius of the spell\'s centre. The spell is centred on a point selected by the caster (must have a line of sight to the target). Immobile unless cast on mobile object. If cast on a creature, successful resistance negates the spell, while a successful saving throw indicates that the spell is centred immediately behind the creature. Light taken into an area of magical darkness does not function, but if cast directly against magical darkness negates it (only temporarily if the darkness effect is continual). May be used to blind a creature if targeted on the eyes. Blinded creatures suffer a [[0-4]] penalty to AC, attack rolls, and Saves for the spells duration. The caster can end the spell at any time by uttering a single word.}}{{materials=A firefly or a piece of phosphorescent moss}}'},
						{name:'RoSS-Shooting-Stars',type:'ItemPower',ct:'5',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|token_name} casts\nShooting Stars\nusing a Ring of Shooting Stars}}{{school=Evocation}}{{splevel=Power}}Specs=[RoSS-Shooting-Stars,ItemPower,1H,Evocation]{{components=S}}{{time=[[5]]}}{{range=[70 feet](!rounds --aoe @{selected|token_id}|circle|feet|0|140||light|true)}}{{duration=Special}}{{aoe=Special}}{{save=[Special](!\\amp#13;\\amp#47;gmroll 1d20 saving throw vs. spell)}}{{damage=Creature Hit takes 12+24 HP in total (no save).\nCreatures within 5ft radius take 24HP (save to half)}}{{damagetype=Fire}}SpellData=[w:RoSS Shooting Stars,sp:5,cs:S]{{effects=The *shooting stars* are glowing missiles with fiery trails, much like a meteor swarm. Three shooting stars can be released from the ring each week, simultaneously or one at a time. They impact for 12 points of damage (save vs. spell to avoid) and burst (as a fireball) in a 10-foot diameter sphere for 24 points of damage (save to half).\nAny creature struck (failed avoiding save) takes full damage from impact plus full damage from the shooting star burst. Creatures within the burst radius must roll a saving throw vs. spell to take only one-half damage (i.e., 12 points of damage, otherwise they, too, receive the full 24 points of damage). Range is 70 feet, at the end of which the burst will occur, unless an object or creature is struck before that. The shooting stars follow a straight line path. A creature in the path must roll a saving throw vs. spell or be hit by the missile. **Saving throws suffer a [[0-3]] penalty** within 20 feet of the ring wearer, [[0-1]] from 21 feet to 40 feet, normal beyond 40 feet.}}'},
						{name:'RoSS-Spark-Shower',type:'ItemPower',ct:'5',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|token_name} casts\nShooting Stars\nfrom a Ring of Shooting Stars}}{{school=Evocation}}{{splevel=Power}}Specs=[RoSS-Spark-Shower,ItemPower,1H,Evocation]{{components=S}}{{time=[[5]]}}{{range=[[0]]}}{{duration=Instantaneous}}{{aoe=[Cone 20ft long, 10ft at end](!rounds --aoe @{selected|token_id}|cone|feet|0|20|10|light|true)}}{{save=None)}}{{damage=Metal worn/held [4d4](!\\amp#13;\\amp#47;r 4d4 HP from sparks), otherwise [2d8](!\\amp#13;\\amp#47;r 2d8 HP from sparks) HP from sparks}}{{damagetype=Electrical}}SpellData=[w:RoSS Spark Shower,sp:5,cs:S]{{effects=The *spark shower* is a flying cloud of sizzling purple sparks, which fan out from the ring for a distance of 20 feet to a breadth of 10 feet. Creatures within this area take 2d8 points of damage each if no metal armor is worn and/or no metal weapon is held. Characters wearing metal armor or carrying a metal weapon receive 4d4 points of damage.}}'},
						{name:'Scare',type:'Power',ct:'2',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nScare\nas a level @{selected|mu-casting-level} caster}}{{splevel=Power}}{{school=Evocation}}Specs=[Scare,Power,1H,Evocation]{{components=V,S}}{{time=[[2]]}}{{range=[[30+(10*@{selected|mu-casting-level})]]yds}}{{duration=1d4+@{selected|mu-casting-level} rounds}}{{aoe=[15 ft radius](!rounds --aoe @{selected|token_id}|circle|yards|[[30+(10*@{selected|casting-level})]]|10||dark)}}{{save=[Special](!\\amp#13;\\amp#47;gmroll 1d20 saving throw vs Scare spell)}}{{damage=[Scare Them](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Select first scaredy-cat|token_id}|Scare|\\amp#91;[@{selected|mu-casting-level}+1d4]\\amp#93;|-1|Scared, -2 reaction, if cornered -1 on attk+dmg+save|screaming)}}SpellData=[w:Scare,sp:2,cs:VS]{{effects=This spell causes creatures with fewer than [[6]] Hit Dice or levels of experience to fall into fits of trembling and shaking. The frightened creatures have a -2 reaction adjustment and may drop items held if encumbered. If cornered, they fight, but with -1 penalties to attack rolls, damage rolls, and saving throws. Only elves, half-elves, and priests are allowed saving throws against this spell. Note that this spell has no effect on the undead (skeletons, zombies, ghouls, and so on), or on upper or lower planar creatures of any sort.}}{{materials=A bit of bone from an undead skeleton, zombie, ghoul, ghast, or mummy.}}'},
						{name:'Sleep',type:'Power',ct:'1',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nSleep\nas a level @{selected|mu-casting-level} caster}}{{splevel=Power}}{{school=Enchantment/Charm}}Specs=[Sleep,Power,1H,Enchantment-Charm]{{range=90 ft}}{{components=V, S}}{{duration=[[5*({10,@{selected|mu-casting-level}}kl1)]] Rounds}}{{time=1}}{{aoe=[30ft Cube](!rounds --aoe @{selected|token_id}|square|feet|90|30||dark)}}{{save=None}}{{damage=[Sleep them](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Select first sleepy-head|token_id}|Sleep|[[5*({10,@{selected|mu-casting-level}}kl1)]]|-1|Snoring away, shake to awaken|sleepy)}}SpellData=[w:Sleep,sp:1,cs:VS]{{effects=Up to [2d4](!\\amp#13;\\amp#47;r 2d4) Hit Dice of creatures with 4 HD or less are put to sleep beginning with the lowest HD creatures in the Area of Effect.}}{{materials=a pinch of fine sand, rose petals, or a live cricket.}}'},
						{name:'Snake-Poison-Type-3',type:'Power',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Snake Poison (type 3)}}{{splevel=Innate Ability}}{{school=Poison}}Specs=[Snake-Poison-Type-3,Power,0H,Innate Ability]{{components=S}}{{time=[[0]]}}{{range=Bite}}{{duration=2d6 rounds}}{{aoe=Bitten creature}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 save vs poison)}}{{damage=[Bite](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Who has been poisoned?|token_id}|Snake-Poison-3|\\amp#91;[2d6]\\amp#93;|-1|Poisoned, will damage by 2d4hp if not neutralised|death-zone)}}SpellData=[w:Snake Poison Type 3,sp:0,cs:S]{{effects=All poisonous snakes deliver toxins automatically through their bite. Typical varieties of poisonous snakes include the asp, cobra, copperhead, coral snake, death adder, krait, mamba, puff adder, rattlesnake, sidewinder, and water moccasin.\nThis particular type of poison has a delayed action, causing 2d4 damage after 2d6 rounds if not neutralised.\nSome cobras and sidewinders hunt by night and can track warmblooded prey by body heat as well as by sight. They have the equivalent of 30-foot infravision. Black mambas are the fastest known snakes and can reach 30 across open ground.}}'},
						{name:'Spectator-Cause-Serious-Wounds',type:'',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Sectator Guardian casts\nCause Serious Wounds}}{{splevel=Spectator Guardian}}{{school=Necromancy}}{{sphere=Healing (Reversed)}}{{components=None}}{{time=[[7]]}}{{range=[[60]] yards}}{{duration=Instantaneous}}{{aoe=1 Creature}}{{save=[Half Damage](!\\amp#13;\\amp#47;gmroll 1d20 Save vs. Spell to take half damage)}}{{damage=[2d8+3](!\\amp#13;\\amp#47;gmroll 2d8+3 HP damage)}}{{effects=Spectator Guardian Beholder-kin uses its 2nd minor eye to cast a special Cause Serious Wounds, which inflicts 2d8+3 points of damage to a single being at a range of 60 yards; a saving throw vs. spell is allowed for half damage}}'},
						{name:'Spectator-Create-F+W',type:'',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Sectator Guardian casts\nCreate Food and Water}}{{splevel=Spectator Guardian}}{{school=Alteration}}{{sphere=Creation}}{{components=None}}{{time=[[1]]round}}{{range=[[10]] yards}}{{duration=Special}}{{aoe=Meal for 6 with water to drink}}{{save=None}}{{effects=Causes food and water to appear. The food thus created is highly nourishing if rather bland, enough for 6 people. The food decays and becomes inedible within 24 hours, although it can be restored for another 24 hours by casting a purify food and water spell upon it. The water created by this spell is the same as that created by the 1st-level priest spell create water.}}'},
						{name:'Spectator-Paralysation-Ray',type:'',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Sectator Guardian casts\nParalyzation Ray}}{{splevel=Spectator Guardian}}{{school=Enchantment/Charm}}{{components=None}}{{time=[[0]] innate attack}}{{range=[[90]] feet}}{{duration=[8d4](!\\amp#13;\\amp#47;gmroll 8d4 rounds of paralysation) rounds}}{{aoe=1 Creature}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 save vs. paralysation)}}{{effects=Spectator Guardian Beholder-kin uses its 3rd minor eye to cast a special Paralysation Ray against 1 creature, causing paralysis for 8d4 rounds. The Spectator will attempt to then telepathically reason with the creature(s) so paralysed to retain it\'s treasure}}'},
						{name:'Spectator-Spell-Reflection',type:'',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Sectator Guardian casts\nSpell Reflection}}{{splevel=Spectator Guardian}}{{school=Abjuration}}{{components=None}}{{time=[[0]] innate power}}{{range=[[0]]}}{{duration=Continuous}}{{aoe=1 Spell per Round}}{{save=[Reflects](!\\amp#13;\\amp#47;gmroll 1d20 save vs. spell success reflects spell)}}{{effects=Spectator Guardian Beholder-kin uses its **undamaged** main eye to *Reflect* [[1]] spell per round. \nThis powerful abjuration causes spells cast against the wizard to rebound on the original caster. This includes spells cast from scrolls and innate spell-like abilities, but specifically excludes the following: area effects that are not centered directly upon the protected wizard, spell effects delivered by touch, and spell effects from devices such as wands, staves, etc. Thus, a light spell cast to blind the protected wizard could be turned back upon and possibly blind the caster, while the same spell would be unaffected if cast to light an area within which the protected wizard is standing.\nIf the protected wizard and a spellcasting attacker both have spell turning effects operating, a resonating field is created that has the following effects:\n\n**D100 Roll Effect**\n**01-70** Spell drains away without effect\n**71-80** Spell affects both equally at full damage\n**81-97** Both turning effects are rendered nonfunctional for [1d4](!\\amp#13;\\amp#47;gmroll 1d4) turns\n**98-00** Both casters go through a rift into the Positive Energy plane}}'},
						{name:'Spectator-Telepathy',type:'',ct:'0',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Sectator Guardian casts\nTelepathy}}{{splevel=Spectator Guardian}}{{school=Divination}}{{components=None}}{{time=[[0]] innate power}}{{range=[[120]] feet}}{{duration=Continuous}}{{aoe=1 Creature}}{{save=[Negates Suggestion](!\\amp#13;\\amp#47;gmroll 1d20 save vs. spell)}}{{effects=Spectator Guardian Beholder-kin uses its 4th minor eye to establish a Telepathic link with 1 creature. It will almost always attempt to immediately use [*Suggestion*](~MU-Spells-DB|Suggestion) to implant *"leave in peace"* if the target does not save vs. spell. If the save is made, the Spectator will attempt to telepathically reason with the creature to retain the treasure it is protecting.}}'},
						{name:'Spectral-hand',type:'Power',ct:'2',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nSpectral Hand\nas a level @{selected|casting-level} caster}}{{splevel=Power}}{{school=Necromancy}}Specs=[Spectral-Hand,Power,1H,Necromancy]{{components=V,S}}{{time=[[2]]}}{{range=[[[30+(5*@{selected|Casting-level})]] yards](!rounds --aoe @{selected|token_id}}|circle|yards|0|[[60+(10*@{selected|Casting-level})]]||magic|true)}}{{duration=[[2*@{selected|Casting-level}]] rounds}}{{aoe=1 opponent}}{{save=None}}{{damage=[Create a spooky hand](!rounds --target caster|@{selected|token_id}|Spectral-Hand|[[2*@{selected|casting-level}]]|-1|Their touch extends [[30+(5*@{selected|Casting-level})]] yds, +2 to hit, hand AC-2|grab)}}SpellData=[w:Spectral Hand,sp:2,cs:VS]{{effects=This spell causes a ghostly, glowing hand, shaped from the caster\'s life force, to materialize within the spell range and move as the caster desires. Any touch attack spell of 4th level or less that is subsequently cast by the wizard can be delivered by the spectral hand. The spell gives the caster a +2 bonus to his attack roll. The caster cannot perform any other actions when attacking with the hand; the hand returns to the caster and hovers if the caster takes other actions. The hand lasts the full spell duration unless dismissed by the caster, and it is possible to use more than one touch attack with it. The hand receives flank and rear attack bonuses if the caster is in a position to do so. The hand is vulnerable to magical attack but has an Armor Class of -2. Any damage to the hand ends the spell and inflicts 1d4 points of damage to the caster.}}'},
						{name:'Spider-Climb',type:'Power',ct:'1',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nSpider Climb\nas a level @{selected|mu-casting-level} caster}}{{splevel=Power}}{{school=Alteration}}Specs=[Spider-Climb,Power,1H,Alteration]{{components=V, S}}{{time=[[1]]}}{{range=Touch}}{{duration=[[3+(3*@{selected|mu-casting-level})]] rounds}}{{aoe=Creature touched}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 saving throw)}}{{healing=[Grant Spidy-powers!](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Select Spider-person|token_id}|Spider-climb|[[3+(3*@{selected|mu-casting-level})]]|-1|Has Spidy-Powers to climb walls \\amp ceilings, move 6|strong)}}SpellData=[w:Spider Climb,sp:1,cs:VS]{{effects=Enables recipient to climb and travel on vertical surfaces like a giant spider, and upside down from ceilings. Unwilling victims must be touched, then allowed a saving throw vs. spell. Recipient must have bare hands and feet in order to climb, at a movement of 6 (3 if at all encumbered). During the spell, recipient cannot handle objects that weigh less than a dagger (one pound), for such objects stick to his hands and feet. A Wizard will find it virtually impossible to cast spells if under a spider climb spell. Sufficient force can pull recipient free; the DM can assign a saving throw based on circumstances, the strength of the force, and so on. E.g. a creature with Strength 12 might pull subject free if subject fails a saving throw vs. paralysation (a moderately difficult saving throw). The caster can end the spell effect with a word}}{{materials=A drop of bitumen and a live spider, both of which must be eaten by the spell recipient.}}'},
						{name:'Spiritual-Hammer',type:'Power',ct:'5',charge:'uncharged',cost:'10',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|Casting-name} casts\nSpiritual Hammer\nas a level @{selected|Casting-Level} caster}}{{splevel=Power}}{{school=Invocation}}{{sphere=Combat}}Specs=[Spiritual-Hammer,Power,1H,Evocation]{{components=V,S,M}}{{time=[[5]]}}{{range=[[10*@{selected|Casting-Level}]] yards}}{{duration=[[3+@{selected|Casting-Level}]] rounds}}{{aoe=Special}}{{save=None}}{{healing=[Cast it](!rounds --target caster|@{selected|token_id}|Spiritual-Hammer|[[3+@{selected|Casting-Level}]]|-1|Magical weapon in direction facing requires concentration|archery-target)}}{{damage=SM [1d4+1](!\\amp#13;\\amp#47;r 1d4+1) or L [1d4](!\\amp#13;\\amp#47;r 1d4) +[[{{(ceil(@{selected|Casting-Level}/6)),3}kl1}]]}}{{damagetype=Bludgeoning}}SpellData=[w:Spiritual-Hammer,sp:5,gp:10,cs:VS,sph:Combat]{{effects=Base Thac0 same as caster [[22-(ceil(@{selected|Casting-Level}/3)*2)]] without strength bonus plus magical plus of +[[{{(ceil(@{selected|Casting-Level}/6)),3}kl1}]]. Damage is plus magical bonus but no others. Hits are in the direction caster is facing, allowing rear attacks. Dispel Magic on caster or hammer can dispel. Stopping concentrating dispels. Magic Resistance checked in 1st round and spell lost if made or full effect if not.}}{{materials=A normal war hammer hurled towards opponent, which disappears as spell is cast.}}'},
						{name:'Steal-Enchantment',type:'Power',ct:'600',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nSteal Enchantment\nas a level @{selected|casting-level} caster}}{{splevel=Power}}{{school=Enchantment}}Specs=[Steal Enchantment,Power,1H,Enchantment]{{components=V,S}}{{time=[[1]] Hour}}{{range=Touch}}{{duration=Permanent}}{{aoe=[[1]] Item}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 save vs. Steal Enchantment spell)}}SpellData=[w:Steal-Enchantment,sp:600,cs:VSM]{{effects=This spell "steals" the enchantment from a magical item and places it within another, non-magical item (the material component). Both objects must be touched by the wizard during casting. The two items must be of the same category (blunt weapon, edged weapon, ring, amulet, shield, armor, wand, etc.).\nThe enchantment can be transferred only to a nonmagical item. Only the energy of one item can be transferred; it is not possible to combine two magical items into one item. The new item has all the properties of the original magical item (including the same number of charges, if any).\nAt the culmination of the spell, the original magical object is allowed an item saving throw vs. disintegration with all modifiers it is allowed as a magical item. Exceptionally powerful objects (such as artifacts) may be considered to automatically succeed the saving throw at the DM\'s discretion.\nIf the saving throw is successful, the magical object resists the effect and the spell ends in failure. If the roll is failed, the magical item loses all of its powers, which are transferred to the previously nonmagical object.\nEven if the magical item fails its saving throw, the spell\'s success is not guaranteed. There is a chance that the enchantment might be lost. The base chance of this occurring is 100%, modified by -5% per level of the caster. Thus, a 20th-level wizard has no chance of losing the magic. If the enchantment is lost, both items become nonmagical.}}{{materials=The nonmagical item which is to receive the enchantment. It must be of equal or greater value than the object to be drained.}}'},
						{name:'Steam-Mephit-Rain',type:'Power',ct:'5',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Steam Mephit causes\nScalding Rain}}{{splevel=Power}}{{school=Power}}Specs=[Steam-Mephit-Rain,Power,0H,Evocation]{{components=S}}{{time=[[5]]}}{{range=[[0]]}}{{duration=Instantaneous}}{{aoe=[20ft.sq](!rounds --aoe @{selected|token_id}|square|feet|0|20||acid)}}{{save=None}}{{damage=[2d6](!\\amp#13;\\amp#47;gmroll 2d6)}}SpellData=[w:Steam Mephit Rain,sp:5,cs:S]{{effects=Once per day a steam mephit may create a rainstorm of boiling water over a 20-by 20-foot area. This storm inflicts 2d6 points of damage to all victims caught in the area of effect, with no saving throw allowed.}}'},
						{name:'Summon-Swarm',type:'Power',ct:'2',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nSummon Swarm\nas a level @{selected|mu-casting-level} caster}}{{splevel=Power}}{{school=Conjuration/Summoning}}Specs=[Summon-Swarm,Power,1H,Conjuration-Summoning]{{components=V, S}}{{time=[[2]]}}{{range=[[60]]yds}}{{duration=until [[2*@{selected|mu-casting-level}]]HP damage done to swarm}}{{aoe=[10ft cube](!rounds --aoe @{selected|token_id}|square|feet|180|10||acid)}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 saving throw)}}{{damage=[[1]] defending, [1d4+4](!\\amp#13;\\amp#47;r 1d4+4) otherwise}}SpellData=[w:Summon Swarm,sp:2,cs:VS]{{effects=Those in area take damage as above. Can\'t cast spells in swarm. Swarm only harmed by area effect or fire. To determine type of swarm roll [1d100](!\\amp#13;\\amp#47;r 1d100). 01-40 Rats / 41-70 Bats / 71-80 Spiders / 81-90 Centipedes and Beatles / 91-00 flying insects. *Protection from Evil* spell will keep swarm away and some area effects such as *Gust of Wind* or *Stinking Cloud* will disperse it as appropriate. The caster must remain stationary and concentrate or the swarm disperses and the swarm is immobile.}}{{materials=A square of red cloth}}'},
						{name:'Target-power',type:'',ct:'0',charge:'uncharged',cost:'0',body:'/w gm @{selected|token_name} targeted @{target|target1|token_name} with the power @{selected|spelltomem}\n!tj --addtargetstatus @{target|target1|token_id}|@{selected|Spell-cast}|@{selected|Spell-duration}|@{selected|Spell-direction}|@{selected|Spell-msg}|@{selected|Spell-marker}'},
						{name:'Target-power-area',type:'',ct:'0',charge:'uncharged',cost:'0',body:'/w gm @{selected|token_name} targeted @{target|target1|token_name} with the power @{selected|spelltomem}\n!tj --addtargetstatus @{target|target1|token_id}|@{selected|Spell-cast}|@{selected|Spell-duration}|@{selected|Spell-direction}|@{selected|Spell-msg}|@{selected|Spell-marker}\n/w "@{selected|character_name}" [Select another?](~Powers|Target-power-area)'},
						{name:'Target-user',type:'',ct:'0',charge:'uncharged',cost:'0',body:'/w gm @{selected|token_name} used the power @{selected|spelltomem} on themselves\n!tj --addtargetstatus @{selected|token_id}|@{selected|Spell-cast}|@{selected|Spell-duration}|@{selected|Spell-direction}|@{selected|Spell-msg}|@{selected|Spell-marker}'},
						{name:'Tongues',type:'Power',ct:'3',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nTongues\nas a level @{selected|mu-casting-level} caster}}{{splevel=Power}}{{school=Alteration}}Specs=[Tongues,Power,0H,Alteration]{{components=V}}{{time=[[3]]}}{{range=[[0]]}}{{duration=[[@{selected|mu-casting-level}]] rounds}}{{aoe=[30ft. radius](!rounds --aoe @{selected|token_id}|circle|feet|0|60||light)}}{{save=None}}{{healing=[Universal Translator](!rounds --target caster|@{selected|token_id}|Tongues-Translate|[[@{selected|mu-casting-level}]]|-1|Speaks your language|Strong)}}{{damage=[Speak in Tongues](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Speak Gobbledegook!|token_id}|Reverse-Tongues|[[@{selected|mu-casting-level}]]|-1|Do not understand - reverse Tongues|Edge-crack)}}SpellData=[w:Tongues,sp:3,cs:V]{{effects=This spell enables the wizard to speak and understand additional languages, whether they are racial tongues or regional dialects. This does not enable the caster to speak with animals. The spell enables the caster to be understood by all creatures of that type within hearing distance, usually 60 feet. This spell does not predispose the subject toward the caster in any way. The wizard can speak one additional tongue for every three levels of experience.\nThe reverse of the spell cancels the effect of the tongues spell or confuses verbal communication of any sort within the area of effect.}}{{materials=A small clay model of a ziggurat, which shatters when the spell is pronounced.}}'},
						{name:'Turn-undead',type:'Power',ct:'10',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|token_name} attempts to\nTurn Undead\nas a level @{selected|pr-casting-level} @{selected|class3}}}{{splevel=Power}}{{school=Necromancy}}Specs=[Turn-Undead,Power,1H,Necromancy]{{components=V,S}}{{time=[[10]]}}{{range=0}}{{duration=Until broken}}{{aoe=Undead within line of sight}}{{save=See turning table}}{{reference=PHB p103}}{{damage=[Roll 1d20](!\\amp#13;\\amp#47;r 1d20 turning undead) then [Turn them](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Select undead|token_id}|Turned|99|0|Turned undead, flee if free-willed, stand aside if controlled|screaming)}}SpellData=[w:Turn Undead,sp:10,cs:VS]{{effects=**Remember that Paladins turn as a Priest of 2 levels lower.**\nAttempting to turn counts as an action, requiring one round and occurring during the character\'s turn in the initiative order (thus, the undead may get to act before the character can turn them). The mere presence of the character is not enough--a touch of drama from the character is important. Speech and gestures are important, so the character must have his hands free and be in a position to speak. However, turning is not like spellcasting and is not interrupted if the character is attacked during the attempt.\nTo resolve a turning attempt, look on Table 61. Cross-index the Hit Dice or type of the undead with the level of the character (two levels lower for a paladin). If there is a number listed, roll 1d20. If the number rolled is equal to or greater than that listed, the attempt is successful. If the letter "T" (for "turned") appears, the attempt is automatically successful without a die roll. If the letter "D" (for "dispel") is given, the turning utterly destroys the undead. A dash (--) means that a priest or paladin of that level cannot turn that type of undead. A successful turn or dispel affects 2d6 undead. If the undead are a mixed group, the lowest Hit Dice creatures are turned first.\nOnly one die is rolled regardless of the number of undead the character is attempting to turn in a given round. The result is read individually for each type of undead.}}{{material=The Priest\'s holy symbol}}'},
						{name:'Ventriloquism',type:'Power',ct:'1',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|casting-name} casts\nVentriloquism\nas a level @{selected|mu-casting-level} caster}}{{splevel=Power}}{{school=Alteration}}Specs=[Ventriloquism,Power,0H,Alteration]{{components=V}}{{time=[[1]]}}{{range=[[[{{10*@{selected|Casting-level}},{90}}kl1]] yards](!rounds --aoe @{selected|token_id}|circle|yards|0|[[{{20*@{selected|Casting-level}},{180}}kl1]]||magic|true)}}{{duration=[[4+@{selected|MU-Casting-level}]] rounds}}{{aoe=1 creature or object}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 saving throw vs Ventriloquism)}}{{healing=[Throw voice](!rounds --target single|@{selected|token_id}|\\amp#64;{target|Select a beneficiary|token_id}|Ventriloquism|[[4+@{selected|mu-casting-level}]]|-1|Ventriloquist... Gottle O Geer... See, it works!|radioactive)}}SpellData=[w:Ventriloquism,sp:1,cs:V]{{effects=This spell enables the wizard to make his voice--or someone else\'s voice--or a similar sound seem to issue from someplace else, such as from another creature, a statue, from behind a door, down a passage, etc. The spellcaster can speak in any language that he knows, or make any sound that he can normally make. With respect to such voices and sounds, anyone rolling a successful saving throw vs. spell with a -2 penalty detects the ruse. If cast in conjunction with other illusions, the DM may rule greater penalties or disallow an independent saving throw against this spell in consideration of its contribution to the total effect of the combined illusion.}}{{materials=A parchment rolled up into a small cone.}}'},
						{name:'Whelm-Detect-Evil',type:'ItemPower',ct:'10',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Whelm casts\nDetect-Evil\nas a level 12 caster}}{{splevel=Power}}{{school=Divination}}{{sphere=All}}Specs=[Whelm-Detect-Evil,ItemPower,0H,Divination]{{components=V,S}}{{time=[[1]]round}}{{range=[[0]]}}{{duration=[[70]] rounds}}{{aoe=[10ft x 120yds path](!rounds --aoe @{selected|token_id}|bolt|feet|0|360|10|magic)}}{{save=None}}{{healing=[Evil radar on](!rounds --target caster|@{selected|token_id}|Detect-Evil|70|-1|Whelm is Detecting Evil|aura)}}SpellData=[w:Whelm-Detect-Evil,sp:10,cs:VS]{{effects=This spell discovers emanations of evil, or of good in the case of the reverse spell, from any creature, object, or area. Character alignment, however, is revealed only under unusual circumstances: characters who are strongly aligned, who do not stray from their faith, and who are of at least 9th level might radiate good or evil *if intent upon appropriate actions.* Powerful monsters, such as rakshasas or ki-rin, send forth emanations of evil or good, even if polymorphed. Aligned undead radiate evil, for it is this power and negative force that enable them to continue existing. An evilly cursed object or unholy water radiates evil, but a hidden trap or an unintelligent viper does not. \nThe degree of evil (dim, faint, moderate, strong, or overwhelming) and possibly its general nature (expectant, malignant, gloating, etc.) can be noted. If the evil is overwhelming, the priest has a 10% chance per level of detecting its general bent (lawful, neutral, or chaotic). The duration of a *detect evil *(or *detect good*) spell is one turn plus five rounds per level of the priest. Thus, a 1st-level priest can cast a spell with a 15-round duration, a 2nd-level priest can cast a spell with a 20-round duration, etc. The spell has a path of detection 10 feet wide in the direction the priest is facing. The priest must concentrate--stop, have quiet, and intently seek to detect the aura--for at least one round to receive a reading}}{{materials=The spell requires the use of the priest\'s holy symbol, with the priest holding it before him.}}'},
						{name:'Whelm-Detect-Good',type:'ItemPower',ct:'10',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Whelm casts\nDetect Good\nas a level 12 caster}}{{splevel=Power}}{{school=Divination}}{{sphere=All}}Specs=[Whelm-Detect-Good,ItemPower,0H,Divination]{{components=V,S}}{{time=[[1]]round}}{{range=[[0]]}}{{duration=[[70]] rounds}}{{aoe=[10ft x 120yds path](!rounds --aoe @{selected|token_id}|bolt|feet|0|360|10|magic)}}{{save=None}}{{healing=[Good radar on](!rounds --target caster|@{selected|token_id}|Detect-Good|70|-1|Whelm is Detecting Good|aura)}}SpellData=[w:Whelm-Detect-Good,sp:10,cs:VS]{{effects=This spell discovers emanations of evil, or of good in the case of the reverse spell, from any creature, object, or area. Character alignment, however, is revealed only under unusual circumstances: characters who are strongly aligned, who do not stray from their faith, and who are of at least 9th level might radiate good or evil *if intent upon appropriate actions.* Powerful monsters, such as rakshasas or ki-rin, send forth emanations of evil or good, even if polymorphed. Aligned undead radiate evil, for it is this power and negative force that enable them to continue existing. An evilly cursed object or unholy water radiates evil, but a hidden trap or an unintelligent viper does not. \nThe degree of evil (dim, faint, moderate, strong, or overwhelming) and possibly its general nature (expectant, malignant, gloating, etc.) can be noted. If the evil is overwhelming, the priest has a 10% chance per level of detecting its general bent (lawful, neutral, or chaotic). The duration of a *detect evil *(or *detect good*) spell is one turn plus five rounds per level of the priest. Thus, a 1st-level priest can cast a spell with a 15-round duration, a 2nd-level priest can cast a spell with a 20-round duration, etc. The spell has a path of detection 10 feet wide in the direction the priest is facing. The priest must concentrate--stop, have quiet, and intently seek to detect the aura--for at least one round to receive a reading}}{{materials=The spell requires the use of the priest\'s holy symbol, with the priest holding it before him.}}\n!setattr --charid @{selected|character_id} --silent --Spell-cast|Detect-Good --Spell-direction|-1 --Spell-duration|70 --Spell-msg|Detecting Good --Spell-marker|aura'},
						{name:'Whelm-Locate-Object',type:'ItemPower',ct:'1',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=Whelm casts\nLocate Object\nas a level 12 caster}}{{splevel=Power}}{{school=Divination}}{{sphere=Divination}}Specs=[Whelm-Locate-Object,ItemPower,1H,Divination]{{components=V,S}}{{time=[[1]] turn}}{{range=[180 yards](!rounds --aoe @{selected|token_id}|circle|yards|0|360||magic|true)}}{{duration=[[8]] hours}}{{aoe=[[1]] object}}{{save=None}}SpellData=[w:Whelm Locate Object,sp:1,cs:VS]{{effects=This spell helps locate a known or familiar object. The priest casts the spell, slowly turns, and will sense when he is facing in the direction of the object to be located, provided the object is within range--for example, 90 yards for 3rd-level priests, 100 yards for 4th, 110 yards for 5th, etc. The spell locates such objects as apparel, jewellery, furniture, tools, weapons, or even a ladder or stairway. Once the caster has fixed in his mind the items sought, the spell locates only that item. Attempting to find a specific item, such as a kingdom\'s crown, requires an accurate mental image. If the image is not close enough to the actual item, the spell does not work; in short, desired but unique objects cannot be located by this spell unless they are known by the caster. The spell is blocked by lead.\nThe reversal, obscure object, hides an object from location by spell, crystal ball, or similar means for eight hours. The caster must touch the object being concealed.\nNeither application of the spell affects living creatures.}}{{materials=Whelm}}'},
						{name:'Whelm-Shockwave',type:'ItemPower',ct:'10',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.spellTemplate+'}{{title=@{selected|token_name} creates a\nShockwave\nwith Whelm}}{{splevel=Power}}{{school=Alteration}}Specs=[Whelm-Shockwave,ItemPower,1H,Alteration]{{components=S}}{{time=[[10]]}}{{range=[[0]]}}{{duration=[[1]] turn}}{{aoe=[Up to 120ft diameter](!rounds --aoe @{selected|token_id}|circle|feet|0|||lightning|true)}}{{save=[Negates](!\\amp#13;\\amp#47;gmroll 1d20 save vs staves or stunned)}}{{healing=[Stunning!](!rounds --target area|@{selected|token_id}|\\amp#64;{target|Select first shocked creature|token_id}|Whelm-Stunned|10|-1|Stunned roll save vs Staves again|fishing-net)}}SpellData=[w:Whelm Shockwave,sp:10,cs:S]{{effects=You can use a round to strike the ground with *Whelm* and send a ***Shock Wave*** out from the point of impact. Each creature of your choice on the ground within [[60]] feet of that point must succeed on a saving throw vs. Staves or become stunned for [[1]] turn. A creature can repeat the saving throw at the end of each round, ending the effect on itself on a success. Once used, this property can\'t be used again until the next dawn.}}'},
						{name:'Whirlwind',type:'Power',ct:'3',charge:'uncharged',cost:'0',body:'/w "@{selected|character_name}" \\amp{template:'+fields.defaultTemplate+'}{{name=Whirlwind}}Specs=[Whirlwind,Power,0H,Innate Ability]{{Speed=[[3]]}}{{save=Vs Breath Weapon to halve}}{{Recharge=[Start recharging](!rounds --target caster|@{selected|token_id}|AE-Whirlwind|\\amp#91;[3+1d3]\\amp#93;|-1|Whirlwind building|stopwatch)}}SpellData=[w:Whirlwind,sp:3,cs:S]{{desc=Each creature in the elemental\'s space must make a **saving throw vs Breath Weapon**. On a failure, a target takes [3d8 + 2](!\\amp#13;\\amp#47;gmroll 3d8+2 damage from whirlwind) bludgeoning damage and is flung up to [[20]] feet away from the elemental in a random direction and knocked prone. If a thrown target strikes an object, such as a wall or floor, the target takes an additional [10yds 1d6, 20yds 2d6](!\\amp#13;\\amp#47;gmroll \\amp#63;{How far|10,1|20,2}d6 damage from hitting wall) bludgeoning damage for every 10 feet it was thrown. If the target is thrown at another creature, that creature must succeed on a Dexterity saving throw or take the same damage and be knocked prone.\nIf the saving throw is successful, the target takes half the bludgeoning damage and isn\'t flung away or knocked prone.}}'},
					]},
	});
	
	const handouts = Object.freeze({
	MagicMaster_Help:	{name:'MagicMaster Help',
						 version:1.07,
						 avatar:'https://s3.amazonaws.com/files.d20.io/images/257656656/ckSHhNht7v3u60CRKonRTg/thumb.png?1638050703',
						 bio:'<div style="font-weight: bold; text-align: center; border-bottom: 2px solid black;">'
							+'<span style="font-weight: bold; font-size: 125%">MagicMaster Help v1.07</span>'
							+'</div>'
							+'<div style="padding-left: 5px; padding-right: 5px; overflow: hidden;">'
							+'<h1>MagicMaster API v'+version+'</h1>'
							+'<p>The MagicMaster API provides functions to manage all types of magic, including Wizard & Priest spell use and effects; Character, NPC & Monster Powers; and discovery, looting, use and cursing of Magic Items.  All magical aspects can work with the <b>RoundMaster API</b> to implement token markers that show and measure durations, and produce actual effects that can change character sheet attributes temporarily for the duration of the spell or permanently if so desired.  They can also work with the <b>InitiativeMaster API</b> to provide menus of initiative choices and correctly adjust individual initiative rolls, including effects of Haste and Slow and similar spells.  This API can also interact with the <b>MoneyMaster API</b> (under development) to factor in the passing of time, the cost of spell material use, the cost of accommodation for resting, and the cost of training for leveling up as a spell caster (Wizard, Priest or any other).</p>'
							+'<h2>Syntax of MagicMaster calls</h2>'
							+'<p>The MagicMaster API is called using !magic (or the legacy command !mibag).</p>'
							+'<pre>!magic --help</pre>'
							+'<p>Commands to be sent to the MagicMaster API must be preceded by two hyphens \'--\' as above for the --help command.  Parameters to these commands are separated by vertical bars \'|\', for example:</p>'
							+'<pre>!magic --mi-power token_id|power_name|mi_name|[casting-level]</pre>'
							+'<p>If optional parameters are not to be included, but subsequent parameters are needed, use two vertical bars together with nothing between them, e.g.</p>'
							+'<pre>!magic --cast-spell MI|[token_id]||[casting_name]</pre>'
							+'<p>Commands can be stacked in the call, for example:</p>'
							+'<pre>!magic --spellmenu [token_id]|[MU/PR/POWER] --mimenu [token_id]</pre>'
							+'<p>When specifying the commands in this document, parameters enclosed in square brackets [like this] are optional: the square brackets are not included when calling the command with an optional parameter, they are just for description purposes in this document.  Parameters that can be one of a small number of options have those options listed, separated by forward slash \'/\', meaning at least one of those listed must be provided (unless the parameter is also specified in [] as optional): again, the slash \'/\' is not part of the command.  Parameters in UPPERCASE are literal, and must be spelt as shown (though their case is actually irrelevant).</p>'
							+'<h2>Command Index</h2>'
							+'<h3>1.Spell and Power management</h3>'
							+'<pre>--spellmenu [token_id]|[MU/PR/POWER]<br>'
							+'--mem-spell (MU/PR/POWER)|[token_id]<br>'
							+'--view-spell (MU/PR/POWER)|[token_id]<br>'
							+'--cast-spell (MU/PR/POWER/MI)|[token_id]|[casting_level]|[casting_name]<br>'
							+'--cast-again (MU/PR/POWER)|token_id|[spell_name]</pre>'
							+'<h3>2.Magic Item management</h3>'
							+'<pre>--mimenu [token_id]<br>'
							+'--edit-mi [token_id]<br>'
							+'--view-mi [token_id]<br>'
							+'--use-mi [token_id]<br>'
							+'--mi-charges token_id|value|[mi_name]|[maximum]<br>'
							+'--mi-power token_id|power_name|mi_name|[casting-level]<br>'
							+'--mem-spell (MI-MU/MI-PR)|[token_id]<br>'
							+'--view-spell (MI-MU/MI-PR/MI-POWER)|[token_id]<br>'
							+'--cast-spell MI|[token_id]|[casting_level]|[casting_name]|[CHARGED]|[mi-name]</pre>'
							+'<h3>3.Spell, power & magic item effects and resting</h3>'
							+'<pre>!rounds --target CASTER|token_id|spell_name|duration|increment|[msg]|[marker]<br>'
							+'!rounds --target (SINGLE/AREA)|token_id|target_token_id|spell_name|duration|increment|[msg]|[marker]<br>'
							+'--touch token_id|effect-name|duration|per-round|message|marker<br>'
							+'--rest [token_id]|[SHORT/LONG]|[MU/PR/MU-PR/POWER/MI/MI-POWER]|[timescale]</pre>'
							+'<h3>4.Treasure & Item container management</h3>'
							+'<pre>--gm-edit-mi [token_id]<br>'
							+'--search token_id|pick_id|put_id<br>'
							+'--pickorput token_id|pick_id|put_id|[SHORT/LONG]</pre>'
							+'<h3>5.Light source management</h3>'
							+'<pre>--lightsources [token_id]<br>'
							+'--light token_id|(NONE/WEAPON/TORCH/HOODED/CONTLIGHT/BULLSEYE/BEACON)<br>'
							+'--changelight token_id|(NONE/WEAPON/TORCH/HOODED/CONTLIGHT/BULLSEYE/BEACON)</pre>'
							+'<h3>6.Other commands</h3>'
							+'<pre>--help<br>'
							+'--config [PROF/ALL-WEAPS/WEAP-CLASS/ALL-ARMOUR/MASTER-RANGE/SPECIALIST-RULES/SPELL-NUM] | [TRUE/FALSE]<br>'
							+'--check-db [ db-name ]<br>'
							+'--handshake from | [cmd]<br>'
							+'--hsq from | [cmd]<br>'
							+'--hsr from | [cmd] | [TRUE/FALSE]<br>'
							+'--debug (ON/OFF)</pre>'
							+'<h3>7.How to use MagicMaster API</h3>'
							+'<br>'
							+'<h2>1. Spell management</h2>'
							+'<h3>1.1 Display a menu to do actions with spells</h3>'
							+'<pre>--spellmenu [token_id]|[MU/PR/POWER]</pre>'
							+'<p>Takes an optional token ID and an optional menu type as arguments. If token ID is not specified, uses the selected token.</p>'
							+'<table>'
							+'	<tr><th scope="row">MU:</th><td>displays buttons for Magic User/Wizard spells for casting, resting (short or long), memorising spells from the character\'s spell book, or viewing the memorised spells.</td></tr>'
							+'	<tr><th scope="row">PR:</th><td>displays buttons for Priest spells for casting, resting (short or long), memorising spells from the character\'s spell book, or viewing the memorised spells.</td></tr>'
							+'	<tr><th scope="row">POWER:</th><td>displays buttons for using powers, doing a long rest, changing/resetting powers from the character\'s granted powers, or viewing the granted powers.</td></tr>'
							+'	<tr><th scope="row">None of the above:</th><td>the system will check the class(es) of the character and display the appropriate menu, or if a multi-class character including both a Wizard and a Priest, ask if the player wants to display Magic User or Priest menus.</td></tr>'
							+'</table>'
							+'<p>If the specified token is not associated with a character that has a spell book of the chosen type, or any granted powers, an error message is displayed.</p>'
							+'<h3>1.2 Display a menu to memorise spells from the Character\'s spell book</h3>'
							+'<pre>--mem-spell (MU/PR/POWER/MI-MU/MI-PR)|[token_id]</pre>'
							+'<p>Takes a mandatory spell book type and an optional token ID as arguments. If token ID is not specified, uses the selected token.</p>'
							+'<p>The Character Sheet associated with the token must have spell books specified for the relevant types of spells or powers.  These are lists of spells from the spell macro databases (see Section 7) specified by level (powers are all 1 level) and as lists separated by \'|\'.  E.g. Charm-Person|Light|Sleep.  If the CommandMaster API is installed, the GM can use its menus to set up character spell books and granted powers.</p>'
							+'<p>Initially displays a menu for memorising Level 1 spells (the only level for powers), with a button to choose a spell from the Level 1 spell book on the character sheet, Review the chosen spell, and all the memorising slots the Character has at this level.  Other buttons to memorise or remove spells become available when spells or slots are chosen.  Another button goes to the next available level with slots.  When a granted power is memorised to a slot, a quantity per day can be specified: -1 will grant unlimited uses of the power per day.  Memorising any other type of spell is limited to 1 use per slot.</p>'
							+'<p>MI-MU and MI-PR have a special function: these are used to cast memorised spells into a spell-storing magic item (which should be the last item selected by the Character running the command), such as a Ring of Spell Storing.  Magic Item spells are stored in an unused level of the Character Sheet.  This command displays both all memorised spells and all spell-storing magic item spell slots, and allows a memorised spell to be selected, a slot (for the same spell name) to be selected, and the spell cast from one to the other.</p>'
							+'<h3>1.3 View the memorised spells or granted powers</h3>'
							+'<pre>--view-spell (MU/PR/POWER/MI-MU/MI-PR/MI-POWER)|[token_id]</pre>'
							+'<p>Takes a mandatory spell type and an optional token ID. If token ID is not specified, uses the selected token.</p>'
							+'<p>Displays a menu of all levels of memorised spells of the selected type (there is only 1 level of powers).  Spells that have already been cast appear as greyed out buttons, and can\'t be selected.  Spells that are still available to cast that day can be selected and this runs the spell or power macro from the relevant database without consuming the spell, so that the Player can see the specs.</p>'
							+'<p>Adding MI- before any of the types of spell views the spells or powers available for the last Magic Item used by the Character using the command.  Generally this version of the command is only called from API Buttons from the magic item\'s ability macro.</p>'
							+'<h3>1.4 Cast a memorised spell or use a granted power</h3>'
							+'<pre>--cast-spell (MU/PR/POWER/MI)|[token_id]|[casting_level]|[casting_name]|[CHARGED]</pre>'
							+'<p>Takes a mandatory spell type, an optional token ID (if not specified, uses the selected token), an optional casting level, and an optional caster name, and an optional \'CHARGED\' command.</p>'
							+'<p>This displays a menu of all levels of the memorised spells/powers of the relevant type.  MI displays the spell book for spells stored on the last magic item used or viewed (both MU & PR), and MI-POWER all stored powers in the last selected magic item, (this version of the command is generally called using an API Button in the magic item ability macro).  The player can select a spell/power and then a button becomes available to cast it, using up that slot/deducting a power charge until the next long rest.</p>'
							+'<p>If a casting_level is specified, the spell will be cast as if by a caster of that level, and if a casting_name is specified, that name will be displayed in the spell macro information.  These functions are often used for magic items that cast at specific levels of use, or magic artefacts that are named and/or sentient.  If these are not specified, the caster name and relevant class level are used.  In either case, specified or not, the character\'s Character Sheet Attributes called @{Casting-name} and @{Casting-level} are set to the values used, and can be used in spell, power, or magic item macros.</p>'
							+'<p>If the optional CHARGED parameter is specified (only relevant to spells and powers stored on magic items), this specifies that the Magic Item from which the spell or power is cast is charged, and looses one charge when that cast is made.  This is generally the case when the spell or power is on a Scroll.  When the charge quantity reaches zero, the item will follow the behaviour determined by its charge type (charged, uncharged, rechargeable, recharging, self-charging) - see section 4.1 for more information on charges and charge types.</p>'
							+'<h3>1.5 Cast the last used spell or power again</h3>'
							+'<pre>--cast-again (MU/PR/POWER)|token_id|[spell_name]</pre>'
							+'<p>Takes a mandatory spell type, a mandatory token ID and an optional spell name.</p>'
							+'<p>This command is used for certain spells and powers that, once cast, allow continuing effects in the same or subsequent rounds, without using additional charges.  If the optional spell name is not used, the command just casts again the same spell as the last spell cast by the character associated with the selected token, at the same casting level and casting name.  If a spell name is specified, this spell is cast instead as if it were the same spell: this is used where different spell macros are required to specify subsequent spell effects.</p>'
							+'<br>'
							+'<h2>2. Magic Item management</h2>'
							+'<h3>2.1 Display a menu of possible Magic Item actions</h3>'
							+'<pre>--mimenu [token_id]</pre>'
							+'<p>Takes an optional token ID as an argument. If token ID is not specified, uses the selected token.</p>'
							+'<p>Displays a menu with the following actions: Use a magic item, Search for magic items & treasure, Store magic items in a container, Edit the contents of a character\'s magic item bag, and View the contents of a character\'s magic item bag.</p>'
							+'<p>Searching & Storing are explained in section 4.</p>'
							+'<h3>2.2 Edit a Magic Item bag</h3>'
							+'<pre>--edit-mi [token_id]</pre>'
							+'<p>Takes an optional token ID as an argument. If token ID is not specified, uses the selected token.</p>'
							+'<p>Displays a menu similar to editing memorised spells.  At the top are buttons to choose different types of magic items which have macros in the magic item databases.  The slots available in the bag are shown (with their current contents) and, when magic items and/or slots are chosen buttons become selectable below to store, review, or remove magic items in/from the bag.</p>'
							+'<p>Storing a magic item will ask for a number - either a quantity or a number of charges.  Magic Items can be of various types: Charged (is used up when reaches 0), Uncharged (a number is a pure quantity that is not consumed), Recharging (regains charges after each long rest), Rechargable (is not used up when reaches 0, stays in bag and can be recharged when the DM allows), Self-charging (recharge at a rate per round determined by the item) and can also be Cursed - more under section 4.</p>'
							+'<p>This menu is generally used when Magic Item & treasure containers (such as Treasure Chests and NPCs/monsters with treasure) have not been set up in a campaign as lootable as a means of giving found magic items to characters, and the DM just tells the Player that they have found a magic item.</p>'
							+'<h3>2.3 View a character\'s Magic Item Bag</h3>'
							+'<pre>--view-mi [token_id]</pre>'
							+'<p>Takes an optional token ID as an argument. If token ID is not specified, uses the selected token.</p>'
							+'<p>Displays a menu of items in the character\'s magic item bag, with the quantity possessed or the number of charges.  Pressing a button displays the named Magic Item specs without using any charges so that the Player can review the specifications of that item.  Items for which all charges have been consumed are greyed out, and cannot be viewed as the character can no longer use them.  They will become viewable again if they gain charges.</p>'
							+'<h3>2.4 Use a Magic Item from the bag</h3>'
							+'<pre>--use-mi [token_id]</pre>'
							+'<p>Takes an optional token ID as an argument. If token ID is not specified, uses the selected token.</p>'
							+'<p>Displays a similar menu as for viewing the contents of the Magic Item Bag, but when an item is selected, a button is enabled that uses the Magic Item and consumes a charge.  Other buttons specified in the item macro might use additional charges to perform additional effects.  See section 3.</p>'
							+'<p>Items with 0 quantity or charges left are greyed out, and cannot be selected.  When a Charged Item reaches 0 charges left, it is removed from the character\'s Magic Item Bag automatically.</p>'
							+'<h3>2.5 Add, set or deduct Magic Item charges</h3>'
							+'<pre>--mi-charges token_id|[+/-]value|[mi_name]|[maximum]</pre>'
							+'<p>Takes a mandatory token ID, a mandatory value preceeded by an optional + or -, and an optional magic item name and optional maximum value as arguments.</p>'
							+'<p>Does not display anything but alters the number of current or recoverable charges on an item.  By default, alters the last magic item used by the character, or will affect the named magic item.  Warning: a character can have two items of the same name, and there is no guarantee which will be affected if the name is used.</p>'
							+'<p>Remember: using a Charged, Recharging, Rechargeable or Self-Charging Magic Item will automatically use 1 charge on use.  This command is not required in order for that to happen.  In addition, that one charge deduction always happens - if an effect of a Magic Item uses 2 charges, only 1 more needs to be deducted.</p>'
							+'<p><b>Note:</b> \'-\' reduces <i>current</i> remaining charges, \'+\' adds to the <i>maximum</i> recoverable charges, and no + or - sets the <i>maximum</i> recoverable charges.  This command <b><i>cannot</i></b> be used to increase the current remaining charges.</p>'
							+'<p>Using minus \'-\' before the value will deduct charges from the current quantity/charges: e.g. if using an optional power of the item that uses more than 1 charge.  Using + before the value will add the value to the number of recoverable charges (either overnight or rechargeable), up to any specified maximum (often used for magic items that regain variable numbers of charges overnight).  Just using the value without + or - will just set the number of recoverable charges to the given value.  This command is not required to recharge self-charging items but can be used to change the maximum number of charges they will self-charge up to.</p>'
							+'<h3>2.6 Use a Magic Item power</h3>'
							+'<pre>--mi-power token_id|power_name|mi_name|[casting-level]</pre>'
							+'<p>Takes a mandatory token ID, mandatory power name, mandatory magic item name, and an optional casting level as parameters.</p>'
							+'<p>Magic Items, especially artefacts, can have their own powers that can be used a specified number of times a day, or at will.  This command can be used in API buttons in the Magic Item macro to call on that power.  The power name and the magic item name must be specified to select the right power.  If a casting level is specified, any relevant impacts on use of the power will be taken into account: it is often the case that magic items use powers at specific levels. If not specified, the item using Character\'s level is used (user does not need to be a spell caster).</p>'
							+'<p>Generally, magic item powers have unique names, though they do not have to.  Such magic items require specific setting up by the DM - see later sections.</p>'
							+'<h3>2.7 Store spells in a spell-storing Magic Item</h3>'
							+'<pre>--mem-spell (MI-MU/MI-PR)|[token_id]</pre>'
							+'<p>Takes a mandatory spell type, and an optional Token ID for the character.  If token ID is not provided, it uses the selected token.</p>'
							+'<p>MI-MU and MI-PR mem-spell types are used to cast memorised spells into a spell-storing magic item, such as a Ring of Spell Storing.  Magic Item spells are stored in an unused spell level of the Character Sheet (by default Wizard Level 15 spells).  This command displays both all the character\'s memorised spells and the spell-storing magic item spell slots in the last magic item selected by the Character, and allows a memorised spell to be selected, a slot (for the same spell name - limiting the item to only store certain defined spells) to be selected, and the spell cast from one to the other.</p>'
							+'<p>Unlike some other menus, however, magic item spell slots that are full are greyed out and not selectable - their spell is intact and does not need replacing.  Spell slots that need replenishing are displayed as selectable buttons with the spell name that needs to be cast into the slot.</p>'
							+'<p>The level of the caster at the time of casting the spell into the magic item is stored in the magic item individually for each spell - when it is subsequently cast from the spell-storing magic item it is cast as if by the same level caster who stored it.</p>'
							+'<p>A spell-storing magic item can hold spells from one or both of Wizard and Priest spells.  The database where the spell is defined is also stored in the magic item with the spell, so the correct one is used when at some point in the future it is cast.  If, when cast, the system can\'t find the database or the spell in that database (perhaps the character has been moved to a different campaign with different databases) the system will search all databases for a spell with the same name - this does not guarantee that the same spell will be found: the definition used by a different DM could be different - or the DM may not have loaded the database in question into the campaign for some reason.  In this case, an error will occur when the spell is cast.</p>'
							+'<p>See Section 8.3 for how spell-storing magic items are defined.</p>'
							+'<h3>2.8 Casting a spell from a spell-storing magic item</h3>'
							+'<pre>--cast-spell MI|[token_id]|[casting_level]|[casting_name]|[CHARGED]|[mi-name]</pre>'
							+'<p>Takes a mandatory casting type of \'MI\', an optional Token ID (if token ID is not provided, it uses the selected token), an optional casting level (which will be ignored in favour of the level of the caster of the spell who cast it into the item), an optional casting name which, if not specified, will be the name of the wielder of the magic item, an optional \'CHARGED\' command, and an optional magic item name (if not provided, uses name of the last magic item the character selected, viewed or used).</p>'
							+'<p>This command works in the same way as for casting other spells.  However, spells cast from a spell-storing magic item are not regained by resting - either short or long rests.  The only way to regain spells cast from such an item is to cast them back into the item from the character\'s own memorised spells: see the -mem-spell command above.  If the character does not have these spells in their spell book or is not of a level able to memorise them, then they will not be able to replace the spells and will have to get another spell caster to cast them into the item (by giving the item to the other Character and asking nicely for it back again) or wait until they can get the spells.</p>'
							+'<p>If the optional parameter <i>\'CHARGED\'</i> is used, spells on the magic item are not re-storable.  The spells will be deleted after they are all used up and the magic item will not be able to store any more spells.  This is mainly used for Scrolls with multiple spells.</p>'
							+'<br>'
							+'<h2>3.Spell, power & magic item effects and resting</h2>'
							+'<p>If this API is used in conjunction with the RoundMaster API, Magic Items, Spells & Powers can all place status markers on tokens, and also cause real Effects to alter token & character sheet attributes and behaviours: when cast; during each round of their duration; and when they expire.  See the RoundMaster documentation for further information, especially on Effects and the Effects Database.</p>'
							+'<h3>3.1 Target spell effects on a token (with RoundMaster API only)</h3>'
							+'<pre>!rounds --target CASTER|token_id|spell_name|duration|[+/-]increment|[msg]|[marker]<br>'
							+'!rounds --target (SINGLE/AREA)|token_id|target_token_id|spell_name|duration|increment|[msg]|[marker]</pre>'
							+'<p>Takes mandatory CASTER, SINGLE or AREA command, a mandatory caster token ID, for SINGLE/AREA a mandatory target token ID, mandatory spell name, duration & increment (preceeded by an optional +/-), and an optional message and optional token marker name.</p>'
							+'<p>If using the RoundMaster API, this command targets one, or a sequential set of tokens and applies a token marker to the token for the specified duration number of rounds, with the increment applied each round.  The optional message will be shown below that token\'s turn announcement each round.  The marker used will either be the one specified or if not specified a menu to choose one will be shown.</p>'
							+'<table>'
							+'	<tr><th scope="row">CASTER</th><td>will just take one Token ID and apply the marker to that token.</td></tr>'
							+'	<tr><th scope="row">SINGLE</th><td>will take both the Token ID of the caster, and the Token ID of a target of the spell/power/MI.  The marker will be applied to that of the target.</td></tr>'
							+'	<tr><th scope="row">AREA</th><td>will take the Token ID of the caster, and one Token ID of the first token in the area of effect.  As each token is specified the command will ask the Player to select subsequent tokens in the area of effect.</td></tr>'
							+'</table>'
							+'<p>If the Player is not the DM/GM, the system will ask the DM/GM to approve the marker/effect for each token - this allows the DM to make saving throws for monsters/NPCs affected where appropriate.</p>'
							+'<p>See the RoundMaster API documentation for full details.</p>'
							+'<h3>3.2 Cast a spell that requires a "touch" attack roll</h3>'
							+'<pre>--touch token_id|effect-name|duration|per-round|[message]|[marker]</pre>'
							+'<p>Takes mandatory token ID, effect name, duration of the effect, an increment to the duration per round (often -1), an optional message each round for the targeted token, and an optional status marker to use (if not supplied, the DM or user will be asked to select one).</p>'
							+'<p>Note: this command requires RoundMaster API to also be loaded, but is a !magic command.</p>'
							+'<p>Sets up the Character represented by the specified token ready for an "Attack Roll" to deliver a touch attack for a spell or power or magic item use that requires an attack.  The parameters are those that will be passed to the !rounds -target command if the attack is successful (see above).</p>'
							+'<p>To use this command, add it as part of a spell, power or MI macro in the appropriate database, before or after the body of the macro text (it does not matter which, as long as it is on a separate line in the macro - the Player will not see the command).  Then include in the macro (in a place the Player will see it and be able to click it) an API Button call [Button name](~Selected|To-Hit-Spell) which will run the Ability "To-Hit-Spell" on the Character\'s sheet (which has just been newly written there or updated by the -touch command).</p>'
							+'<p>Thus, when the Player casts the Character\'s spell, power or MI, they can then press the API Button when the macro runs and the attack roll will be made.  If successful, the Player can then use the button that appears to mark the target token and apply the spell effect to the target.</p>'
							+'<p>See the RoundMaster API documentation for further information on targeting, marking and effects.</p>'
							+'<h3>3.3 Perform Short or Long Rests</h3>'
							+'<pre>--rest [token_id]|[SHORT/LONG]|[MU/PR/MU-PR/POWER/MI/MI-POWER]|[timescale]</pre>'
							+'<p>Takes an optional token ID (if not specified, uses the selected token), an optional rest type, short or long, an optional magic type to regain charges for, and an optional timescale for days passing.</p>'
							+'<p>Most magic requires the character to rest periodically to study spell books, rememorise spells, and regain powers and charges of magic items.  This command implements both Short and Long rests.</p>'
							+'<p>The type of rest (short or long) can be specified or, if not specified, the system will ask the Player what type of rest is to be undertaken - though Long Rests will be disabled if the Timescale (either the optional value or the character sheet attribute) is not 1 or more days (see below).  The type of magic to be affected can also be specified or, if not specified, all types of magic are affected.</p>'
							+'<p>A Short rest is deemed to be for 1 hour (though this is not a restriction of the system and is up to the DM), and allows spell casters (such as Wizards and Priests, as well as others) to regain their 1st level spells only.  This can happen as often as the DM allows.</p>'
							+'<p>A Long rest is considered to be an overnight activity of at least 8 hours (though again this is not a restriction of the system and is up to the DM).  A Long rest allows spell casters to regain all their spells, all character and magic item powers to be regained to full uses per day, and for recharging magic items to regain their charges up to their current maximum.  After a long rest, ammunition that has been used but not recovered can no longer be recovered using the Ammunition Management command (see AttackMaster API documentation): it is assumed that other creatures will have found the ammo, or it has been broken or otherwise lost in the 8 hours of the long rest.</p>'
							+'<p>A Long rest can only be undertaken if certain conditions are met: either the optional Timescale (in days) must be specified as 1 or more days, or the Character Sheet must have a Roll20 attribute called Timescale, current, set to a value of 1 or more (can be set by <b>InitiativeMaster API --end-of-day</b> command).  An internal date system is incremented: an attribute on the Character Sheet called In-Game-Day is incremented by the Timescale, and Timescale is then set to 0.</p>'
							+'<p>If the <b>InitMaster API</b> is being used, the system will interact with the "End of Day" command to allow rests to be coordinated with the choice of accommodation (and its cost...!).</p>'
							+'<br>'
							+'<h2>4.Treasure & Item container management</h2>'
							+'<h3>4.1 DM/GM version of Magic Item management</h3>'
							+'<pre>--gm-edit-mi [token_id]</pre>'
							+'<p>Takes an optional token ID. If token ID is not specified, uses the selected token.</p>'
							+'<p>This command opens a menu showing all the items in the Backpack of the character sheet associated with the specified token.  Unlike the Player version of the command (--edit-mi), this command shows all attributes of every magic item, including those of hidden and cursed items, and also offers an additional list of "DM Only" magic items from the magic item databases.</p>'
							+'<p>The following functions are available once both a magic item is selected from the lists, and a slot to store it in are selected:</p>'
							+'<table>'
							+'	<tr><th scope="row">Store item:</th><td>Select a magic item from the databases and store it in a slot - this is the same as the Player version.</td></tr>'
							+'	<tr><th scope="row">Hide item as different item:</th><td>The magic item already in the selected bag slot is given the displayed name of the magic item selected from the databases - the Player will only see the Magic Item selected (Displayed Name), and not the hidden actual name.  The MI will behave exactly like the selected, displayed item until the DM reverts the item to the hidden version using the [Reset Single MI] button.  This is generally used for Cursed items in containers, so that the real nature of the item is hidden until the character discovers the curse.</td></tr>'
							+'	<tr><th scope="row">Remove MI:</th><td>Blanks the selected Bag slot, removing all details, both displayed & actual.</td></tr>'
							+'	<tr><th scope="row">Change MI Type:</th><td>This allows the type of the item in the selected Bag slot to be changed.  It can be one of the following - Charged, Uncharged, Recharging, Rechargeable, Self-chargeable, Cursed, Cursed-Charged, Cursed-Self-chargeable, Cursed-Recharging (cursed rechargeable items behave in exactly the same way as Cursed-Charged items).  Cursed versions of items cannot be removed from the character\'s MI Bag, given away, stored or deleted by the Player, even when all their charges are depleted.  Otherwise, they act in the same way as other magic items.</td></tr>'
							+'	<tr><th scope="row">Change Displayed Charges:</th><td>Changes the number of displayed/current charges for the item in the selected Bag slot.  This can be used to set the quantity of Uncharged items, or the current charges of other types.  It also allows charged items in containers to be stored as a single item, for instance single Wands with multiple charges - see the   pickorput command below.</td></tr>'
							+'	<tr><th scope="row">Change Actual Charges:</th><td>Setting this allows the actual quantity of Uncharged items in containers to be hidden, or the maximum number of charges to be set for other types.  When the item is picked up from a container, the actual number of charges will be set as the current value.</td></tr>'
							+'	<tr><th scope="row">Store Spells/Powers in MI</th><td>Only enabled for items that can store & cast spells or powers: the item definition must have a call to <code>!magic --cast-spell MI</code> for spell storing, or <code>!magic --cast-spell MI-POWER</code> for powers, associated with an API button.  If this is the case, this option opens a menu to select Wizard or Priest spells, or powers as appropriate.</td></tr>'
							+'	<tr><th scope="row">Change Item Cost:</th><td>Items can have a cost in GP (fractions allowed which get converted to SP & CP).  When an item is picked up from a container, the cost will be multiplied by the quantity picked up and the Player will be asked if they want the character to pay the cost.  If confirmed, the cost will be deducted from the money values on the character sheet.  0 and negative values are allowed.  This supports merchants and shops to be created in the campaign.</td></tr>'
							+'	<tr><th scope="row">Reset Single MI:</th><td>Allows the DM to reset the item in the selected Bag slot to the actual values, revealing any hidden name, and resetting the displayed quantity to be the actual quantity.  From that point on, the item will behave as the revealed item.  This is mostly used to reveal cursed items.</td></tr>'
							+'	<tr><th scope="row">Edit Treasure:</th><td>Mainly for use on Magic Item containers, such as Treasure Chests, but also useful for NPCs and Monsters.  Allows the DM to add text only treasure descriptions to the container.  The displayed menu allows [Add], [Edit], and [Delete] functions to manage multiple lines/rows of treasure description.</td></tr>'
							+'	<tr><th scope="row">Container Type:</th><td>Sets the type of the Magic Item container or Bag.  Available choices are: Empty Inanimate object, Inanimate object with stuff, Sentient Being with empty Bag, Sentient Being with items, Trapped container. If searched,  Inanimate objects can be looted without penalty;  Sentient beings require a Pick Pockets check; Trapped containers call a Trap ability macro on the container\'s character sheet to determine the effect.  See -search command below.</td></tr>'
							+'	<tr><th scope="row">Container Size:</th><td>Sets the maximum number of items that can be stored in the selected Character\'s/containers bag.  The default is 18 items, though identical items can be stacked.</td></tr>'
							+'</table>'
							+'<h3>4.2 Search tokens for Magic Items and Treasure</h3>'
							+'<pre>--search token_id|pick_id|put_id</pre>'
							+'<p>Takes a mandatory token ID of the character\'s token, mandatory token ID of the token to search and pick up items from, mandatory token ID of the token to put picked up items in.</p>'
							+'<p>This command can be used to pick the pockets of an NPC or even another Player Character, as well as to loot magic item and treasure containers such as Chests and dead bodies.  It can also be used for putting stuff away, storing items from the character\'s Magic Item Bag into a container, for instance if the MI Bag is getting too full (it is limited to the number of items specified via the --gm-edit-mi menu, though similar items can be stacked). The effect of this command when looting (i.e. the Character\'s token_id is also the put_id) depends on the Container Type of the searched token set by the DM using the -gm-edit-mi command menu:</p>'
							+'<table>'
							+'	<tr><th scope="row">Inanimate without items:</th><td>a message is shown to the Player saying the container is empty or, if there are no Magic Items but there is text describing contained treasure, this will be displayed.</td></tr>'
							+'	<tr><th scope="row">Inanimate with items:</th><td>the items in the container are displayed, and the character doing the search (associated with the put_id token ID) can pick them up and store them in their own Magic Item Bag.</td></tr>'
							+'	<tr><th scope="row">Sentient being without items:</th><td>a Pick Pockets check is undertaken - the Player is asked to roll a dice and enter the result (or Roll20 can do it for them), which is compared to the Pick Pockets score on their character sheet.  If successful, a message is displayed in the same way as an Inanimate object.  If unsuccessful, a further check is made against the level of the being targeted to see if they notice, and the DM is informed either way.  The DM can then take whatever action they believe is needed.</td></tr>'
							+'	<tr><th scope="row">Sentient being with items:</th><td>the Pick Pockets check is done the same way as above, but if successful, the items in the target\'s Magic Item Bag are displayed and the Player can pick them up and store them in their character\'s Magic Item Bag.</td></tr>'
							+'	<tr><th scope="row">Trapped container:</th><td>Traps can be as simple or as complex as the DM desires.  Traps may be nothing more than a lock that requires a Player to say they have a specific key, or a combination that has to be chosen from a list, and nothing happens if it is wrong other than the items in the container not being displayed.  Or setting it off can have damaging consequences for the character searching or the whole party.  It can just be a /whisper gm message to let the DM know that the trapped container has been searched.  Searching a trapped container with this command calls an ability macro called "Trap-@{container_name|version}" on the container\'s character sheet: if this does not exist, it calls an ability macro just called "Trap".  The first version allows the Trap macro to change the behaviour on subsequent calls to the Trap functionality (if using the ChatSetAttr API to change the version attribute), for instance to allow the chest to open normally once the trap has been defused or expended.  This functionality requires confidence in Roll20 macro programming.<br><b>Important Note:</b> all Character Sheets representing Trapped containers <b><u><i>must</i></u></b> have their <i>\'ControlledBy\'</i> value (found under the [Edit] button at the top right of each sheet) set to <i>\'All Players\'</i>.  Otherwise, Players will not be able to run the macros contained in them that operate the trap!</td></tr>'
							+'</table>'
							+'<h3>4.3 Looting without searching, and storing items in a container</h3>'
							+'<pre>--pickorput token_id|pick_id|put_id|[SHORT/LONG]</pre>'
							+'<p>Takes a mandatory token ID for the Player\'s character, a mandatory token ID for the token to pick items from, a mandatory token ID for the token to put items in to, and an optional argument specifying whether to use a long or a short menu.</p>'
							+'<p>This command displays a menu from which items in the Backpack Bag on the character sheet associated with the Pick token can be selected to put in the Bag of the character sheet associated with the Put token.  The Player\'s character\'s token can be either the Put token (if picking up items from a container) or the Pick token (if storing items from their Bag into the container).  The other token can be another Player Character (useful for one character giving a magic item to another character) or any other selectable token with a character sheet.  No traps or sentient being checks are made by this command - this allows the DM to allow Players to bypass the searching functionality when looting a container or storing items in it.  Note: the Player\'s Magic Item menu (accessed via the -mimenu command) does not have an option to loot without searching, but the Store function on that menu does not use Search.</p>'
							+'<p>There are two forms of this menu - the Long form displays all items in the container as individual buttons for the Player to select from, and a single button to store the item: this is generally OK when looting containers with not much in them.  The Short form of the menu shows only two buttons: one button which, when clicked, brings up a pick list of all the items in the Pick container, and another button to store the item in the Put container: this is generally best for when a character is storing something from their MI Bag into a chest or other container, or giving an MI to another character, as a character\'s MI Bag often has many items in it which can make a Long menu very long.  Each type of menu has a button on it to switch to the other type of menu without re-issuing the command.  If not specified in the command, the type of menu the Player last used in this campaign is remembered and used by the system.</p>'
							+'<br>'
							+'<h2>5.Light source management</h2>'
							+'<p>These functions use Roll20 Dynamic Lighting to provide a token with a light source.  If your campaign does not use Dynamic Lighting, they will not function.  They can also be accessed through the menu displayed by the AttackMaster API -other-menu command.</p>'
							+'<h3>5.1 Show a menu of Light Sources to select from</h3>'
							+'<pre>--lightsources [token_id]</pre>'
							+'<p>Takes an optional token ID as an argument. If token ID is not specified, uses the selected token.</p>'
							+'<p>This command brings up a menu showing a selection of various light sources that a character can use.  Selecting one will change the Roll20 Dynamic Lighting values on the Token identified to provide this lighting effect.  These are:</p>'
							+'<ul>'
							+'	<li>Magic Weapon or Magical Armour (5ft radius circle),</li>'
							+'	<li>Torch (15ft radius circle),</li>'
							+'	<li>Hooded Lantern (30ft radius circle),</li>'
							+'	<li>Continual Light lantern (60ft radius circle),</li>'
							+'	<li>Bullseye Lantern (cone of light, 20 degrees wide and 60ft long),</li>'
							+'	<li>Beacon Lantern (cone of light, 20 degrees wide and 240ft long).</li>'
							+'</ul>'
							+'<p>The menu shows [ON] and [OFF] buttons for each type.  Only one type can be ON for each Token: selecting an ON button for any light source turns OFF the others for that Token.  Turning the current light source off will turn off all lighting effects on the identified token.</p>'
							+'<h3>5.2 Set a lightsource for a token</h3>'
							+'<pre>--changelight token_id|(NONE/WEAPON/TORCH/HOODED/CONTLIGHT/BULLSEYE/BEACON)</pre>'
							+'<p>Takes a mandatory token ID, and a mandatory type of light source.</p>'
							+'<p>This command sets the light source type that the identified token is using, and changes the Roll20 Dynamic Lighting settings of the token to the relevant value shown under section 5.1, or turn off all lighting effects for the selected token if NONE is specified.</p>'
							+'<br>'
							+'<h2>6.Other commands</h2>'
							+'<h3>6.1 Display help on these commands</h3>'
							+'<pre>--help</pre>'
							+'<p>This command does not take any arguments.  It displays the mandatory and optional arguments, and a brief description of each command.</p>'
							+'<h3>6.2 Configure API behavior</h3>'
							+'<pre>--config [PROF/ALL-WEAPS/WEAP-CLASS/ALL-ARMOUR/MASTER-RANGE/SPECIALIST-RULES/SPELL-NUM] | [TRUE/FALSE]</pre>'
							+'<p>Takes two optional arguments, the first a switchable flag name, and the second TRUE or FALSE.</p>'
							+'<p>Allows configuration of several API behaviors.  If no arguments given, displays menu for DM to select configuration.  Parameters have the following effects:</p>'
							+'<table>'
							+'	<thead><tr><th>Flag</th><th>True</th><th>False</th></tr></thead>'
							+'	<tr><th scope="row">PROF</th><td>Strictly apply non-proficient weapon penalties as per PHB</td><td>Use the non-proficient weapon penalty displayed on the Character Sheet</td></tr>'
							+'	<tr><th scope="row">ALL-WEAPS</th><td>Allow any character of any class to use and become proficient in any weapon.</td><td>Restrict the use of weapons by class to some degree set by WEAP-CLASS</td></tr>'
							+'	<tr><th scope="row">WEAP-CLASS</th><td>Weapons not allowed to a class get a penalty of -100</td><td>Weapons not allowed to a class get double non-proficient penalty</td></tr>'
							+'	<tr><th scope="row">ALL-ARMOUR</th><td>All armour types allowed for all classes</td><td>Armour not allowed to a class not included in AC calculations</td></tr>'
							+'	<tr><th scope="row">MASTER-RANGE</th><td>Ranged weapon Mastery gives double damage at Point Blank range</td><td>Ranged weapon Mastery not allowed, as per PHB</td></tr>'
							+'	<tr><th scope="row">SPECIALIST-RULES</th><td>Only Specialist Wizards specified in the PHB get an extra spell per spell level</td><td>Any non-Standard Wizard gets an extra spell per spell level</td></tr>'
							+'	<tr><th scope="row">SPELL-NUM</th><td>Spellcaster spells per level restricted to PHB rules</td><td>Spellcaster spells per level alterable using Misc Spells button</td></tr>'
							+'</table>'
							+'<h3>6.3 Check database completeness & integrity (GM only)</h3>'
							+'<pre>--check-db [ db-name ]</pre>'
							+'<p>Takes an optional database name or part of a database name: if a partial name, checks all character sheets with the provided text in their name that also have \'-db\' as part of their name.  If omitted, checks all character sheets with \'-db\' in the name.  Not case sensitive.  Can only be used by the GM.</p>'
							+'<p>This command finds all databases that match the name or partial name provided (not case sensitive), and checks them for completeness and integrity.  The command does not alter any ability macros, but ensures that the casting time (\'ct-\') attributes are correctly created, that the item lists are sorted and complete, and that any item-specific power & spell specifications are correctly built and saved.</p>'
							+'<p>This command is very useful to run after creating/adding new items as ability macros to the databases (see section 8 below).  It does not check if the ability macro definition itself is valid, but if it is then it ensures all other aspects of the database consistently reflect the new ability(s).</p>'
							+'<h3>6.4 Handshake with other APIs</h3>'
							+'<pre>-hsq from|[command]<br>'
							+'-handshake from|[command]</pre>'
							+'<p>Either form performs a handshake with another API, whose call (without the \'!\') is specified as <i>from</i> in the command parameters (the response is always an <b>-hsr</b> command).  The command calls the <i>from</i> API command responding with its own command to confirm that RoundMaster is loaded and running: e.g. </p>'
							+'<dl><dt>Received:</dt><dd><i>!attk -hsq init</i></dd>'
							+'<dt>Response:</dt><dd><i>!init -hsr attk</i></dd></dl>'
							+'<p>Optionally, a command query can be made to see if the command is supported by RoundMaster if the <i>command</i> string parameter is added, where <i>command</i> is the RoundMaster command (the \'--\' text without the \'--\').  This will respond with a <i>true/false</i> response: e.g.</p>'
							+'<dl><dt>Received:</dt><dd><i>!attk -handshake init|menu</i></dd>'
							+'<dt>Response:</dt><dd><i>!init -hsr attk|menu|true</i></dd></dl>'
							+'<h3>6.5 Switch on or off Debug mode</h3>'
							+'<pre>--debug (ON/OFF)</pre>'
							+'<p>Takes one mandatory argument which should be ON or OFF.</p>'
							+'<p>The command turns on a verbose diagnostic mode for the API which will trace what commands are being processed, including internal commands, what attributes are being set and changed, and more detail about any errors that are occurring.  The command can be used by the DM or any Player - so the DM or a technical advisor can play as a Player and see the debugging messages.</p>'
							+'<h3>6.6 Forcing a database reset to the API version</h3>'
							+'<p>A database can be rebuilt as the version that came with the current version of the API if you have accidentally altered one of the Ability macros or an attribute and caused functions not to work as expected.  The easiest way to achieve this is to find the offending database Character Sheet and delete it, then exit the campaign and re-enter.  If and only if the database Character Sheet is one of the following, it will be automatically re-written as the version distributed with the API:</p>'
							+'<p><i>MI-DB, MI-DB-Weapons, MI-DB-Ammo, MI-DB-Armour, MI-DB-Potions, MI-DB-Scrolls-Books, MI-DB-Wands-Staves-Rods, MI-DB-Rings, MI-DB-Light, MU-Spells-DB, PR-Spells-DB, Powers-DB.</i></p>'
							+'<br>'
							+'<h2>7. Using Character Sheet Ability/Action buttons</h2>'
							+'<p>The most common approach for the Player to run these commands is to use Ability macros on their Character Sheets which are flagged to appear as Token Action Buttons: Ability macros & Token Action Buttons are standard Roll20 functionality, refer to the Roll20 Help Centre for information on creating and using these.</p>'
							+'<p>In fact, the simplest configuration is to provide only Token Action Buttons for the menu commands: --spellmenu and --mimenu.  From these, most other commands can be accessed.</p>'
							+'<br>'
							+'<h2>8. How MagicMaster works</h2>'
							+'<h3>Item, Spell and Power databases</h3>'
							+'<p>MagicMaster uses a large range of items held in databases.  The current versions of these databases are distributed with the API, will be automatically created in any campaign the API is installed in and updated as new versions are released via Roll20.  Spell, Power and Item Databases are implemented as ability macros in specific library character sheets.  These macros can do anything that can be programmed in Roll20 using ability macros and calls to APIs, and are found and called by the MagicMaster API when the Player selects them using the menus provided by the MagicMaster functions.  The GM can add to the provided items in the databases using standard Roll20 Character Sheet editing, following the instructions provided in the <b>Magic Database Handout</b>.</p>'
							+'<h3>Spells and Powers</h3>'
							+'<p>The Ability Macros for spells and powers include descriptions of the spell they represent (limited, I\'m afraid, to avoid copyright issues), and also can optionally have API Buttons embedded in them which, if selected by the Player, can enact the actions of the spell or power.  The API Buttons call one or more of the API commands listed in this document, or commands provided by other APIs.  This is most powerful when combined with the <b>RoundMaster API</b> to implement token statuses and status markers with durations and effect macros, enabling the spells & powers to make temporary (or permanent, if desired) changes to the targeted creature\'s token and character sheet attributes.</p>'
							+'<p>The best way to learn about these capabilities is to look at example spell definitions in the databases and use those spells or powers to see what they do.</p>'
							+'<h3>Types of Item Provided</h3>'
							+'<p>The Item database is split into nine parts: Weapons, Ammunition, Armour, Lights, Potions, Scrolls & Spellbooks, Wands Staves & Rods, Rings, and Miscellaneous.  More might be added in future releases, and any DM can add more databases with their own items. </p>'
							+'<p>Armour can be used by the AttackMaster API to automatically set the Character\'s Armour Class, including altering AC as a shield is taken in hand or put away, and taking into account items such as Rings of Protection and Bracers of Defense.  Weapons and Ammunition can also be taken in hand to attack with.  Weapons can dance, and thrown weapons and ammunition can be magically self-returning.</p>'
							+'<p>Many magic items have actions that they can perform in the same way as Spells & Powers, using API Buttons in their macros that call MagicMaster API commands, or commands from other APIs.  As with spells & powers, this is most powerful when combined with the capabilities of the <b>RoundMaster API</b>.</p>'
							+'<p>Items can have stored spells (like Rings of Spell Storing) and the spells can be cast from them, and/or can have powers that can be consumed and are refreshed each day.  Again, using the RoundMaster API, the spells and powers can have temporary or permanent effects on Tokens and Character Sheets, if desired.</p>'
							+'<h3>Adding Items to the Character</h3>'
							+'<p>The MagicMaster API provides commands to perform menu-driven addition of items to the Character Sheet.  Using these commands will set up all the necessary fields so that the Player can use the items with the other APIs - if using MagicMaster then items should not be added directly to the Character Sheet.</p>'
							+'<p>Items can also be acquired by finding them in chests or on tables (simply tokens with images of chests or tables that represent Character Sheets with items added to them) that can be looted, or even dead bodies of NPCs that have been killed in battle.  MagicMaster provides commands that support a menu-driven way to perform looting.  Characters, especially Rogues, can even try to Pick Pockets to take items from NPCs (or even other Characters...), though failure may alert the DM (or other Player) to the attempt.  Containers can even be trapped, with magical consequences if the trap goes off!  On the other hand, Characters can also put items away into chests or onto tables or other storage places, or give them to other Characters or NPCs.</p>'
							+'<h3>Adding Spells & Powers to the Character</h3>'
							+'<p>Spells need to be added in two steps: 1. adding to a Character\'s or NPC\'s spell book; and 2. Memorising the spells each day.</p>'
							+'<p>The simplest way to add spells to a Character\'s spell books is to use the <b>CommandMaster API</b> functions that set up Character Sheets from scratch.  However, spells can be added to the Character Sheet manually: see the <b>RPG Master CharSheet Setup handout</b> for details of how to do this.  Either approach results in the Character having a list of spells at each spell level they can use that they have available to memorise.</p>'
							+'<p>Spells can be memorised using the --mem-spell MagicMaster command.  This limits the number of spells memorised at each level to the number that is valid for the Character, with their specific characteristics, class, level and other valid adjustments (though it is possible to add a "fudge factor" if needed).  Once memorised, they can be rememorised or changed at any time, though the DM usually limits this in game play to once each in-game day.  If a Player is happy with the spells a Character has, the Character just needs to rest at the end of the day to regain their spells (and powers, and recharging magic item charges).</p>'
							+'<p>Powers are added in exactly the same way as Spells.  The difference between the two is that Powers are granted to a Character, either as a function of the class they have adopted, or from being granted powers in game-play.  Of course, NPCs and creatures also have many various powers.  Some Powers can be used more than once a day, or even \'at will\' (an example is Priests turning undead).</p>'
							+'<h3>Using Items</h3>'
							+'<p>Items possessed by the Character can be used to perform their functions, using MagicMaster menus.  When used with the InitiativeMaster API, the action for the next round can be the use of a specific item the Character has on them, with the speed of that item.  This may use charges or consume quantities of the item, and these charges may or may not be regained overnight, or through other means.  The items use Roll20 ability macros that can be as simple as putting text in the chat window explaining what the item does, through to much more complex targeting of effects on the user, a single other target, or all tokens in a defined area.  When used with the RoundMaster API, targeted tokens can have a status marker applied with a pre-determined duration and associated effects at the start, each round and when it finishes.  Items that are totally consumed will automatically disappear from the Character Sheet.</p>'
							+'<h3>Casting spells and using powers</h3>'
							+'<p>Spells memorised by the Character can be cast using MagicMaster menus.  As with items, when used with the InitiativeMaster API the action for the next round can be the casting of a specific spell, with the speed of the Casting Time.  Casting a spell will remove it from memory for the rest of the day, but a rest will bring it back.  Like items, spells use Roll20 ability macros and thus can perform any function a macro or an API call can achieve.  The same capability to affect tokens and Character Sheets is available if used with the RoundMaster API.</p>'
							+'<h3>Dynamic lighting for tokens</h3>'
							+'<p>MagicMaster API provides commands to change the lighting settings of the token to reflect illumination, as if holding various light sources.  This includes both radiant light sources such as hooded lanterns, torches, continual light gems, magic items and magic armour, and also directed light sources such as beacon lanterns and bullseye lanterns which only illuminate in beams.</p>'
							+'<h3>DM tools</h3>'
							+'<p>The DM is provided with tools to be able to add items to chests, NPCs, Characters etc.  These tools allow the DM to also change certain aspects of the items, including the displayed name and the cursed status of the item.  Items that are cursed are not obvious to Characters and Players, and such items can be \'hidden\' and appear to be other items until revealed as the cursed item by the DM.</p>'
							+'<p>The tools also allow the DM to increase or restrict the number of items Characters can have on their person: it is then possible to give each Character a \'backpack\' token/character sheet, which the Character can store items to and get items from - of course, retrieving an item from the backpack takes a round (at the DM\'s discression - the system does not impose this).</p>'
							+'<p>DMs can also add their own items, spells and powers to additional databases (the provided databases should not be added to, but entries can be replaced by new entries in your own databases - updates will not replace your own databases - see the <b>Magic Database Help handout</b>).  This requires some knowledge of Roll20 macro programming and use of APIs.  See the Roll20 Help Centre for information.</p>'
							+'</div>',
						},
	RPGCS_Setup:		{name:'RPGMaster CharSheet Setup',
						 version:1.06,
						 avatar:'https://s3.amazonaws.com/files.d20.io/images/257656656/ckSHhNht7v3u60CRKonRTg/thumb.png?1638050703',
						 bio:'<div style="font-weight: bold; text-align: center; border-bottom: 2px solid black;">'
							+'<span style="font-weight: bold; font-size: 125%">RPGMaster CharSheet Setup v1.06</span>'
							+'</div>'
							+'<div style="padding-left: 5px; padding-right: 5px; overflow: hidden;">'
							+'<h2>Character Sheet and Token setup for use with RPGMaster APIs</h2>'
							+'<h3>1. Token configuration</h3>'
							+'<p>The API can work with any Token configuration but requires tokens that are going to participate in API actions to represent a Character Sheet, so that actions relevant to the token and the character it represents can be selected. </p>'
							+'<p>A single Character Sheet can have multiple Tokens representing it, and each of these are able to do individual actions made possible by the data on the Character Sheet jointly represented.  However, if such multi-token Characters / NPCs / creatures are likely to encounter spells that will affect the Character Sheet (such as <i>Haste</i> and <i>Slow</i>) they must be split with each Token representing a separate Character Sheet, or else the one spell will affect all tokens associated with the Character Sheet, whether they were targeted or not!  In fact, <b>it is recommended that tokens and character sheets are 1-to-1 to keep things simple.</b></p>'
							+'<p>The recommended Token Bar assignments for all APIs in the Master Series are:</p>'
							+'<pre>Bar1 (Green Circle):	Armour Class (AC field) - only current value<br>'
							+'Bar2 (Blue Circle):	Base Thac0 (thac0-base field) before adjustments - only current value<br>'
							+'Bar3 (Red Circle):	Hit Points (HP field) - current & max</pre>'
							+'<p>It is recommended to use these assignments, and they are the bar assignments set by the <b>CommandMaster API</b> if its facilities are used to set up the tokens.  All tokens must be set the same way, whatever way you eventually choose.</p>'
							+'<p>These assignments can be changed in each API, by changing the fields object near the top of the API script (<b>note:</b> no underscore, and \'bar#\' and \'value\' or \'max\' are separate entries in an array of 2 elements).  <b><i><u>All APIs must use the same field definitions</u></i></b>:</p>'
							+'<pre>fields.Token_AC:	defines the token field for the AC value (normally [\'bar1\',\'value\'])<br>'
							+'fields.Token_MaxAC:	defines the token field for the AC max (normally [\'bar1\',\'max\'])<br>'
							+'fields.Token_Thac0:	defines the token field for the Thac0 value (normally [\'bar2\',\'value\'])<br>'
							+'fields.Token_MaxThac0: defines the token field for the Thac0 max (normally [\'bar2\',\'max\'])<br>'
							+'fields.Token_HP:	defines the token field for the HP value (normally [\'bar3\',\'value\'])<br>'
							+'fields.Token_MaxHP:	defines the token field for the HP max (normally [\'bar3\',\'max\'])</pre>'
							+'<p>Alter the bar numbers appropriately or, <b><u><i>if you are not wanting one or more of these assigned</i></u></b>: leave the two elements of the array as [\'\',\'\'].  The system will generally work fine with reassignment or no assignment, but not always.  Specifically, some effects in the Effects-DB, which implement spell effects on Character Sheets and Tokens, may not set the right values if no assignment of one or more of HP, AC & Thac0 are made to the Token.</p>'
							+'<br>'
							+'<h3>2. Use with various game system character sheets</h3>'
							+'<p>The API issued is initially set up to work with the AD&D 2E character sheet (as this is what the author mostly plays).  However, it can be set up for any character sheet.  In the AttackMaster API code, right at the top, is an object definition called \'fields\': see section 3 for details.  This can be altered to get the API to work with other character sheets.</p>'
							+'<p>The coding of the API is designed to use the AD&D 2E system of attack calculations, armour class values and saving throw management.  If you use another system (e.g. the D&D 5e system) the API coding will need to change.  This might be a future enhancement.</p>'
							+'<h3>3. Matching the API to a type of Character Sheet</h3>'
							+'<p>The API has an object definition called \'fields\', which contains items of the form </p>'
							+'<pre>Internal_api_name: [sheet_field_name, field_attribute, optional_default_value, optional_set_with_worker_flag]</pre>'
							+'<p>A typical example might be:</p>'
							+'<pre>Fighter_level:[\'level-class1\',\'current\'],<br>'
							+'Or<br>'
							+'MUSpellNo_memable:[\'spell-level-castable\',\'current\',\'\',true],</pre>'
							+'<p>The <i>internal_api_name</i> <b><u>must not be altered!</b></u> Doing so will cause the system not to work.  However, the <i>sheet_field_name</i> and <i>field_attribute</i> can be altered to match any character sheet.</p>'
							+'<p>Table names are slightly different: always have an <i>internal_api_name</i> ending in \'_table\' and their definition specifies the repeating table name and the index of the starting row of the table or -1 for a static field as the 1<sup>st</sup> row.</p>'
							+'<p><i>Internal_api_table: [sheet_repeating_table_name,starting_index]</i></p>'
							+'<p>An example is:</p>'
							+'<pre>MW_table:[\'repeating_weapons\',0],</pre>'
							+'<p>The <i>internal_api_table</i> <b><u>must not be altered!</b></u> Doing so will cause the system not to work.  However, the <i>sheet_repeating_table_name</i> and <i>starting_index</i> can be altered to match any character sheet.</p>'
							+'<p>Each character sheet must have repeating tables to hold weapons, ammo and magic items, as well as other data.  By default, melee weapons \'in hand\' are held in sections of the repeating_weapons table, melee weapon damage in the repeating_weapons-damage table, ranged weapons in the repeating_weapons2 table, ammo in the repeating_ammo table, and magic items are held in the repeating_potions table.  The table management system provided by the API expands and writes to repeating attributes automatically, and the DM & Players do not need to worry about altering or updating any of these tables on the Character Sheet. </p>'
							+'<h3>4. Character Attributes, Races, Classes and Levels</h3>'
							+'<p>Character Attributes of <i>Strength, Dexterity, Constitution, Intelligence, Wisdom</i> and <i>Charisma</i> are generally not directly important to the RPGMaster Series APIs, but the resulting bonuses and penalties are.  All Attributes and resulting modifiers should be entered into the Character Sheet in the appropriate places (that is in the Character Sheet fields identified in the \'fields\' API object as noted in section 2 above).</p>'
							+'<p>The Character\'s race is also important for calculating saves and ability to use certain items.  The race should be set in the appropriate Character Sheet field.  Currently, the races <i>\'dwarf\', \'elf\', \'gnome\', \'halfelf\', \'halfling\', \'half-orc\'</i> and <i>\'human\'</i> are implemented (not case sensitive, and spaces, hyphens and underscores are ignored).  If not specified, <i>human</i> is assumed.  The race impacts saves, some magic items and armour, and bonuses on some attacks.</p>'
							+'<p>The system supports single-class and multi-class characters.  Classes must be entered in the appropriate fields on the Character Sheet.  Classes and levels affect spell casting ability, ability to do two-weapon attacks with or without penalty, and the ability to backstab and the related modifiers, among other things.  Class and level also determine valid weapons, armour, shields, some magic items and saves.</p>'
							+'<p><b>Important Note:</b> on the Advanced D&D 2e Character Sheet, Fighter classes must be in the first class column, Wizard classes in the second column, Priest classes in the third, Rogues in the fourth, and Psions (or any others) in the fifth.  It is important that these locations are adhered to.</p>'
							+'<p><b>Note:</b> classes of Fighter and Rogue (such as Rangers and Bards) that can use clerical &/or wizard spells will automatically be allowed to cast spells once they reach the appropriate level by AD&D 2e rules, but not before.  They <b><u>do not</b></u> need to have levels set in the corresponding spell-caster columns - the casting ability & level is worked out by the system</p>'
							+'<p>The following Classes are currently supported:</p>'
							+'<table><thead><tr><td>Fighter classes</td><td>Wizard Classes</td><td>Priest Classes</td><td>Rogue Classes</td></tr></thead>'
							+'<tr><td>Warrior</td><td>Wizard</td><td>Priest</td><td>Rogue</td></tr>'
							+'<tr><td>Fighter</td><td>Mage</td><td>Cleric</td><td>Thief</td></tr>'
							+'<tr><td>Ranger</td><td>Abjurer</td><td>Druid</td><td>Bard</td></tr>'
							+'<tr><td>Paladin</td><td>Conjurer</td><td>Healer</td><td>Assassin</td></tr>'
							+'<tr><td>Beastmaster</td><td>Diviner</td><td>Priest of Life</td></tr>'
							+'<tr><td>Barbarian</td><td>Enchanter</td><td>Priest of War	</td></tr>'
							+'<tr><td>Defender (Dwarven)</td><td>Illusionist</td><td>Priest of Light</td></tr>'
							+'<tr><td> </td><td>Invoker</td><td>Priest of Knowledge</td></tr>'
							+'<tr><td> </td><td>Necromancer</td><td>Shaman</td></tr>'
							+'<tr><td> </td><td>Transmuter</td></tr></table>'
							+'<p>The level for each class must be entered in the corresponding field.  Multiple classes and levels can be entered, and will be dealt with accordingly.  Generally, the most beneficial outcome for any combination will be used.  </p>'
							+'<h3>5. Magic Items and Equipment</h3>'
							+'<p>All magic items and standard equipment, including weapons, armour, lanterns etc, are held in the Items table, which by default is set to the potions table, <i>repeating_potions</i>, on the Character Sheet.  As with other fields, this can be changed in the <i>\'fields\'</i> object.  The best way to put items into this table is by using the <b>MagicMaster API</b> commands <b>--edit-mi</b> or the GM-only command <b>--gm-edit-mi</b>.  Alternatively, the <b>AttackMaster --edit-weapons</b> command can be used to load weapons, ammunition and armour into the Items table.  It is generally possible to enter item names and quantities directly into the table and use them within the system, but only items that also exist in the supplied databases will actually work fully with the API (i.e. be recognised by the API as weapons, armour, ammo, etc).  Other items can be in the table but will not otherwise be effective.</p>'
							+'<p>Items can be added to the databases.  See the Database Handouts for more information on the databases.</p>'
							+'<h3>6. Weapons and Ammo</h3>'
							+'<p>For the APIs to work fully the melee weapons, damage, ranged weapons and ammo must be selected using the <b>AttackMaster --weapon</b> command to take the weapon \'in hand\'.  This will display a menu to take weapons and shields from the Items table and take them in hand, ready to use.  This automatically fills all the correct fields for the weapons and ammo to make attacks, including many fields that are not displayed.  Entering weapon data directly into the melee weapon, damage, ranged weapon and ammo tables will generally work, but will be overwritten if the --weapon command is used.  Also, some API functions may not work as well or at all.</p>'
							+'<p>For the <b>InitiativeMaster API</b> to support weapon attack actions weapon name, speed and number of attacks are the most important fields.  For the <b>AttackMaster API</b> to support attack rolls, proficiency calculations, ranged attacks, strength and dexterity bonuses, and other aspects of functionality, fill in as many fields as are visible on the character sheet.  When entering data manually, ensure that the row a melee or ranged weapon is in matches the row damage or ammo is entered in the respective tables (there is no need to do this if using AttackMaster functions to take weapons in-hand, as the relevant lines are otherwise linked).</p>'
							+'<h3>7. Weapon Proficiencies</h3>'
							+'<p>Weapon Proficiencies must be set on the Character Sheet.  This is best done by using the <b>CommandMaster API</b> character sheet management functions, but can be done manually.  Both specific weapons and related weapon groups can be entered in the table, and when a Player changes the character\'s weapons in-hand the table of proficiencies will be consulted to set the correct bonuses and penalties.  Weapon specialisation and mastery (otherwise known as double specialisation) are supported by the CommandMaster functions, but can also be set by ticking/selecting the relevant fields on the Character Sheet weapon proficiencies table.  If a weapon or its related weapon group does not appear in the list, it will be assumed to be not proficient.</p>'
							+'<h3>8. Spell books and memorisable spells</h3>'
							+'<p>The best (and easiest) way to give a Character or NPC spells and powers is to use <b>CommandMaster API</b> to add spells and powers to the Character\'s spellbooks, and <b>MagicMaster API</b> to memorise and cast spells and use powers.  However, for the purposes of just doing initiative and selecting which spell to cast in the next round, the spells and powers can be entered manually onto the character sheet.  Spells are held in the relevant section of the Spells table, which by default is set to the character sheet spells table, <i>repeating_spells</i>.  As with other fields, this can be changed in the <i>\'fields\'</i> object.  Note that on the Advanced D&D 2e character sheet Wizard spells, Priest spells & Powers are all stored in various parts of this one very large table.</p>'
							+'<p>If you are just using the character sheet fields to type into, add spells (or powers) to the relevant "Spells Memorised" section (using the [+Add] buttons to add more as required) <b>a complete row at a time</b> (that is add columns before starting the next row).  Enter the spell names into the "Spell Name" field, and "1" into each of the "current" & "maximum" "Cast Today" fields - the API suite <i>counts down</i> to zero on using a spell, so in order for a spell to appear as available (not greyed out) on the initiative menus, the "current" number left must be > 0.  This makes spells consistent with other tables in the system (e.g. potion dose quantities also count down as they are consumed, etc).</p>'
							+'<p>Then, you need to set the "Spell Slots" values on each level of spell to be correct for the level of caster.  Just enter numbers into each of the "Level", "Misc." and "Wisdom" (for Priests) fields, and/or tick "Specialist" for the Wizard levels as relevant.  This will determine the maximum number of spells memorised each day, that will appear in the spells Initiative Menu.  Do the same for Powers using the "Powers Available" field.  As with other fields on the character sheet, each of these fields can be re-mapped by altering the <i>\'fields\'</i> object in the APIs.</p>'
							+'<p>Spells can only be cast if they have macros defined in the spell databases (see Spell Database Handout).  If the <b>CommandMaster API</b> is loaded, the DM can use the tools provided there to manage Character, NPC & creature spell books and granted powers from the provided spell & power databases.</p>'
							+'<p>The spells a spell caster can memorise (what they have in their spell books, or what their god has granted to them) is held as a list of spell names separated by vertical bars \'|\' in the character sheet attribute defined in <i>fields.Spellbook</i> (on the AD&D2E character sheet \'spellmem\') of each level of spell.  On the AD&D2E sheet, the spell books are the large Spell Book text fields at the bottom of each spell level tab.  The spell names used must be identical (though not case sensitive) to the spell ability macro names in the spell databases (hence the hyphens in the names).   So, for example, a 1<sup>st</sup> level Wizard might have the following in their large Wizard Level 1 spell book field:</p>'
							+'<pre>Armour|Burning-Hands|Charm-Person|Comprehend-Languages|Detect-Magic|Feather-fall|Grease|Identify|Light|Magic-Missile|Read-Magic|Sleep</pre>'
							+'<p>Only these spells will be listed as ones they can memorise at level 1.  When they learn new spells and put them in their spell book, this string can be added to just by typing into it.  When they reach 3<sup>rd</sup> level and can have 2<sup>nd</sup> level spells, the following string might be put in the spell book on the Level 2 Wizard spells tab:</p>'
							+'<pre>Alter-Self|Invisibility|Melfs-Acid-Arrow|Mirror-Image|Ray-of-Enfeeblement</pre>'
							+'<p>Again, as they learn more spells and put them in their spell book, just edit the text to add the spells.</p>'
							+'<p>Once these spell books are defined, the DM or Player can use the <b>MagicMaster -mem-spell</b> command (or an action button and associated ability macro on the Character Sheet) to memorise the correct number of these spells in any combination and store those on the Character Sheet.</p>'
							+'<h3>9. Powers</h3>'
							+'<p>Powers can only be used if they are defined in the Powers database - see Database handouts.  If the <b>CommandMaster API</b> is also loaded, the DM can use the tools provided there to manage Character, NPC & creature spellbooks and granted powers.</p>'
							+'<p>Powers work in an almost identical way to Wizard & Priest spells, except that there is only 1 level of powers.  Powers that the character has are added to the spell book on the Powers tab in the same way as spells, and then memorised using the <b>--mem-spell</b> command (which also works for powers with the right parameters).</p>'
							+'</div>',
						},
	MagicDatabase_Help:	{name:'Magic Database Help',
						 version:1.12,
						 avatar:'https://s3.amazonaws.com/files.d20.io/images/257656656/ckSHhNht7v3u60CRKonRTg/thumb.png?1638050703',
						 bio:'<div style="font-weight: bold; text-align: center; border-bottom: 2px solid black;">'
							+'<span style="font-weight: bold; font-size: 125%">Magic Database Help v1.12</span>'
							+'</div>'
							+'<div style="padding-left: 5px; padding-right: 5px; overflow: hidden;">'
							+'<h1>Spell, Power & Magic Item Databases</h1>'
							+'<h6><i>for MagicMaster v'+version+'</i></h6>'
							+'<h2>1. General Database information</h2>'
							+'<p>The MagicMaster API uses a number of Character Sheets as databases to hold Ability Macros defining spells, powers and magic items and their effects.  The API is distributed with many spell, power & magic item definitions, and checks for, creates and updates these Character Sheet databases on start-up.  DMs can add their own weapons, ammo and armour to additional databases, but the databases provided are totally rewritten when new updates are released so the DM must add their own database sheets.  If these provided databases are accidentally deleted, they will be automatically recreated the next time the Campaign is opened. Additional databases should be named as follows:</p>'
							+'<table>'
							+'	<tr><th scope="row">Wizard Spells:</th><td>additional databases: MU-Spells-DB-<i>[added name]</i> where <i>[added name]</i> can be replaced with anything you want.</td></tr>'
							+'	<tr><th scope="row">Priest Spells:</th><td>additional databases: PR-Spells-DB-<i>[added name]</i> where <i>[added name]</i> can be replaced with anything you want.</td></tr>'
							+'	<tr><th scope="row">Powers:</th><td>additional databases: Powers-DB-<i>[added name]</i> where <i>[added name]</i> can be replaced with anything you want.</td></tr>'
							+'	<tr><th scope="row">Magic Items:</th><td>additional databases: MI-DB-<i>[added name]</i> where <i>[added name]</i> can be replaced with anything you want.</td></tr>'
							+'</table>'
							+'<p><b>However:</b> the system will ignore any database with a name that includes a version number of the form "v#.#" where # can be any number or group of numbers e.g. MI-DB v2.13 will be ignored.  This is so that the DM can version control their databases, with only the current one (without a version number) being live.</p>'
							+'<p>There can be as many additional databases as you want. Other Master series APIs come with additional databases, some of which overlap - this does not cause a problem as version control and merging unique macros is managed by the APIs.</p>'
							+'<p><b>Important Note:</b> all Character Sheet databases <b><u><i>must</i></u></b> have their <i>\'ControlledBy\'</i> value (found under the [Edit] button at the top right of each sheet) set to <i>\'All Players\'</i>.  This must be for all databases, both those provided (set by the API) and any user-defined ones.  Otherwise, Players will not be able to run the macros contained in them.</p>'
							+'<p>Each database has a similar structure, with:</p>'
							+'<ul>'
							+'	<li>Ability Macros named as the spell, power or magic item specified, and used to describe and provide effects for spells, powers and magic items using the commands in the Magic Master API;</li>'
							+'	<li>Custom Attributes with the attribute name "ct-ability-macro-name", one per Ability Macro, which defines the casting time and casting cost for spells & powers, and speed and MI type for magic items;</li>'
							+'	<li>An entry in a list on the character sheet in the spell book of the relevant Character Sheet tab (Spell Level of the spell defined, Powers tab, or various spell books for different Magic Items - see MI entry below).</li>'
							+'</ul>'
							+'<p>Ability Macros can be whatever the DM wants and can be as simple or as complex as desired. Roll Templates are very useful when defining spell, power and magic item ability macros.  When a Player or an NPC or Monster views or casts a spell, power or uses a magic item the Magic Master API runs the relevant Ability Macro from the databases as if it had been run by the Player from the chat window.  All Roll20 functions for macros are available.</p>'
							+'<h3>1.1 Replacing Spells & Items</h3>'
							+'<p>If you want to replace any spell or item provided in any of the databases, you can do so simply by creating an Ability Macro in one of your own databases with exactly the same name as the provided item to be replaced.  The API gives preference to Ability Macros in user-defined databases, so yours will be selected in preference to the one provided with the APIs.</p>'
							+'<br>'
							+'<h2>2. Spells and Powers Databases</h2>'
							+'<p>Spells/Powers databases are all character sheets that have names that start with</p>'
							+'<p>	<b>Wizard Spells:</b>	MU-Spells-DB-[added name]<br>'
							+'	<b>Priest Spells:</b>	PR-Spells-DB-[added name]<br>'
							+'	<b>Powers:</b>			Powers-DB-[added name]</p>'
							+'<p>Those with version numbers of the form v#.# as part of the name will be ignored.</p>'
							+'<p>As previously stated, each spell or power definition has 3 parts in the database (see Section 1): an Ability Macro with a name that is unique and matches the spell or power, an Attribute with the name of the Ability Macro preceded by "ct-", and a listing in the database character sheet of the ability macro name separated by \'|\' along with others of the same level in the spell book of the level of the spell or power.  The quickest way to understand these entries is to examine existing entries.  Do go to the root databases and take a look (but be careful not to alter anything unless you know what you\'re doing!)</p>'
							+'<p><b>Note:</b> The DM creating new spells and powers does not need to worry about anything other than the Ability Macro in the database, as running the command <b><i>--check-db</i></b> will update all other aspects of the database appropriately for all databases, as long as the Specs and Data fields are correctly defined. Use the name of the particular database as a parameter to check and update just that database.  Running the command <b><i>--check-db</i></b> with no parameters will check and update all databases.</p>'
							+'<p>Ability macros can be added to a database just by using the [+Add] button at the top of the Abilities column in the Attributes and Abilities tab of the Database Character Sheet, and then using the edit "pencil" icon on the new entry to open it for editing.  Ability macros are standard Roll20 functionality and not dependent on the API.  Refer to the Roll20 Help Centre for more information.</p>'
							+'<p><b>The Ability Macro</b> for a spell may look something like this:</p>'
							+'<h3>Sleep</h3>'
							+'<p style="display: inline-block; background-color: lightgrey; border: 1px solid black; padding: 4px; color: dimgrey; font-weight: extra-light;">/w "@{selected|character_name}" &{template:2Espell}{{title=@{selected|casting-name} casts Sleep as a level @{selected|casting-level} caster}}{{splevel=Level 1 Wizard}}{{school=Enchantment/Charm}}<mark style="color:green">Specs=[Sleep,MUspellL1,1H,Enchantment-Charm]</mark>{{range=90 ft}}{{components=V, S, M}}{{duration=[[5*({10,@{selected|casting-level}}kl1)]] Rounds}}{{time=1}}{{aoe=[30ft Cube](<span style="color:red">!rounds --aoe @{selected|token_id}|square|feet|90|30||dark</span>)}}{{save=None}}{{damage=[Sleep them](<span style="color:red">!rounds --target area|@{selected|token_id}|&#64;{target|Select who to sleep|token_id}|Sleep|[[5*({10,@{selected|casting-level}}kl1)]]|-1|Snoring away, shake to awaken|sleepy</span>)}}<mark style="color:blue">SpellData=[w:Sleep,lv:1,sp:1,gp:0.01,cs:VSM]</mark>{{effects=Up to [2d4](!\&#13;\&#47;r 2d4) Hit Dice of creatures with 4 HD or less are put to sleep beginning with the lowest HD creatures in the Area of Effect.}}{{materials=a pinch of fine sand, rose petals, or a live cricket.}}</p>'
							+'<p>The ability specification for this Sleep spell uses a Roll20 Roll Template, in this case defined by the Advanced D&D 2e Character Sheet by Peter B (see the documentation for the Character Sheet on Roll20 for specifications of this Roll Template), but any Roll Template you desire can be used.  The entries in the Roll Template itself can be anything you desire, giving as much or as little information as you want.  However, the important elements for the MagicMaster API are those highlighted.  In red, two API buttons grant the player access to run RoundMaster API commands to show the Area of Effect of the spell, and then to mark affected tokens with a "Sleepy" status.  Each of the elements important to the database are inserted between the elements of the Roll Template, meaning they will not be seen by the player when the macro is run.  Generally spaces, hyphens and underscores in the data elements are ignored, and case is not significant.  Each element is described below:</p>'
							+'<pre>Specs = [Type, Class, Handedness, Spell School]</pre>'
							+'<p>The Specs section describes what spell type and school this spell belongs to.  These fields must be in this order.  This format is identical for all database items, whether in these databases or others used by the Master series of APIs.</p>'
							+'<table>'
							+'	<tr><th scope="row">Type</th><td>the type of the spell, often the same as the ability macro name.</td></tr>'
							+'	<tr><th scope="row">Class</th><td>one of MUSpellL#, PRSpellL#, or Power, where # is replaced by the spell level number.</td></tr>'
							+'	<tr><th scope="row">Handedness</th><td>#H, where # is the number of hands needed to cast the spell - i.e. does it have a somatic component.</td></tr>'
							+'	<tr><th scope="row">Spell School</th><td>the group of related spells that the spell belongs to.</td></tr>'
							+'</table>'
							+'<pre>SpellData=[w:Sleep,lv:1,sp:1,gp:1,cs:VSM]</pre>'
							+'<p>The SpellData section specifies the data relating to the use of the spell.  These fields can be in any order.</p>'
							+'<table>'
							+'	<tr><th scope="row">w:</th><td>&lt;text&gt;</td><td>the name of the spell</td></tr>'
							+'	<tr><th scope="row">st:</th><td>&lt;text&gt;</td><td>the sphere of a priest spell (not used for wizard spells)</td></tr>'
							+'	<tr><th scope="row">lv:</th><td>&lt;#&gt;</td><td>the level of the spell</td></tr>'
							+'	<tr><th scope="row">sp:</th><td>&lt;[-]# or dice roll spec&gt;</td><td>the casting time in segments for the spell.  Can be >10 e.g. 20 for 2 rounds, or negative, or even a dice roll</td></tr>'
							+'	<tr><th scope="row">gp:</th><td>&lt;#[.#]&gt;</td><td>the cost of the material components of the spell in GP: fractions converted to SP & CP</td></tr>'
							+'	<tr><th scope="row">cs:</th><td>&lt;VSM&gt;</td><td>the component of the spell (Verbal, Somatic, Material) - can be any combination</td></tr>'
							+'</table>'
							+'<p>The casting time (or speed) <b>sp:</b> can be negative, meaning it gives a negative modifier to individual initiative (if <b>InitMaster API</b> is being used).  It can also be greater than 10 segments, meaning it takes longer than 1 Round to cast.  Multiply the number of Rounds it will take to cast by 10, or the number of Turns it will take to cast by 100 (if using the <b>InitMaster API</b> the rounds will be automatically counted down and the spell actually cast in the appropriate round, unless the casting is interrupted).  It can also be a dice roll specification, which will be rolled at the point that a character selects the spell, power or item to use in a particular round, which means the speed can vary from round to round.  Potions are always of this nature (see the AD&D2e DMG p141).</p>'
							+'<p>The cost of material components, <b>gp:</b>, is deducted from the Caster\'s money on their Character Sheet each time the spell is cast.  The GM is informed of the spell being cast, by whom, and how much money it cost and how much money the Caster has left for each casting.</p>'
							+'<p>The components of the spell, <b>cs:</b>, is currently not used and is for future expansion capabilities.</p>'
							+'<p><b>The Ability Macro</b> for a Power may look something like this:</p>'
							+'<h3>Turn Undead</h3>'
							+'<p style="display: inline-block; background-color: lightgrey; border: 1px solid black; padding: 4px; color: dimgrey; font-weight: extra-light;">/w "@{selected|character_name}" &{template:2Espell}{{title=@{selected|token_name} attempts to Turn Undead as a level @{selected|pr-casting-level} @{selected|class3}}} {{splevel=Power}} {{school=Necromancy}}<mark style="color:green">Specs=[Turn-Undead,Power,1H,Necromancy]</mark>{{components=V,S}}{{time=[[10]]}}{{range=0}}{{duration=Until broken}}{{aoe=Undead within line of sight}}{{save=See turning table}}{{reference=PHB p103}}{{damage=[Turn It](<span style="color:red">!rounds --target area|@{selected|token_id}|&#64;{target|Select undead|token_id}|Turned|99|0|Turned undead, flee if free-willed, stand aside if controlled|screaming</span>)}}<mark style="color:blue">SpellData=[w:Turn Undead, sp:10, cs:VS]</mark>{{effects=**Remember that Paladins turn as a Priest of 2 levels lower.**<br>'
							+'Attempting to turn counts as an action, requiring one round and occurring during the character\'s turn in the initiative order (thus, the undead may get to act before the character can turn them). The mere presence of the character is not enough--a touch of drama from the character is important. Speech and gestures are important, so the character must have his hands free and be in a position to speak. However, turning is not like spellcasting and is not interrupted if the character is attacked during the attempt.<br>'
							+'To resolve a turning attempt, look on Table 61. Cross-index the Hit Dice or type of the undead with the level of the character (two levels lower for a paladin). If there is a number listed, roll 1d20. If the number rolled is equal to or greater than that listed, the attempt is successful. If the letter "T" (for "turned") appears, the attempt is automatically successful without a die roll. If the letter "D" (for "dispel") is given, the turning utterly destroys the undead. A dash (--) means that a priest or paladin of that level cannot turn that type of undead. A successful turn or dispel affects 2d6 undead. If the undead are a mixed group, the lowest Hit Dice creatures are turned first.<br>'
							+'Only one die is rolled regardless of the number of undead the character is attempting to turn in a given round. The result is read individually for each type of undead.}}{{material=The Priest\'s holy symbol}}</p>'
							+'<p>Essentially, Powers are just Spells by another name, that can be cast multiple times per day, and are innate to the Character\'s class, or to a creature.  The specification is, therefore, almost identical to a spell.  In the author\'s campaigns, Powers do not consume material components and therefore do not cost money to use (except in rare circumstances) hence there being no <b>gp:</b> specification (it defaults to 0gp), but other DMs can add material costs for Powers if desired.  Powers are all 1 level, hence no <b>lv:</b> specification.</p>'
							+'<br>'
							+'<h2>3. Magic Item Databases</h2>'
							+'<p>Magic Item databases are all character sheets that have names such as</p>'
							+'<p>	<b>Magic Items:</b>		MI-DB-[added name]</p>'
							+'<p>And can have anything put at the end, though those with version numbers of the form v#.# as part of the name will be ignored.</p>'
							+'<p>As previously stated and as for other magic, each magic item definition has 3 parts in the database (see Section 1): an Ability Macro with a name that is unique and identifies the magic item, an Attribute with the name of the Ability Macro preceded by "ct-", and a listing in the database character sheet of the ability macro name separated by \'|\' along with others of the same magic item type, which is one of: Potion, Scroll, Rod/Stave/Wand, Weapon, Armour, Ring, Miscellaneous, and also DM Only magic items.  The quickest way to understand these entries is to examine existing entries.  Do go to the root database and take a look (but be careful not to alter anything unless you know what you\'re doing!)</p>'
							+'<p><b>Note:</b> The DM creating new spells and powers does not need to worry about anything other than the Ability Macro in the database, as running the command <b><i>--check-db</i></b> will update all other aspects of the database appropriately for all databases, as long as the Specs and Data fields are correctly defined. Use the name of the particular database as a parameter to check and update just that database.  Running the command <b><i>--check-db</i></b> with no parameters will check and update all databases.</p>'
							+'<p>Ability macros can be added to a database just by using the [+Add] button at the top of the Abilities column in the Attributes and Abilities tab of the Database Character Sheet, and then using the edit "pencil" icon on the new entry to open it for editing.  Ability macros are standard Roll20 functionality and not dependent on the API.  Refer to the Roll20 Help Centre for more information.</p>'
							+'<p><b>The Ability Macro</b> may look something like this:</p>'
							+'<h3>Oil-of-Etherealness</h3>'
							+'<p style="display: inline-block; background-color: lightgrey; border: 1px solid black; padding: 4px; color: dimgrey; font-weight: extra-light;">/w "@{selected|character_name}" &{template:2Espell}{{title=Oil of Etherealness}} {{splevel=Oil}} {{school=Alteration}}<mark style="color:green">Specs=[Oil of Etherealness,Potion,1H,Alteration]</mark>{{components=M}}{{time=[[3]] rounds after application}} <mark style="color:blue">PotionData=[sp:30,rc:charged]</mark>{{range=User}}{{duration=4+1d4 turns}} {{aoe=User}} {{save=None}} {{healing=[Become Ethereal](<span style="color:red">!rounds --target single|@{selected|token_id}|&#64;{target|Select a target|token_id}|Oil-of-Etherealness|&#91;[10*(4+1d4)]&#93;|-1|Ethereal|Ninja-mask</span>)}}{{effects=This potion is actually a light oil that is applied externally to clothes and exposed flesh, conferring etherealness. In the ethereal state, the individual can pass through solid objects in any direction - sideways, upward, downward - or to different planes. The individual cannot touch non-ethereal objects.<br>'
							+'The oil takes effect three rounds after application, and it lasts for 4+1d4 turns unless removed with a weak acidic solution prior to the expiration of its normal effective duration. It can be applied to objects as well as creatures. One potion is sufficient to anoint a normal human and such gear as he typically carries (two or three weapons, garments, armor, shield, and miscellaneous gear). Ethereal individuals are invisible.}}{{materials=Oil}}</p>'
							+'<p>You might notice that the structure of this macro is extremely similar to that of a spell: indeed, it uses the same Roll Template.  As this is an Oil that achieves the same effect as a spell, this is not surprising.</p>'
							+'<p>However, there is one new field in the data section (in this case called the PotionData section):</p>'
							+'<table>'
							+'	<tr><th scope="row">rc:</th><td>&lt;MI-type&gt;</td><td>the recharging/curse type of the magic item.</td></tr>'
							+'</table>'
							+'<p>All magic items have a recharging/curse type: for details, see the <b>--gm-edit-mi</b> command in the MagicMaster API help documentation, section 4.1.  If not supplied for a magic item definition, it defaults to uncharged.  Generally, items in the database are not cursed-, but can have their type changed to cursed or some recharging cursed type when the DM stores them in a container or gives them to a Character using the <b>--gm-edit-mi</b> command.</p>'
							+'<p>Other magic items might use different structures, and be more complex:</p>'
							+'<h3>Bead-of-Force</h3>'
							+'<p style="display: inline-block; background-color: lightgrey; border: 1px solid black; padding: 4px; color: dimgrey; font-weight: extra-light;">/w "@{selected|character_name}" &{template:'+fields.defaultTemplate+'}{{name=Bead of Force}}{{subtitle=Magic Item}}<mark style="color:green">Specs=[Bead of Force,Miscellaneous,1H,Evocation]</mark>{{Speed=[[0]]}}<mark style="color:blue">MiscData=[w:Bead of Force,sp:0,rc:charged]</mark>{{Size=Tiny}}{{Range=[Up to 30yds](<span style="color:red">!rounds --aoe @{selected|token_id}|circle|yards|0|60||dark|true</span>)}}{{damage=[5d4](!&#13;&#47;gmroll 5d4 damage from Bead of Force in 10ft redius) damage in 10ft radius}}{{duration=3d4 rounds}}{{Save=[To escape sphere](!&#13;&#47;gmroll 1d20 Save vs. spell or captured in *Sphere of Force*)}}{{Effect=[Trapped in Sphere](<span style="color:red">!rounds --target area|@{selected|token_id}|Bead-of-Force|8|-1|\'Held in Sphere of Force\'|fishing-net</span>)}}{{desc=These small, black spheres might be mistaken for common beads, marbles, or unusually black but lusterless pearls. From 5-8 of these beads are usually found at one time. Each is about three-quarters of an inch in diameter and quite heavy, weighing almost an ounce. One can be hurled up to 30 yards.<br>'
							+'Upon impact, the bead sends forth a burst of force that inflicts 5d4 points of damage upon all creatures within a 10-foot radius of its center. Each victim is allowed a saving throw vs. spell. Those who save will be thrown out of the blast area, but those who fail to save will be encapsulated by a sphere of force after taking damage.<br>'
							+'The sphere will form around any and all such creatures in the 10-foot-radius area, even those of large size, and will persist for 3d4 rounds. Victims will be unable to escape except by the same means and used to bring down a wall of force spell.}}</p>'
							+'<p>The Bead of Force ability macro uses a Default Roll Template, which means the only mandatory field is the {{name=}} field, and the DM can define any other fields they want to describe and enact the magic item.  Here, an API button exists to do a saving throw with documented outcomes, and another API button can target an area with multiple tokens in to entrap them (if the DM rejects or confirms as they make or fail each saving throw).</p>'
							+'<br>'
							+'<h2>4. Magic Items with Powers or Spell-Storing</h2>'
							+'<p>Some magic items, especially artefacts and sentient items, can store spells and/or have powers similar to characters.  MagicMaster supports magic items of this type to a degree, although there are inevitably exceptions that the DM will have to get creative in their development!  These items use API buttons that call various MagicMaster commands to deliver their capabilities.</p>'
							+'<p>First to note is that <b>items that have powers and spells use spell slots in the owning character\'s character sheet</b>.  These spell slots should not be used by characters in your campaign.  If they are, errors might occur.  By default, on the AD&D2E character sheet the system uses Wizard Level 14 spell slots for magic item powers, and Wizard Level 15 spell slots for spell-storing magic items.  As standard AD&D2E only has spells up to level 9 this generally works without causing problems.</p>'
							+'<p>Next, in addition to the three standard elements of the Ability Macro, the \'ct-\' attribute and the listing, these items require a 4th element which specifies their powers and spells.  These are:</p>'
							+'<table>'
							+'	<tr><th scope="row">mi-muspells-[item-name]:</th><td>Wizard spells able to be stored in the magic item</td></tr>'
							+'	<tr><th scope="row">mi-prspells-[item-name]:</th><td>Priest spells able to be stored in the magic item</td></tr>'
							+'	<tr><th scope="row">mi-powers-[item-name]:</th><td>Powers able to be used by the magic item</td></tr>'
							+'</table>'
							+'<p>In each case the <i>[item-name]</i> is replaced by the Ability macro name (which is not case sensitive).</p>'
							+'<p><b>Note:</b> The DM creating new spell storing or power wielding magic items does not need to worry about anything other than the Ability Macro in the database, as running the command <b><i>--check-db</i></b> will update all other aspects of the database appropriately for all databases, as long as the Specs and Data fields are correctly defined. Use the name of the particular database as a parameter to check and update just that database.  Running the command <b><i>--check-db</i></b> with no parameters will check and update all databases.</p>'
							+'<p>When a spell-storing or power wielding magic item is added to a magic item bag or container using --edit-mi or --gm-edit-mi, these attributes are added to the character sheet and also they are parsed by the system and the spells and/or powers are created in the relevant spell books automatically.  When such an item is found in a container by a character, or passed from character to character, all of the stored spells & powers are deleted from the old character and created in the new character.  A character gaining such an item can use its spells and powers immediately.</p>'
							+'<p>Here is an example of a power wielding magic item:</p>'
							+'<h3>Ring-of-Shooting-Stars</h3>'
							+'<p style="display: inline-block; background-color: lightgrey; border: 1px solid black; padding: 4px; color: dimgrey; font-weight: extra-light;"><span style="color:red">!setattr --silent --sel --casting-level|1 --casting-name|@{selected|token_name}\'s Ring of Shooting Stars</span><br>'
							+'/w "@{selected|character_name}" &{template:'+fields.defaultTemplate+'}{{name=Ring of Shooting Stars}}{{subtitle=Ring}}<mark style="color:green">Specs=[Ring of Shooting Stars,Ring,1H,Evocation]</mark>{{Speed=[[5]]}}<mark style="color:blue">RingData=[w:Ring of Shooting Stars,sp:5,rc:charged,ns:6], [cl:PW,w:RoSS-Dancing-Lights,sp:5,pd:12], [cl:PW,w:RoSS-Light,sp:5,pd:2], [cl:PW,w:RoSS-Ball-Lightning,sp:5,pd:1], [cl:PW,w:RoSS-Shooting-Stars,sp:5,pd:3], [cl:PW,w:RoSS-Faerie-Fire,sp:5,pd:2], [cl:PW,w:RoSS-Spark-Shower,sp:5,pd:1]</mark> {{Size=Tiny}} {{Immunity=None}} {{Resistance=None}} {{Saves=None}} {{desc=This ring has two modes of operation - at night and underground - both of which work only in relative darkness.<br>'
							+'***During night hours, under the open sky***, the shooting stars ring will perform the following functions:<br>'
							+'- [*Dancing lights*](<span style="color:red">!magic --mi-power @{selected|token_id}|RoSS-Dancing-Lights|Ring-of-Shooting-Stars|1</span>) as spell (once per hour).<br>'
							+'- [*Light*](<span style="color:red">!magic --mi-power @{selected|token_id}|RoSS-Light|Ring-of-Shooting-Stars|1</span>), as spell (twice per night), 120-foot range.<br>'
							+'- [*Ball lightning*](<span style="color:red">!magic --mi-power @{selected|token_id}|RoSS-Ball-Lightning|Ring-of-Shooting-Stars|1</span>), as power (once per night).<br>'
							+'- [*Shooting stars*](<span style="color:red">!magic --mi-power @{selected|token_id}|RoSS-Shooting-Stars|Ring-of-Shooting-Stars|1</span>), as power (special).<br>'
							+'***Indoors at night, or underground***, the ring of shooting stars has the following properties:<br>'
							+'[*Faerie fire*](<span style="color:red">!magic --mi-power @{selected|token_id}|RoSS-Faerie-Fire|Ring-of-Shooting-Stars|1</span>) (twice per day) as spell<br>'
							+'[*Spark shower*](<span style="color:red">!magic --mi-power @{selected|token_id}|RoSS-Spark-Shower|Ring-of-Shooting-Stars|1</span>) (once per day) as power<br>'
							+'Range, duration, and area of effect of functions are the minimum for the comparable spell unless otherwise stated. Casting time is 5}}</p>'
							+'<p>Note that the ability macro starts with a call to the <b>ChatSetAttr API</b> to set the <i>casting-level</i> to 1 and the name of the caster to be <i><Character-name>\'s Ring of Shooting Stars</i>.  Not strictly necessary, but a nice cosmetic.</p>'
							+'<p>The data section now includes repeating data sets, one for each of the powers that the item has:</p>'
							+'<pre>RingData=[w:Ring of Shooting Stars,sp:5,rc:charged,ns:6], [cl:PW,w:RoSS-Dancing-Lights,sp:5,pd:12], … </pre>'
							+'<p>The first data set is very similar to the standard magic item data, with the addition of the <b>ns:</b> field, and is then followed by a number of repeated data sets specifying each of the powers:</p>'
							+'<table>'
							+'	<tr><th scope="row">ns:</th><td>&lt;#&gt;</td><td>The number of powers (or spells) that the item can wield or store</td></tr>'
							+'	<tr><th scope="row">cl:</th><td>&lt;MU/PR/PW&gt;</td><td>The type of the power/spell specification: PW=power, MU=wizard spell, PR=priest spell</td></tr>'
							+'	<tr><th scope="row">w:</th><td>&lt;text&gt;</td><td>The name of the power/spell - must be exactly the same as the database name (case ignored)</td></tr>'
							+'	<tr><th scope="row">sp:</th><td>&lt;[-/+]# / dice roll spec&gt;</td><td>The speed or casting time of the power/spell in segments</td></tr>'
							+'	<tr><th scope="row">pd:</th><td>&lt;-1/#&gt;</td><td>The available casts per day, or -1 for <i>\'at will\'</i></td></tr>'
							+'</table>'
							+'<p>By running the <b>--check-db</b> command (see section 6 and the note above) these data sets are used to correctly set up the database with the powers wielded, so that when a Character receives this item, the Character also gains the powers to use through the item.</p>'
							+'<p><b>Note:</b> if a Character picks up two Power-wielding items with exactly the same item name (i.e. two copies of the same item) the results are unpredictable.  This is best avoided.</p>'
							+'<p>Feel free to just copy the specification for a Ring-of-Shooting-Stars in the Rings database and save it to a new Ability Macro with a different name, and then alter the power names, speeds, and uses per day, as well as the API Button <b>--mi-power</b> commands and the other text, to form new power-wielding magic items.  Also, the Ring does not have to have 6 powers - just remove or add one or more repeating data sets to reduce or increase the number of powers.</p>'
							+'<p>Here is an example of a spell-storing magic item:</p>'
							+'<h3>Ring-of-Spell-Storing-HHSLS</h3>'
							+'<p style="display: inline-block; background-color: lightgrey; border: 1px solid black; padding: 4px; color: dimgrey; font-weight: extra-light;">/w "@{selected|character_name}" &{template:'+fields.defaultTemplate+'}{{name=Ring of Spell Storing with Haste x2, Slow, Light & Sleep}}{{subtitle=Ring}}<mark style="color:green">Specs=[Ring of Spell Storing,Ring,1H,Conjuration-Summoning]</mark>{{Speed=[[5]] regardless of spell}}<mark style="color:blue">RingData=[w:Ring of Spell Storing HHSLS,sp:5,rc:uncharged,ns:5], [cl:MU,w:Haste,sp:5,lv:6], [cl:MU,w:Haste,sp:5,lv:6], [cl:MU,w:Slow,sp:5,lv:7], [cl:MU,w:Light,sp:5,lv:3], [cl:MU,w:Sleep,sp:5,lv:3]</mark> {{Size=Tiny}}{{Store spell=[Store Priest Spell](<span style="color:red">!magic --mem-spell MI-PR|@{selected|token_id}</span>)<br>'
							+'[Store Wizard Spell](<span style="color:red">!magic --mem-spell MI-MU|@{selected|token_id}</span>)}}{{Cast spell=[View](<span style="color:red">!magic --view-spell mi-muspells|@{selected|token_id}</span>) or [Cast](<span style="color:red">!magic --cast-spell MI|@{selected|token_id}</span>) spells}}{{desc=A ring of spell storing contains 1d4+1 spells which the wearer can employ as if he were a spellcaster of the level required to use the stored spells. The class of spells contained within the ring is determined in the same fashion as the spells on scrolls (see "Scrolls"). The level of each spell is determined by rolling 1d6 (for priests) or 1d8 (for wizards). The number rolled is the level of the spell, as follows:<br>'
							+'Priest: 1d6, if 6 is rolled, roll 1d4 instead.<br>'
							+'Wizard: 1d8, if 8 is rolled, roll 1d6 instead.<br>'
							+'Which spell type of any given level is contained by the ring is also randomly determined.<br>'
							+'The ring empathically imparts to the wearer the names of its spells. Once spell class, level, and type are determined, the properties of the ring are fixed and unchangeable. Once a spell is cast from the ring, it can be restored only by a character of appropriate class and level of experience (i.e., a 12th-level wizard is needed to restore a 6th-level magical spell to the ring). Stored spells have a casting time of [[5]].}}</p>'
							+'<p>This is a specific version of a Ring of Spell Storing.  As the spells stored are specified in the macro, if you want there to be multiple rings of spell storing in your campaign they each need to be individually programmed (easy cut & paste job) & named differently.</p>'
							+'<p>The only new field in these data sets is:</p>'
							+'<table>'
							+'	<tr><th scope="row">lv:</th><td>&lt;#&gt;</td><td>The level of the caster who cast the spell into the ring.  The spell will have effects as if cast at this level when cast from the ring.</td></tr>'
							+'</table>'
							+'<p>The <b>lv:</b> field only specifies the level of the initial spell caster when the item is first found.  Once owned and used, the level of the spell caster is recorded each time a spell is refreshed by casting into the item.  As the item is then passed from one Character to another, or stored in a container and recovered later, the levels at which the spells were cast is retained.  However, if the item is reloaded from the databases, or a duplicate of the item is placed by the DM and found by another character, that version of the item will have the spell caster levels from the database definitions.  Note that if a single Character picks up two versions of exactly the same spell storing item (i.e. with the same item name) the results are unpredicable...</p>'
							+'<p>Feel free to just copy the specification for a Ring-of-Spell-Storing in the Rings database and save it to a new Ability Macro with a different name, and then alter the spell names and casting levels as desired, to form new Rings of Spell Storing or other magic items.  Also, the Ring does not have to have 5 spells - just remove or add one or more repeating data sets to reduce or increase the number of stored spells (though the official definition of a Ring of Spell Storing states a maximum of 5 spells).</p>'
							+'<br>'
							+'<h2>5. Weapons (if using AttackMaster API)</h2>'
							+'<p>Weapons, magical or not, are special types of items in the Magic Items databases.  If coded properly (in the same way as those in the MI-DB-Weapons database), they can be used with the <b>AttackMaster API</b> to implement fully automatic weapon management, the ability to hold weapons "in-hand" or sheathed, to have automatic ammo and range management for ranged weapons, automatic entry of weapons into the melee and/or ranged weapons tables, ready to make attacks with magical plusses and other specifications all set up, and support for dancing weapons (ones that can attack without being held by the Character), creatures with more than 2 hands, and 1-handed weapons, 2-handed weapons, and even weapons that need more than 2 hands!</p>'
							+'<p>See the <b>Weapon & Armour Database Help</b> handout and AttackMaster API documentation for how Weapon definitions should be structured for use with the AttackMaster API, which are just a few additions to the standard definition of an item.</p>'
							+'<br>'
							+'<h2>6. Armour & Shields</h2>'
							+'<p>Like weapons, armour and shields of all types (including magical armour like magical Bracers and Rings of Protection) can be coded to be used with the <b>AttackMaster API</b> to automatically calculate the appropriate AC for various scenarios (such as with & without Shield, from the back, if surprised, etc).  This will take into account if the armour is valid for the character class, determine which is the best armour combination that the character has, if various armour elements can or can\'t work together, and add in Dexterity bonuses or impairments.  It will also allow magical effects cast on the character to take effect or be adjusted via the token "circles" and highlight when such an effect is in place by showing the relevant token bar (only when there is a difference between the token AC and calculated AC).</p>'
							+'<p>See the <b>Weapon & Armour Database Help</b> handout and AttackMaster API documentation for how Armour & Shield definitions should be structured for use with the AttackMaster API, which are just a few additions to the standard definition of an item.</p>'
							+'<p>Also, see the <b>RoundMaster API</b> documentation for how magical effects can be placed on and affect tokens and characters.</p>'
							+'<br>'
							+'<h2>7. Specs & Data field values</h2>'
							+'<p>Below are lists of the current possible values for the item database Ability macro sections.</p>'
							+'<h3>7.1 Specs sections</h3>'
							+'<pre>Specs=[Type, Item-Class, Handedness, Group-Type]</pre>'
							+'<p>There are no default settings for any of the Specs data fields.  All must be explicitly specified.</p>'
							+'<h4>7.1(a) Spell Types</h4>'
							+'<p>There is an infinite list of spell types: generally the type is the spell name.</p>'
							+'<h4>7.1(b) Spell Item-Classes</h4>'
							+'<table>'
							+'	<tr><th scope="row">MUSpellL\<1-9\></th><td>A Wizard spell with the Level specified as a number from 1 to 9</td></tr>'
							+'	<tr><th scope="row">PRSpellL\<1-9\></th><td>A Priest spell with the Level specified as a number from 1 to 9</td></tr>'
							+'	<tr><th scope="row">Power</th><td>A Power</td></tr>'
							+'</table>'
							+'<h4>7.1(c) Spell Handedness</h4>'
							+'<p><b>0H</b> A spell/power that does not take a hand (there is no Somatic component)<br>'
							+'<b>1H</b> A spell/power that requires only 1 hand to cast (most spells are like this)<br>'
							+'<b>2H</b> A spell/power that requires 2 hands to cast (perhaps a scroll must be held)<br>'
							+'<b>3H</b> A spell/power that takes 3 hands... perhaps more than 1 caster together?<br>'
							+'<b>4H</b> Etc  No currently programmed spells use more than 2 hands<br>'
							+'<b>...</b>	...</p>'
							+'<h4>7.1(d) Spell/Power Schools</h4>'
							+'<p>Spell Schools are not currently checked by the system, but are required for future expansion for whether it can be used by a Character of a specific class, or if there are magical situations that suppress various spell types.  Those implemented so far for the Spells databases are:</p>'
							+'<p><i>Abjuration, Alteration, Conjuration-Summoning, Enchantment-Charm, Divination, Illusion-Phantasm, Invocation-Evocation, Necromancy.</i></p>'
							+'<p>Note that the \'/\' in School names in the AD&D2e PHB have been replaced by hyphens.  It is also allowed to use just one half of any hyphenated school name where appropriate. If a spell or power is of more than one school, separate each with a vertical bar character \'|\'</p>'
							+'<br>'
							+'<h4>7.1(e) Magic Item Types</h4>'
							+'<p>There is an infinite list of magic item types: generally the type is the magic item name.  A magic item can have more than one type, with each separated by a vertical bar character \'|\'</p>'
							+'<h4>7.1(f) Magic Item Classes</h4>'
							+'<table>'
							+'	<tr><th scope="row">Weapon</th><td>Weapons that are not Melee or Ranged weapons or any other class</td></tr>'
							+'	<tr><th scope="row">Melee</th><td>Melee weapons that are used in hand-to-hand combat</td></tr>'
							+'	<tr><th scope="row">Ranged</th><td>Ranged weapons that are either thrown or fire ammunition</td></tr>'
							+'	<tr><th scope="row">Ammo</th><td>All types of ammunition that is used by Ranged weapons</td></tr>'
							+'	<tr><th scope="row">Armour</th><td>Any type of armour that does not need to be held to work</td></tr>'
							+'	<tr><th scope="row">Shield</th><td>A barrier that is held in hand(s) and defends against one or more attacks from the front</td></tr>'
							+'	<tr><th scope="row">Potion</th><td>Any type of potion, oil, pill or similar that is consumed or rubbed on</td></tr>'
							+'	<tr><th scope="row">Scroll</th><td>Scrolls and spell books, that contain one or multiple spells</td></tr>'
							+'	<tr><th scope="row">Wand</th><td>Wands that cast spells or spell-like effects when wielded in the hand</td></tr>'
							+'	<tr><th scope="row">Staff</th><td>Quarterstaffs and similar large bludgeoning items that can also have spell-like abilities</td></tr>'
							+'	<tr><th scope="row">Rod</th><td>Walking-stick sized rods that can do spell-like effects, especially when used to attack</td></tr>'
							+'	<tr><th scope="row">Ring</th><td>Rings that are worn on a finger, one to each hand, that protect, have powers or spells</td></tr>'
							+'	<tr><th scope="row">Light</th><td>All types of lantern, torch, and other illumination</td></tr>'
							+'	<tr><th scope="row">Miscellaneous</th><td>Anything that does not fit in one of the other categories</td></tr>'
							+'	<tr><th scope="row"><i>Unspecified</i></th><td>Items without any Specs section or an empty Class definition are listed under DM-Only</td></tr>'
							+'</table>'
							+'<h4>7.1(g) Armour Handedness</h4>'
							+'<p><b>0H</b> Items that do not require to be held to work (e.g. a Ring, Buckler or a Helm)<br>'
							+'<b>1H</b> An item that must be held in one hand to work, such as a Wand<br>'
							+'<b>2H</b> Items that need two hands to wield, like a Staff<br>'
							+'<b>3H</b> Items that need three hands to use, perhaps by two characters... (not yet implemented)<br>'
							+'<b>...</b> etc.</p>'
							+'<h4>7.1(h) Item Schools</h4>'
							+'<p>Currently, all Magic Items other than Weapons and Armour use the same set of magical schools as for Spells & Powers, as they mostly perform spell-like effects.  See section 7.1(d) for the list.</p>'
							+'<h4>7.2 Data Sections</h4>'
							+'<p>Definitions for Data Section field types for Weapons & Armour can be found in the AttackMaster API documentation.  Below are the definitions for Spell, Power & other Magical Item types.</p>'
							+'<p><b>Note:</b> Always refer to the database specification definitions in other sections above for detailed information on the use of these Field specifiers.  Not all specifiers have an obvious use.</p>'
							+'<table>'
							+'	<thead>'
							+'		<tr>'
							+'			<th scope="col" rowspan="2">Field</th>'
							+'			<th scope="col" rowspan="2">Format</th>'
							+'			<th scope="col" rowspan="2">Default Value</th>'
							+'			<th scope="col" rowspan="2">Description</th>'
							+'			<th scope="col" colspan="8">Can be used in</th>'
							+'		</tr>'
							+'		<tr>'
							+'			<th scope="col">Spell<br>Data</th>'
							+'			<th scope="col">Potion<br>Data</th>'
							+'			<th scope="col">Scroll<br>Data</th>'
							+'			<th scope="col">Wand<br>Data</th>'
							+'			<th scope="col">Staff<br>Data</th>'
							+'			<th scope="col">Rod<br>Data</th>'
							+'			<th scope="col">Ring<br>Data</th>'
							+'			<th scope="col">Misc<br>Data</th>'
							+'		</tr>'
							+'	</thead>'
							+'	<tr><th scope="row">w:</th><td>< text ></td><td>\'-\'</td><td>Name to be displayed</td><td> </td><td>X</td><td>X</td><td>X</td><td>X</td><td>X</td><td>X</td><td>X</td></tr>'
							+'	<tr><th scope="row">w:</th><td>< text ></td><td>\'\'</td><td>Name of spell or power (Not case sensitive)</td><td>X</td><td> </td><td> </td><td> </td><td> </td><td> </td><td> </td><td> </td></tr>'
							+'	<tr><th scope="row">+:</th><td>[ + / - ] #</td><td>0</td><td>Magical adjustment</td><td> </td><td> </td><td> </td><td>X</td><td>X</td><td>X</td><td>X</td></tr>'
							+'	<tr><th scope="row">n:</th><td># [ / # ]</td><td>1</td><td>Attacks per round</td><td> </td><td> </td><td> </td><td>X</td><td>X</td><td>X</td><td>	</td><td>X</td></tr>'
							+'	<tr><th scope="row">sz:</th><td>[ t / s / m / l / h ]</td><td>\'\'</td><td>Size of item</td><td> </td><td> </td><td> </td><td>X</td><td>X</td><td>X</td><td>X</td><td>X</td></tr>'
							+'	<tr><th scope="row">sp:</th><td>[-]# or Dice Roll spec</td><td>0</td><td>Speed in segments (1/10 round)</td><td>X</td><td>X</td><td>X</td><td>X</td><td>X</td><td>X</td><td>X</td><td>X</td></tr>'
							+'	<tr><th scope="row">wt:</th><td>#</td><td>1</td><td>Weight of item in lbs</td><td> </td><td>X</td><td> </td><td>X</td><td>X</td><td>X</td><td> </td><td>X</td></tr>'
							+'	<tr><th scope="row">ns:</th><td>#</td><td>0</td><td>Number of stored spells & powers defined for item</td><td> </td><td> </td><td>X</td><td>X</td><td>X</td><td>X</td><td>X</td><td>X</td></tr>'
							+'	<tr><th scope="row">w:</th><td>< text ></td><td>\'-\'</td><td>Name of stored spell or power (Not case sensitive)</td><td>X</td><td> </td><td>X</td><td>X</td><td>X</td><td>X</td><td>X</td><td>X</td></tr>'
							+'	<tr><th scope="row">cl:</th><td>MU / PR / PW</td><td>\'\'</td><td>Type of stored spell or power</td><td> </td><td> </td><td>X</td><td>X</td><td>X</td><td>X</td><td>X</td><td>X</td></tr>'
							+'	<tr><th scope="row">lv:</th><td>#</td><td>1</td><td>Level at which spell/power is cast</td><td> </td><td> </td><td> </td><td>X</td><td>X</td><td>X</td><td>X</td><td>X</td></tr>'
							+'	<tr><th scope="row">pd:</th><td>-1 / #</td><td>1</td><td>Number per day (power only)</td><td> </td><td> </td><td> </td><td>X</td><td>X</td><td>X</td><td>X</td><td>X</td></tr>'
							+'	<tr><th scope="row">rc:</th><td>Charged / Uncharged / Rechargeable / Recharging / Self-chargeable / Cursed / Charged-Cursed / Recharging-Cursed / Self-chargeable-Cursed</td><td>Uncharged</td><td>Initial charged and Cursed status of item when found (Can be changed by DM using -gm-only-mi command once added to Character Sheet) Not case sensitive</td><td> </td><td>X</td><td>X</td><td>X</td><td>X</td><td>X</td><td>X</td><td>X</td></tr>'
							+'</table>'
							+'<br>'
							+'<h3>7.3 Character Sheet data fields</h3>'
							+'<p>The Character Sheet field mapping to the API script can be altered using the definition of the fields object, the definition for which can be found at the top of each API.  You can find the complete mapping for all APIs in the RPGMaster series, with an explanation of each, in a separate document - as the Author for a copy.</p>'
							+'</div>',
						},
	});

	const miTypeLists = Object.freeze({
		miscellaneous:	{type:'miscellaneous',field:fields.ItemMiscList},
		light:			{type:'miscellaneous',field:fields.ItemMiscList},
		weapon:			{type:'weapon',field:fields.ItemWeaponList},
		innatemelee:	{type:'weapon',field:fields.ItemWeaponList},
		melee:			{type:'weapon',field:fields.ItemWeaponList},
		innateranged:	{type:'weapon',field:fields.ItemWeaponList},
		ranged:			{type:'weapon',field:fields.ItemWeaponList},
		ammo:			{type:'weapon',field:fields.ItemWeaponList},
		armour:			{type:'armour',field:fields.ItemArmourList},
		shield:			{type:'armour',field:fields.ItemArmourList},
		ring:			{type:'ring',field:fields.ItemRingList},
		protectionring:	{type:'ring',field:fields.ItemRingList},
		protectionrobe:	{type:'miscellaneous',field:fields.ItemMiscList},
		potion:			{type:'potion',field:fields.ItemPotionList},
		scroll:			{type:'scroll',field:fields.ItemScrollList},
		rod:			{type:'rod',field:fields.ItemWandsList},
		staff:			{type:'rod',field:fields.ItemWandsList},
		wand:			{type:'rod',field:fields.ItemWandsList},
		dmitem:			{type:'dmitem',field:fields.ItemDMList},
	});
	
	const spTypeLists = Object.freeze({
		muspelll1:		{type:'muspelll1',field:['spellmem','current']},
		muspelll2:		{type:'muspelll2',field:['spellmem2','current']},
		muspelll3:		{type:'muspelll3',field:['spellmem3','current']},
		muspelll4:		{type:'muspelll4',field:['spellmem4','current']},
		muspelll5:		{type:'muspelll5',field:['spellmem30','current']},
		muspelll6:		{type:'muspelll6',field:['spellmem5','current']},
		muspelll7:		{type:'muspelll7',field:['spellmem6','current']},
		muspelll8:		{type:'muspelll8',field:['spellmem7','current']},
		muspelll9:		{type:'muspelll9',field:['spellmem8','current']},
		muspelll0:		{type:'muspelll0',field:['spellmem20','current']},
		prspelll1:		{type:'prspelll1',field:['spellmem10','current']},
		prspelll2:		{type:'prspelll2',field:['spellmem11','current']},
		prspelll3:		{type:'prspelll3',field:['spellmem12','current']},
		prspelll4:		{type:'prspelll4',field:['spellmem13','current']},
		prspelll5:		{type:'prspelll5',field:['spellmem14','current']},
		prspelll6:		{type:'prspelll6',field:['spellmem15','current']},
		prspelll7:		{type:'prspelll7',field:['spellmem16','current']},
		prspelll0:		{type:'prspelll0',field:['spellmem17','current']},
		power:			{type:'power',    field:['spellmem23','current']},
		training:		{type:'power',    field:['spellmem23','current']},
		itempower:		{type:'itempower',field:['spellmem21','current']},
		itemspell:		{type:'itemspell',field:['spellmem22','current']},
	});

	const spellsPerLevel = Object.freeze({
		WIZARD: [[9,1,100],
				 [0,1,2,2,3,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5],
				 [0,0,0,1,2,2,2,3,3,3,4,4,4,5,5,5,5,5,5,5,5],
				 [0,0,0,0,0,1,2,2,3,3,3,4,4,5,5,5,5,5,5,5,5],
				 [0,0,0,0,0,0,0,1,2,2,2,3,4,4,4,5,5,5,5,5,5],
				 [0,0,0,0,0,0,0,0,0,1,2,3,4,4,4,5,5,5,5,5,5],
				 [0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,2,3,3,3,3,4],
				 [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,2,3,3,3,3],
				 [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,3,3],
				 [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,2]
				],
		PRIEST:	[[7,1,100],
				 [0,1,2,2,3,3,3,3,3,4,4,5,6,6,6,6,7,7,8,9,9],
				 [0,0,0,1,2,3,3,3,3,4,4,4,5,6,6,6,7,7,8,9,9],
				 [0,0,0,0,0,1,2,2,3,3,3,4,5,6,6,6,7,7,8,8,9],
				 [0,0,0,0,0,0,0,1,2,2,3,3,3,4,5,6,6,7,8,8,8],
				 [0,0,0,0,0,0,0,0,0,1,2,2,2,2,3,4,4,5,6,6,7],
				 [0,0,0,0,0,0,0,0,0,0,0,1,2,2,2,2,3,3,4,4,5],
				 [0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,2,2,2,2]
				],
		RANGER: [[3,8,9],
				 [0,0,0,0,0,0,0,0,1,2,2,2,2,3,3,3,3],
				 [0,0,0,0,0,0,0,0,0,0,1,2,2,2,2,3,3],
				 [0,0,0,0,0,0,0,0,0,0,0,0,1,1,2,2,3]
				],
		PALADIN:[[4,9,9],
				 [0,0,0,0,0,0,0,0,0,1,2,2,2,2,3,3,3,3,3,3,3],
				 [0,0,0,0,0,0,0,0,0,0,0,1,2,2,2,2,3,3,3,3,3],
				 [0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,2,3,3,3,3],
				 [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,2,3]
				],
		BARD: 	[[6,1,100],
				 [0,0,1,2,2,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4],
				 [0,0,0,0,1,1,2,2,3,3,3,3,3,3,3,3,3,4,4,4,4],
				 [0,0,0,0,0,0,0,1,1,2,2,3,3,3,3,3,3,3,4,4,4],
				 [0,0,0,0,0,0,0,0,0,0,1,1,2,2,3,3,3,3,3,4,4],
				 [0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,2,2,3,3,3,4],
				 [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,2,2,3]
				],
		OTHER:  [[0,0,0]],
	});
	
	const specMU=['ABJURER',
				  'CONJURER',
				  'DIVINER',
				  'ENCHANTER',
				  'ILLUSIONIST',
				  'INVOKER',
				  'NECROMANCER',
				  'TRANSMUTER'];
				  
	const ordMU =['WIZARD',
				  'MAGICUSER',
				  'MAGE',
				  'MU'];
				  
	const wisdomSpells=[[0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,2,2,2,3,3,3,3,4,4],
						[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,2,2,3,3,3,3,3],
						[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,2,3,3,3,3],
						[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,3,3,3],
						[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,2,3],
						[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2]];
	
	const MIB_StateEnum = Object.freeze({
		NOBAG: 0,
		OLDBAG: 6,
		V4BAG: 12,
	});

	const PR_Enum = Object.freeze({
		YESNO: 'YESNO',
		CUSTOM: 'CUSTOM',
	});
	
	const messages = Object.freeze({
		header: '&{template:'+fields.defaultTemplate+'} {{name=^^cname^^\'s\nMagic Item Bag}}',
		restHeader: '&{template:'+fields.defaultTemplate+'} {{name=^^cname^^ is Resting}}',
		noChar: '&{template:'+fields.defaultTemplate+'} {{name=^^cname^^\'s\nMagic Items Bag}}{{desc=^^cname^^ does not have an associated Character Sheet, and so cannot have a Magic Item Bag.}}',
		noMIBag: '&{template:'+fields.defaultTemplate+'} {{name=^^cname^^\'s\nMagic Items Bag}}{{desc=^^cname^^ does not have a Magic Item bag!  Perhaps you ought to invest in one...  Go and find an appropriate vendor (ask the DM).}}',
        oldMIBag: '&{template:'+fields.defaultTemplate+'} {{name=^^cname^^\'s\nMagic Item Bag}}{{desc=^^cname^^ has an old v3 Magic Item bag, which will not hold the latest, cutting edge Magic Items!  Perhaps you ought to invest in a new one...  Go and find an appropriate vendor (ask the DM).}}',
		cursedSlot: '&{template:'+fields.defaultTemplate+'} {{name=^^cname^^\'s\nMagic Item Bag}}{{desc=Oh what a shame.  No, you can\'t overwrite a cursed item with a different item.  You\'ll need a *Remove Curse* spell or equivalent to be rid of it!}}',
        cursedItem: '&{template:'+fields.defaultTemplate+'} {{name=^^cname^^\'s\nMagic Item Bag}}{{desc=Oh no!  You try putting this away, but is seems to be back where it was...  Perhaps you need a *Remove Curse* spell or equivalent to be rid of it!}}',
		nothingToPick: '&{template:'+fields.defaultTemplate+'} {{name=^^cname^^\'s\nMagic Item Bag}}{{desc=You seem to be trying to pick up something invisible, even to me! I can\'t pick up thin air...}}',
		slotFull: '&{template:'+fields.defaultTemplate+'} {{name=^^cname^^\'s\nMagic Item Bag}}{{desc=The slot you chose is already full.}}',
		fruitlessSearch: 'does not have a store of Magic Items}}',
		noSpellbooks: '&{template:'+fields.defaultTemplate+'} {{name=Spellbooks}}{{desc=^^cname^^ does not have any spellbooks!}}',
		noMUspellbook: '&{template:'+fields.defaultTemplate+'} {{name=Spellbooks}}{{desc=^^cname^^ does not have a Wizard\'s spellbook.  Do they want one?  Speak to the Arch-Mage (or, failing that, the DM)}}',
		noPRspellbook: '&{template:'+fields.defaultTemplate+'} {{name=Spellbooks}}{{desc=^^cname^^ does not have a Priest\'s spellbook.  Do they want one?  Pray to your god (or, failing that, the DM)}}',
		chooseSpellMenu: '&{template:'+fields.defaultTemplate+'} {{name=Spellbooks}}{{desc=^^cname^^ has both Wizard and Priest spellbooks.  Which do you want to use?}}{{desc1=[Wizard](!magic --spellmenu ^^tid^^|MU) or [Priest](!magic --spellmenu ^^tid^^|PR)}}',
		shortRest: '&{template:'+fields.defaultTemplate+'} {{name=^^cname^^ is Resting}}{{desc=After a short rest, ^^cname^^ has rememorised all their 1st level spells}}',
		longRest: 'After a good long rest, ^^cname^^ has regained their powers, read their spellbooks and rememorised their spells, and magic items that recharge have regained their charges.}}',
		noLongRest: '&{template:'+fields.defaultTemplate+'} {{name=^^cname^^ is Unable to Rest}}{{desc=I don\'t think the DM has declared it is time for a rest yet, perhaps due to system lag.}}{{desc1=[Try Again](!magic --rest ^^tid^^|long) once the DM says you can}}',
		noMoreCharges: '&{template:'+fields.defaultTemplate+'} {{name=^^cname^^ Has No Charges}}{{desc=^^cname^^ has used all the charges of the Power, Spell or Magic Item that they are using, and needs to rest before any charges are available again.}}',
		miBagFull: '&{template:'+fields.defaultTemplate+'} {{name=^^cname^^ MI Bag Full}}{{desc=There are no slots left in the selected container for any more items to store}}',
		fixedSpell: '&{template:'+fields.defaultTemplate+'} {{name=Fixed MI Spell Slot}}{{desc=The chosen slot in your spell-storing Magic Item is fixed to be the named spell. You may only refresh it with the same spell}}',
		notSpellCaster: '&{template:'+fields.defaultTemplate+'} {{name=^^cname^^ is Not a Spell Caster}}{{desc=^^cname^^ may aspire to be a wonderful Wizard or powerful Priest, but has yet to fulfil those desires.  Until then, refrain from pretending - you will be found out!}}',
		castSpellClass: '&{template:'+fields.defaultTemplate+'} {{name=Spellbooks}}{{desc=^^cname^^ has both Wizard and Priest spellbooks.  Which do you want to use?}}{{desc1=[Wizard](!magic --cast-spell MU|^^tid^^) or [Priest](!magic --cast-spell PR|^^tid^^)}}',
		memSpellClass: '&{template:'+fields.defaultTemplate+'} {{name=Spellbooks}}{{desc=^^cname^^ has both Wizard and Priest spellbooks.  Which do you want to use?}}{{desc1=[Wizard](!magic --mem-spell MU|^^tid^^) or [Priest](!magic --mem-spell PR|^^tid^^)}}',
		viewSpellClass: '&{template:'+fields.defaultTemplate+'} {{name=Spellbooks}}{{desc=^^cname^^ has both Wizard and Priest spellbooks.  Which do you want to view?}}{{desc1=[Wizard](!magic --view-spell MU|^^tid^^) or [Priest](!magic --view-spell PR|^^tid^^)}}',
	});

	const BT = Object.freeze({
        ADD_MIROW:      'ADD_MIROW',
		ADD_TO_STORE:	'ADD_TO_STORE',
		MON_ATTACK:		'MON_ATTACK',
		MON_INNATE:		'MON_INNATE',
		MON_MELEE:		'MON_MELEE',
		MELEE:			'MELEE',
		MW_DMGSM:		'MW_DMGSM',
		MW_DMGL:		'MW_DMGL',
		MON_RANGED:		'MON_RANGED',
		RANGED:			'RANGED',
		RANGEMOD:		'RANGEMOD',
		RW_DMGSM:		'RW_DMGSM',
		RW_DMGL:		'RW_DMGL',
		MI_SPELL:       'MI_SPELL',
		MI_POWER:		'MI_POWER',
		MI_POWER_USED:	'MI_POWER_USED',
		MU_SPELL:		'MU_SPELL',
		MU_TO_STORE:	'MU_TO_STORE',
		MU_MI_SLOT:		'MU_MI_SLOT',
		PR_SPELL:		'PR_SPELL',
		PR_TO_STORE:	'PR_TO_STORE',
		PR_MI_SLOT:		'PR_MI_SLOT',
		CAST_MUSPELL:	'CAST_MUSPELL',
		CAST_PRSPELL:	'CAST_PRSPELL',
		CAST_MISPELL:   'CAST_MISPELL',
		CAST_MIPOWER:	'CAST_MIPOWER',
		CAST_SCROLL:	'CAST_SCROLL',
		CHOOSE_MUSPELL:	'CHOOSE_MUSPELL',
		CHOOSE_PRSPELL:	'CHOOSE_PRSPELL',
		CHOOSE_POWER:	'CHOOSE_POWER',
		CHOOSE_MI:		'CHOOSE_MI',
		REDO_CHOOSE_MI: 'REDO_CHOOSE_MI',
		CHOOSE_VIEW_MI:	'CHOOSE_VIEW_MI',
		CHOOSE_USE_MI:	'CHOOSE_USE_MI',
		CHOOSE_TO_STORE:'CHOOSE_TO_STORE',
		REVIEW_MUSPELL:	'REVIEW_MUSPELL',
		REVIEW_PRSPELL:	'REVIEW_PRSPELL',
		REVIEW_POWER:	'REVIEW_POWER',
		REVIEW_MI:		'REVIEW_MI',
		REVIEW_MIPOWER:	'REVIEW_MIPOWER',
		REVIEW_STORE:	'REVIEW_STORE',
		SLOT_MUSPELL:	'SLOT_MUSPELL',
		SLOT_PRSPELL:	'SLOT_PRSPELL',
		SLOT_POWER:		'SLOT_POWER',
		SLOT_MI:		'SLOT_MI',
		MISC_SPELL:		'MISC_SPELL',
		MEM_MUSPELL:	'MEM_MUSPELL',
		MEM_PRSPELL:	'MEM_PRSPELL',
		MEM_POWER:		'MEM_POWER',
		MEM_MIPOWER:	'MEM_MIPOWER',
		EDIT_MUSPELLS:	'EDIT_MUSPELLS',
		EDIT_PRSPELLS:	'EDIT_PRSPELLS',
		EDIT_NOSPELLS:	'EDIT_NOSPELLS',
		EDIT_POWERS:	'EDIT_POWERS',
		EDIT_MIMUSPELLS:'EDIT_MIMUSPELLS',
		EDIT_MIPRSPELLS:'EDIT_MIPRSPELLS',
		EDIT_MIPOWERS:	'EDIT_MIPOWERS',
		EDIT_MI:		'EDIT_MI',
		EDITMI_OPTION:  'EDITMI_OPTION',
		REMOVE_MUSPELL:	'REMOVE_MUSPELL',
		REMOVE_PRSPELL:	'REMOVE_PRSPELL',
		REMOVE_POWER:	'REMOVE_POWER',
		REMOVE_MI:		'REMOVE_MI',
		DEL_STORED:		'DEL_STORED',
		STORE_MI:		'STORE_MI',
		MISTORE_MUSPELL:'MISTORE_MUSPELL',
		MISTORE_PRSPELL:'MISTORE_PRSPELL',
		VIEW_MUSPELL:	'VIEW_MUSPELL',
		VIEW_PRSPELL:	'VIEW_PRSPELL',
		VIEW_POWER:		'VIEW_POWER',
		VIEW_MI_POWER:  'VIEW_MI_POWER',
		VIEW_MI_MUSPELL:'VIEW_MI_MUSPELL',
		VIEW_MI_PRSPELL:'VIEW_MI_PRSPELL',
		VIEW_MI:		'VIEW_MI',
		VIEWMI_OPTION:  'VIEWMI_OPTION',
		VIEWMEM_MUSPELLS:'VIEWMEM_MUSPELLS',
		VIEWMEM_PRSPELLS:'VIEWMEM_PRSPELLS',
		VIEWMEM_POWERS:	'VIEWMEM_POWERS',
		VIEWMEM_MI_POWERS:  'VIEWMEM_MI_POWERS',
		VIEWMEM_MI_MUSPELLS:'VIEWMEM_MI_MUSPELLS',
		VIEWMEM_MI_PRSPELLS:'VIEWMEM_MI_PRSPELLS',
		POP_PICK:		'POP_PICK',
		POP_STORE:		'POPsubmit',
		PICKMI_OPTION:	'PICKMI_OPTION',
		PUTMI_OPTION:	'PUTMI_OPTION',
		POWER:			'POWER',
		USE_POWER:		'USE_POWER',
		USE_MI:			'USE_MI',
		USEMI_OPTION:   'USEMI_OPTION',
		MI_BAG:			'MI_BAG',
		THIEF:			'THIEF',
		MOVE:			'MOVE',
		CHG_WEAP:		'CHG_WEAP',
		STAND:			'STAND',
		SPECIFY:		'SPECIFY',
		CARRY:			'CARRY',
		SUBMIT:			'SUBMIT',
	});
	
	const reIgnore = /[\s\-\_]*/gi;
	const reCastMIspellCmd = /!magic\s+--cast-spell\s+MI\s*\|/im;
	const reCastMIpowerCmd = /!magic\s+--cast-spell\s+MI-POWERS?\s*\|/im;

	
	const dbReplacers = [
			[/\\amp/gm, "&"],
			[/\\lbrak/gm, "["],
			[/\\rbrak/gm, "]"],
			[/\\ques/gm, "?"],
			[/\\at/gm, "@"],
			[/\\dash/gm, "-"],
			[/\\n/gm, "\n"],
			[/\\vbar/gm, "|"],
			[/\\clon/gm, ":"],
			[/\\gt/gm, ">"],
			[/\\lt/gm, "<"],
		];

	const dbEncoders = [
			[/\r?\n/gm,'\\n'],
			[/'/gm,"\\'"],
			[/&/gm,"\\\\amp"],
			[/>/gm,"\\\\gt"],
			[/</gm,"\\\\lt"]
		];

	const reACSpecs = Object.freeze ({
		name: 		{field:'name',def:'',re:/[\[,\s]a:([\s\w\-\+\,\:]+?)[,\]]/i},
		type: 		{field:'type',def:'',re:/[\[,\s]t:([\s\w\-\+\,\:]+?)[,\]]/i},
		superType: 	{field:'superType',def:'',re:/[\[,\s]st:([\s\w\-\+\,\:]+?)[,\]]/i},
		dexBonus:	{field:'dexBonus',def:0,re:/[\[,\s]db:([01])/i},
		ac:			{field:'ac',def:'',re:/[\[,\s]ac:(\d+?)[,\s\]]/i},
		adj:		{field:'adj',def:0,re:/[\[,\s]\+:(=?[+-]?\d+?)[,\s\]]/i},
		size:		{field:'size',def:'',re:/[\[,\s]sz:([tsmlh])/i},
		madj:		{field:'madj',def:0,re:/[\[,\s]\+m:(=?[+-]?\d+?)[,\]]/i},
		sadj:		{field:'sadj',def:0,re:/[\[,\s]\+s:(=?[+-]?\d+?)[,\]]/i},
		padj:		{field:'padj',def:0,re:/[\[,\s]\+p:(=?[+-]?\d+?)[,\]]/i},
		badj:		{field:'badj',def:0,re:/[\[,\s]\+b:(=?[+-]?\d+?)[,\]]/i},
		weight:		{field:'weight',def:1,re:/[\[,\s]wt:(\d+?)[,\]]/i},												 
	});
	
	const reSpellSpecs = Object.freeze ({
		name:		{field:'name',def:'-',re:/[\[,\s]w:([\s\w\-\+]+?)[,\]]/i},
		type:		{field:'spell',def:'',re:/[\[,\s]cl:(PR|MU|PW)[,\s\]]/i},
		speed:		{field:'speed',def:0,re:/[\[,\s]sp:([d\d\+\-]+?)[,\s\]]/i},
		level:		{field:'level',def:1,re:/[\[,\s]lv:(\d+?)[,\s\]]/i},
		perDay:		{field:'perDay',def:1,re:/[\[,\s]pd:(\d+?)[,\s\]]/i},
		cost:		{field:'cost',def:0,re:/[\[,\s]gp:(\d+?\.?\d*?)[,\s\]]/i},
		recharge:	{field:'type',def:'uncharged',re:/[\[,\s]rc:([\-\w]+?)[,\s\]]/i},
	});
	
	const spellLevels = Object.freeze({ 
		mu: [{ spells: 0, base: 0,  book: 0 },
		     { spells: 0, base: 1,  book: 1 },
             { spells: 0, base: 4,  book: 2 },
		     { spells: 0, base: 7,  book: 3 },
		     { spells: 0, base: 10, book: 4 },
		     { spells: 0, base: 70, book: 30},
		     { spells: 0, base: 13, book: 5 },
		     { spells: 0, base: 16, book: 6 },
		     { spells: 0, base: 19, book: 7 },
		     { spells: 0, base: 22, book: 8 }],
		pr: [{ spells: 0, base: 0,  book: 0 },
		     { spells: 0, base: 28, book: 10},
		     { spells: 0, base: 31, book: 11},
		     { spells: 0, base: 34, book: 12},
		     { spells: 0, base: 37, book: 13},
		     { spells: 0, base: 40, book: 14},
    		 { spells: 0, base: 43, book: 15},
    		 { spells: 0, base: 46, book: 16}],
		pw:	[{ spells: 0, base: 0,  book: 0 },
			 { spells: 9, base: 67, book: 23}],
		mi:	[{ spells: 0, base: 0,  book: 0 },
			 { spells: 0, base: 64, book: 22}],
		pm:	[{ spells: 0, base: 0,  book: 0 },
			 { spells: 0, base: 61, book: 21}],
	});
	
	const design = {
		turncolor: '#D8F9FF',
		roundcolor: '#363574',
		statuscolor: '#F0D6FF',
		statusbgcolor: '#897A87',
		statusbordercolor: '#430D3D',
		edit_icon: 'https://s3.amazonaws.com/files.d20.io/images/11380920/W_Gy4BYGgzb7jGfclk0zVA/thumb.png?1439049597',
		delete_icon: 'https://s3.amazonaws.com/files.d20.io/images/11381509/YcG-o2Q1-CrwKD_nXh5yAA/thumb.png?1439051579',
		settings_icon: 'https://s3.amazonaws.com/files.d20.io/images/11920672/7a2wOvU1xjO-gK5kq5whgQ/thumb.png?1440940765', 
		apply_icon: 'https://s3.amazonaws.com/files.d20.io/images/11407460/cmCi3B1N0s9jU6ul079JeA/thumb.png?1439137300',
		grey_button: '"display: inline-block; background-color: lightgrey; border: 1px solid black; padding: 4px; color: dimgrey; font-weight: extra-light;"',
		selected_button: '"display: inline-block; background-color: white; border: 1px solid red; padding: 4px; color: red; font-weight: bold;"',
		green_button: '"display: inline-block; background-color: white; border: 1px solid lime; padding: 4px; color: darkgreen; font-weight: bold;"',
		boxed_number: '"display: inline-block; background-color: yellow; border: 1px solid blue; padding: 2px; color: black; font-weight: bold;"',
		success_box: '"display: inline-block; background-color: yellow; border: 1px solid lime; padding: 2px; color: green; font-weight: bold;"',
		failure_box: '"display: inline-block; background-color: yellow; border: 1px solid red; padding: 2px; color: maroon; font-weight: bold;"',
	};

	var apiCommands = {};

	var DBindex = {
		mu_spells_db:	{},
		pr_spells_db:	{},
		powers_db:		{},
		mi_db:			{}
	};
	
	var flags = {
		mib_state: MIB_StateEnum.STOPPED,
		image: false,
		archive: false,
		// RED: v1.207 determine if ChatSetAttr is present
		canSetAttr: true,
		// RED: v1.207 determine if MI-DB character sheet is present
		FoundMagicItemDB: true,
	};
		
	var MagicMaster_tmp = (function() {
		var templates = {
			button: _.template('<a style="display: inline-block; font-size: 100%; color: black; padding: 3px 3px 3px 3px; margin: 2px 2px 2px 2px; border: 1px solid black; border-radius: 0.5em; font-weight: bold; text-shadow: -1px -1px 1px #FFF, 1px -1px 1px #FFF, -1px 1px 1px #FFF, 1px 1px 1px #FFF; background-color: #C7D0D2;" href="<%= command %>"><%= text %></a>'),
			confirm_box: _.template('<div style="font-weight: bold; background-color: #FFF; text-align: center; box-shadow: rgba(0,0,0,0.4) 3px 3px; border-radius: 1em; border: 1px solid black; margin: 5px 5px 5px 5px; padding: 2px 2px 2px 2px;">'
					+ '<div style="border-bottom: 1px solid black;">'
						+ '<%= message %>'
					+ '</div>'
					+ '<table style="text-align: center; width: 100%">'
						+ '<tr>'
							+ '<td>'
								+ '<%= confirm_button %>'
							+ '</td>'
							+ '<td>'
								+ '<%= reject_button %>'
							+ '</td>'
						+ '</tr>'
					+ '</table>'
				+ '</div>')
    		};

		return {
			getTemplate: function(tmpArgs, type) {
				var retval;
				
				retval = _.find(templates, function(e,i) {
					if (type === i) {
						{return true;}
					}
				})(tmpArgs);
				
				return retval;
			},
			
			hasTemplate: function(type) {
				if (!type) 
					{return false;}
				return !!_.find(_.keys(templates), function(elem) {
					{return (elem === type);}
				});
				
			}
		};
	}());

	/**
	 * Init
	 */
	var init = function() {
		if (!state.MagicMaster)
			{state.MagicMaster = {};}
		if (_.isUndefined(state.MagicMaster.spellRules))
			{state.MagicMaster.spellRules = {specMU:true,strictNum:false};}
		if (_.isUndefined(state.MagicMaster.debug))
		    {state.MagicMaster.debug = false;}
		if (!state.MagicMaster.playerConfig)
			{state.MagicMaster.playerConfig = {};}
			
		// RED: v1.036 setup in-game-day as a MoneyMaster
		// state value in anticipation of the API
		
		if (!state.moneyMaster)
			{state.moneyMaster = {};}
		if (!state.moneyMaster.inGameDay)
			{state.moneyMaster.inGameDay = 0;}
			
		setTimeout( () => updateHandouts(true,findTheGM()), 2000);
		setTimeout( () => doUpdateDB([], true), 2000);

		// RED: v2.040 check what other APIs are loaded
		setTimeout( () => issueHandshakeQuery('rounds'), 5000);
		setTimeout( () => issueHandshakeQuery('attk'), 5000);
		setTimeout( () => issueHandshakeQuery('cmd'), 5000);
		setTimeout(cmdMasterRegister, 5000);
		
        // RED: log the version of the API Script

		log(`-=> MagicMaster v${version} <=-`);

	}; 
	
// ------------------------------------------------ Deal with in-line expressions --------------------------------
	
	/**
	 * Return the string with the roll formatted, this is accomplished by simply
	 * surrounding roll equations with [[ ]] TODO, should be replaced with a
	 * single regex
	 * 
	 */

	var getFormattedRoll = function(str) {
		if (!str) {return "";}
		var retval = str,
			re = /\d+d\d+/,
			idx, 
			expr, 
			roll, 
			pre, 
			post;

		if ((roll=re.exec(str))) {
			expr = getExpandedExpr(roll[0],str,roll.index);
			idx = str.indexOf(expr);
			pre = str.substring(0,idx);
			post = str.substring(idx+expr.length);
		} else { return retval;}
		
		return pre+"[["+expr+"]]"+getFormattedRoll(post);
	};
	
	/**
	 * Return the target expression expanded as far as it logically can span
	 * within the provided line.
	 * 
	 * ie: target = 1d20
	 *	   locHint = 4
	 *	   line = "2+1d20+5+2d4 bla (bla 1d20+8 bla) bla (4d8...) bla bla"
	 * 
	 * result = 2+1d20+5+2d4
	 */

	var getExpandedExpr = function(target, line, locHint) {
		if (!target || !line) 
			{return;}
		if (!locHint) 
			{locHint = 0;}
		var retval = target,
			re = /\d|[\+\-]|d/,
			loc = -1, 
			start = 0, 
			end = 0;
		
		if((loc=line.indexOf(target,locHint)) !== -1) {
			start = loc;
			while (start > 0) {
				if (line[start].match(re))
					{start--;}
				else
					{start++;break;}
			}
			end = loc;
			while (end < line.length) {
				if (line[end].match(re))
					{end++;}
				else
					{break;}
			}
			retval = line.substring(start,end);
			retval = getLegalRollExpr(retval);
		}
		
		return retval;
	};
	
	/**
	 * Gets a legal roll expression.
	 */

	var getLegalRollExpr = function(expr) {
		if (!expr) {return;}
		var retval = expr,
			stray = expr.match(/d/g),
			valid = expr.match(/\d+d\d+/g),
			errMsg = "Illegal expression " + expr; 
		
		try {
			if (expr.match(/[^\s\d\+-d]/g) || 
			!stray || 
			!valid || 
			(stray.length =! valid.length))
				{throw errMsg;}

			stray = expr.match(/\+/g);
			valid = expr.match(/\d+\+\d+/g);
			if ((stray !== null) && (valid !== null) && 
			(stray.length !== valid.length))
				{throw errMsg;}
			stray = expr.match(/-/g);
			valid = expr.match(/\d+-\d+/g);
			if ((stray !== null) && (valid !== null) && 
			(stray.length !== valid.length))
				{throw errMsg;}
		} catch (e) {
			throw e;
		}
		
		//check for leading, trailing, operands
		if (retval[0].match(/\+|-/))
			{retval = retval.substring(1);}
		if (retval[retval.length-1].match(/\+|-/))
				{retval = retval.substring(0,retval.length-1);}
		
		return retval;
	};
	
    /**
     * In the inline roll evaluator from ChatSetAttr script v1.9
     * by Joe Singhaus and C Levett.
    **/

	var processInlinerolls = function (msg) {
		if (msg.inlinerolls && msg.inlinerolls.length) {
			return msg.inlinerolls.map(v => {
				const ti = v.results.rolls.filter(v2 => v2.table)
					.map(v2 => v2.results.map(v3 => v3.tableItem.name).join(", "))
					.join(", ");
				return (ti.length && ti) || v.results.total || 0;
			})
				.reduce((m, v, k) => m.replace(`$[[${k}]]`, v), msg.content);
		} else {
			return msg.content;
		}
	};
	
// -------------------------------------------- send messages to chat -----------------------------------------
	
    /*
     * Determine who to send a Response to: use who controls
     * the character - if no one or if none of the controlling
     * players are on-line send the response to the GM
     */
   
    var sendToWho= function(charCS,makePublic=false) {
        
		var to, controlledBy, players, viewerID, isPlayer=false; 
		controlledBy = charCS.get('controlledby');
		if (controlledBy.length > 0) {
		    controlledBy = controlledBy.split(',');
			isPlayer = _.some( controlledBy, function(playerID) {
				players = findObjs({_type: 'player', _id: playerID, _online: true});
				return (players && players.length > 0);
        		});
		};
        if (controlledBy.includes('all')) {
            to = '';
		} else if (!charCS || controlledBy.length == 0 || !isPlayer) {
			to = '/w gm ';
		} else if (makePublic) {
		    to = '/desc ';
		} else {
			to = '/w "' + charCS.get('name') + '" ';
		}
        return to;
    }

	/**
	 * Send public message
	 */

	var sendPublic = function(msg) {
		if (!msg) 
			{return undefined;}
		var content = '/desc ' + msg;
		sendChat('',content,null,{noarchive:!flags.archive, use3d:false});
	};
	
    /**
     * Send API command to chat
     */
    var sendMagicAPI = function(msg, senderId) {
        var as;
		if (!msg) {
		    sendDebug('sendInitAPI: no msg');
		    return undefined;
		}
		if (!senderId || senderId.length == 0) {
			as = '';
		} else {
			as = 'player|' + senderId;
		}
		sendDebug('sendTjAPI: sending as ' + as + ', msg is ' + msg );
		sendChat(as,msg, null,{noarchive:!flags.archive, use3d:false});
    };

	/**
	 * Function to send an API command to chat
	 * that has '^^parameter^^' replaced by relevant names & ids
	**/
	var sendAPImacro = function(charID,targetID,ability,modifier) {

		if (!charID || !targetID || !ability) {
			sendDebug('sendAPImacro: a parameter is null');
			return;
		}
		modifier = modifier || '';
		var journal,
		    curToken = getObj('graphic',charID),
		    tid = charID,
		    tname = curToken.get('name'),
		    cid = curToken.get('represents'),
		    targetCS = getCharacter(targetID),
		    words;

        journal = getObj( 'character', cid );
		if (targetCS && journal) {
			var cname = journal.get('name'),
			    bar1 = curToken.get('bar1_value'),
			    bar2 = curToken.get('bar2_value'),
			    bar3 = curToken.get('bar3_value'),
				ac = getTokenValue(curToken,fields.Token_AC,fields.AC,fields.MonsterAC),
				thac0 = getTokenValue(curToken,fields.Token_Thac0,fields.Thac0,fields.MonsterThac0),
				hp = getTokenValue(curToken,fields.Token_HP,fields.HP),
				abilityMacro = findObjs({ _type : 'ability' , characterid : targetCS.id, name :  ability + modifier }, {caseInsensitive: true});
			if (!abilityMacro || abilityMacro == undefined || abilityMacro.length === 0) {
			    sendDebug('Not found macro ' + targetCS.get('name') + '|' + ability + modifier);
			    return;
			}
			if (!cname) {
				cname = curToken.get('name');
			}
			if (abilityMacro.length > 0) {
				var macroBody = abilityMacro[0].get('action');

				macroBody = macroBody.replace( /\@\{selected\|/gi, '\@{'+cname+'|' );
				macroBody = macroBody.replace( /\^\^cname\^\^/gi , cname );
				macroBody = macroBody.replace( /\^\^tname\^\^/gi , tname );
				macroBody = macroBody.replace( /\^\^cid\^\^/gi , cid );
				macroBody = macroBody.replace( /\^\^tid\^\^/gi , tid );
				macroBody = macroBody.replace( /\^\^bar1_current\^\^/gi , bar1 );
				macroBody = macroBody.replace( /\^\^bar2_current\^\^/gi , bar2 );
				macroBody = macroBody.replace( /\^\^bar3_current\^\^/gi , bar3 );
				macroBody = macroBody.replace( /\^\^token_ac\^\^/gi , ac );
				macroBody = macroBody.replace( /\^\^token_thac0\^\^/gi , thac0 );
				macroBody = macroBody.replace( /\^\^token_hp\^\^/gi , hp );
        		sendDebug('sendAPImacro: macroBody is ' + macroBody );
				sendChat("character|"+cid,macroBody,null,{noarchive:!flags.archive, use3d:false});
				
			}
		}
		return;
	};

	/**
	* Send feedback to the GM only!
	*/
	var sendFeedback = function(msg) {

 		var content = '/w GM '
				+ '<div style="position: absolute; top: 4px; left: 5px; width: 26px;">'
					+ '<img src="' + fields.feedbackImg + '">' 
				+ '</div>'
				+ msg;
			
		sendChat(fields.feedbackName,content,null,{noarchive:!flags.archive, use3d:false});
		sendDebug(msg);
	};

	/**
	 * Sends a response to everyone who controls the character
	 * RED: v0.003 Check the player(s) controlling the character are valid for this campaign
	 * if they are not, send to the GM instead - Transmogrifier can introduce invalid IDs
	 * Also check if the controlling player(s) are online.  If they are not
	 * assume the GM is doing some testing and send the message to them.
	 */
	
	var sendResponse = function(charCS,msg,as,img) {
		if (!msg) 
			{return null;}
        var content = sendToWho(charCS)
    				+ '<div style="position: absolute; top: 4px; left: 5px; width: 26px;">'
    					+ '<img src="' + (img ? img:fields.feedbackImg) + '">' 
    				+ '</div>'
    				+ msg;
		sendChat((as ? as:fields.feedbackName),content,null,{noarchive:!flags.archive, use3d:false});
	}; 

	/*
	 * RED: v1.014 Send a message to the player (rather than the character)
	 */

	var sendResponsePlayer = function(pid,msg,as,img) {
		sendResponseError(pid,msg,as,img);
		return;
	}
	 
	/*
	 * Send an error message to the identified player.
	 * RED: v1.013 If that player is not online, send to the GM
	 */

	var sendResponseError = function(pid,msg,as,img) {
		if (!pid || !msg) 
			{return null;}
		var player = getObj('player',pid),
			to; 
		if (player && player.get('_online')) {
			to = '/w "' + player.get('_displayname') + '" ';
		} else {
			to = '/w gm ';
		}
		var content = to
				+ '<div style="position: absolute; top: 4px; left: 5px; width: 26px;">'
					+ '<img src="' + (img ? img:fields.feedbackImg) + '">' 
				+ '</div>'
				+ msg;
		sendChat((as ? as:fields.feedbackName),content,null,{noarchive:!flags.archive, use3d:false});
	}; 

	/**
	 * Send an error
	 */ 
	var sendError = function(msg) {
		setTimeout(()=>sendFeedback('<span style="color: red; font-weight: bold;">'+msg+'</span>'),500); 
	}; 
 
	/**
	 * RED: v1.207 Send a debugging message if the debugging flag is set
	 */ 
	var sendDebug = function(msg) {
	    if (!!state.MagicMaster.debug) {
	        var player = getObj('player',state.MagicMaster.debug),
	            to;
    		if (player) {
	    		to = '/w "' + player.get('_displayname') + '" ';
		    } else 
		    	{throw ('sendDebug could not find player');}
		    if (!msg)
		        {msg = 'No debug msg';}
    		sendChat('MagicMaster Debug',to + '<span style="color: red; font-weight: bold;">'+msg+'</span>',null,{noarchive:!flags.archive, use3d:false}); 
	    };
	}; 
	
	var doSetDebug = function(args,senderId) {
		var player = getObj('player',senderId),
		    playerName;
		if (player) {
		    playerName = player.get('_displayname');
		}
		else 
			{throw ('doSetDebug could not find player: ' + args);}
	    if (!!args && args.indexOf('off') != 0) {
    	    state.MagicMaster.debug = senderId;
            sendResponseError(senderId,'MagicMaster Debug set on for ' + playerName,'MagicMaster Debug');
	        sendDebug('Debugging turned on');
	    } else {
    	    sendResponseError(senderId,'MagicMaster Debugging turned off','MagicMaster Debug');
	        state.MagicMaster.debug = false;
	    }
	};

    /**
     * Pare a message with ^^...^^ parameters in it and send to chat
     * This allows character and token names for selected characters to be sent
     * Must be called with a validated tokenID
    */
    
    var sendParsedMsg = function( tid, msg, msgFrom ) {
        var cid, tname, charCS, cname, curToken,
            parsedMsg = msg;
            
        curToken = getObj( 'graphic', tid );
        tname = curToken.get('name');
        cid = curToken.get('represents');
		charCS = getObj('character',cid);
        cname = charCS.get('name');

		parsedMsg = parsedMsg.replace( /\^\^cid\^\^/gi , cid );
		parsedMsg = parsedMsg.replace( /\^\^tid\^\^/gi , tid );
		parsedMsg = parsedMsg.replace( /\^\^cname\^\^/gi , cname );
		parsedMsg = parsedMsg.replace( /\^\^tname\^\^/gi , tname );
		
		sendResponse( charCS, parsedMsg, msgFrom, null );

    };

	/**
	 * Display a message when a character has picked up a magic item
	 **/

	var pickupMessage = function( args, miName, miType, pickedQty, fromCharges, toCharges ) {
	
		var tokenID = args[1],
		    fromID = args[3],
		    toID = args[4],
		    cost = parseFloat(args[7]),
		    charCS = getCharacter( tokenID ),
		    picking = (tokenID == toID),
		    content, pickOrPut, charges;
		    
		content = '&{template:'+fields.defaultTemplate+'}{{name='+(picking?'Picking Up':'Putting Away')+' Items}}{{desc=';
		    
		if (picking) {
		    pickOrPut = 'picked up ';
		    charges = toCharges;
		} else {
		    pickOrPut = 'put away ';
		    charges = fromCharges;
		}
		
		switch (miType) {
		
		case 'cursed+charged':
		case 'charged':
			content += 'You have '+pickOrPut+pickedQty+' '+miName+', and now have '+charges+' charges';
			break;
			
		case 'cursed+rechargeable':
		case 'cursed+selfchargeable':
		case 'rechargeable':
		case 'selfchargeable':
			content += 'You have '+pickOrPut+miName+', a rechargeable item (if you have the skill) with '+toCharges+' charges';
			break;
			
		case 'cursed+recharging':
		case 'recharging':
			content += 'You have '+pickOrPut+miName+', an item with a maximum of '+toCharges+' charges, which regains charges each night';
			break;
			
		case 'cursed':
		case 'uncharged':
		default:
			content += 'You have '+pickOrPut+pickedQty+' '+miName+''+((pickedQty>1)?'s':'')+', and now have '+charges;
			break;
		}
		
		if (cost && !isNaN(cost) && cost > 0) {
		    content += ', at a cost of '+showCost( cost );
		}

		content += '.}}{{desc1=[Pick or put another MI](!magic --pickorput '+tokenID+'|'+fromID+'|'+toID+')}}';
		sendResponse( charCS, content );
		
	}
	
	
// -------------------------------------------- Roll20 utility functions ----------------------------------------------

	/**
	 * Issue a handshake request to check if another API or 
	 * specific API command is present
	 **/
	 
	var issueHandshakeQuery = function( api, cmd ) {
		var handshake = '!'+api+' --hsq magic'+((cmd && cmd.length) ? ('|'+cmd) : '');
		sendMagicAPI(handshake);
		return;
	};
	
    /**
     * Find the GM, generally when a player can't be found
     */
     
    var findTheGM = function() {
	    var playerGM,
	        players = findObjs({ _type:'player' });

		if (players.length !== 0) {
		    if (!_.isUndefined(playerGM = _.find(players, function(p) {
		        var player = p;
		        if (player) {
    		        if (playerIsGM(player.id)) {
	    	            return player.id;
                    }
		        }
            }))) {
                return playerGM.id;
            }
        }
        return undefined;
    }
	
	/**
	 * Find a Character object given a name only,
	 * returning the first match or undefined
	 */
	 
	var findCharacter = function( name ) {
		var charObj = findObjs({ _type: 'character' , name: name },{caseInsensitive: true});
		return ((charObj && charObj.length) ? charObj[0] : undefined);
	}

	/**
	 * Get valid character from a tokenID
	 */
	 
	var getCharacter = function( tokenID ) {
	
		var curToken,
		    charID,
		    charCS;
		
		if (!tokenID) {
			sendDebug('getCharacter: tokenID is invalid');
			sendError('Invalid MagicMaster arguments');
			return undefined;
		};

		curToken = getObj( 'graphic', tokenID );

		if (!curToken) {
			sendDebug('getCharacter: tokenID is not a token');
			sendError('Invalid MagicMaster arguments');
			return undefined;
		};
			
		charID = curToken.get('represents');
			
		if (!charID) {
			sendDebug('getCharacter: charID is invalid');
			sendError('Invalid MagicMaster arguments');
			return undefined;
		};

		charCS = getObj('character',charID);

		if (!charCS) {
			sendDebug('getCharacter: charID is not for a character sheet');
			sendError('Invalid MagicMaster arguments');
			return undefined;
		};
		return charCS;

	};
	
	/**
	 * Get the configuration for the player who's ID is passed in
	 * or, if the config is passed back in, set it in the state variable
	 **/
	 
	var getSetPlayerConfig = function( playerID, configObj ) {
		
		if (!_.isUndefined(configObj)) {
		    if (!state.MagicMaster.playerConfig[playerID]) {
		        state.MagicMaster.playerConfig[playerID]={};
		    }
			state.MagicMaster.playerConfig[playerID] = configObj;
		}
		return state.MagicMaster.playerConfig[playerID];
	};
				
// Magic Master 2.020

/* --------------------------------------------------- Table Management --------------------------------------------- */

	/*
	 * A function to get the whole of a repeating table in 
	 * two parts: an array of objects indexed by Roll20 object IDs,
	 * and an array of object IDs indexed by repeating table row number.
	 * Returns an object containing the table, and all parameters defining
	 * that table and where it came from.
	 */
	 
	var getTable = function(character,tableObj,tableDef,attrDef,col,defaultVal,caseSensitive) {
        let rowName, name = attrDef[0];
	    if (_.isUndefined(col) || _.isNull(col) || (tableDef && !_.isNull(tableDef) && !tableDef[1] && col && col==1)) {col = '';}
	    if (tableDef && !_.isNull(tableDef)) {
            rowName = tableDef[0]+col+'_$0_'+attrDef[0]+col;
	    } else {
            rowName = attrDef[0];
	    }
		
		if (_.isUndefined(defaultVal)) {
			defaultVal=attrDef[2];
		}
		tableObj.character=character;
		tableObj.table=tableDef;
		tableObj.column=col;
		if (_.isUndefined(tableObj[name])) {
		    tableObj[name]={};
		    tableObj[name].defaultVal = {current:'',max:''};
		}
		tableObj[name].property = attrDef;
		tableObj[name].defaultVal[attrDef[1]] = defaultVal;
		let	match= rowName.match(/^(repeating_.*)_\$(\d+)_.*$/);
        if(match){
            let createOrderKeys=[],
                attrMatcher=new RegExp(`^${rowName.replace(/_\$\d+_/,'_([-\\da-zA-Z]+)_')}$`,(caseSensitive?'i':'')),
                attrs=_.chain(findObjs({type:'attribute', characterid:character.id}))
                    .map((a)=>{
                        return {attr:a,match:a.get('name').match(attrMatcher)};
                    })
                    .filter((o)=>o.match)
                    .each((o)=>createOrderKeys.push(o.match[1]))
                    .reduce((m,o)=>{ m[o.match[1]]=o.attr; return m;},{})
                    .value(),
                sortOrderKeys = _.chain( ((findObjs({
                        type:'attribute',
                        characterid:character.id,
                        name: `_reporder_${match[1]}`
                    })[0]||{get:_.noop}).get('current') || '' ).split(/\s*,\s*/))
                    .intersection(createOrderKeys)
                    .union(createOrderKeys)
                    .value();

			if (_.isUndefined(tableObj.sortKeys)) {
				tableObj.sortKeys = sortOrderKeys;
			} else {
				tableObj.sortKeys = tableObj.sortKeys.concat(_.difference(sortOrderKeys,tableObj.sortKeys));
				if (_.some(sortOrderKeys, (e,k) => e !== tableObj.sortKeys[k])) sendDebug('Warning: table '+tableDef[0]+', attr '+attrDef[0]+' is not fully aligned');
			}
			tableObj[name].attrs=attrs;
        } else {
            tableObj[name].attrs=[];
            if (_.isUndefined(tableObj.sortKeys)) {
                tableObj.sortKeys = [];
            }
        }
		return tableObj;
	};
	
	/*
	 * Find all the necessary tables to manage a repeating 
	 * section of a character sheet.  Dynamically driven by 
	 * the table field definitions in the 'fields' object. 
	 */

	var getAllTables = function( charCS, tableTypes, c, tableInfo ) {
		
		var tableTypes = tableTypes.toUpperCase().split(','),
			rows = {};

		if (_.isUndefined(tableInfo)) {
			tableInfo = {};
			tableInfo.ammoTypes = [];
		};

		_.each( tableTypes, setupType => {
		    rows = {};
			if (_.isUndefined(tableInfo[setupType])) {
				tableInfo[setupType] = {};
				tableInfo[setupType].tableType = setupType;
				tableInfo[setupType].fieldGroup = tableIntro[setupType][0];
				tableInfo[setupType].table = tableIntro[setupType][1]
				tableInfo[setupType].values = [new Set()];
			}
			_.each( fields, (elem,key) => {
				if (key.startsWith(tableInfo[setupType].fieldGroup)
					&& ['current','max'].includes(String(elem[1]).toLowerCase())) {
					rows[key]=elem;
					if (_.isUndefined(tableInfo[setupType].values[elem[0]])) {
						tableInfo[setupType].values[elem[0]] = {current:'',max:''};
					}
					tableInfo[setupType].values[elem[0]][elem[1]] = elem[2] || '';
				};
				return;
        	});
			_.each(rows, (elem,key) => {
				tableInfo[setupType] = getTable( charCS, tableInfo[setupType], tableInfo[setupType].table, elem, c, elem[2] );
			});
		});

		return tableInfo;
	}
	
	/**
	 * A function to take a table obtained using getTable() and a row number, and 
	 * safely return the value of the table row, or undefined.  Uses the table object
	 * parameters such as the character object it came from and the field property.
	 * If the row entry is undefined use a default value if set in the getTable() call,
	 * which can be overridden with an optional parameter.  Can just return the row 
	 * object or can return a different property of the object using the second optional parameter.
	 */
	 
	var tableLookup = function( tableObj, attrDef, index, defVal, retObj ) {
        var val, name = attrDef[0];
        if (_.isUndefined(retObj)) {
			retObj=false;
		} else if (retObj === true) {
			defVal=false;
		}
		if (_.isUndefined(defVal)) {
			defVal=true;
		}
		if (tableObj[name]) {
			let property = (retObj === true) ? null : ((retObj === false) ? attrDef :  retObj);
			defVal = (defVal===false) ? (undefined) : ((defVal===true) ? tableObj[name].defaultVal[attrDef[1]] : defVal);
			if (index>=0) {
				let attrs = tableObj[name].attrs,
					sortOrderKeys = tableObj.sortKeys;
				if (index<sortOrderKeys.length && _.has(attrs,sortOrderKeys[index])) {
					if (_.isUndefined(property) || _.isNull(property) || !property || !property[1] || _.isUndefined(attrs[sortOrderKeys[index]])) {
						return attrs[sortOrderKeys[index]];
					} else {
						val = attrs[sortOrderKeys[index]].get(property[1]);
						if (_.isUndefined(val)) {
						    val = defVal;
						};
						return val;
					}
				}
				return defVal;
			} else if (!_.isUndefined(property) && !_.isNull(property)) {
				val = attrLookup( tableObj.character, property );
				if ( _.isUndefined(val)) {
				    val = defVal;
				}
				return val;
			}
		}
		
		return undefined;
	}

	/**
	 * A function to take a table obtained using getTable() a row number, and 
	 * a value, and safely set the value of the property, 
	 * returning true for success and false for failure, or undefined if 
	 * it tries setAttr to create an entry that does not exist.
	 */
	 
	 var tableSet = function( tableObj, attrDef, r, attrValue, caseSensitive ) {
		
        var name = attrDef[0];
		if (tableObj[name]) {
			if (_.isUndefined(attrValue)) {
				attrValue = tableObj[name].defaultVal;
			}
    		if (r < 0) {
				let attrObj = attrLookup( tableObj.character, [attrDef[0], null], null, null, null, caseSensitive );
				if (!attrObj) attrObj = createObj( 'attribute', {characterid:tableObj.character.id, name:attrDef[0]});
				attrObj.set(attrDef[1],attrValue);
    		    return tableObj;
    		}
			let attrs = tableObj[name].attrs,
				sortOrderKeys = tableObj.sortKeys,
				value = {},
				rowObj;
			    
			if (r<sortOrderKeys.length && !_.has(attrs,sortOrderKeys[r])) {
				let finalName = tableObj.table[0]+tableObj.column+'_'+sortOrderKeys[r]+'_'+attrDef[0]+tableObj.column;
    	        value = tableObj.values[attrDef[0]] || {current:'', max:''};
    			value[attrDef[1]]=String(attrValue);
				rowObj = createObj( "attribute", {characterid: tableObj.character.id, name: finalName});
				rowObj.set(value);
				tableObj[name].attrs[sortOrderKeys[r]] = rowObj;
			} else if (r<sortOrderKeys.length && _.has(attrs,sortOrderKeys[r])
										&& !_.isUndefined(attrDef)
										&& !_.isNull(attrDef)
										&& attrDef[1]
										&& !_.isUndefined(attrs[sortOrderKeys[r]])) {
				attrs[sortOrderKeys[r]].set(attrDef[1],String(attrValue));
			} else {
				log('tableSet not been able to set '+tableObj.table[0]+tableObj.column+'_$'+r+'_'+attrDef[0]+tableObj.column+' "'+attrDef[1]+'" to '+attrValue);
				sendError('MagicMaster not able to save to '+tableObj.table[0]+' table row '+r);
			}
		}
		return tableObj;
	};
	
    /*
     * Function to generate unique IDs for creating objects in Roll20
     */

	var generateUUID = function () {
			var a = 0,
				b = [];
			return function () {
				var c = (new Date()).getTime() + 0,
					d = c === a;
				a = c;
				for (var e = new Array(8), f = 7; 0 <= f; f--) {
					e[f] = "-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz".charAt(c % 64);
					c = Math.floor(c / 64);
				}
				c = e.join("");
				if (d) {
					for (f = 11; 0 <= f && 63 === b[f]; f--) {
						b[f] = 0;
					}
					b[f]++;
				} else {
					for (f = 0; 12 > f; f++) {
						b[f] = Math.floor(64 * Math.random());
					}
				}
				for (f = 0; 12 > f; f++) {
					c += "-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz".charAt(b[f]);
				}
				return c;
			};
		}();
	var	generateRowID = function () {
			return generateUUID().replace(/_/g, "Z");
		};

	/*
	 * Create a new table row and add values to it
	 * If the table row already exists, set it to the provided values.
	 * If the row exists and no values are provided, set it to defaults.
	 */
	
	var addTableRow = function( tableObj, index, values, fieldGroup ) {
	    
		let rowObj, newVal, currentVal, maxVal, list = tableObj;
		
		if (!values) values = tableObj.values;
		if (!fieldGroup) fieldGroup = tableObj.fieldGroup;
		if (!fieldGroup) {
			throw {name:'MagicMaster Error',message:'undefined addTable fieldGroup'};
		}
		    
		if ((index < 0) || !_.isUndefined(tableLookup( tableObj, fields[fieldGroup+'name'], index, false ))) {
			_.each( list, (elem,key) => {
			    if (_.isUndefined(elem.attrs)) return;
				currentVal = (!values || _.isUndefined(values[key])) ? elem.defaultVal['current'] : values[key]['current'];
				maxVal = (!values || _.isUndefined(values[key])) ? elem.defaultVal['max'] : values[key]['max'];
				tableObj = tableSet( tableObj, [key,'current'], index, currentVal );
				tableObj = tableSet( tableObj, [key,'max'], index, maxVal );
			});
		} else {
			let rowObjID = generateRowID(),
			    namePt1 = tableObj.table[0]+tableObj.column+'_'+rowObjID+'_';
			_.each( list, (elem,key) => {
			    if (_.isUndefined(elem.attrs)) return;
				rowObj = createObj( "attribute", {characterid: tableObj.character.id, name: (namePt1+key+tableObj.column)} );
				if (!values || _.isUndefined(values[key])) {
					newVal = elem.defaultVal;
				} else {
					newVal = values[key];
				}
				rowObj.set(newVal);
				tableObj[key].attrs[rowObjID] = rowObj;
				tableObj.sortKeys[index] = rowObjID;
				return;
			});
		}
		return tableObj;
	}
	
	/*
	 * Function to initialise a values[] array to hold data for 
	 * setting a table row to.
	 */
	 
	var initValues = function( fieldGroup ) {
	
		var values = [new Set()],
    		rows = _.filter( fields, (elem,f) => {return f.startsWith(fieldGroup)})
						.map(elem => {
							if (_.isUndefined(values[elem[0]])) {
								values[elem[0]] = {current:'',max:''};
							}
							values[elem[0]][elem[1]] = elem[2] || '';
						});
        return values;
	};
	
	/*
	 * A function to find the index of a matching entry in a table
	 */
	 
	var tableFind = function( tableObj, attrDef, val ) {
		
        val = val.toLowerCase().replace(reIgnore,'');
		let property = attrDef[1];
		if ((tableObj.table[1] < 0) && val == attrLookup( tableObj.character, attrDef ).toLowerCase().replace(reIgnore,'')) {
			return -1;
		}
		let tableIndex = tableObj.sortKeys.indexOf(
								_.findKey(tableObj[attrDef[0]].attrs, function( elem, objID ) {return val == elem.get(property).toLowerCase().replace(reIgnore,'');})
								);
		return (tableIndex >= 0) ? tableIndex : undefined;
	}

    /**
     * A function to lookup the value of any attribute, including repeating rows, without errors
     * thus avoiding the issues with getAttrByName()
     * 
     * Thanks to The Aaron for this, which I have modded to split and 
	 * allow tables to be loaded once rather than multiple times.
	*/

    var attrLookup = function(character,attrDef,tableDef,r,c='',caseSensitive=false) {
		let name, match,
			property = attrDef[1];
		
		if (tableDef && (tableDef[1] || r >= 0)) {
			c = (tableDef[1] || c != 1) ? c : '';
			name = tableDef[0] + c + '_$' + r + '_' + attrDef[0] + c;
		} else {
			name = attrDef[0];
		}
		match=name.match(/^(repeating_.*)_\$(\d+)_.*$/);
        if(match){
            let index=match[2],
				tableObj = getTable(character,{},tableDef,attrDef,c,caseSensitive);
			return tableLookup(tableObj,attrDef,index,false,!attrDef[1]);
		} else {
			let attrObj = findObjs({ type:'attribute', characterid:character.id, name: name}, {caseInsensitive: !caseSensitive});
			if (!attrObj || attrObj.length == 0) {
				return undefined;
			} else {
				attrObj = attrObj[0];
				if (_.isUndefined(property) || _.isNull(property) || _.isUndefined(attrObj)) {
					return attrObj;
				} else {
					return attrObj.get(property);
				}
			}
		}
    };
	
	/**
	* Check that an attribute exists, set it if it does, or
	* create it if it doesn't using !setAttr
	**/
	
	var setAttr = function( character, attrDef, attrValue, tableDef, r, c, caseSensitive ) {
	    
		var name, attrObj, match;

	    try {
	        name = attrDef[0];
	    } catch {
	        return undefined;
	    }
		
		if (tableDef && (tableDef[1] || r >= 0)) {
			c = (c && (tableDef[1] || c != 1)) ? c : '';
			name = tableDef[0] + c + '_$' + r + '_' + attrDef[0] + c;
		} else {
			name = attrDef[0];
		}
		match=name.match(/^(repeating_.*)_\$(\d+)_.*$/);
        if(match){
            let index=match[2],
				tableObj = getTable(character,{},tableDef,attrDef,c,caseSensitive);
			if (tableObj)
				tableObj = tableSet(tableObj,attrDef,r,attrValue);
			attrObj = tableLookup(tableObj,attrDef,r,false,true);
		
		} else {
			attrObj = attrLookup( character, [name, null], null, null, null, caseSensitive );
			if (!attrObj) {
				attrObj = createObj( 'attribute', {characterid:character.id, name:attrDef[0], current:'', max:''} );
			}
			if (_.isUndefined(attrDef)) {log('setAttr attrDef corrupted:'+attrDef);return undefined;}
			sendDebug( 'setAttr: character ' + character.get('name') + ' attribute ' + attrDef[0] + ' ' + attrDef[1] + ' set to ' + attrValue );
			if (attrDef[3]) {
				attrObj.setWithWorker(attrDef[1],String(attrValue));
			} else {
				attrObj.set(attrDef[1],String(attrValue));
			}
		}
		return attrObj;
	}
	
/* --------------------------- Ability Management Functions ------------------------------ */

	/**
	 * Find an ability macro with the specified name in any 
	 * macro database with the specified root name, returning
	 * the database name, and the matching "ct-" object.
	 * If can't find a matching ability macro or "ct-" object
	 * then return undefined objects
	 * RED v2.044: Updated to use a database index of object IDs 
	 * to speed up lookups.
	 **/
	 
	var abilityLookup = function( rootDB, abilityName, silent=false ) {
	    
        abilityName = abilityName.toLowerCase().replace(reIgnore,'');
        if (!abilityName || abilityName.length==0) {
			return {dB: rootDB, obj: undefined, ct: undefined};
        }
		
		var charID, obj, dBname,
			abilityObj = [],
			ctObj = [],
	        rDB = rootDB.toLowerCase().replace(/-/g,'_'),
			objIndex = DBindex[rDB][abilityName];
	    
		if (!objIndex) {
			log('Not found ability '+abilityName);
			if (!silent) sendError('Not found ability '+abilityName);
			return {dB: rootDB, obj: undefined, ct: undefined};
		} else {
			obj = getObj('ability',objIndex[0]);
			charID = obj.get('characterid');
			dBname = getObj('character',charID).get('name');
			abilityObj[0] = obj;
			ctObj[0] = getObj('attribute',objIndex[1]);
			if (!ctObj || ctObj.length === 0 || !ctObj[0]) {
				log('Can\'t find ct-'+abilityName+' in '+dBname);
				if (!silent) sendError('Can\'t find ct-'+abilityName+' in '+dBname);
				return {dB: rootDB, obj: undefined, ct: undefined};
			};
		};
		return {dB: dBname, obj:abilityObj, ct: ctObj};
	}
	
	/*
	 * Create or update an ability on a character sheet
	 */
	
	var setAbility = function( charCS, abilityName, abilityMacro, actionBar=false ) {
		
		var abilityObj = findObjs({type: 'ability',
								   characterid: charCS.id,
								   name: abilityName}, 
								   {caseInsensitive:true});
		if (!abilityObj || abilityObj.length == 0) {
			abilityObj = createObj( 'ability', {characterid: charCS.id,
												name: abilityName,
												action: abilityMacro,
												istokenaction: actionBar});
		} else {
			abilityObj = abilityObj[0];
			abilityObj.set( 'action', abilityMacro );
			abilityObj.set( 'istokenaction', actionBar );
		}
		return abilityObj;
	}

/* ------------------------------- Character Sheet Database Management -------------------------- */
	
	/*
	 * Check the version of a Character Sheet database against 
	 * the current version in the API.  Return true if needs updating
	 */
	 
	var checkDBver = function( dbFullName, dbObj, silent ) {
		
		dbFullName = dbFullName.replace(/_/g,'-');
		
		var dbName = dbFullName.toLowerCase(),
			dbCS = findObjs({ type:'character', name:dbFullName },{caseInsensitive:true}),
			dbVersion = 0.0,
			msg, versionObj;
		
		if (dbCS && dbCS.length) {
			dbCS = dbCS[0];
			dbVersion = parseFloat(attrLookup( dbCS, fields.dbVersion ) || dbVersion);
			
			if (dbVersion >= (parseFloat(dbObj.version) || 0)) {
				msg = dbFullName+' v'+dbVersion+' not updated as is already latest version';
				if (!silent) sendFeedback(msg); 
				return false;
			}
		}
		return true;
	}

	/*
	 * For magic items that have stored spells or powers, extract 
	 * these from the MI definition and create or update the 
	 * related character sheet database attribute.
	 */
	 
	var addMIspells = function( dbCS, dbItem ) {
		
		var itemData = dbItem.body.match(/}}[\s\w\-]*?(?<!tohit|dmg|ammo|range)data\s*?=\s*?\[.*?[\s,]ns:\d+?.*?\],?(.*?){{/img),
			itemSpells = itemData ? [...('['+itemData[0]+']').matchAll(/\[[\s\w\-\+\,\:\/]+?\]/g)] : [],
			spellSet = {MU:[[],[]],PR:[[],[]],PW:[[],[]]};

		_.each(itemSpells, spell => {
			let parsedData = parseData( spell[0], reSpellSpecs );
			if (parsedData && parsedData.spell && ['MU','PR','PW'].includes(parsedData.spell.toUpperCase())) {
				let spellType = parsedData.spell.toUpperCase();
				spellSet[spellType][0].push(parsedData.name);
				spellSet[spellType][1].push((spellType == 'PW') ? (parsedData.perDay+'.'+parsedData.perDay) : (parsedData.level+'.0'));
			}
		});
		if (spellSet.PW && spellSet.PW[0].length) {
			setAttr( dbCS, [fields.ItemPowersList[0]+dbItem.name,fields.ItemPowersList[1]], spellSet.PW[0].join() );
			setAttr( dbCS, [fields.ItemPowerValues[0]+dbItem.name,fields.ItemPowerValues[1]], spellSet.PW[1].join() );
		}
		if (spellSet.PR && spellSet.PR[0].length) {
			setAttr( dbCS, [fields.ItemPRspellsList[0]+dbItem.name,fields.ItemPRspellsList[1]], spellSet.PR[0].join() );
			setAttr( dbCS, [fields.ItemPRspellValues[0]+dbItem.name,fields.ItemPRspellValues[1]], spellSet.PR[1].join() );
		}
		if (spellSet.MU && spellSet.MU[0].length) {
			setAttr( dbCS, [fields.ItemMUspellsList[0]+dbItem.name,fields.ItemMUspellsList[1]], spellSet.MU[0].join() );
			setAttr( dbCS, [fields.ItemMUspellValues[0]+dbItem.name,fields.ItemMUspellValues[1]], spellSet.MU[1].join() );
		}
		return;
	}

	/* 
	 * A function to read the abilities of a database character sheet
	 * and write them to a handout, so they can be cut&pasted to an API
	 * for saving as a new version.
	 */
	 
	var saveDBtoHandout = function( dbName, version ) {
	    
		var dbCS = findObjs({ type: 'character', name: dbName })[0] || undefined,
			objDef = '',
			objHeader = '',
			foundItems = [],
			dbHandout,specs,csDBlist,
			objBody,objType,objCT,objChg,objCost;
			
		if (!dbCS) {
			sendError('Database '+dbName+' not found');
			return undefined;
		}
		if (!version || !version.length) {
			version = (parseFloat(attrLookup( dbCS, fields.dbVersion ) || '1.0') || '1.0') + 0.01;
		}
		dbHandout = findObjs({ type: 'handout', name: dbName+'-object v'+version });
		if (!dbHandout || !dbHandout.length) {
			dbHandout = createObj('handout',{name:(dbName+'-object v'+version)});
		} else {
			dbHandout = dbHandout[0];
		}

		objHeader = 'avatar:\''+dbCS.get('avatar')+'\',<br>'
				  + 'version:'+version+',<br>';
		objDef    = 'db:[';
		csDBlist = findObjs({ type: 'ability', characterid: dbCS.id });
		
		_.each(	_.sortBy(csDBlist,item => item.get('name')), function( item ) {
			if (foundItems.includes(item.get('name'))) return;
			foundItems.push(item.get('name'));
			objBody = encodeStr(item.get('action'));
			specs = objBody.match(/}}\s*specs\s*=(.*?){{/im);
			specs = specs ? [...('['+specs[0]+']').matchAll(/\[\s*?\w[\s\|\w\-]*?\s*?,\s*?(\w[\s\|\w\-]*?)\s*?,.*?\]/g)] : [];
			objType = '';
			for (let i=0; i < specs.length; i++) {
				objType += (objType && objType.length) ? ('|' + specs[i][1]) : specs[i][1];
			}
			objCT	= (objBody.match(/\}\}\s*?\w*?data\s*?=.*?[\[,]\s*?sp:([d\d\+\-\*\/]+?)[,\s\]]/im) || ['',0])[1];
			objChg	= (objBody.match(/\}\}\s*?\w*?data\s*?=.*?[\[,]\s*?rc:([\w-]+?)[,\s\]]/im) || ['','uncharged'])[1];
			objCost	= (objBody.match(/\}\}\s*?\w*?data\s*?=.*?[\[,]\s*?gp:(\d+?\.?\d*?)[,\s\]]/im) || ['',0])[1];
			objBody = objBody.replace(/template:2Edefault/i,'template:\'+fields.defaultTemplate+\'')
							 .replace(/template:2Espell/i,'template:\'+fields.spellTemplate+\'');
			objDef += '{name:\''+item.get('name')+'\','
					+  'type:\''+objType+'\','
					+  'ct:\''+objCT+'\','
					+  'charge:\''+objChg+'\','
					+  'cost:\''+objCost+'\','
					+  'body:\''+objBody+'\'},<br>';
		});
		objDef += ']},<br>';
		dbHandout.set('notes',objHeader+objDef);
		sendFeedback('Extracted '+dbName+' v'+version);
		setAttr( dbCS, fields.dbVersion, version );
		return dbHandout;
	}
	
	/*
	 * Check the version of a Character Sheet database and, if 
	 * it is earlier than the static data held in this API, update 
	 * it to the latest version.
	 */
	 
	var buildCSdb = function( dbFullName, dbObj, silent ) {
		
		dbFullName = dbFullName.replace(/_/g,'-');

		const dbName = dbFullName.toLowerCase(),
			  spells = dbName.toLowerCase().includes('spell') || dbName.toLowerCase().includes('power'),
			  typeList = (spells ? spTypeLists : miTypeLists),
			  rootDB = dbObj.root.toLowerCase();

		var dbVersion = 0.0,
			dbCS = findObjs({ type:'character', name:dbFullName },{caseInsensitive:true}),
			errFlag = false,
			lists = {},
			foundItems = [],
			csDBlist, specs, objType, objBody,
			msg, versionObj, curDB;

		if (!checkDBver( dbFullName, dbObj, silent )) return false; 

		if (dbCS && dbCS.length) {
			dbCS[0].remove();
		}
		dbCS = createObj( 'character', {name:dbFullName} );
		
		_.each(_.sortBy(dbObj.db,'name'), item => {
			if (foundItems.includes(item.name)) return;
			foundItems.push(item.name);
			item.body = parseStr(item.body);

			if (!setAbility( dbCS, item.name, item.body )) {
				errFlag = true;
				log('buildCSdb: unable to set database '+dbName+' entry '+item.name);
			} else {
				setAttr( dbCS, [fields.CastingTimePrefix[0]+item.name, 'current'], item.ct );
				setAttr( dbCS, [fields.CastingTimePrefix[0]+item.name, 'max'], (spells ? item.cost : item.charge) );
				addMIspells( dbCS, item );
				let types = item.type.toLowerCase().replace(reIgnore,'').split('|');
				_.each(types,t => {
					if (t && t.length && typeList[t]) {
						let listType = typeList[t].type.toLowerCase();
						if (!lists[listType]) lists[listType] = [];
						if (!lists[listType].includes(item.name)) {
							lists[listType].push(item.name);
						}
					} else if (t && t.length && !typeList[t]) {
						sendError('Unable to identify item type '+t+' when updating '+item.name+' in database '+dbFullName);
					};
				});
			};
			return;
		});
		if (errFlag) {
			sendError( 'Unable to completely update database '+dbName );
		} else {
			_.each(typeList, dbList => setAttr( dbCS, [dbList.field[0],'current'], (lists[dbList.type.toLowerCase()] || ['']).join('|')));
			setAttr( dbCS, fields.dbVersion, dbObj.version );
			dbCS.set('avatar',dbObj.avatar);
			dbCS.set('bio',dbObj.bio);
			dbCS.set('controlledby',dbObj.controlledby);
			dbCS.set('gmnotes',dbObj.gmnotes);
			let msg = 'Updated database '+dbName+' to version '+String(dbObj.version);
			if (!silent) sendFeedback( msg ); else log(msg);
		}
		return !errFlag;
	}
	
	/*
	 * Check a character sheet database and update/create the 
	 * required attributes from the definitions.  This should 
	 * be run after updating or adding item or spell definitions.
	 */
	 
	var checkCSdb = function( args ) {
		
		var dbName = args[0].toLowerCase(),
			lists = {},
			spellsDB,
			dbCSlist;

		var	checkObj = function( obj ) {
				var	objCS, objCSname, objName, objBody, type, objCT, objChg, objCost, specs, spellsDB;

				if (obj.get('type') !== 'ability') return false;
				objCS = getObj('character',obj.get('characterid'));
				objCSname = objCS.get('name').toLowerCase();
				if (!objCSname.includes(dbName) || !objCSname.includes('-db')) return false;
				objBody = obj.get('action');
				specs = objBody.match(/}}\s*specs\s*=(.*?){{/im);
				if (!specs) return true;
				spellsDB = objCSname.includes('spells') || objCSname.includes('powers');
				objName = obj.get('name');
				specs = specs ? [...('['+specs[0]+']').matchAll(/\[\s*?\w[\s\|\w\-\+]*?\s*?,\s*?(\w[\s\|\w\-]*?)\s*?,.*?\]/g)] : [];
				for (const i of specs) {
					type = i[1];
					if (type && type.length) {
						let typeList = type.toLowerCase().replace(reIgnore,'').split('|');
						for (const t of typeList) {
							if (_.isUndefined((spellsDB ? spTypeLists[t] : miTypeLists[t]))) {
								sendError(objName+' is of undefined type '+t+'.  Please correct this item definition.');
							} else {
								let itemType = spellsDB ? spTypeLists[t].type : miTypeLists[t].type;
								if (!lists[objCS.id]) lists[objCS.id] = {};
								if (!lists[objCS.id][itemType]) lists[objCS.id][itemType] = [];
								if (!lists[objCS.id][itemType].includes(objName)) {
									lists[objCS.id][itemType].push(objName);
								};
							};
						};
					};
				};
				objCT	= (objBody.match(/\}\}\s*?\w*?data\s*?=\[.*?[\[,]\s*?sp:(\d+?\.?\d*?)[,\]\s]/im) || ['',0])[1];
				objChg	= (objBody.match(/\}\}\s*?\w*?data\s*?=\[.*?[\[,]\s*?rc:([\w-]+)\s*?[,\]]/im) || ['','uncharged'])[1];
				objCost	= (objBody.match(/\}\}\s*?\w*?data\s*?=\[.*?[\[,]\s*?gp:(\d+?\.?\d*?)[,\]\s]/im) || ['',0])[1];
				setAttr( objCS, [fields.CastingTimePrefix[0]+objName, 'current'], objCT );
				setAttr( objCS, [fields.CastingTimePrefix[0]+objName, 'max'], (spellsDB ? objCost : objChg) );
				addMIspells( objCS, {name:objName,body:objBody} );
				return true;
			};
		
		if (!dbName || !dbName.length) {
			dbName = '-db';
		}
		dbCSlist = filterObjs( obj => checkObj(obj) );
		if (!dbCSlist || !dbCSlist.length) {
			sendFeedback('No databases found with a name that includes '+dbName);
		} else {
			_.each(lists,(types,dbID) => {
				let dbCS = getObj('character',dbID),
					name = dbCS.get('name').toLowerCase();
				spellsDB = name.includes('spells') || name.includes('powers');
				_.each((spellsDB ? spTypeLists : miTypeLists), dbList => {
					if (types[dbList.type]) {
						setAttr( dbCS, [dbList.field[0],'current'], (types[dbList.type].sort().join('|') || '' ));
					}
				});
			});
			sendFeedback(((dbName === '-db') ? 'All databases have' : ('Database '+args[0]+' has')) + ' been updated'); 
		}
		updateDBindex();
		return;
	}
	
	/**
	 * Create an internal index of items in the databases 
	 * to make searches much faster.  Index entries indexed by
	 * database root name & short name (name in lower case with 
	 * '-', '_' and ' ' ignored).  index[0] = abilityID,
	 * index[1] = ct-attributeID
	 **/
	 
	var updateDBindex = function() {
		
		var rootDB, magicDB, validDB,
			dbName, shortName, attrName;
		
		filterObjs( function(obj) {
			if (obj.get('type') != 'ability') return false;
			if (!(magicDB = getObj('character',obj.get('characterid')))) return false;
			dbName = magicDB.get('name').replace(/-/g,'_');
			if (/\s*v\d*\.\d*/i.test(dbName)) return false;
			let validDB = false;
			for (let rDB in DBindex) {
			    if (dbName.toLowerCase().startsWith(rDB)) {
			        validDB = true;
			        rootDB = rDB;
			    }
			}
			if (!validDB) return false;
			let shortName = obj.get('name').toLowerCase().replace(reIgnore,'');
			if (_.isUndefined(DBindex[rootDB][shortName]) || !stdDB.includes(dbName)) {
				DBindex[rootDB][shortName] = [obj.id,''];
			}
			return true;
		});
		filterObjs( function(obj) {
			if (obj.get('type') != 'attribute') return false;
			attrName = obj.get('name');
			if (!attrName.startsWith('ct-')) return false;
			if (!(magicDB = getObj('character',obj.get('characterid')))) return false;
			dbName = magicDB.get('name').replace(/-/g,'_');
			if (/\s*v\d*\.\d*/i.test(dbName)) return false;
			let validDB = false;
			for (let rDB in DBindex) {
			    if (dbName.toLowerCase().startsWith(rDB)) {
			        validDB = true;
			        rootDB = rDB;
			    }
			}
			if (!validDB) return false;
			let shortName = attrName.toLowerCase().replace(reIgnore,'').substring(2);
			if (!DBindex[rootDB][shortName]) return false;
			if (!stdDB.includes(dbName) || !DBindex[rootDB][shortName][1].length) {
				DBindex[rootDB][shortName][1] = obj.id;
			};
		});

		return;
	}

	/**
	 * Update or create the help handouts
	 **/
	 
	var updateHandouts = function(silent,senderId) {
		
		_.each(handouts,(obj,k) => {
			let dbCS = findObjs({ type:'handout', name:obj.name },{caseInsensitive:true});
			if (!dbCS || !dbCS[0]) {
			    log(obj.name+' not found.  Creating version '+obj.version);
				if (!silent) sendFeedback(obj.name+' not found.  Creating version '+obj.version);
				dbCS = createObj('handout',{name:obj.name,inplayerjournals:senderId});
				dbCS.set('notes',obj.bio);
				dbCS.set('avatar',obj.avatar);
			} else {
				dbCS = dbCS[0];
				dbCS.get('notes',function(note) {
					let reVersion = new RegExp(obj.name+'\\s*?v(\\d+?.\\d*?)</span>', 'im');
					let version = note.match(reVersion);
					version = (version && version.length) ? (parseFloat(version[1]) || 0) : 0;
					if (version >= obj.version) {
						if (!silent) sendFeedback('Not updating handout '+obj.name+' as is already version '+obj.version);
					    return;
					}
					dbCS.set('notes',obj.bio);
					dbCS.set('avatar',obj.avatar);
					if (!silent) sendFeedback(obj.name+' handout updated to version '+obj.version);
					log(obj.name+' handout updated to version '+obj.version);
				});
			}
		});
		return;
	}


/* ------------------------------- Magic Utility functions ----------------------------- */
	
	/*
	 * Function to replace special characters in a string
	 */
	 
	var parseStr=function(str,replacers=dbReplacers){
		return replacers.reduce((m, rep) => m.replace(rep[0], rep[1]), str);
	}

	/*
	 * Function to encode special characters in a string
	 */
	 
	var encodeStr=function(str,encoders=dbEncoders){
		return encoders.reduce((m, rep) => m.replace(rep[0], rep[1]), str);
	}

	/*
	 * Parse a data string for attribute settings
	 */
	 
	var parseData = function( data, reSpecs ) {
		
		var parsedData = {},
			val;

		_.each( reSpecs, spec => {
			val = data.match(spec.re);
			if (!!val && val.length>1 && val[1].length) {
				parsedData[spec.field] = val[1];
			} else {
				parsedData[spec.field] = spec.def;
			}
		});
		return parsedData;
	}
	
	/**
	 * String together the value of the specified attribute from
	 * all macro databases with the specified root name, separated
	 * by |.  This is used to get a complete list of available
	 * magic spell or item macros across all databases of a
	 * specific type.
	 **/
	 
	var getMagicList = function( rootDB, listAttr ) {
		
		var magicList = '';
		filterObjs( function(objs) {
			let name = objs.get('name'),
			    newList;
			if (objs.get('type') !== 'character' || !name.startsWith(rootDB)) {return false};
			if (/\s*v\d*\.\d*/i.test(name)) {return false};
			magicList += (magicList.length ? '|' : '') + (attrLookup( objs, listAttr ) || '');
			return true;
		});
		return magicList.split('|').filter( list => !!list ).sort().join('|');
	}

    /**
     * Express a cost in coins for display
    **/
    
    var showCost = function( cost ) {
        var content = '[[' + Math.floor(cost) + ']]GP, [[' + Math.floor((cost*10)%10) + ']]SP, [[' + Math.floor((cost*100)%10) +']]CP';
        return content;
    };
    
    /**
     * Deduct expenditure from a character
     **/
   
    var spendMoney = function( toCS, cost, fromCS ) {
        
        var gold = parseInt((attrLookup( toCS, fields.Money_gold ) || 0), 10),
            silver = parseInt((attrLookup( toCS, fields.Money_silver ) || 0), 10),
            copper = parseInt((attrLookup( toCS, fields.Money_copper ) || 0), 10);
            
        if (!toCS || isNaN(cost) || cost == 0) {
            return gold + (silver / 10) + (copper / 100);
        }

        if (cost < 0) {
            cost = Math.abs(cost);
            gold += Math.floor(cost);
            silver += Math.floor((cost*10)%10);
            copper += Math.floor((cost*100)%10);
        } else {
            gold -= Math.floor(cost);
            silver -= Math.floor((cost*10)%10);
            copper -= Math.floor((cost*100)%10);
        }
        setAttr( toCS, fields.Money_gold, gold );
        setAttr( toCS, fields.Money_silver, silver );
        setAttr( toCS, fields.Money_copper, copper );

        if (fromCS) {
            spendMoney( fromCS, (0-cost) );
        }
        
        return gold + (silver / 10) + (copper / 100);
    }
    
    /**
     * Find and return total level of a character
     **/
    
    var characterLevel = function( charCS ) {
        var level = parseInt((attrLookup( charCS, fields.Total_level ) || 0),10);
		if (!level) {
			level = parseInt((attrLookup( charCS, fields.Fighter_level ) || 0),10)
                  + parseInt((attrLookup( charCS, fields.Wizard_level ) || 0),10)
                  + parseInt((attrLookup( charCS, fields.Priest_level ) || 0),10)
                  + parseInt((attrLookup( charCS, fields.Rogue_level ) || 0),10)
                  + parseInt((attrLookup( charCS, fields.Psion_level ) || 0),10)
				  + (parseInt((attrLookup( charCS, fields.Monster_hitDice ) || 0),10)
					+ ((parseInt((attrLookup( charCS, fields.Monster_hpExtra ) || 0),10) >= 3) ? 1 : 0));
		}
        return level;
    }
	
	/*
	 * Find and return the level for spell casting.
	 *    MU: Wizard_level
	 *    PR: Priest_level
	 *    POWER or MI: all levels added
	 */
	 
	var caster = function( charCS, casterType ) {
		
		var level, castingLevel, charClass, castingClass;
		
		switch (casterType) {
		case 'MU':
			level = attrLookup(charCS,fields.Wizard_level) || 0;
			if (level >= 1) {
				castingClass = charClass = (attrLookup( charCS, fields.Wizard_class ) || 'WIZARD').toUpperCase();
				if (charClass != 'BARD') {
					castingClass = 'WIZARD';
				}						
			} else {
				castingClass = charClass = (attrLookup( charCS, fields.Rogue_class ) || '').toUpperCase();
				if (charClass == 'BARD') {
					level = attrLookup(charCS,fields.Rogue_level) || 0;
				}
			}
			castingLevel = (!level || !castingClass) ? 0 : Math.min(Math.max((1+parseInt(level) - spellsPerLevel[castingClass][0][1]),0),spellsPerLevel[castingClass][0][2]);
			break;
		case 'PR':
			level = attrLookup( charCS, fields.Priest_level ) || 0;
			if (level >= 1) {
				castingClass = charClass = (attrLookup( charCS, fields.Priest_class ) || 'PRIEST').toUpperCase();
				if (charClass != 'RANGER' && charClass != 'PALADIN') {
					castingClass = 'PRIEST';
				}
			} else {
				castingClass = charClass = (attrLookup( charCS, fields.Fighter_class ) || '').toUpperCase();
				if (charClass == 'RANGER' || charClass == 'PALADIN') {
					level = attrLookup(charCS,fields.Fighter_level) || 0;
				}
			}
			castingLevel = (!level || !castingClass) ? 0 : Math.min(Math.max((1+parseInt(level) - spellsPerLevel[castingClass][0][1]),0),spellsPerLevel[castingClass][0][2]);
			break;
		case 'POWER':
		case 'MI':
		default:
			level = castingLevel = characterLevel( charCS );
			castingClass = charClass = '';
			break;
		}
		return {lv:level,cl:charClass,clv:castingLevel,ccl:castingClass};
	}
	
	/*
	 * Just get the caster level
	 */
	
	var casterLevel = function( charCS, casterType ) {
		return caster( charCS, casterType ).clv;
	}
	
	/**
	 * Determine the type of caster and set the correct levels
	 **/
	 
	var setCaster = function( args, msg ) {
	 
		var isPower = args[0].toUpperCase().includes('POWER'),
		    isMU = args[0].toUpperCase().includes('MU'),
			isMI = args[0].toUpperCase().includes('MI'),
			isPR = args[0].toUpperCase().includes('PR'),
			tokenID = args[1],
		    curToken = getObj('graphic',tokenID),
			charCS = getCharacter( tokenID ),
			level = args[2],
			pr_level, mu_level,
			castingName = args[3],
			chargedItem = (!!args[4] && args[4].toLowerCase()=='charged'),
			itemName = args[5] || '';
			
		if (!charCS) {
			sendDebug('setCaster: invalid token_id');
			sendError('Incorrect MagicMaster syntax');
			return;
		}

		mu_level = parseInt(casterLevel( charCS, 'MU' ),10);
		pr_level = parseInt(casterLevel( charCS, 'PR' ),10);
		
		if (isMU && isPR) {
		    isMU = !isNaN(mu_level) && mu_level > 0;
		    isPR = !isNaN(pr_level) && pr_level > 0;
			if (isPR && !isMU) {
				args[0] = 'PR';
			} else if (isMU && !isPR) {
				args[0] = 'MU';
			}
		}
		
		if ((isMU && isPR) || (!isPower && !isMI && !isMU && !isPR)) {
			sendParsedMsg( tokenID, msg );
			return;
		}
		
		if (!level || level <= 0) {
			level = casterLevel( charCS, ((isPower || isMI) ? 'POWER' : (isMU ? 'MU' : 'PR')) );
			mu_level = mu_level || 0;
			pr_level = pr_level || 0;
		} else{
			mu_level = pr_level = level;
		}
		
		if (!level || level <= 0) {
		    sendParsedMsg( tokenID, messages.notSpellCaster );
		    return;
		}
		
		if (!castingName || castingName.length == 0) {
			castingName = curToken.get('name');
		}
		
		setAttr( charCS, fields.Casting_level, level );
		setAttr( charCS, fields.MU_Casting_level, mu_level );
		setAttr( charCS, fields.PR_Casting_level, pr_level );
		setAttr( charCS, fields.Casting_name, castingName );
		if (itemName.length) {
			setAttr( charCS, fields.ItemChosen, itemName );
		}
		
		return args;
	};
	
	/*
	 * Set up the shape of the spell book.  This is complicated due to
	 * the 2E sheet L5 MU Spells start out-of-sequence at column 70
	 */
	 
	var shapeSpellbook = function( charCS, spellbook ) {

		var sheetTypes, charClass, level, maxLevel, miscSpells, noSpells,
			specSpells = 0,
			levelSpells = [];
			
		if (charCS) {
			var casterSpecs = caster( charCS, spellbook ),
				level = casterSpecs.lv,
				charClass = casterSpecs.ccl;
			
			switch (spellbook) {

			case 'MU':
				levelSpells = spellLevels.mu;
                if (!level || !charClass) {return levelSpells;}
				maxLevel = spellsPerLevel[charClass][0][0];
				specSpells = state.MagicMaster.spellRules.specMU ? specMU.includes(casterSpecs.cl.replace(reIgnore,'')) : !ordMU.includes(casterSpecs.cl.replace(reIgnore,''));
				for (let i=1; i<levelSpells.length; i++) {
				    noSpells = parseInt(spellsPerLevel[charClass][(Math.min(i,maxLevel))][level]);
					miscSpells = (noSpells && !state.MagicMaster.spellRules.strictNum) ? parseInt(attrLookup(charCS,[fields.MUSpellNo_table[0] + i + fields.MUSpellNo_misc[0],fields.MUSpellNo_misc[1]]) || 0) : 0;
				    setAttr(charCS,[fields.MUSpellNo_table[0] + i + fields.MUSpellNo_memable[0],fields.MUSpellNo_memable[1]],noSpells);
					setAttr(charCS,[fields.MUSpellNo_table[0] + i + fields.MUSpellNo_specialist[0],fields.MUSpellNo_specialist[1],'',true],(((noSpells + miscSpells) && specSpells) ? 1 : 0));
					levelSpells[i].spells = noSpells + miscSpells + ((noSpells + miscSpells) ? specSpells : 0);
				}
				break;
				
			case 'PR':
				levelSpells = spellLevels.pr;
                if (!level || !charClass) {return levelSpells;}
				maxLevel = spellsPerLevel[charClass][0][0];
				for (let i=1; i<levelSpells.length; i++) {
				    noSpells = parseInt(spellsPerLevel[charClass][(Math.min(i,maxLevel))][level]);
					miscSpells = !state.MagicMaster.spellRules.strictNum ? parseInt(attrLookup(charCS,[fields.PRSpellNo_table[0] + i + fields.PRSpellNo_misc[0],fields.PRSpellNo_misc[1]]) || 0) : 0;
					specSpells = ((charClass == 'PRIEST') && (noSpells + miscSpells)) ? parseInt(wisdomSpells[(Math.min(i,wisdomSpells.length)-1)][(attrLookup(charCS,fields.Wisdom) || 0)]) : 0;
				    setAttr(charCS,[fields.PRSpellNo_table[0] + i + fields.PRSpellNo_memable[0],fields.PRSpellNo_memable[1]], noSpells);
				    setAttr(charCS,[fields.PRSpellNo_table[0] + i + fields.PRSpellNo_wisdom[0],fields.PRSpellNo_wisdom[1],'',true], specSpells);
					levelSpells[i].spells = noSpells + specSpells + miscSpells;
				}
				break;
				
			case 'POWER':
				levelSpells = spellLevels.pw;
				levelSpells[1].spells = 18;
				break;
				
			case 'MI':
				levelSpells = spellLevels.mi;
				levelSpells[1].spells = (attrLookup(charCS,[fields.MISpellNo_table[0] + fields.MIspellLevel + fields.MISpellNo_memable[0],fields.MISpellNo_memable[1]])||0);
				break;
				
			case 'MIPOWER':
				levelSpells = spellLevels.pm;
				levelSpells[1].spells = (attrLookup(charCS,[fields.MISpellNo_table[0] + fields.MIpowerLevel + fields.MISpellNo_memable[0],fields.MISpellNo_memable[1]])||0);
				break;
				
			default:
				sendDebug('shapeSpellbook: invalid spellbook type '+spellbook+' specified');
				sendError('Internal MagicMaster error');
				break;
			}
		} 
		return levelSpells;
	}
	
	/*
	 * Return a string containing the in-game date in short or long form
	 */
	 
	var inGameDate = function( inGameDay ) {
		
		return ['Mon','Tue','Wed','Thur','Fri','Sat','Sun'][((inGameDay%7))]+', '
				+ (1+(inGameDay%28)) + ['st','nd','rd','th'][Math.min((((inGameDay%28)%20)),3)]+' '
				+ ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'][Math.floor(((inGameDay%336))/28)]+', '
				+ Math.floor(inGameDay/336);
	}		
	
	/*
	 * Get Thac0 from the right place for this token.  This should be from 
	 * Bar2 current value on the token (to support multi-token monsters affected 
	 * individually by +/- magic impacts on thac0) but checks if another bar allocated
	 * or, if none are, get from character sheet (monster or character)
	 */
	 
	var getTokenValue = function( curToken, tokenBar, field, altField, nameFlag=false ) {
		
		var charCS = getCharacter(curToken.id),
			attr = field[0].toLowerCase(),
			altAttr = altAttr ? altField[0].toLowerCase() : 'EMPTY',
			property = field[1],
			attrVal, attrObj, attrName;
			
		if (!charCS) {return undefined;}
		
		if (tokenBar && tokenBar[0].length) {
			attrVal = curToken.get(tokenBar[0]+'_'+tokenBar[1]);
			attrName = tokenBar[0];
		}
		if (!attrVal || isNaN(attrVal)) {
			if (_.some( ['bar2_link','bar1_link','bar3_link'], linkName=>{
				let linkID = curToken.get(linkName);
				if (linkID) {
					attrObj = getObj('attribute',linkID);
					if (attrObj) {
						attrName = attrObj.get('name').toLowerCase();
						return (attrName.includes(attr) || attrName.includes(altAttr));
					}
				}
				return false;
			})) {
				attrVal = attrObj.get(property);
			}
		}
		if ((!attrVal || isNaN(attrVal)) && attr == 'thac0') {
			attrVal = parseInt(attrLookup( charCS, fields.Thac0_base ));
			attrName = fields.Thac0_base[0];
		}
		if (!attrVal || isNaN(attrVal)) {
			attrVal = parseInt(attrLookup( charCS, field ));
			attrName = field[0];
		}
		if (altField && (!attrVal || isNaN(attrVal))) {
			attrVal = parseInt(attrLookup( charCS, altField ));
			attrName = altField[0];
		}
		return (!nameFlag ? attrVal : ((!attrVal || isNaN(attrVal)) ? undefined : attrName));
	}
	
	/*
	 * insert a spell into an identified spellbook slot
	 */
	 
	var setSpell = function( charCS, spellTables, spellDB, spellName, r, c, cost, msg, levelOrPerDay ) {
		
		var newSpellObj = abilityLookup( spellDB, spellName, true );
		
		if (!newSpellObj.obj) {
			sendError('Unable to find the spell or power '+spellName+' in any '+spellDB+' database');
			
			// If spell not found, just blank the row
			return addTableRow( spellTables, r );
		}
		
		var	speed = (newSpellObj.ct ? newSpellObj.ct[0].get('current') : 0),
			values = spellTables.values;
			
		values[fields.Spells_name[0]][fields.Spells_name[1]] = spellName;
		values[fields.Spells_db[0]][fields.Spells_db[1]] = newSpellObj.dB;
		values[fields.Spells_speed[0]][fields.Spells_speed[1]] = speed;
		values[fields.Spells_cost[0]][fields.Spells_cost[1]] = cost;
		values[fields.Spells_msg[0]][fields.Spells_msg[1]] = msg;

		if (spellDB.toUpperCase().includes('POWER')) {
			values[fields.Spells_castValue[0]][fields.Spells_castValue[1]] = (levelOrPerDay[1] || fields.Spells_castValue[2]);
			values[fields.Spells_castMax[0]][fields.Spells_castMax[1]] = levelOrPerDay[0];
		} else {
			values[fields.Spells_miSpellSet[0]][fields.Spells_miSpellSet[1]] = (levelOrPerDay[1] || fields.Spells_miSpellSet[2]);
			values[fields.Spells_storedLevel[0]][fields.Spells_storedLevel[1]] = levelOrPerDay[0];
			values[fields.Spells_castValue[0]][fields.Spells_castValue[1]] = (levelOrPerDay[0]==0 ? 0 : 1);
			values[fields.Spells_castMax[0]][fields.Spells_castMax[1]] = 1;
		}
		return addTableRow( spellTables, r, values );
	}

	/*
	 * add spells/powers listed in the parameters to
	 * the specified spell level table in the specified character sheet
	 */
 
	var changeMIspells = function( charCS, listType, action, spellList, spellValues = '' ) {

		var	isAdd = action.toUpperCase() == 'ADD',
			l=1, r=0, w=1, s=1, c, valueItem,
			level, spellDB, indexPrefix, levelSpells,
			maxSpell, spellName, spellQty, valueList,
            toDoList = spellList,
    		valueList = spellValues ? spellValues.split(',') : [],
    		spellTables = [];
    		
		spellList = spellList.split(',');
		toDoList = toDoList.toLowerCase().split(',');

		switch (listType) {
		case 'MU':
			level = fields.MIspellLevel;
			spellDB = fields.MU_SpellsDB;
			indexPrefix = isAdd ? fields.MIspellPrefix[0] : fields.ItemMUspellValues[0];
			levelSpells = shapeSpellbook( charCS, 'MI' );
			break;
		case 'PR':
			level = fields.MIspellLevel;
			spellDB = fields.PR_SpellsDB;
			indexPrefix = isAdd ? fields.MIspellPrefix[0] : fields.ItemPRspellValues[0];
			levelSpells = shapeSpellbook( charCS, 'MI' );
			break;
		case 'POWER':
			level = fields.MIpowerLevel;
			spellDB = fields.PowersDB;
			indexPrefix = fields.MIpowerPrefix[0];
			levelSpells = shapeSpellbook( charCS, 'MIPOWER' );
			break;
		}
		c = levelSpells[l].base;
		for (; l < levelSpells.length; l++) {
			r = 0; maxSpell = 0; s = 1;
 			while (s < 100) {
				c = levelSpells[l].base;
				for (w = 1; (w <= fields.SpellsCols) && (s < 100); w++) {
				    if (!spellTables[w]) {
						spellTables[w] = getAllTables( charCS, 'SPELLS', c )['SPELLS']; 
					}
					spellName = tableLookup( spellTables[w], fields.Spells_name, r, false );
					if (isAdd && (spellName == '-' || _.isUndefined(spellName)) ) {
						spellName = spellList.shift() || '';
						valueItem = valueList.shift().split('.');
						spellTables[w] = setSpell( charCS, spellTables[w], spellDB, spellName, r, c, 0, spellName, valueItem );
						maxSpell = s;
						if (listType == 'POWER') {
							setAttr( charCS, [indexPrefix+spellName, 'current'], r );
							setAttr( charCS, [indexPrefix+spellName, 'max'], c );
						}
					} else if (_.isUndefined(spellName)) {
					    s=100;
					    break;
					} else if (!isAdd && ((valueItem = toDoList.indexOf(spellName.toLowerCase())) >= 0)) {
						
						toDoList[valueItem] = '';
						spellList.splice(spellList.indexOf(spellName),1);

						spellQty = tableLookup( spellTables[w], fields.Spells_castValue, r );
						valueList[valueItem] = (spellQty <= 0 ? 0 : (tableLookup(spellTables[w], fields.Spells_storedLevel, r)))
													  + '.' + (tableLookup( spellTables[w], fields.Spells_miSpellSet, r ));
						
						tableSet( spellTables[w], fields.Spells_name, r, '-' );
						tableSet( spellTables[w], fields.Spells_castValue, r, 0 );
						tableSet( spellTables[w], fields.Spells_castMax, r, 0 );
						tableSet( spellTables[w], fields.Spells_storedLevel, r, 0 );
						tableSet( spellTables[w], fields.Spells_miSpellSet, r, 0 );
						tableSet( spellTables[w], fields.Spells_msg, r, '' );
						tableSet( spellTables[w], fields.Spells_db, r, '' );

						}
					if (!spellList || spellList.length==0) {
					    s=100;
					    break;
					}
					c++;
					s++;
				}
				r++;
			}
			spellTables = [];
		}
		l--;
        if (maxSpell > levelSpells[l].spells) {
            setAttr( charCS, [fields.MISpellNo_table[0] + level + fields.MISpellNo_memable[0],fields.MISpellNo_memable[1]], maxSpell);
        }
		if (isAdd) {
			if (spellList && spellList.length>0) {
				sendError(charCS.get('name')+'\'s Character Sheet storage not large enough to save all '+listType+' magic item spells');
			}
			return spellValues;
		} else {
		    return valueList.join();
		}
	}
	
	/*
	 * Remove MI spells/powers specified in the list, using the
	 * row/column references saved on the character sheet
	 */
	 
	var removeMIpowers = function( charCS, powerList, powerValues ) {

        var powerName,
			attrObj,
            r, c, i=0;
            
        powerValues = powerValues.split(',');
        powerList = powerList.split(',');
		while (powerList.length > 0) {
			powerName = powerList.shift();
			attrObj = attrLookup( charCS, [fields.MIpowerPrefix[0]+powerName, null] );
			if (attrObj) {
				r = attrObj.get('current');
				c = attrObj.get('max');
				if (!_.isUndefined(r) && !_.isUndefined(c)) {
					powerValues[i] = attrLookup( charCS, fields.Spells_castMax, fields.Spells_table, r, c ) 
								+ '.' + attrLookup( charCS, fields.Spells_castValue, fields.Spells_table, r, c );
					setAttr( charCS, fields.Spells_name, '-', fields.Spells_table, r, c );
					setAttr( charCS, fields.Spells_castValue, 0, fields.Spells_table, r, c );
					setAttr( charCS, fields.Spells_castMax, 0, fields.Spells_table, r, c );
				}
				i++;
			}
		}
		return powerValues.join();
	}
	
	/*
	 * handle removing and adding magic item spells and powers
	 * from their defining lists
	 * Usually used when picking up or putting away a magic item
	 */
	 
	var moveMIspells = function( fromCS, toCS, MIname ) {
		
		if (!fromCS) return;
		
		var MUspellObj = attrLookup( fromCS, [fields.ItemMUspellsList[0]+MIname, null] ),
			PRspellObj = attrLookup( fromCS, [fields.ItemPRspellsList[0]+MIname, null] ),
			powerObj = attrLookup( fromCS, [fields.ItemPowersList[0]+MIname, null] ),
			MUspellList = MUspellObj ? MUspellObj.get(fields.ItemMUspellsList[1]) : undefined,
			PRspellList = PRspellObj ? PRspellObj.get(fields.ItemPRspellsList[1]) : undefined,
			powerList = powerObj ? powerObj.get(fields.ItemPowersList[1]) : undefined,
			miSpellValues;
			
		if (MUspellList && MUspellList.length>0) {
			miSpellValues = changeMIspells( fromCS, 'MU', 'REMOVE', MUspellList, attrLookup( fromCS, [fields.ItemMUspellValues[0]+MIname, fields.ItemMUspellValues[1]] ));
			if (toCS) {
				setAttr( toCS, [fields.ItemMUspellsList[0]+MIname, fields.ItemMUspellsList[1]], MUspellList );
				setAttr( toCS, [fields.ItemMUspellValues[0]+MIname, fields.ItemMUspellValues[1]], changeMIspells( toCS, 'MU', 'ADD', MUspellList, miSpellValues ));
			}
			MUspellObj.remove();
		}

		if (PRspellList && PRspellList.length>0) {
			miSpellValues = changeMIspells( fromCS, 'PR', 'REMOVE', PRspellList, attrLookup( fromCS, [fields.ItemPRspellValues[0]+MIname, fields.ItemPRspellValues[1]] ));
			if (toCS) {
				setAttr( toCS, [fields.ItemPRspellsList[0]+MIname, fields.ItemPRspellsList[1]], PRspellList );
				setAttr( toCS, [fields.ItemPRspellValues[0]+MIname, fields.ItemPRspellValues[1]], changeMIspells( toCS, 'PR', 'ADD', PRspellList, miSpellValues ));
			}
			PRspellObj.remove();
		}
		if (powerList && powerList.length>0) {
			miSpellValues = removeMIpowers( fromCS, powerList, attrLookup( fromCS, [fields.ItemPowerValues[0]+MIname, fields.ItemPowerValues[1]] ));
			if (toCS) {
				setAttr( toCS, [fields.ItemPowersList[0]+MIname, fields.ItemPowersList[1]], powerList );
				setAttr( toCS, [fields.ItemPowerValues[0]+MIname, fields.ItemPowerValues[1]], changeMIspells( toCS, 'POWER', 'ADD', powerList, miSpellValues ));
			}
			powerObj.remove();
		}
		return;
	}
		
// ---------------------------------------------------- Make Menus ---------------------------------------------------------

	/**
	 * Ask the player how many of a particular MI to pick up
	 * args[] is the standard action|charID|fromID|toID|fromRow|toRow
	 **/
	 
	var howMany = function( args, MIname, MItype, MIqty ) {
		
		var tokenID = args[1],
			fromID = args[2],
			toID = args[3],
			fromRow = args[4],
			toRow = args[5],
			charCS = getCharacter( tokenID ),
			content = '&{template:'+fields.defaultTemplate+'}{{name=How Many Items?}}'
					+ '{{desc=How many '+MIname+' do you want to '+(tokenID == toID ? 'take' : 'put away')+'?}}'
					+ '{{desc1=[One](!magic --button POPqty|'+tokenID+'|'+fromID+'|'+toID+'|'+fromRow+'|'+toRow+'|1) or '
					+ '[All '+MIqty+'](!magic --button POPqty|'+tokenID+'|'+fromID+'|'+toID+'|'+fromRow+'|'+toRow+'|'+MIqty+') or '
					+ '[Specify](!magic --button POPqty|'+tokenID+'|'+fromID+'|'+toID+'|'+fromRow+'|'+toRow+'|&#63;{How many '+MIname+'? max '+MIqty+'}) }}';

		sendResponse( charCS, content );
	}
	
	/*
	 * Create a list of Magic Items in an MI bag, able
	 * to be used to select one from.  A flag determines
	 * whether empty slots '-' are included
	 */

	var makeMIlist = function( charCS, includeEmpty=true, include0=true ) {
	
		var mi, qty, rows, maxSize,
			i = fields.Items_table[1],
			miList = '',
			Items = getTable( charCS, {}, fields.Items_table, fields.Items_name );
			
		Items = getTable( charCS, Items, fields.Items_table, fields.Items_qty );
		rows = i+((Items && Items.sortKeys) ? Items.sortKeys.length : 0);
		maxSize = attrLookup( charCS, fields.ItemContainerSize ) || fields.MIRows;
		
		while (i < rows) {
			if (i<0) {
				mi = attrLookup( charCS, fields.Items_name );
				qty = attrLookup( charCS, fields.Items_qty ) || 0;
			} else {
			    mi = tableLookup( Items, fields.Items_name, i );
			    qty = tableLookup( Items, fields.Items_qty, i );
			}
			if (_.isUndefined(mi)) {break;}
			if (mi.length > 0 && (includeEmpty || mi != '-')) {
				if (include0 || qty > 0) {
    				miList += '|' + qty + ' ' + mi + ',' + i;
				}
			}
			i++;
		}
		if (i < maxSize && i < fields.MIRows && includeEmpty) {
		    miList += '|0 -,'+i;
		}
		if (i == fields.Items_table[1]) {
			miList += '|0 -,'+i;
		}
		return miList;
	}
	
	/*
	 * Create buttons to select Magic Item slots from. Highlight
	 * any button with the index of MIrowref.  A flag determines
	 * whether empty slots '-' are included.
	 */

	var makeMIbuttons = function( tokenID, miField, qtyField, cmd, extension='', MIrowref=-1, disable0=true, includeEmpty=false, pickID ) {
		
		var charCS = getCharacter(tokenID),
		    isView = extension == 'viewMI',
			i = fields.Items_table[1],
		    qty, mi, type, makeGrey, Items, rows, maxSize, content = '';
		
		if (!_.isUndefined(pickID)) {
			charCS = getCharacter(pickID);
			if (!charCS) {
				charCS = getCharacter(tokenID);
			}
		}
		
		Items = getTable( charCS, {}, fields.Items_table, fields.Items_name );
		Items  = getTable( charCS, Items, fields.Items_table, fields.Items_qty );
		Items  = getTable( charCS, Items, fields.Items_table, fields.Items_type );

		rows = i+((Items && Items.sortKeys) ? Items.sortKeys.length : 0);
		maxSize = attrLookup( charCS, fields.ItemContainerSize ) || fields.MIRowsStandard;
		
		while (i < rows) {
			mi = tableLookup( Items, fields.Items_name, i, false, ['',miField] );
			qty = tableLookup( Items, fields.Items_qty, i, true, ['',miField] );
			type = tableLookup( Items, fields.Items_type, i ).toLowerCase();
			makeGrey = (type != 'selfchargeable' && disable0 && qty == 0);
			if (_.isUndefined(mi)) {break;}
			if (mi.length > 0 && (includeEmpty || mi != '-')) {
				content += (i == MIrowref || makeGrey) ? ('<span style=' + (i == MIrowref ? design.selected_button : design.grey_button) + '>') : '['; 
				content += (mi != '-' ? (qty + ' ') : '') + mi;
				if (isView) {
					extension = '\n&#37;{'+abilityLookup( fields.MagicItemDB, mi ).dB+'|'+mi+'}';
				}
				content += (i == MIrowref || makeGrey) ? '</span>' : '](!magic --button '+cmd+'|' + tokenID + '|' + i + extension + ')';
			};
			i++;
		};
		if (i < maxSize && i < fields.MIRows && includeEmpty) {
			content += i == MIrowref ? ('<span style=' + design.selected_button +'>' ) : '['; 
			content += '-';
			content += i == MIrowref  ? '</span>' : '](!magic --button '+BT.ADD_MIROW+'|'+cmd+'|' + tokenID + '|' + i + extension + ')';
		}
		return content;
	}
	
	/*
	 * Create a menu line for the number of spells the caster
	 * can have memorised at a particular spell level.
	 */
	 
	var makeNumberOfSpells = function( curToken, spellType, level, totalSpells ) {
		
		var charCS = getCharacter(curToken.id),
			tokenName = curToken.get('name'),
			spellsAtLevel, spellsSpecialist, spellsWisdom, spellsMisc,
			wisdom,
			content = tokenName + ' can memorise ';
			
		if (spellType == 'MI') {
			content += 'these spells in magic items';
		} else {
			content += '[[[['+totalSpells+']]';
			if (spellType == 'MU') {
				spellsAtLevel = parseInt(attrLookup(charCS,[fields.MUSpellNo_table[0] + level + fields.MUSpellNo_memable[0],fields.MUSpellNo_memable[1]])||0);
				spellsSpecialist = parseInt(attrLookup(charCS,[fields.MUSpellNo_table[0] + level + fields.MUSpellNo_specialist[0],fields.MUSpellNo_specialist[1]])||0);
				spellsMisc = !state.MagicMaster.spellRules.strictNum ? parseInt(attrLookup(charCS,[fields.MUSpellNo_table[0] + level + fields.MUSpellNo_misc[0],fields.MUSpellNo_misc[1]])||0) : 0;
				content += '['+spellsAtLevel+' at level '+level+',+'+spellsSpecialist+' specialist+'+spellsMisc+' misc]';
			} else {
				spellsAtLevel = parseInt(attrLookup(charCS,[fields.PRSpellNo_table[0] + level + fields.PRSpellNo_memable[0],fields.PRSpellNo_memable[1]])||0);
				spellsWisdom = parseInt(attrLookup(charCS,[fields.PRSpellNo_table[0] + level + fields.PRSpellNo_wisdom[0],fields.PRSpellNo_wisdom[1]])||0);
				wisdom = parseInt(attrLookup(charCS,fields.Wisdom)||0);
				spellsMisc = !state.MagicMaster.spellRules.strictNum ? parseInt(attrLookup(charCS,[fields.PRSpellNo_table[0] + level + fields.PRSpellNo_misc[0],fields.PRSpellNo_misc[1]])||0) : 0;
				content += '['+spellsAtLevel+' at level '+level+', + '+spellsWisdom+' for wisdom '+wisdom+', + '+spellsMisc+' misc]';
			}
			content += ']] spells at level '+level;
		}
		return content;
	}
	
	/*
	 * Create a menu line for the number of spells the caster
	 * can have memorised at a particular spell level, where the 
	 * number can be edited..
	 */
	 
	var makeEditNumberOfSpells = function( args, spellType, totalSpells ) {
		
		var mngSpellsCmd = args[0],
			tokenID = args[1],
			level = args[2],
			content = getObj('graphic',tokenID).get('name') + ' can memorise ';
			
		if (spellType == 'MI') {
			content += 'these spells in magic items';
		} else if (!state.MagicMaster.spellRules.strictNum) {
			content += '['+totalSpells+'](!magic --button '+BT.EDIT_NOSPELLS+'|'+tokenID+'|'+spellType+'|'+level+'|'+mngSpellsCmd+') spells at level '+level;
		} else {
			content += totalSpells + ' spells at level ' + level;
		}
		return content;
	}
	
	/*
	 * Create a menu to edit the number of misc spells for 
	 * a particular spell class and level
	 */
	 
	var makeMiscSpellsEdit = function( args ) {
		
		var tokenID = args[1],
			spellClass = args[2],
			level = args[3],
			mngSpellsCmd = args[4],
			charCS = getCharacter(tokenID),
			spellsAtLevel, spellsSpecialist, spellsMisc, spellsTotal, spellsWisdom, wisdom,
			content = '&{template:'+fields.defaultTemplate+'}{{name=Edit Level '+level+' Misc Spells}}'
					+ '{{desc=Here\'s how '+getObj('graphic',tokenID).get('name')+' total '+spellClass+' spells are determined.  '
					+ 'You can adjust the Miscellaneous number by clicking on it and specifying a different value}}{{desc1=';

		if (spellClass == 'MU') {
			spellsAtLevel = (attrLookup(charCS,[fields.MUSpellNo_table[0] + level + fields.MUSpellNo_memable[0],fields.MUSpellNo_memable[1]])||0);
			spellsSpecialist = (attrLookup(charCS,[fields.MUSpellNo_table[0] + level + fields.MUSpellNo_specialist[0],fields.MUSpellNo_specialist[1]])||0);
			spellsMisc = (attrLookup(charCS,[fields.MUSpellNo_table[0] + level + fields.MUSpellNo_misc[0],fields.MUSpellNo_misc[1]])||0);
			spellsTotal = (attrLookup(charCS,[fields.MUSpellNo_table[0] + level + fields.MUSpellNo_total[0],fields.MUSpellNo_total[1]])||0);
			content += spellsAtLevel+' MU spells at level '+level+', + '+spellsSpecialist+' specialist';
		} else {
			spellsAtLevel = (attrLookup(charCS,[fields.PRSpellNo_table[0] + level + fields.PRSpellNo_memable[0],fields.PRSpellNo_memable[1]])||0);
			spellsWisdom = (attrLookup(charCS,[fields.PRSpellNo_table[0] + level + fields.PRSpellNo_wisdom[0],fields.PRSpellNo_wisdom[1]])||0);
			wisdom = (attrLookup(charCS,fields.Wisdom)||0);
			spellsMisc = (attrLookup(charCS,[fields.PRSpellNo_table[0] + level + fields.PRSpellNo_misc[0],fields.PRSpellNo_misc[1]])||0);
			spellsTotal = (attrLookup(charCS,[fields.PRSpellNo_table[0] + level + fields.PRSpellNo_total[0],fields.PRSpellNo_total[1]])||0);
			content += spellsAtLevel+' PR spells at level '+level+', + '+spellsWisdom+' for wisdom '+wisdom;
		}
		content += ', + ['+spellsMisc+' misc](!magic --button '+BT.MISC_SPELL+'|'+tokenID+'|'+spellClass+'|'+level+'|?{How many miscellaneous spells?|'+spellsMisc+'}|'+mngSpellsCmd+')'
				+  ' = '+spellsTotal+' total}}{{desc2=[Return to spells menu](!magic --button '+(spellClass=='PR' ? BT.EDIT_PRSPELLS : BT.EDIT_MUSPELLS)+'|'+tokenID+'|'+level+'|-1|-1||1)}}';

		sendResponse( charCS, content );
		return;
	}
	
	/*
	 * Make a list of spells in the specified memorised/stored list
	 * makeSpellList( tokenID, VIEW_MI_POWER, spellButton, true );
	 */

	var makeSpellList = function( tokenID, command, selectedButton, noDash = false, submitted = false, extension = '' ) {
		
		var isMU = command.toUpperCase().includes('MU'),
			isMI = command.toUpperCase().includes('MI'),
			isPower = command.toUpperCase().includes('POWER'),
			isView = command.toUpperCase().includes('VIEW'),
			content = '',
			buttonID = 0,
			buttonList = [],
			spell, spellType, spellName,
			magicDB, levelSpells,
			curToken = getObj('graphic',tokenID),
			charCS = getCharacter(tokenID),
			miStore = command.includes('MI_SLOT'),
			miName = attrLookup( charCS, fields.ItemChosen ) || '-',
			spellTables = [];

		if (isPower && isMI) {
		    spellType = 'MIPOWER';
			magicDB = fields.PowersDB;
			buttonList = 'EmptyList,' + attrLookup( charCS, [fields.ItemPowersList[0]+miName, fields.ItemPowersList[1]] ) || '';
			buttonList = buttonList.toLowerCase().replace(reIgnore,'').split(',');
		} else if (isPower) {
		    spellType = 'POWER';
			magicDB = fields.PowersDB;
		} else if (isMI) {
		    spellType = 'MI';
			buttonList = 'EmptyList,' + attrLookup( charCS, [fields.ItemMUspellsList[0]+miName, fields.ItemMUspellsList[1]] ) || '';
			buttonList += ',' + attrLookup( charCS, [fields.ItemPRspellsList[0]+miName, fields.ItemPRspellsList[1]]) || '';
			buttonList = buttonList.toLowerCase().replace(reIgnore,'').split(',');
		} else if (!isMU) {
		    spellType = 'PR';
			magicDB = fields.PR_SpellsDB;
		} else {
		    spellType = 'MU';
			magicDB = fields.MU_SpellsDB;
		}
		
		// build the Spell list
		levelSpells = shapeSpellbook( charCS, spellType );

		for (let l = 1; l < levelSpells.length; l++) {
			let r = 0;
            if (levelSpells[l].spells > 0) {
                if (l != 1 )
	    		    {content += '\n';}
				if (!isPower)
					{content += makeNumberOfSpells(curToken,spellType,l,levelSpells[l].spells)+'\n';}
            }
			while (levelSpells[l].spells > 0) {
				let c = levelSpells[l].base,
					buttonIndex;
				for (let w = 1; (w <= fields.SpellsCols) && (levelSpells[l].spells > 0); w++) {
					if (_.isUndefined(spellTables[w])) {
						spellTables[w] = getTable( charCS, {}, fields.Spells_table, fields.Spells_name, c, '-' );
						spellTables[w] = getTable( charCS, spellTables[w], fields.Spells_table, fields.Spells_castValue, c, '0' );
						spellTables[w] = getTable( charCS, spellTables[w], fields.Spells_table, fields.Spells_db, c, '' );
						spellTables[w] = getTable( charCS, spellTables[w], fields.Spells_table, fields.Spells_msg, c, '0' );
					}
					if (miStore) spellName = tableLookup( spellTables[w], fields.Spells_msg, r );
					else spellName = tableLookup( spellTables[w], fields.Spells_name, r );
					if (_.isUndefined(spellName)) {
						levelSpells[l].spells = 0;
						break;
					}
					if (!buttonList.length || (buttonIndex = buttonList.indexOf(spellName.toLowerCase().replace(reIgnore,''))) != -1) {
						if (buttonList.length) buttonList.splice(buttonIndex,1);
						let	spellValue = parseInt((tableLookup( spellTables[w], fields.Spells_castValue, r )),10),
							disabled = (miStore ? (spellValue != 0) : (spellValue == 0));
						if (isView) {
							if (isMI) {
								magicDB = tableLookup( spellTables[w], fields.Spells_db,r );
							}
							spell = abilityLookup( magicDB, spellName );
							extension = '\n&#37;{' + spell.dB + '|'+spellName+'}';
						}
						if (!noDash || spellName != '-') {
							content += (buttonID == selectedButton ? '<span style=' + design.selected_button + '>' : ((submitted || disabled) ? '<span style=' + design.grey_button + '>' : '['));
							content += ((spellType.includes('POWER') && spellValue) ? (spellValue + ' ') : '') + spellName;
							content += (((buttonID == selectedButton) || submitted || disabled) ? '</span>' : '](!magic --button ' + command + '|' + tokenID + '|' + buttonID + '|' + r + '|' + c + extension + ')');
						}
					}
					buttonID++;
					c++;
					levelSpells[l].spells--;
				}
				r++;
			}
			spellTables = [];
		}
		return content;
	}
	
	/*
	 * Create a menu for a player to manage their spell list.
	 */

	var makeManageSpellsMenu = function( args, msg ) {
		
		var isMU = args[0].toUpperCase().includes('MU'),
			isPR = args[0].toUpperCase().includes('PR'),
			isMI = args[0].toUpperCase().includes('MI'),
			isPower = args[0].toUpperCase().includes('POWER'),
			tokenID = args[1],
			level = parseInt((args[2]),10),
			spellRow = args[3],
			spellCol = args[4],
			spellToMemorise = args[5] || '',
			curToken = getObj('graphic',tokenID),
			charCS = getCharacter(tokenID),
			levelSpells;
			
		if (!curToken || !charCS) {
			sendDebug('makeManageSpellsMenu: invalid tokenID passed');
			sendError('Internal MagicMaster parameter error');
			return;
		}
		
		var	spellbook,
			spell,
		    spellName,
			spellValue,
			tokenName = curToken.get('name'),
			content,
			selectedSpell = (spellToMemorise.length > 0),
			selectedSlot = (spellRow >= 0 && spellCol >= 0),
    		selectedBoth = selectedSpell && selectedSlot,
    		selected,
			slotSpell = '',
			noToMemorise = '1',
			magicWord = 'spell',
			spellTables = [],
			magicDB, magicType, tableType,
			editCmd, reviewCmd, memCmd,
			levelLimit, nextLevel,
			col, rep,
			l, r, c, w;
		
		if (isPower) {
			level = 1;
			levelLimit = 1;
			magicType = isMI ? 'MIPOWER' : 'POWER';
			tableType = magicWord = 'power';
			editCmd = isMI ? BT.EDIT_MIPOWERS : BT.EDIT_POWERS;
			reviewCmd = isMI ? BT.REVIEW_MIPOWER : BT.REVIEW_POWER;
			memCmd = isMI ? BT.MEM_MIPOWER : BT.MEM_POWER;
			magicDB = fields.PowersDB;
			noToMemorise = '?{How many per day (-1=unlimited&#41;}';
		} else if (isMU) {
			levelLimit = 9;
			magicType = 'MU';
			tableType = 'Wizard Spellbook';
			editCmd = BT.EDIT_MUSPELLS;
			reviewCmd = BT.REVIEW_MUSPELL;
			memCmd = BT.MEM_MUSPELL;
			magicDB = fields.MU_SpellsDB;
		} else {
			levelLimit = 7;
			magicType = 'PR';
			tableType = 'Priest Spellbook';
			editCmd = BT.EDIT_PRSPELLS;
			reviewCmd = BT.REVIEW_PRSPELL;
			memCmd = BT.MEM_PRSPELL;
			magicDB = fields.PR_SpellsDB;
		}
		
		levelSpells = shapeSpellbook( charCS, magicType );
		
		spellbook = attrLookup( charCS, [fields.Spellbook[0]+((fields.SpellsFirstColNum || levelSpells[level].book != 1) ? levelSpells[level].book : ''), fields.Spellbook[1]] ) || '';
		content = '&{template:'+fields.defaultTemplate+'}{{name=Select Slot to Use in '+tokenName+'\'s '+tableType+'s}}'
				+ ((isPower) ? ('{{subtitle=All Powers     -1 means "At Will"}}') : ('{{subtitle=Level '+level+' spells}}'));
				
		if (msg && msg.length > 0) {
			content += '{{='+msg+'}}';
		}
		
		content += '{{desc=1. [Choose](!magic --button '+editCmd+'|'+tokenID+'|'+level+'|'+spellRow+'|'+spellCol+'|?{'+magicWord+' to memorise|'+spellbook+'}) '+magicWord+' to memorise<br>';
		
		if (selectedSpell) {
			spell = abilityLookup( magicDB, spellToMemorise );
			content += '...Optionally [Review '+spellToMemorise+'](!magic --button '+reviewCmd+'|'+tokenID+'|'+level+'|'+spellRow+'|'+spellCol+'|'+spellToMemorise
			        +  '\n&#37;{' + spell.dB + '|'+spellToMemorise+'})}}';
		} else {
			content += '...Optionally <span style='+design.grey_button+'>Review the '+magicWord+'</span>}}';
		}
		content	+= '{{desc1=2. Choose slot to use\n'
				+  (isPower ? '' : (makeEditNumberOfSpells(args,magicType,levelSpells[level].spells)))+'\n';
		
		// build the Spell list
		
		r = 0;
		while (levelSpells[level].spells > 0) {
			c = levelSpells[level].base;
			for (w = 1; (w <= fields.SpellsCols) && (levelSpells[level].spells > 0); w++) {
				if (!spellTables[w]) {
                    spellTables[w] = getAllTables( charCS, 'SPELLS', c, spellTables[w] )['SPELLS'];
				}
				selected = (r == spellRow && c == spellCol);
				spellName = tableLookup( spellTables[w], fields.Spells_name, r, false );
				if (_.isUndefined(spellName)) {
					spellTables[w] = addTableRow( spellTables[w], r );
					spellName = '-';
				}
				spellValue = parseInt((tableLookup( spellTables[w], fields.Spells_castValue, r )),10);
				content += (selected ? ('<span style=' + design.selected_button + '>') : ('['+(spellValue == 0 ? ('<span style=' + design.grey_button + '>') : '')));
				if (isPower && spellName != '-') {
				    content += spellValue + ' ';
				}
				content += spellName;
				content += (selected || spellValue == 0 ? '</span>' : '');
				content += (!selected ? ('](!magic --button ' + editCmd + '|' + tokenID + '|' + level + '|' + r + '|' + c + '|' + spellToMemorise + ')') : '');
				c++;
				levelSpells[level].spells--;
			}
			r++;
			spellTables = [];
		}
		
		if (level < levelLimit) {
			nextLevel = (levelSpells[(level+1)].spells>0) ? (level+1) : 1;
		} else {
		    nextLevel = 1;
		}

		if (selectedSlot) {
		    slotSpell = attrLookup( charCS, fields.Spells_name, fields.Spells_table, spellRow, spellCol ) || '';
		}
		content += '}}{{desc2=...Then\n'
				+  '3. '+(selectedBoth ? '[' : '<span style='+design.grey_button+'>')
				+		'Memorise '+(selectedSpell ? spellToMemorise : ' the '+magicWord )
				+		 (!selectedBoth ? '</span>' : ('](!magic --button '+memCmd+'|'+tokenID+'|'+level+'|'+spellRow+'|'+spellCol+'|'+spellToMemorise+'|'+noToMemorise+')'))+'\n'
				+  (isPower ? '' : '4. When ready [Go to Level '+nextLevel+'](!magic --button '+editCmd+'|'+tokenID+'|'+nextLevel+'|-1|-1|)\n')
				+  'Or just do something else anytime\n\n'

				+  'Or ' + (selectedSlot ? '[' : ('<span style='+design.grey_button+'>'))
				+  'Remove '+slotSpell
				+  (!selectedSlot ? '</span> the' : ('](!magic --button '+memCmd+'|'+tokenID+'|'+level+'|'+spellRow+'|'+spellCol+'|-|0)') )+' '+magicWord+'}}';

		sendResponse( charCS, content );
		return;
	}

	/*
	 * Make a menu to store spells in a Magic Item from the caster's
	 * own memorised spells.
	 */
	 
	var makeStoreMIspell = function(args,msg = '') {
		
		var command = args[0],
			tokenID = args[1],
			curToken = getObj('graphic',tokenID),
			charCS = getCharacter(tokenID);
			
		if (!charCS) {
			sendDebug('makeStoreMIspell: invalid tokenID passed');
			sendError('Internal MagicMaster error');
			return;
		}
		
		var isMU = command.includes('MU'),
			isMI = command.includes('MI'),
			spellButton = args[(isMI ? 5 : 2)],
			spellRow = args[(isMI ? 6 : 3)],
			spellCol = args[(isMI ? 7 : 4)],
			MIbutton = args[(isMI ? 2 : 5)],
			MIrow = args[(isMI ? 3 : 6)],
			MIcol = args[(isMI ? 4 : 7)],
			spellName = 'spell', 
			MIspellName = '-',
			col,
			tokenName = curToken.get('name'),
			content = '&{template:'+fields.defaultTemplate+'}{{name=Store Spell in '+tokenName+'\'s Magic Item}}'
					+ '{{subtitle=Storing ' + (isMU ? 'MU' : 'PR') + ' spells}}'
					+ '{{desc=1.Choose a spell to store\n'+makeSpellList( tokenID, (isMU ? BT.MU_TO_STORE : BT.PR_TO_STORE), spellButton, true, false, ('|'+MIbutton+'|'+MIrow+'|'+MIcol) )+'}}'
					+ '{{desc1=2.Choose where to store it\n'+makeSpellList( tokenID, (isMU ? BT.MU_MI_SLOT : BT.PR_MI_SLOT), MIbutton, true, false, ('|'+spellButton+'|'+spellRow+'|'+spellCol) )+'}}';

		if (spellButton >= 0) {
			spellName = attrLookup( charCS, fields.Spells_name, fields.Spells_table, spellRow, spellCol ) || '-';
		}
		if (MIbutton >= 0) {
			MIspellName = attrLookup( charCS, fields.Spells_msg, fields.Spells_table, MIrow, MIcol ) || '-';
		}
		var canStore = (spellName.toLowerCase().replace(reIgnore,'') == MIspellName.toLowerCase().replace(reIgnore,''));
		
		content += '{{desc2=3.Once both spell and slot selected\n'
				+  (canStore ? '[' : '<span style='+design.grey_button+'>')
				+  'Store '+spellName
				+  (canStore ? ('](!magic --button '+(isMU ? BT.MISTORE_MUSPELL : BT.MISTORE_PRSPELL)+'|'+tokenID+'|'+MIbutton+'|'+MIrow+'|'+MIcol+'|'+spellButton+'|'+spellRow+'|'+spellCol+')') : '</span>')
				+  ((spellButton >= 0 && MIbutton >= 0 && !canStore) ? ' Spells don\'t match. Must be the same' : '')
				+  '}}';
		if (msg.length) {
			content += '{{='+msg+'}}';
		}
		sendResponse( charCS, content );
		return;
	}
	
	/*
	 * Create a menu for a player to cast a spell
	 */
	
	var makeCastSpellMenu = function( args, submitted = false ) {

        var isMU = args[0].toUpperCase().includes('MU'),
			isMI = args[0].toUpperCase().includes('MI'),
			isPower = args[0].toUpperCase().includes('POWER'),
			tokenID = args[1],
			spellButton = args[2],
			spellRow = args[3],
			spellCol = args[4],
			charged = args[5].toString().toLowerCase() == 'true',
			
			curToken = getObj('graphic',tokenID),
			charCS = getCharacter(tokenID),
			magicDB,
			magicWord = 'spell',
			spell,
			spellName = '',
            content = '',
            tokenName,
			selectCmd,
			storeCmd;
			
		if (!curToken || !charCS) {
			sendDebug('makeCastSpellMenu: invalid tokenID passed');
			sendError('Internal MagicMaster parameter error');
			return content;
		}
		
		tokenName = curToken.get('name');
		content = '&{template:'+fields.defaultTemplate+'}{{name=';
		if (!isPower) {content += 'What Spell is ' + tokenName + ' casting?}}{{subtitle=Casting '};
		
		if (isPower) {
			content += 'What Power is ' + tokenName + ' using?}}{{subtitle=Using Powers}}';
			magicDB = fields.PowersDB;
			magicWord = 'power';
			selectCmd = isMI ? BT.MI_POWER : BT.POWER;
			storeCmd = isMI ? BT.CAST_MIPOWER : BT.USE_POWER;
		} else if (isMI) {
			content += 'MI stored spells}}';
			if (spellButton >= 0) {magicDB = attrLookup( charCS, fields.Spells_db, fields.Spells_table, spellRow, spellCol ) || fields.MU_SpellsDB;}
			selectCmd = BT.MI_SPELL;
			storeCmd = charged ? BT.CAST_SCROLL : BT.CAST_MISPELL;
		} else if (isMU) {
			content += 'MU spells}}';
			magicDB = fields.MU_SpellsDB;
			selectCmd = BT.MU_SPELL;
			storeCmd = BT.CAST_MUSPELL;
		} else {
			content += 'PR spells}}';
			magicDB = fields.PR_SpellsDB;
			selectCmd = BT.PR_SPELL;
			storeCmd = BT.CAST_PRSPELL;
		}
		
		content += '{{desc=' + makeSpellList( tokenID, selectCmd, spellButton, true, submitted, '|'+charged );

		if (spellButton >= 0) {
			spellName = attrLookup( charCS, fields.Spells_name, fields.Spells_table, spellRow, spellCol ) || '-';
			if (spellName.length > 0) {
				spell = abilityLookup( magicDB, spellName );
			} else {
				spellButton = -1;
			}
		} else {
			spellName = '';
		}
		content += '}}{{desc1=Select '+magicWord+' above, then '
				+ (((spellButton < 0) || submitted) ? '<span style=' + design.grey_button + '>' : '[')
				+ 'Cast '+(spellName.length > 0 ? spellName : magicWord)
				+ (((spellButton < 0) || submitted) ? '</span>' : '](!magic --button ' + storeCmd + '|' + tokenID + '|' + spellButton + '|' + spellRow + '|' + spellCol + '|'+ charged +'\n&#37;{' + spell.dB + '|' + spellName + '})')
				+ '}}';
				
		sendResponse( charCS, content );
		return;
	};
	
	/*
	 * Create a menu for a player to view a character's spells
	 */
	
	var makeViewMemSpells = function( args ) {

        var isMU = args[0].toUpperCase().includes('MU'),
			isPR = args[0].toUpperCase().includes('PR'),
			isMI = args[0].toUpperCase().includes('MI'),
			isPower = args[0].toUpperCase().includes('POWER'),
			tokenID = args[1],
			spellButton = args[2],
			curToken = getObj('graphic',tokenID),
			charCS = getCharacter(tokenID),
			spell,
			spellName = '',
			spellValue,
            content = '',
			magicWord = 'spell',
			magicDB, magicType, tableType,
			col, rep,
			viewCmd,
			levelSpells = [],
			levelLimit,
			l, w, r, c,
			buttonID = 0;
			
		if (!charCS) {
			sendDebug('makeViewMemSpells: invalid tokenID passed');
			sendError('Internal MagicMaster parameter error');
			return content;
		}
		
		if (isPower) {
			levelLimit = 1;
			magicType = 'POWER';
			tableType = 'Powers';
			magicWord = 'power';
			viewCmd = isMI ? BT.VIEW_MI_POWER : BT.VIEW_POWER;
			magicDB = fields.PowersDB;
		} else if (isMU) {
			levelLimit = 9;
			magicType = 'MU';
			tableType = (isMI ? 'Magic Item ' : '')+'Wizard Spells';
			viewCmd = isMI ? BT.VIEW_MI_MUSPELL : BT.VIEW_MUSPELL;
			magicDB = fields.MU_SpellsDB;
		} else {
			levelLimit = 7;
			magicType = 'PR';
			tableType = (isMI ? 'Magic Item ' : '')+'Priest Spells';
			viewCmd = isMI ? BT.VIEW_MI_PRSPELL : BT.VIEW_PRSPELL;
			magicDB = fields.PR_SpellsDB;
		}
		
		content = '&{template:'+fields.defaultTemplate+'}{{name=View '+curToken.get('name')+'\'s currently memorised '+magicWord+'s}}'
				+ '{{subtitle=' + tableType + '}}'
				+ '{{desc=' + makeSpellList( tokenID, viewCmd, spellButton, true );


		content += '}}{{desc1=Select the '+magicWord+' above that you want to view the details of.  It will not be cast and will remain in your memorised '+magicWord+' list.}}';
		sendResponse( charCS, content );
	};
	
	/*
	 * Make a one button menu to ask the player
	 * if they want to cast the same spell/power/MI again
	 */
	 
	var makeCastAgainMenu = function( args ) {
		
		var isMU = args[0].toUpperCase().includes('MU'),
		    isPR = args[0].toUpperCase().includes('PR'),
			isMI = args[0].toUpperCase().includes('MI'),
			isPower = args[0].toUpperCase().includes('POWER'),
			charCS = getCharacter( args[1] ),
			macroDB = isPower ? fields.PowersDB : (isMU ? fields.MU_SpellsDB : (isPR ? fields.PR_SpellsDB : fields.MagicItemDB)),
			spell = abilityLookup( macroDB, args[5] ),
			content = '&{template:'+fields.defaultTemplate+'}{{name='+args[5]+'}}'
			        + '{{desc=[Use another charge?](!magic --button ' + args[0] + '|' + args[1] + '|' + args[2] + '|' + args[3] + '|' + args[4] + '\n'
					+ '&#37;{' + spell.dB + '|' + args[5] + '})}}';
		
		if (charCS) {
			sendResponse( charCS, content );
		}
		return;
	}
	
	/*
	 * Create a short menu to ask the player to select between 
	 * a short or a long rest.  The long rest option can be shown
	 * as disabled.
	 */
	 
	var makeRestSelectMenu = function( args, longRestEnabled ) {
		
		var tokenID = args[0],
		    casterType = args[2] || 'MU+PR',
			charCS = getCharacter(tokenID),
			curToken = getObj('graphic',tokenID),
			content = '&{template:'+fields.defaultTemplate+'}{{name=Select Type of Rest for '+curToken.get('name')+'}}'
					+ '{{desc=[Short Rest](!magic --rest '+tokenID+'|short|'+casterType+') or '
					+ (longRestEnabled ? '[' : '<span style='+design.grey_button+'>')
					+ 'Long Rest'
					+ (longRestEnabled ? ('](!magic --rest '+tokenID+'|long|'+casterType+')') : '</span>')
					+ '}}';
					
		if (!longRestEnabled) {
			content += '{{ =It looks like the DM has not enabled Long Rests.\n[Try Again](!magic --rest '+tokenID+'|SELECT|'+args[2]+') once the DM says it is enabled}}';
		}
		sendResponse( charCS, content );
		return;
	}
	
	/**
	* Create a version of Pick or Put for coins, jewels and other treasure
	* Allow the player to switch from one to the other when looting
	**/
	
	var makeLootMenu = function(senderId,args,menuType) {
	    
	    var tokenID = args[1],
			pickID = args[3],
	        putID = args[4];
	        
        var pickCS = getCharacter( pickID ),
            putCS = getCharacter( putID );
            
        if (!pickCS || !putCS) {
            sendDebug( 'makeLootMenu: pickID or putID is invalid' );
            sendError( 'Invalid make-menu call syntax' );
            return;
        }
        
        var pickName = pickCS.get('name'),
            putName = putCS.get('name'),
            treasure = (attrLookup( pickCS, fields.Money_treasure ) || ''),
            content = '&{template:'+fields.defaultTemplate+'}{{name=View Treasure from ' + pickName + '}}';
            
        if (treasure && treasure.length > 0) {
            content += treasure;
        } else {
            content += '{{desc=There are no coins, gems or jewellery to be found here}}';
        }
            
		content += '{{desc1=Make a note of this - no automatic function yet!}}';
		content += '{{desc2=When ready [View Magic Items](!magic --pickorput '+tokenID+'|'+pickID+'|'+putID+') or do something else.}}';
		        
		return content;
	};
	
	/*
	 * Create a menu to view or use a magic item
	 */
	 
	var makeViewUseMI = function( args, senderId, menuType ) {
		
		var action = args[0].toUpperCase(),
			tokenID = args[1],
			MIrowref = args[2] || -1,
			isGM = playerIsGM(senderId),
			isView = action.includes('VIEW'),
			charCS = getCharacter(tokenID);

		if (!charCS) {
            sendDebug( 'makeViewUseMI: tokenID is invalid' );
            sendError( 'Invalid make-menu call syntax' );
			return;
		}

		if (!menuType) {
			var playerConfig = getSetPlayerConfig( senderId );
			if (playerConfig) {
				menuType = playerConfig.viewUseMIType || 'long';
			} else {
			    menuType = 'long';
			}
		}
		var shortMenu = menuType == 'short',
			actionText = (isView ? 'View' : 'Use'),
			selectAction = (isView ? (shortMenu ? BT.CHOOSE_VIEW_MI : BT.VIEW_MI) : BT.CHOOSE_USE_MI),
			submitAction = (isView ? BT.VIEW_MI : BT.USE_MI),
			content = '&{template:'+fields.defaultTemplate+'}{{name='+actionText+' '+charCS.get('name')+'\'s Magic Items}}'
					+ '{{desc=Select a Magic Item below to '+actionText
					+ (isView ? '. It will not be used and will remain in your Magic Item Bag' : ', and then press the **Use Item** button') + '}}'
					+ '{{desc1=';

		if (shortMenu) {
			content += '[Select a Magic Item](!magic --button '+selectAction+'|'+tokenID+'|?{Which Magic Item?'+makeMIlist( charCS, false, isView )+'}) }}';
		} else {
			// build the character's visible MI Bag
			content += makeMIbuttons( tokenID, (isGM ? 'max' : 'current'), fields.Items_qty[1], selectAction, (isView ? 'viewMI' : ''), MIrowref);
			content += '}}';
		}
		var magicItem,
		    selectedMI;
			
		content += '{{desc2=';
		if (shortMenu || !isView) {
			if (MIrowref >= 0) {
				selectedMI = attrLookup( charCS, [fields.Items_name[0], (isGM ? 'max' : 'current')], fields.Items_table, MIrowref ) || '-';
				magicItem = abilityLookup( fields.MagicItemDB, selectedMI );
			}	
			content	+= (MIrowref < 0 ? ('<span style='+design.grey_button+'>') : '[')
					+  actionText+' '+(MIrowref < 0 ? 'Magic Item' : selectedMI)
					+  (MIrowref < 0 ? ('</span>') : ('](!magic --button '+submitAction+'|'+tokenID+'|'+MIrowref+'\n&#37;{'+magicItem.dB+'|'+selectedMI+'})'))
					+  '\nor\n';
		}
		menuType = (shortMenu ? 'long' : 'short');
		content += '[Swap to a '+menuType+' menu](!magic --button '+(isView ? BT.VIEWMI_OPTION : BT.USEMI_OPTION)+'|'+tokenID+'|'+menuType+')'
				+  '}}';
				
		if (isGM) {
			sendFeedback( content );
		} else {
			sendResponse( charCS, content );
		}
		return;
	}
	
	/**
	 * Make a menu to display when a Player selects to use
	 * a power of a Magic Item
	 */
	 
	var makeUseMIpowerMenu = function( args ) {
		
		var tokenID = args[1],
			powerName = args[2],
			castLevel = args[3],
			itemName = args[4],
			MIlibrary = args[5],
			power = args[6],
			powerLib = args[7],
			charCS = getCharacter(tokenID),
			tokenName = getObj('graphic',tokenID).get('name'),
			content = '&{template:'+fields.defaultTemplate+'}{{name='+itemName+'\'s '+powerName+' power}}'
					+ '{{desc='+tokenName+' is about to use '+itemName+'\'s '+powerName+' power.  Is this correct?}}'
					+ '{{desc1=[Use '+powerName+'](!magic --button '+BT.MI_POWER_USED+'|'+tokenID+'|'+powerName+'|'+itemName+'|'+castLevel+'\n&#37;{'+powerLib+'|'+power+'})'
					+ ' or [Return to '+itemName+'](\~'+MIlibrary+'|'+itemName+')\nOr just do something else}}';
		sendResponse(charCS,content);
		return;	
	}
			
	
	/**
	* Create the Edit Magic Item Bag menu.  Allow for a short version if
	* the Short Menus status flag is set, and highlight selected buttons
	**/
	
	var makeEditBagMenu = function(args,senderId,msg='',menuType) {
	    
		var tokenID = args[1],
			MIrowref = args[2],
			selectedMI = args[3] || '',
			charges = args[4],
			charCS = getCharacter( tokenID );
			
		if (!charCS) {
			sendDebug( 'makeEditMImenu: Invalid character ID passed' );
			sendError( 'Invalid MagicMaster argument' );
			return;
		}
		
        var qty, mi, playerConfig, magicItem, removeMI,
			selected = !!selectedMI && selectedMI.length > 0,
			remove = (selectedMI.toLowerCase() == 'remove'),
			bagSlot = !!MIrowref && MIrowref >= 0,
			content = '&{template:'+fields.defaultTemplate+'}{{name=Edit Magic Item Bag}}';

		if (!menuType) {
			playerConfig = getSetPlayerConfig( senderId );
			if (playerConfig) {
				menuType = playerConfig.editBagType;
			} else {
			    menuType = 'long';
			}
		}
		var shortMenu = menuType == 'short';

		if (selected && !remove) {
			magicItem = abilityLookup( fields.MagicItemDB, selectedMI );
			if (!magicItem.obj) {
				sendResponse( charCS, 'Can\'t find '+selectedMI+' in the Magic Item database' );
				return;
			}
		}
		
		if (msg && msg.length>0) {
			content += '{{='+msg+'}}';
		}
		
		if (!shortMenu || !selected) {
			content += '{{desc=**1.Choose what item to store**\n'
					+  '[Potion](!magic --button '+BT.CHOOSE_MI+'|'+tokenID+'|'+MIrowref+'|?{Potion to store|'+getMagicList(fields.MagicItemDB,fields.ItemPotionList)+'}|'+charges+')'
					+  '[Scroll](!magic --button '+BT.CHOOSE_MI+'|'+tokenID+'|'+MIrowref+'|?{Scroll to store|'+getMagicList(fields.MagicItemDB,fields.ItemScrollList)+'}|'+charges+')'
					+  '[Rods, Staves, Wands](!magic --button '+BT.CHOOSE_MI+'|'+tokenID+'|'+MIrowref+'|?{Rod Staff Wand to store|'+getMagicList(fields.MagicItemDB,fields.ItemWandsList)+'}|'+charges+')'
					+  '[Weapon](!magic --button '+BT.CHOOSE_MI+'|'+tokenID+'|'+MIrowref+'|?{Weapon to store|'+getMagicList(fields.MagicItemDB,fields.ItemWeaponList)+'}|'+charges+')'
					+  '[Armour](!magic --button '+BT.CHOOSE_MI+'|'+tokenID+'|'+MIrowref+'|?{Armour to store|'+getMagicList(fields.MagicItemDB,fields.ItemArmourList)+'}|'+charges+')'
					+  '[Ring](!magic --button '+BT.CHOOSE_MI+'|'+tokenID+'|'+MIrowref+'|?{Ring to store|'+getMagicList(fields.MagicItemDB,fields.ItemRingList)+'}|'+charges+')'
					+  '[Miscellaneous](!magic --button '+BT.CHOOSE_MI+'|'+tokenID+'|'+MIrowref+'|?{Misc Item to store|'+getMagicList(fields.MagicItemDB,fields.ItemMiscList)+'}|'+charges+')';
			if (shortMenu) {
				content +=  '\n**OR**\n'
						+  '[Choose item to Remove](!magic --button '+BT.CHOOSE_MI+'|'+tokenID+'|'+MIrowref+'|'+'Remove) from your MI bag}}'
						+  '{{desc2=[Swap to a long menu](!magic --button '+BT.EDITMI_OPTION+'|'+tokenID+'|'+(shortMenu ? 'long' : 'short')+')}}';
			}
		}
		if (!shortMenu || selected) {
			if (!remove) {
				if (shortMenu) {
					content += '{{desc=**1.Item chosen** ['+selectedMI+'](!magic --button '+BT.REDO_CHOOSE_MI+'|'+tokenID+'|'+MIrowref+'), click to reselect\n';
				}
    			content += '\nOptionally, you can '+(selected ? '[' : '<span style='+design.grey_button+'>')+'Review '+selectedMI+(selected ? ('](!magic --button '+BT.REVIEW_MI+'|'+tokenID+'|'+MIrowref+'|'+selectedMI+'|\n&#37;{'+magicItem.dB+'|'+selectedMI+'})') : '')+'</span>';
            } else {
				content += '{{desc=**1.Action chosen** ***Remove***, [click](!magic --button '+BT.REDO_CHOOSE_MI+'|'+tokenID+'|'+MIrowref+') to change';
				}
			content += '}}';
		}
		
		if (bagSlot) {
			qty = attrLookup( charCS, [fields.Items_qty[0], 'current'], fields.Items_table, MIrowref ) || 0;
			removeMI = attrLookup( charCS, [fields.Items_name[0], 'current'], fields.Items_table, MIrowref );
		}
		if (!shortMenu || (selected && !bagSlot)) {
			content += '{{desc1=';
			if (remove) {
				content += '2.Select the item to **remove**\n';
			} else if (selected) {
				content +=  '**2.Select the slot to add this item to**\n';
			} else {
				content += 'Select an Item above then\n'
						+  '**2.Select a slot to add it to**\n';
			}
			
			if (shortMenu) {
				content += '[Select slot](!magic --button '+BT.SLOT_MI+'|'+tokenID+'|?{Which slot?'+makeMIlist( charCS, true )+'}|'+selectedMI+')';
			} else {
				content += makeMIbuttons( tokenID, 'current', fields.Items_qty[1], BT.SLOT_MI, '|'+selectedMI, MIrowref, false, true );
			}
			
			content += '}}';
		} else if (shortMenu && bagSlot) {
			removeMI = mi = attrLookup( charCS, [fields.Items_name[0], 'current'], fields.Items_table, MIrowref );
		    
		    content += '{{desc1=**2.Selected** ['+qty+' '+mi+'](!magic --button '+BT.SLOT_MI+'|'+tokenID+'|?{Which other slot?'+makeMIlist( charCS, true )+'}|'+selectedMI+'|)'
					+  ' as slot to '+(remove ? 'remove' : 'store it in')+', click to change}}';
		}
		
		if (!shortMenu || (selected && bagSlot)) {

			menuType = (shortMenu ? 'long' : 'short');
			content += '{{desc2=**3.';
			if (!remove) {
				content += ((selected && bagSlot) ? '[' : ('<span style='+design.grey_button+'>'))
						+  'Store '+selectedMI
						+  ((selected && bagSlot && !remove) ? ('](!magic --button '+BT.STORE_MI+'|'+tokenID+'|'+MIrowref+'|'+selectedMI+'|?{Quantity?|'+qty+'+1})') : '</span>')
						+  ' in your MI Bag**'+(!!removeMI ? (', overwriting **'+removeMI) : '')+'**\n\n'
						+  'or ';
			}
			content += (bagSlot ? '[' : ('<span style='+design.grey_button+'>'))
					+  'Remove '+(!!removeMI ? removeMI : 'item')
					+  (bagSlot ? ('](!magic --button '+BT.REMOVE_MI+'|'+tokenID+'|'+MIrowref+'|'+removeMI+')') : '</span>')
					+  ' from your MI Bag\n\n'
					+  'or [Swap to a '+menuType+' menu](!magic --button '+BT.EDITMI_OPTION+'|'+tokenID+'|'+menuType+')}}';
		}
		sendResponse( charCS, content );
		return;
	}
	
	/*
	 * Create a menu for DMs to see displayed and real Magic Item information
	 * on Character Sheets.  Hidden information can be what the MI really is,
	 * which the DM can set using this menu.
	 */
	 
	var makeGMonlyMImenu = function(args, msg) {
		
		var tokenID = args[1],
			MIrowref = args[2],
			MItoStore = args[3],
			charCS = getCharacter(tokenID);
		
		if (!charCS) {
		    sendDebug('makeGMonlyMImenu: invalid tokenID passed');
		    sendError('Internal miMaster error');
		    return;
		}	
	    
		var	qty, mi,
			content = '&{template:'+fields.defaultTemplate+'}{{name=Edit '+charCS.get('name')+'\'s Magic Item Bag}}'
					+ '{{desc=**1. Choose something to store**\n';
					
		content += '[Potion](!magic --button GM-MItoStore|'+tokenID+'|'+MIrowref+'|?{Which Potion?|'+getMagicList(fields.MagicItemDB, fields.ItemPotionList)+'})'
				+  '[Scroll](!magic --button GM-MItoStore|'+tokenID+'|'+MIrowref+'|?{Which Scroll?|'+getMagicList(fields.MagicItemDB, fields.ItemScrollList)+'})'
				+  '[Rods, Staves, Wands](!magic --button GM-MItoStore|'+tokenID+'|'+MIrowref+'|?{Which Rod, Staff or Wand?|'+getMagicList(fields.MagicItemDB, fields.ItemWandsList)+'})'
				+  '[Weapon](!magic --button GM-MItoStore|'+tokenID+'|'+MIrowref+'|?{Which Weapon?|'+getMagicList(fields.MagicItemDB, fields.ItemWeaponList)+'})'
				+  '[Armour](!magic --button GM-MItoStore|'+tokenID+'|'+MIrowref+'|?{Which piece of Armour?|'+getMagicList(fields.MagicItemDB, fields.ItemArmourList)+'})'
				+  '[Ring](!magic --button GM-MItoStore|'+tokenID+'|'+MIrowref+'|?{Which Ring?|'+getMagicList(fields.MagicItemDB, fields.ItemRingList)+'})'
				+  '[Miscellaneous MI](!magic --button GM-MItoStore|'+tokenID+'|'+MIrowref+'|?{Which Misc MI?|'+getMagicList(fields.MagicItemDB, fields.ItemMiscList)+'})'
				+  '[DM only list](!magic --button GM-MItoStore|'+tokenID+'|'+MIrowref+'|?{Which DM only item?|'+getMagicList(fields.MagicItemDB, fields.ItemDMList)+'})}}';
		content += '{{desc1=**2. Choose slot to edit or store in**\n';

		// build the character's visible MI Bag
		content += makeMIbuttons( tokenID, 'current', 'current', 'GM-MIslot', '|'+MItoStore, MIrowref, false, true );
		content += '\n**Which are Actually**\n';
		// build the character's hidden MI Bag
		content += makeMIbuttons( tokenID, 'max', 'max', 'GM-MIslot', '|'+MItoStore, MIrowref, false, true );
		content += '}}';

		var slotName = (MIrowref >= 0) ? (attrLookup( charCS, [fields.Items_name[0], 'current'], fields.Items_table, MIrowref ) || '') : '',
			slotActualName = (MIrowref >= 0) ? (attrLookup( charCS, [fields.Items_name[0], 'max'], fields.Items_table, MIrowref ) || '') : '',
			slotType = (MIrowref >= 0) ? (attrLookup( charCS, fields.Items_type, fields.Items_table, MIrowref ) || '') : '',
			slotQty = parseInt(attrLookup( charCS, [fields.Items_qty[0], 'current'], fields.Items_table, MIrowref )) || 0,
			slotActualQty = parseInt(attrLookup( charCS, [fields.Items_qty[0], 'max'], fields.Items_table, MIrowref )) || 0,
			slotCost = parseFloat(attrLookup( charCS, fields.Items_cost, fields.Items_table, MIrowref )) || 0,
		
			chosenMI = (MItoStore.length > 0),
			chosenSlot = (MIrowref >= 0),
			chosenBoth = (chosenMI && chosenSlot),
			selectableSlot = chosenSlot ? '[' : '<span style='+design.grey_button+'>',
			selectableBoth = chosenBoth ? '[' : '<span style='+design.grey_button+'>',
			containerNo = attrLookup( charCS, fields.ItemContainerType ),
			containerSize = attrLookup( charCS, fields.ItemContainerSize ),
			spellStoring = false,
			containerType;
			
		if (chosenSlot) {
			let mi = abilityLookup( fields.MagicItemDB, slotName );
			if (mi.obj) {
				spellStoring = reCastMIspellCmd.test(mi.obj[0].get('action')) || reCastMIpowerCmd.test(mi.obj[0].get('action'));
			}
		}
		var storableSlot = (spellStoring && chosenSlot) ? '[' : '<span style='+design.grey_button+'>';

		if (_.isUndefined(containerSize)) {
		    containerSize = fields.MIRowsStandard;
		    setAttr( charCS, fields.ItemContainerSize, containerSize );
		}
			
		switch (containerNo) {
		case '0': containerType = 'Empty Container';
				break;
		case '1': containerType = 'Container with stuff';
				break;
		case '2': containerType = 'Sentient no MI Bag';
				break;
		case '3': containerType = 'Sentient with MI Bag';
				break;
		case '4': containerType = 'Trapped container';
				break;
		}
		
		content += '{{desc2=**3. '+selectableBoth+'Store '+MItoStore+(chosenBoth ? '](!magic --button GM-StoreMI|'+tokenID+'|'+MIrowref+'|'+MItoStore+'|?{Quantity?|'+slotQty+'+1})' : '</span>')+' **'
				+  ' or '+selectableBoth+'Hide '+(chosenBoth ? (slotName+' as '+MItoStore+'](!magic --button GM-RenameMI|'+tokenID+'|'+MIrowref+'|'+MItoStore+')') : '</span>')+' it<br><br>'
				+  '1. Or select MI from above ^\n'
				+  '2. '+selectableSlot+'REMOVE MI'+(chosenSlot ? '](!magic --button GM-DelMI|'+tokenID+'|'+MIrowref+'|'+slotName+') ' : '</span> ')
				+  selectableSlot+'Change MI Type'+(chosenSlot ? '](!magic --button GM-ChangeMItype|'+tokenID+'|'+MIrowref+'|'+MItoStore+'|?{Currently '+slotType+'. What type should '+slotName+' now be?|charged|uncharged|recharging|rechargeable|selfchargeable|cursed|cursed+charged|cursed+recharging|cursed+rechargeable|cursed+selfchargeable}) ' : '</span> ')
				+  selectableSlot+'Change displayed charges'+(chosenSlot ? '](!magic --button GM-ChangeDispCharges|'+tokenID+'|'+MIrowref+'|'+MItoStore+'|?{How many displayed charges should '+slotName+' now have (currently '+slotQty+'&#41;?|'+slotQty+'}) ' : '</span> ')
				+  selectableSlot+'Change actual charges'+(chosenSlot ? '](!magic --button GM-ChangeActCharges|'+tokenID+'|'+MIrowref+'|'+MItoStore+'|?{How many actual charges should '+slotActualName+' now have (currently '+slotActualQty+'&#41;?|'+slotActualQty+'}) ' : '</span> ')
				+  storableSlot+'Store Spells/Powers in MI'+(spellStoring && chosenSlot ? '](!magic --store-spells '+tokenID+'|'+slotName+') ' : '</span> ')
				+  selectableSlot+'Reset single MI'+(chosenSlot ? '](!magic --button GM-ResetSingleMI|'+tokenID+'|'+MIrowref+'|'+MItoStore+') ' : '</span> ')
				+  selectableSlot+'Change Cost'+(chosenSlot ? '](!magic --button GM-SetMIcost|'+tokenID+'|'+MIrowref+'|'+MItoStore+'|?{How much should '+slotName+' now cost (currently '+slotCost+'GP&#41;?|'+slotCost+'})<br>' : '</span><br>')
				+  'or [Edit Treasure](!magic --button GM-TreasureMenu|'+tokenID+'|'+MIrowref+'|'+MItoStore+') [BLANK BAG](!magic --button GM-BlankBag|'+tokenID+')\n'
				+  'Container ['+containerType+'](!magic  --button GM-SetTokenType|'+tokenID+'|'+MIrowref+'|'+MItoStore+'|?{What type of token is this?&#124;Empty Inanimate Object,0&#124;Inanimate Object with stuff,1&#124;Empty Sentient Creature,2&#124;Sentient Creature with stuff,3&#124;Trapped container,4&#125;)'
				+  ' size ['+containerSize+' slots](!magic --button GM-SetTokenSize|'+tokenID+'|'+MIrowref+'|'+MItoStore+'|?{How many slots does this container have?&#124;'+containerSize+'&#125;) select to change'
				+  '}}';
				
		if (msg && msg.length > 0) {
			content += '{{'+msg+'}}';
		}
		
		sendFeedback( content );
		return;
	}
	
	/*
	 * Create the DM's Edit Treasure menu
	 */
	 
	var makeEditTreasureMenu = function(args,msg) {
		
		var tokenID = args[1],
			charCS = getCharacter(tokenID);
	
		if (!charCS) {
			sendDebug('makeEditTreasureMenu: invalid tokenID passed');
			sendError('Internal miMaster error');
			return;
		}
		
		var charName = charCS.get('name'),
			treasure = attrLookup( charCS, fields.Money_treasure ) || '{{Treasure=None found}}',
			content = '&{template:'+fields.defaultTemplate+'}{{name=Current treasure for '+charName+'}}'
					+ treasure +'{{=----- End of current Treasure ----}}'
					+ '{{desc1=[Add](!magic --button GM-AddTreasure|'+tokenID+'|?{Title for Treasure?}|?{Treasure text}) or '
					+ '[Edit](!magic --button GM-EditTreasure|'+tokenID+') or '
					+ '[Delete](!magic --button GM-DeleteTreasure|'+tokenID+') the treasure}}'
					+ '{{desc2=Return to [DM\'s Change MI menu](!magic --button GM-MImenu|'+tokenID+'|-1|)}}';
		if (msg && msg.length > 0) {
			content += '{{desc='+msg+'}}';
		}
		
		sendFeedback(content);
		return;
	}
	
	/*
	 * Create a shorter, easier Pick or Put menu, that only does either
	 * Pick or Put (Player can switch between two), that uses a drop-down
	 * list of the MIs in the container to pick from (rather than buttons), and
	 * automatically selects an empty slot to put it into
	 */

	var makeShortPOPmenu = function( args, senderId, menuType ) {
		
	    var tokenID = args[1],
			pickID = args[3],
	        putID = args[4],
	        pickRow = args[2] || -1,
	        putRow = args[5] || -1;
	        
        if (!pickID || !putID) {
            sendDebug( 'makeShortPOPmenu: pickID or putID is invalid' );
            sendError( 'Invalid make-menu call syntax' );
            return;
        };
        
        var putCS = getCharacter( putID ),
            pickCS = getCharacter( pickID ),
			pickingUp = (tokenID == putID),
			shortMenu = pickingUp,
			pickOrPut = (pickingUp ? 'Pick up' : 'Put away'),
			charCS = getCharacter(tokenID);
           
        if (!putCS || !pickCS) {
            sendDebug( 'makeShortPOPmenu: pickID or putID is invalid' );
            sendError( 'Invalid make-menu call syntax' );
            return;
        }
		if (!menuType) {
			var playerConfig = getSetPlayerConfig( senderId );
			if (playerConfig) {
				shortMenu = !!!((pickingUp ? playerConfig.pickUpMIType : playerConfig.putAwayMIType) == 'long');
			}
		} else {
			shortMenu = !!!(menuType.toLowerCase() == 'long');
		}
		menuType = shortMenu ? 'long' : 'short';
		
        var putName = putCS.get('name'),
            pickName = pickCS.get('name'),
            qty, mi, miTrueName, i,
			putItems,
			miObj, miTrueObj, miTypeObj,
            pickedMI, pickedTrueMI, pickableQty, pickedType, miType,
			bagSize = (attrLookup( putCS, fields.ItemContainerSize ) || fields.MIRows),
            miList = makeMIlist( pickCS, false, true );

		if (!miList || miList.length == 0) {
			let treasure = (attrLookup( pickCS, fields.Money_treasure ) || '{{desc1=and there is no treasure here, either}}');
			sendParsedMsg( tokenID, messages.header + '{{desc=' + pickName+ ' ' + messages.fruitlessSearch + treasure );
			return;
		}
		
		putRow = -1;
		i = 0;
		putItems = getTable( putCS, {}, fields.Items_table, fields.Items_name );
		if (pickRow >= 0) {
			pickedMI = attrLookup( pickCS, fields.Items_name, fields.Items_table, pickRow ) || '';
			pickedTrueMI = attrLookup( pickCS, fields.Items_trueName, fields.Items_table, pickRow ) || '';
			pickableQty = attrLookup( pickCS, fields.Items_qty, fields.Items_table, pickRow ) || '';
			pickedType = attrLookup( pickCS, fields.Items_type, fields.Items_table, pickRow ) || '';
			putItems = getTable( putCS, putItems, fields.Items_table, fields.Items_trueName );
			putItems = getTable( putCS, putItems, fields.Items_table, fields.Items_type );
			while (i < putItems.sortKeys.length && putRow < 0) {
				mi = tableLookup(putItems,fields.Items_name,i);
				miTrueName = tableLookup(putItems,fields.Items_trueName,i);
				miType = tableLookup(putItems,fields.Items_type,i);
				if (_.isUndefined(mi)) {break;};
				if (mi.toLowerCase() == pickedMI.toLowerCase()
				 && miTrueName.toLowerCase() == pickedTrueMI.toLowerCase()
				 && miType.toLowerCase() == pickedType.toLowerCase()) {
					putRow = i;
				}
				i++;
			}
			i = 0;
		}
		while (i < putItems.sortKeys.length && putRow < 0) {
			mi = tableLookup( putItems, fields.Items_name, i, false );
			if (_.isUndefined(mi)) {break;}
			if (mi == '-') {
				putRow = i;
			}
			i++;
		}
		
		if (putRow < 0) {
			if (i >= bagSize) {
				sendParsedMsg( tokenID, messages.miBagFull );
				return;
			} else {
				putRow = i;
			}
		}
		
		shortMenu = shortMenu && (miList.split('|').length > 2);
		
		var treasure = (attrLookup( pickCS, fields.Money_treasure ) || ''),
			content = '&{template:'+fields.defaultTemplate+'}{{name=Pick up from ' + pickName + ' to put in ' + putName + '\'s Magic Item Bag}}';

		if (pickingUp) content += treasure;
		
		if (shortMenu) {
			content += '{{desc=Press the **[Select]** button to select the item you want to '+pickOrPut+' from a list of items in a container, '
					+ 'then press the **[Store]** button to automatically put it away in an empty slot}}'
					+ '{{Select=[Select Item to '+pickOrPut+'](!magic --button '+BT.POP_PICK+'|'+tokenID+'|?{'+pickOrPut+' which Item?'+miList+'}|'+pickID+'|'+putID+'|'+putRow+')}}'
					+ '{{Store=';
		} else {
			content += '{{desc=Select an item you want to '+pickOrPut+'\n'
					+  makeMIbuttons( tokenID, 'current', 'current', BT.POP_PICK, '|'+pickID+'|'+putID+'|'+putRow, pickRow, false, false, pickID )
					+  '}}{{desc1='
		}
		content +=((pickRow >= 0 && putRow >= 0) ? '[' : '<span style='+design.grey_button+'>')
				+ 'Store '+((pickRow >= 0) ? pickedMI : 'item')
				+ ((pickRow >= 0 && putRow >= 0) ? ('](!magic --button '+BT.POP_STORE+'|'+tokenID+'|'+pickRow+'|'+pickID+'|'+putID+'|'+putRow+'|-1)') : '</span>' )
				+ ' in free slot}}{{desc2=';
//		if (pickingUp) {
//			content += 'Or [View Coins, Gems & Treasure](!magic --button POPtreasure|' + tokenID + '|-1|' + pickID + '|' + putID + '|-1|-1)\nor ';
//		}
		content += '[Use '+menuType+' menu](!magic --button '+(pickingUp ? BT.PICKMI_OPTION : BT.PUTMI_OPTION)+'|'+tokenID+'|'+menuType+'|'+pickID+'|'+putID+')}}';
			
		sendResponse( charCS, content );
		return;
		
	}
	
	/*
	 * Create the Spells menus
	 */
	 
	var makeMUSpellsMenu = function( args ) {
		
		var tokenID = args[0],
			curToken = getObj('graphic',tokenID),
			charCS = getCharacter(tokenID);
			
		if (!charCS) {
			sendDebug('makeMUSpellsMenu: invalid tokenID parameter');
			sendError('Invalid MagicMaster parameter');
			return;
		}
		var level = casterLevel( charCS, 'MU' );
		
		var content = '&{template:'+fields.defaultTemplate+'} {{name='+curToken.get('name')+'\'s Magic User Spells menu}}'
					+ '{{desc=[Cast MU spell](!magic --cast-spell MU|'+tokenID+'|'+level+')\n'
					+ ((apiCommands.rounds && apiCommands.rounds.exists) ? ('[Show an Area of Effect](!rounds --aoe '+tokenID+')\n') : ('<span style='+design.grey_button+'>Show an Area of Effect</span>'))
					+ '[Short Rest for L1 MU Spells](!magic --rest '+tokenID+'|short|MU)\n'
					+ '[Long Rest and recover MU spells](!magic --rest '+tokenID+'|long|MU)\n'
					+ '[Memorise MU spells](!magic --mem-spell MU|'+tokenID+')\n'
					+ '[View MU Spellbook](!magic --view-spell MU|'+tokenID+')}}';
					
		sendResponse( charCS, content );
		return;
	};
	
	var makePRSpellsMenu = function( args ) {
		
		var tokenID = args[0],
			curToken = getObj('graphic',tokenID),
			charCS = getCharacter(tokenID);
			
		if (!charCS) {
			sendDebug('makePRSpellsMenu: invalid tokenID parameter');
			sendError('Invalid MagicMaster parameter');
			return;
		}
		var level = casterLevel( charCS, 'PR' );
		
		var content = '&{template:'+fields.defaultTemplate+'} {{name='+curToken.get('name')+'\'s Clerical Spells menu}}'
					+ '{{desc=[Cast Priest spell](!magic --cast-spell PR|'+tokenID+'|'+level+')\n'
					+ ((apiCommands.rounds && apiCommands.rounds.exists) ? ('[Show an Area of Effect](!rounds --aoe '+tokenID+')\n') : ('<span style='+design.grey_button+'>Show an Area of Effect</span>'))
					+ '[Short Rest for L1 Priest Spells](!magic --rest '+tokenID+'|short|PR)\n'
					+ '[Long Rest and recover Priest spells](!magic --rest '+tokenID+'|long|PR)\n'
					+ '[Memorise Priest spells](!magic --mem-spell PR|'+tokenID+')\n'
					+ '[View Priest Spellbook](!magic --view-spell PR|'+tokenID+')}}';
					
		sendResponse( charCS, content );
		return;
	};
	
	var makePowersMenu = function( args ) {
		
		var tokenID = args[0],
			curToken = getObj('graphic',tokenID),
			charCS = getCharacter(tokenID);
			
		if (!charCS) {
			sendDebug('makePowersMenu: invalid tokenID parameter');
			sendError('Invalid MagicMaster parameter');
			return;
		}
		var level = characterLevel( charCS );
		
		var content = '&{template:'+fields.defaultTemplate+'} {{name='+curToken.get('name')+'\'s Powers menu}}'
					+ '{{desc=[2. Use Power](!magic --cast-spell POWER|'+tokenID+'|'+level+')\n'
					+ '[3. Long Rest](!magic --rest '+tokenID+'|LONG)\n'
					+ '[4. Memorise Powers](!magic --mem-spell POWER|'+tokenID+')\n'
					+ '[4. View Powers](!magic --view-spell POWER|'+tokenID+')}}';
					
		sendResponse( charCS, content );
		return;
	};
	
	/*
	 * Menu to ask the user to confirm that they want
	 * to blank the specified repeating table
	 */
 
	var menuConfirmBlank = function( args, question ) {
		
		var cmd = args[0],
			tokenID = args[1],
			charCS = getCharacter(tokenID),
			content = '&{template:'+fields.defaultTemplate+'}{{name=Confirm Action}}'
					+ '{{desc='+question+'}}'
					+ '{{desc1=[Yes](!magic --button '+args[0]+'|'+tokenID+') or [No](!magic --button '+BT.ANSWER_NO+'|'+tokenID+')}}';
					
		sendResponse(charCS,content);
	}
	
	/*
	 * Display a menu to add spells and powers to spell-storing magic items
	 */
	 
	var makeSpellsMenu = function( args, msg='' ) {
		
		var tokenID = args[1],
			item = args[2],
			cmd = args[3].toUpperCase(),
			level = parseInt(args[4]) || 1,
			spell = args[5],
			castingLevel = args[6] || 6,
		    charCS = getCharacter(tokenID),
			isMU = cmd.includes('MU'),
			isPR = cmd.includes('PR'),
			isPower = cmd.includes('POWER'),
			isBoth = cmd.includes('ALL'),
			curSpells = '',
			nextLevel, minLevel, rootDB, listAttr,
			storedSpellsAttr, storedLevelAttr,
			spellObj, cmdStr, desc, question, content;
			
		if (isPower) {
			desc = 'Powers';
			rootDB = fields.PowersDB;
			storedSpellsAttr = [fields.ItemPowersList[0]+item,fields.ItemPowersList[1]];
			storedLevelAttr  = [fields.ItemPowerValues[0]+item,fields.ItemPowerValues[1]];
			listAttr = [fields.Spellbook[0]+spellLevels.pw[1].book,fields.Spellbook[1]];
			minLevel = 1;
			question = 'Cast how many per day (-1 means unlimited&#41;?';
		} else if (isMU) {
			desc = 'Stored Wizard spells';
			rootDB = fields.MU_SpellsDB;
			storedSpellsAttr = [fields.ItemMUspellsList[0]+item,fields.ItemMUspellsList[1]];
			storedLevelAttr  = [fields.ItemMUspellValues[0]+item,fields.ItemMUspellValues[1]];
			listAttr = [fields.Spellbook[0]+(level==1?'':spellLevels.mu[level].book),fields.Spellbook[1]];
			minLevel = spellsPerLevel.WIZARD[level].findIndex(num => num > 0);
			question = 'Cast at what level (normal min caster level '+minLevel+'&#41;?';
		} else if (isPR) {
			desc = 'Stored Priest spells';
			rootDB = fields.PR_SpellsDB;
			storedSpellsAttr = [fields.ItemPRspellsList[0]+item,fields.ItemPRspellsList[1]];
			storedLevelAttr  = [fields.ItemPRspellValues[0]+item,fields.ItemPRspellValues[1]];
			listAttr = [fields.Spellbook[0]+spellLevels.pr[level].book,fields.Spellbook[1]];
			minLevel = spellsPerLevel.PRIEST[level].findIndex(num => num > 0);
			question = 'Cast at what level (normal min caster level '+minLevel+'&#41;?';
		} else {
			return;
		}
		
		args.shift();
		cmdStr = args.join('|');

		if (charCS) {
			setAttr( charCS, fields.Casting_name, charCS.get('name'));
			setAttr( charCS, fields.Casting_level, minLevel );
			curSpells = attrLookup( charCS, storedSpellsAttr ) || '';
		}
			
		content = '&{template:'+fields.defaultTemplate+'}{{name=Store Spells & Powers}}{{ ='+(msg||'')+'}}{{'+desc+'=';
		
		curSpells = curSpells.split(',').filter(e=>!!e);
		for (let storedSpell of curSpells) {
			content += (storedSpell == spell ? ('<span style='+design.selected_button+'>'+spell+'</span>') : ('['+storedSpell+'](!magic --button CHOOSE_TO_STORE|'+[tokenID,item,cmd,level,storedSpell].join('|')+')'));
		}
		
		content += '}}{{desc=1. [Choose](!magic --button CHOOSE_TO_STORE|'+tokenID+'|'+item+'|'+cmd+'|'+level+'|&#63;{Choose which spell|'+getMagicList( rootDB, listAttr )+'}) a level '+level+' spell\n';
				
		if (spell) {
			spellObj = abilityLookup( rootDB, spell );
			content += '...Optionally [Review '+spell+'](!magic --button REVIEW_STORE|'+cmdStr
			        +  '\n&#37;{' + spellObj.dB + '|'+spell+'})}}';
		} else {
			content += '...Optionally <span style='+design.grey_button+'>Review choice</span>}}';
		}
				
		content += '{{desc1=2. '+(spell ? '[' : '<span style=' + design.grey_button + '>')+'Store '+(spell ? spell+'](!magic --button ADD_TO_STORE|'+cmdStr+'|&#63;{'+question+'})' : 'the spell</span>' )
				+  ' to stored '+(isPower ? 'powers' : ((isMU ? 'Wizard' : 'Priest')+' spells'))
				+  ' or '+(spell ? '[' : '<span style=' + design.grey_button + '>')+'Remove '+(spell ? spell+'](!magic --button DEL_STORED|'+cmdStr+')' : 'the spell</span>' )+'}}'
				+  '{{desc2=3. Choose and Store more spells or\n';
		
		if (isPower && isBoth) {
			content += 'go to [Wizard](!cmd --store-spells '+tokenID+'|'+item+'|MU-ALL|1|) or [Priest](!cmd --store-spells '+tokenID+'|'+item+'|PR-ALL|1|) spells';
		} else if (isMU) {
			content += 'go to [Level '+(level < 9 ? level+1 : 1)+'](!magic --store-spells '+tokenID+'|'+item+'|MUSPELLS|'+(level < 9 ? level+1 : 1)+'|) or\ngo to [Priest](!magic --store-spells '+tokenID+'|'+item+'|PRSPELLS|1|) spells'+(!isBoth ? '' : (' or\ngo to [Powers](!magic --store-spells '+tokenID+'|'+item+'|POWERS-ALL|1|)'));
		} else if (isPR) {
			content += 'go to [Level '+(level < 7 ? level+1 : 1)+'](!magic --store-spells '+tokenID+'|'+item+'|PRSPELLS|'+(level < 7 ? level+1 : 1)+'|) or\ngo to [Wizard](!magic --store-spells '+tokenID+'|'+item+'|MUSPELLS|1|) spells'+(!isBoth ? '' : (' or\ngo to [Powers](!magic --store-spells '+tokenID+'|'+item+'|POWERS-ALL|1|)'));
		}
		content += ' or\n[Return to Add Items Menu](!magic --gm-edit-mi '+tokenID+') or just do something else}}';
		sendFeedback(content);
		return;
	}
	
	/*
	 * Make a configuration menu to allow the DM to select:
	 * - strict mode: follow the rules precisely,
	 * - house rules mode: follow "old fogies" house rules
	 * - no restrictions: allow anything goes
	 */
	 
	var makeConfigMenu = function( args, msg='' ) {
		
		var configButtons = function( flag, txtOn, cmdOn, txtOff, cmdOff ) {
			var	buttons = '<td>'
						+ (flag ? ('['+txtOn+']('+cmdOn+')</td><td><span style='+design.selected_button+'>'+txtOff+'</span>')
								 : ('<span style='+design.selected_button+'>'+txtOn+'</span></td><td>['+txtOff+']('+cmdOff+')'))
						+ '</td>';
				return buttons;
			};
					
		var content = '&{template:'+fields.defaultTemplate+'}{{name=Configure RPGMaster}}{{subtitle=MagicMaster}}'
					+ (msg.length ? '{{ ='+msg+'}}' : '')
					+ '{{desc=Select which configuration you wish for this campaign using the toggle buttons below}}'
					+ '{{desc1=<table>';
				
		if (apiCommands['attk']) {
			content += '<tr><td>Non-Prof Penalty</td>'+configButtons(!state.attackMaster.weapRules.prof, 'Use Rules', '!attk --config prof|true', 'Use Sheet', '!attk --config prof|false')+'</tr>\n'
					+  '<tr><td>Allowed weapons</td>'+configButtons(!state.attackMaster.weapRules.allowAll, 'Allow All', '!attk --config all-weaps|true', 'Restrict', '!attk --config all-weaps|false')+'</tr>\n'
					+  (state.attackMaster.weapRules.allowAll ? '' : ('<tr><td>Restrict weapons</td>'+configButtons(!state.attackMaster.weapRules.classBan, 'Strict', '!attk --config weap-class|true', 'Lax', '!attk --config weap-class|false')+'</tr>\n'))
					+  '<tr><td>Allowed Armour</td>'+configButtons(!state.attackMaster.weapRules.allowArmour, 'Allow Any', '!attk --config all-armour|true', 'Use Rules', '!attk --config all-armour|false')+'</tr>\n'
					+  '<tr><td>Ranged Mastery</td>'+configButtons(state.attackMaster.weapRules.masterRange, 'Not Allowed', '!attk --config master-range|false', 'Allowed', '!attk --config master-range|true')+'</tr>\n';
		}
		content += '<tr><td>Specialist Wizards</td>'+configButtons(!state.MagicMaster.spellRules.specMU, 'Rules only', '!magic --config specialist-rules|true', 'Allow any', '!magic --config specialist-rules|false')+'</tr>\n'
				+  '<tr><td>Spells per Level</td>'+configButtons(!state.MagicMaster.spellRules.strictNum, 'Strict', '!magic --config spell-num|true', 'Allow Misc', '!magic --config spell-num|false')+'</tr>\n'
				+  '</table>}}';
//		log('magic makeConfigMenu: content='+content);
		sendFeedback( content );
		return;
	}
	
// ------------------------------------------------------------ Menu Button Press Handlers --------------------------------------------

	/**
	 * Handle the selection of an option button on a menu,
	 * usually used to set short or long menus.
	 */
	 
	var handleOptionButton = function( args, senderId ) {
		
		var isView = args[0].toUpperCase().includes('VIEW'),
			tokenID = args[1],
			optionValue = args[2].toLowerCase(),
	        config = getSetPlayerConfig( senderId ) || {};

		if (!['short','long'].includes(optionValue)) {
			sendError( 'Invalid MagicMaster menuType option.  Use short or long' );
			return;
		}
	        
        switch (args[0].toUpperCase()) {
        
        case BT.VIEWMI_OPTION:
		case BT.USEMI_OPTION:
            config.viewUseMIType = optionValue;
            getSetPlayerConfig( senderId, config );
			makeViewUseMI( [(isView ? BT.VIEW_MI : BT.USE_MI), tokenID, -1], senderId );
            break;
		case BT.EDITMI_OPTION:
			config.editBagType = optionValue;
            getSetPlayerConfig( senderId, config );
			makeEditBagMenu( [BT.EDIT_MI, tokenID, -1, ''], senderId, 'Using '+optionValue+' Edit MI Bag menu' );
			break;
		case BT.PICKMI_OPTION:
			config.pickUpMIType = optionValue;
            getSetPlayerConfig( senderId, config );
			makeShortPOPmenu( ['POPmenu',tokenID,-1,args[3],args[4],-1], senderId );
			break;
		case BT.PUTMI_OPTION:
			config.putAwayMIType = optionValue;
            getSetPlayerConfig( senderId, config );
			makeShortPOPmenu( ['POPmenu',tokenID,-1,args[3],args[4],-1], senderId );
			break;
            
        default:
            sendError( senderId, 'Invalid MagicMaster option. [Show Help](!magic --help)');
            break;
        };
		return;
	}
	
	/**
	 * Handle specification of a different number of Misc spells 
	 */
	 
	var handleSetMiscSpell = function( args ) {
		
		var tokenID = args[1],
			spellClass = args[2],
			level = args[3],
			noSpells = args[4] || 0,
			charCS = getCharacter(tokenID);
		
		if (spellClass == 'MU') {
			setAttr( charCS, [fields.MUSpellNo_table[0] + level + fields.MUSpellNo_misc[0],fields.MUSpellNo_misc[1]], noSpells );
		} else {
			setAttr( charCS, [fields.PRSpellNo_table[0] + level + fields.PRSpellNo_misc[0],fields.PRSpellNo_misc[1]], noSpells );
		}
		args = [args[5],args[1],args[3],-1,-1,'',1];
		makeManageSpellsMenu( args, 'Modified misc = '+noSpells );
		return;
	}

	/**
	* Handle the results of pressing a spell-selection button
	* or a power-selection button
	**/
	
	var handleChooseSpell = function( args ) {
		
		if (args[3].length == 0 || isNaN(args[3]) || args[4].length == 0 || isNaN(args[4])) {
			sendDebug('handleChooseSpell: invalid row or column');
			sendError('Internal MagicMaster error');
		}

		if (args[0] == BT.MI_SPELL) {
			var charCS = getCharacter(args[1]),
				storedLevel = attrLookup( charCS, fields.Spells_storedLevel, fields.Spells_table, args[3], args[4] );
			if (storedLevel && storedLevel > 0) {
				setAttr( charCS, fields.Casting_level, storedLevel );
			}
		}
	
		makeCastSpellMenu( args );
		return;
				
	}
	
	/**
	 * Handle a selected spell being cast
	 */
	 
	var handleCastSpell = function( args ) {
		
		var tokenID = args[1],
			rowIndex = args[3],
			colIndex = args[4],
			charCS = getCharacter(tokenID),
			db, action,
			delScrollSpell = function ( charCS, spellName, scrollName, nameField, valueField ) {
				spellName = spellName.toLowerCase().replace(reIgnore,'');
				var muSpellList = (attrLookup( charCS, [nameField[0]+scrollName, nameField[1]] ) || '').split(','),
					nameIndex = _.findIndex( muSpellList, e => e.toLowerCase().replace(reIgnore,'') == spellName );
				if (nameIndex >= 0) {
					muSpellList.splice( nameIndex, 1 );
					setAttr( charCS, [nameField[0]+scrollName, nameField[1]], muSpellList.join(',') );
					muSpellList = (attrLookup( charCS, [valueField[0]+scrollName, valueField[1]] ) || '').split(',');
					muSpellList.splice( nameIndex, 1 );
					setAttr( charCS, [valueField[0]+scrollName, valueField[1]], muSpellList.join(',') );
					return !muSpellList.length;
				} else {
					return true;
				}
			};
			
		if (!charCS) {
			sendDebug('handleCastSpell: invalid tokenID parameter');
			sendError('Internal MagicMaster error');
			return;
		}
		if (args[3].length == 0 || isNaN(args[3]) || args[4].length == 0 || isNaN(args[4])) {
			sendDebug('handleCastSpell: invalid row or column');
			sendError('Internal MagicMaster error');
		}
		
		var spellTables = getAllTables( charCS, 'SPELLS', colIndex )['SPELLS'],
			spellName = tableLookup( spellTables, fields.Spells_name, rowIndex ),
			spellMsg = tableLookup( spellTables, fields.Spells_msg, rowIndex ),
			charName = charCS.get('name'),
			miName, miRowRef;
			
		switch (args[0]) {
		case BT.CAST_MIPOWER:
		case BT.USE_POWER:
			db = fields.PowersDB;
			action = 'using';
			break;
		case BT.CAST_MUSPELL:
			db = fields.MU_SpellsDB;
			action = 'casting';
			break;
		case BT.CAST_PRSPELL:
			db = fields.PR_SpellsDB;
			action = 'casting';
			break;
		case BT.CAST_SCROLL:
		case BT.CAST_MISPELL:
    		miName = attrLookup( charCS, fields.ItemChosen );
			db = tableLookup( spellTables, fields.Spells_db, rowIndex );
			action = 'using their magic item to cast';
			spellMsg = '';
			break;
		}
		
		var	spell = abilityLookup( db, spellName ),
			spellCost = ((!!spell.ct && (args[0] != BT.CAST_MISPELL) && (args[0] != BT.CAST_MIPOWER) && (args[0] != BT.CAST_SCROLL)) ? spell.ct[0].get('max') : 0),
			totalLeft,
			content,
			spellValue = parseInt((tableLookup( spellTables, fields.Spells_castValue, rowIndex )),10);
			
		setAttr( charCS, fields.SpellToMem, spellName );
		setAttr( charCS, fields.Expenditure, spellCost );
		setAttr( charCS, fields.SpellRowRef, rowIndex );
		setAttr( charCS, fields.SpellColIndex, colIndex );
		setAttr( charCS, fields.SpellCharges, spellValue-1 );
		
		if (spellValue > 0) {
		    spellValue--;
			tableSet( spellTables, fields.Spells_castValue, rowIndex, spellValue );
		}
		if (args[0] == BT.CAST_SCROLL && spellValue == 0) {
			addTableRow( spellTables, rowIndex );	// Blanks this table row
			if (delScrollSpell( charCS, spellName, miName, fields.ItemMUspellsList, fields.ItemMUspellValues ) &&
				delScrollSpell( charCS, spellName, miName, fields.ItemPRspellsList, fields.ItemPRspellValues )) {
				if (!_.isUndefined(miRowRef = attrLookup( charCS, fields.ItemRowRef ))) {
					addTableRow( getAllTables( charCS, 'MI' )['MI'], miRowRef );	// Blanks this table row
				}
			}
		}
		
		if (spellMsg.length > 0) {
			sendResponse( charCS, spellMsg );
		}
		
		totalLeft = spendMoney( charCS, spellCost );
		content = charName + ' is '+action+' [' + spellName + '](!&#13;&#47;w gm &#37;{'+spell.dB+'|'+spellName+'})'
				+ (parseInt(spellCost || 0) ? (' at a cost of [[' + spellCost + ']]GP (leaving [[' + totalLeft + ']]GP).') : '')
				+ '  Select ' + charName + '\'s token before pressing to see effects.';
		sendFeedback( content );

		return;
	}
	
	/*
	 * Handle targeting the effects of a spell
	 * Moved to RoundMaster to allow passing of the PlayerID
	 */
	 
	var handleSpellTargeting = function( args, isGM ) {
		
		var tokenID = args[0],
			curToken = getObj('graphic',tokenID),
			tokenName,
			thac0,
			strHitBonus,
			content,
			charCS = getCharacter(tokenID);

		if (!charCS) {
			sendDebug('handleSpellTargeting: invalid tokenID parameter');
			sendError('Internal MagicMaster error');
			return;
		}
		
		if (!apiCommands.rounds || !apiCommands.rounds.exists) {
			sendError('RoundMaster API must be loaded for spell targeting to work');
			return;
		}
		
		args.shift();
		tokenName = curToken.get('name');
		thac0 = getTokenValue( curToken, fields.Token_thac0, fields.Thac0, fields.MonsterThac0 ) || 20;
		strHitBonus = attrLookup( charCS, fields.Strength_hit ) || 0;
		content = (isGM ? '/w gm ' : '')+'&{template:'+fields.defaultTemplate+'}{{name=Try to Touch Target}}'
				+ '{{desc=**'+tokenName+' hits AC [[( ([['+thac0+']][Thac0]) - ([['+strHitBonus+']][Strength bonus]) - [[1d20]][Dice Roll] )]] with their spell.**}}\n'
				+ '/w "@{selected|character_name}" If hit, [Cast on them](!rounds --target SINGLE|'+tokenID+'|&#64;{target|Who to Attack with this spell?|token_id}|'+args.join('|')+')';
		setAbility( charCS, 'To-Hit-Spell', content );
		return;
		
	}
	
	/*
	 * Handle redisplaying the manage spells menu
	 * Used when selecting a spell or slot to memorise,
	 * or when changing level of spell to memorise.
	 */
	 
	var handleRedisplayManageSpells = function( args ) {
		
		var msg = '';

		if ((args[3] >= 0 && args[4] >= 0) || (args[5] && args[5].length > 0)) {
			msg += 'Selected ';
		}
		if (args[5] && args[5].length > 0) {
			msg += args[5] + ' to store';
		}
		if (args[3] >= 0 && args[4] >= 0 && args[5] && args[5].length > 0) {
			msg += ' and ';
		}
		if (args[3] >= 0 && args[4] >= 0) {
			msg += 'a slot to store it in.';
		}

		makeManageSpellsMenu( args, msg );
		return;
	}
	
	/*
	 * Review a chosen spell description
	 */
	 
	var handleReviewSpell = function( args ) {
		
		var isMU = args[0].toUpperCase().includes('MU'),
			isPR = args[0].toUpperCase().includes('PR'),
			isMI = args[0].toUpperCase().includes('MI'),
			isPower = args[0].toUpperCase().includes('POWER'),
			isView = !args[0].toUpperCase().includes('REVIEW'),
			tokenID = args[1],
			followOn,
			msg,
			charCS = getCharacter(tokenID);
			
		if (!charCS) {
			sendDebug('handleReviewSpell: invalid tokenID parameter');
			sendError('Internal MagicMaster error');
			return;
		}
		
		if (isMI) {
    		if (isPower) {
    			followOn = (isView ? 'VIEWMEM_MI_POWERS' : 'EDIT_MIPOWERS');
    		} else if (isMU) {
    			followOn = (isView ? 'VIEWMEM_MI_MUSPELLS' : 'EDIT_MIMUSPELLS');
    		} else if (isPR) {
    			followOn = (isView ? 'VIEWMEM_MI_PRSPELLS' : 'EDIT_MIPRSPELLS');
    		} else {
    			followOn = (isView ? 'VIEW_MI' : 'CHOOSE_MI');
    		}
		} else if (isPower) {
			followOn = (isView ? 'VIEWMEM_POWERS' : 'EDIT_POWERS');
		} else if (isMU) {
			followOn = (isView ? 'VIEWMEM_MUSPELLS' : 'EDIT_MUSPELLS');
		} else {
			followOn = (isView ? 'VIEWMEM_PRSPELLS' : 'EDIT_PRSPELLS');
		}
		
		msg = '[Return to menu](!magic --button '+followOn+'|'+args[1]+'|'+args[2]+'|'+args[3]+'|'+args[4]+'|'+args[5]+')';
		sendResponse( charCS, msg );
		return;
	}
	
	/*
	 * Return to the spell storing menu after a review
	 */
	 
	var handleRevStore = function( args ) {	
		args.shift();
		sendFeedback( ('[Return to menu](!magic --button CHOOSE_TO_STORE|'+args.join('|')+')') );
	}
	
	/*
	 * Handle memorising a selected spell in a selected slot
	 */
	 
	var handleMemoriseSpell = function( args ) {
		
		var isMU = args[0].toUpperCase().includes('MU'),
			isMI = args[0].toUpperCase().includes('MI'),
			isPower = args[0].toUpperCase().includes('POWER'),
			tokenID = args[1],
			level = args[2],
			row = args[3],
			col = args[4],
			spellName = args[5],
			noToMemorise = parseInt((args[6]),10),
			dbCS,
			charCS = getCharacter(tokenID);

		if (!charCS) {
			sendDebug('handleMemoriseSpell: invalid tokenID parameter');
			sendError('Internal MagicMaster error');
			return;
		}
		
		if (args[3].length == 0 || isNaN(args[3]) || args[4].length == 0 || isNaN(args[4])) {
			sendDebug('handleChooseSpell: invalid row or column');
			sendError('Internal MagicMaster error');
		}

		if (isNaN(noToMemorise)) {
			sendResponse('You must specify the number of uses as a number');
			return;
		}
		
		var spell = abilityLookup( isPower ? fields.PowersDB : (isMU ? fields.MU_SpellsDB : fields.PR_SpellsDB), spellName ),
			castTime = (!!spell.ct ? spell.ct[0].get('current') : 0),
			castCost = (!!spell.ct ? spell.ct[0].get('max') : 0);

		setAttr( charCS, [fields.Spells_name[0], 'current'], spellName, fields.Spells_table, row, col );
		setAttr( charCS, [fields.Spells_name[0], 'max'], spellName, fields.Spells_table, row, col );
		setAttr( charCS, fields.Spells_speed, castTime, fields.Spells_table, row, col );
		setAttr( charCS, fields.Spells_cost, castCost, fields.Spells_table, row, col );
		setAttr( charCS, fields.Spells_castValue, noToMemorise, fields.Spells_table, row, col );
		setAttr( charCS, fields.Spells_castMax, (isPower ? noToMemorise : 1), fields.Spells_table, row, col );
		
		if (isMI && isPower) {
			setAttr( charCS, ['power-'+spellName, 'current'], row );
			setAttr( charCS, ['power-'+spellName, 'max'], col );
		}

		args[3] = -1;
		args[4] = -1;
		args[5] = '';
		args[6] = 1;
		
		makeManageSpellsMenu( args, 'Memorised '+spellName );
		return;
	}
	
	/*
	 * Handle undertaking a short rest to recover 1st level spells
	 */
	 
	var handleRest = function( args ) {
		
		var tokenID = args[0],
			isShort = args[1].toLowerCase().includes('short'),
			casterType = (args[2] || 'MU+PR').toUpperCase(),
			r, c, w,
			col, rep;
			
		if (casterType.includes('MI') && casterType.includes('POWER')) {
/*			for (r = 0; (r < fields.MIPowersRows); r++) {
				c = fields.PowersBaseCol;
				for (w = 1; (w <= fields.PowersCols); w++) {
				    let castMax = (attrLookup( dB.miDB, fields.Spells_castMax, fields.Powers_table, r, c ) || 0);
					setAttr( dB.miDB, fields.Spells_castValue, castMax, fields.Powers_table, r, c );
					c++;
				}
			}
*/			return;
		}

		var isMU = casterType.includes('MU'),
			isPR = casterType.includes('PR'),
			isMI = !isShort,
			isPower = !isShort,
			isMIPower = !isShort,
			charCS = getCharacter(tokenID);

		if (!charCS) {
			sendDebug('handleRest: invalid tokenID parameter');
			sendError('Internal MagicMaster error');
			return;
		}
		
		var levelSpells,
		    level,
			levelLimit,
		    restType,
			powerQty,
			valueObj,
			spellObjs = [];
		
		while (isMU || isPR || isPower || isMIPower) {
			restType = (isMIPower ? 'MIPOWER' : (isPower ? 'POWER' : (isMU ? 'MU' : 'PR' )));
			levelSpells = shapeSpellbook( charCS, restType );
			level = 1;
			levelLimit = isShort ? 2 : levelSpells.length;
			while (level < levelLimit && levelSpells[level].spells > 0) {
				r = 0;
				while (levelSpells[level].spells > 0) {
					c = levelSpells[level].base;
					for (w = 1; (w <= fields.SpellsCols) && (levelSpells[level].spells > 0); w++) {
                        if (_.isUndefined(spellObjs[w])) {
                            spellObjs[w] = {};
                        }
						if (_.isUndefined(spellObjs[w][fields.Spells_castValue[0]])) {
							spellObjs[w] = getTable( charCS, spellObjs[w], fields.Spells_table, fields.Spells_castValue, c );
						}
						valueObj = tableLookup( spellObjs[w], fields.Spells_castValue, r, true, true );
						if (!valueObj) {
							levelSpells[level].spells = 0;
							break;
						}
						if (restType.includes('POWER')) {
							if (_.isUndefined(spellObjs[w][fields.Spells_castMax[0]])) {
								spellObjs[w] = getTable( charCS, spellObjs[w], fields.Spells_table, fields.Spells_castMax, c, 0 );
							}
							valueObj.set( fields.Spells_castValue[1], tableLookup( spellObjs[w], fields.Spells_castMax, r ));
						} else {
							valueObj.set( fields.Spells_castValue[1], 1 );
						}
						c++;
						levelSpells[level].spells--;
					}
					r++;
				}
				spellObjs = [];
				level++;
			}

			switch (restType) {
			case 'MIPOWER':
				isMIPower = false;
				break;
			case 'POWER':
				isPower = false;
				break;
			case 'MU':
				isMU = false;
				break;
			case 'PR':
				isPR = false;
				break;
			}
		}
		
		if (isMI) {
			let miBase = fields.Items_table[1],
				MagicItems = getAllTables( charCS, 'MI' ).MI;
				
			for (r = miBase; r < (MagicItems.sortKeys.length+miBase); r++) {
                let miSpeedObj = tableLookup( MagicItems, fields.Items_speed, r, true, true ),
					miQtyObj = tableLookup( MagicItems, fields.Items_qty, r, true, true ),
					miTrueName = tableLookup( MagicItems, fields.Items_trueName, r ),
					miType = tableLookup( MagicItems, fields.Items_type, r ),
					ItemSpecs = abilityLookup( fields.MagicItemDB, miTrueName );
				if (_.isUndefined(miSpeedObj) || _.isUndefined(miQtyObj)) {break;}
				if (miTrueName && miTrueName != '-') {
					if (ItemSpecs.obj && ItemSpecs.obj[0] && !miType.toLowerCase().includes('recharging') && ItemSpecs.obj[0].get('action').toLowerCase().includes('{{ammo=')) {
						miQtyObj.set('max',(miQtyObj.get('current')||0));
					} else {
						miQtyObj.set('current',(miQtyObj.get('max')||0));
					}
    				miSpeedObj.set('current',(miSpeedObj.get('max')||5));
				}
			}
		}
		return;
	}
	
	/*
	 * Handle time passing.  Update both the character sheet for 
	 * this character, and the global date if it is behind the
	 * character date 
	 */
	 
	var handleTimePassing = function( charCS, timeSpent ) {
		
		timeSpent = Math.ceil(timeSpent);
		var charDay = parseInt((attrLookup( charCS, fields.CharDay ) || 0),10) + timeSpent,
			today = parseInt((state.moneyMaster.inGameDay || 0),10),
			globalDay = Math.max( today, charDay );
			
		setAttr( charCS, fields.CharDay, globalDay );

/*		if (today == globalDay)
			{return globalDay;}
			
		setAttr( dB.dtDB, fields.Today, globalDay );
		setAttr( dB.dtDB, fields.Today_weekday, (1+(globalDay%7)) );
		setAttr( dB.dtDB, fields.Today_day, (1+(globalDay%28)) );
		setAttr( dB.dtDB, fields.Today_dayth, Math.min((1+((globalDay%28)%20)),4) );
		setAttr( dB.dtDB, fields.Today_month, (1+Math.floor((globalDay%336)/28)) );
		setAttr( dB.dtDB, fields.Today_year, Math.floor(globalDay/336) );
*/		
		return globalDay;
	}
	
	/*
	 * Handle the selection of a magic item
	 * to use or view
	 */
	 
	var handleChooseMI = function( args, senderId ) {
		
		makeViewUseMI( args, senderId );
		return;
	}
	
	/*
	 * Handle viewing or using a magic item.
	 * The calling of the MI macro from the MI-DB is performed
	 * in the [Submit] button of the menu.
	 */

	var handleViewUseMI = function( args, isSilent, charges=1 ) {
		
		var action = args[0].toUpperCase(),
			tokenID = args[1],
			MIrowref = parseInt(args[2],10),
			charCS = getCharacter(tokenID);
			
		if (!charCS) {
			sendDebug('handleViewUseMI: invalid tokenID parameter');
			sendError('Internal MagicMaster error');
			return;
		}
		
		var	MItables = getAllTables( charCS, 'MI' )['MI'],
			MIname = tableLookup( MItables, fields.Items_name, MIrowref );

		setAttr( charCS, fields.ItemChosen, MIname );
		
		if (action.includes('VIEW')) {
    		sendResponse( charCS, '[Return to menu](!magic --button '+BT.CHOOSE_VIEW_MI+'|'+args[1]+'|'+args[2]+')' );
			return;
		}

		if (isNaN(MIrowref) || (fields.Items_table[1] == 0 && MIrowref < 0)) {
			sendDebug('handleViewUseMI: invalid MIrowref parameter is '+MIrowref);
			sendError('Internal MagicMaster error');
			return;
		}
			
		var charName = charCS.get('name'),
			MIqtyObj = tableLookup( MItables, fields.Items_qty, MIrowref, false, true ),
			MIqty = MIqtyObj.get(fields.Items_qty[1]),
			MItype = (tableLookup( MItables, fields.Items_type, MIrowref, 'uncharged' ) || 'uncharged').toLowerCase(),
			MIdb = abilityLookup( fields.MagicItemDB, MIname );
			
		setAttr( charCS, fields.ItemRowRef, MIrowref );

		if (MIqty < charges) {
			sendResponse( charCS, '&{template:'+fields.defaultTemplate+'}{{name=Using '+MIname+'}}{{desc='+MIname+' does not have enough charges left to do this}}'
								 +'{{desc1=[Show '+MIname+' again](\~'+MIdb.dB+'|'+MIname+') or do something else}}' );
			return;
		}
			
		switch (MItype) {
		case 'charged':
		case 'cursed+charged':
			if (MIqty == charges) {
				addTableRow( MItables, MIrowref );	// Blanks this row of the table
			} else {
				MIqtyObj.set('current',(MIqty-charges));
				MIqtyObj.set('max',(MIqty-charges));
			}
			break;

		case 'rechargeable':
		case 'selfchargeable':
		case 'cursed+rechargeable':
		case 'cursed+selfchargeable':
			if (MIqty >= charges) {
				MIqtyObj.set('current',(MIqty-charges));
				MIqtyObj.set('max',(MIqty-charges));
			}
			break;
			
		case 'recharging':
		case 'cursed+recharging':
			if (MIqty >= charges) {
				MIqtyObj.set('current',(MIqty-charges));
			}
			break;
				
		case 'uncharged':
		case 'cursed':
		default:
			let muSpellsList = attrLookup( charCS, [fields.ItemMUspellsList[0]+MIname, fields.ItemMUspellsList[1]] ),
				prSpellsList = attrLookup( charCS, [fields.ItemPRspellsList[0]+MIname, fields.ItemPRspellsList[1]] );
			if (!_.isUndefined(muSpellsList) && muSpellsList.trim().length) break;
			if (!_.isUndefined(prSpellsList) && prSpellsList.trim().length) break;
			if (_.isUndefined(muSpellsList) && _.isUndefined(prSpellsList)) break;
			addTableRow( MItables, MIrowref );	// Blanks this row of the table
			break;
		}
		
		if (isSilent) {
			return;
		}

		var content = '&{template:'+fields.defaultTemplate+'}{{name='+charName+' is using '+MIname+'}}'
					+ '{{desc=To see the effects, select '+charName+'\'s token and press ['+MIname+'](~'+MIdb.dB+'|'+MIname+')}}';
		sendFeedback( content );
		return;
	}
	
	/*
	 * Handle the selection of a spell to store in
	 * a Magic Item, and the slot in the MI spellbook
	 * to store it in.
	 */
	 
	var handleSelectMIspell = function( args ) {
		
		var tokenID = args[1],
			charCS = getCharacter(tokenID);

		if (!charCS) {
			sendDebug('handleViewUseMI: invalid tokenID parameter');
			sendError('Internal MagicMaster error');
			return;
		}
		var isMU = args[0].toUpperCase().includes('MU'),
			isMI = args[0].toUpperCase().includes('MI'),
			spellButton = args[(isMI ? 5 : 2)],
			spellRow = args[(isMI ? 6 : 3)],
			spellCol = args[(isMI ? 7 : 4)],
			MIbutton = args[(isMI ? 2 : 5)],
			MIrow = args[(isMI ? 3 : 6)],
			MIcol = args[(isMI ? 4 : 7)],
			spellName = '',
			col,
			content = '';
			
		if (spellButton >= 0) {
			spellName = attrLookup( charCS, fields.Spells_name, fields.Spells_table, spellRow, spellCol ) || '-';
			content += 'Selected '+spellName+' to store';
			if (MIbutton >= 0) {
				content += ' and ';
			}
		}
		if (MIbutton >= 0) {
			col = (fields.SpellsFirstColNum || MIcol != 1) ? MIcol : '';
			spellName = attrLookup( charCS, fields.Spells_name, fields.Spells_table, MIrow, MIcol ) || '-';
			content += 'Selected to store in the slot for '+spellName;
		}
		makeStoreMIspell( args, content );
		return;
	}
	
	/*
	 * Handle selecting a magic item power
	 */
	 
	var handleSelectMIpower = function( args, isUse ) {
	    
		var tokenID = args[1],
			charCS = getCharacter(tokenID);
		if (!charCS) {
			sendDebug('handleSelectMIpower: invalid token_id');
			sendError('Incorrect MagicMaster syntax');
			return;
		}
		
		var powerName = args[2] || '',
			itemName = args[3] || '',
			castLevel = args[4] || 1,
			magicItem = abilityLookup( fields.MagicItemDB, itemName ),
			MIlibrary = charCS,
			powerRow = attrLookup( MIlibrary, [fields.MIpowerPrefix[0]+powerName, 'current'] ),
			powerCol = attrLookup( MIlibrary, [fields.MIpowerPrefix[0]+powerName, 'max'] ),
			power = attrLookup( MIlibrary, fields.Spells_name, fields.Spells_table, powerRow, powerCol ) || '-',
			powerLib = abilityLookup( fields.PowersDB, power ),
			powerCount = attrLookup( MIlibrary, fields.Spells_castValue, fields.Spells_table, powerRow, powerCol ) || 0,
			content = '';
			
		if (isUse) {
			if (powerCount > 0) {
				setAttr( MIlibrary, fields.Spells_castValue, powerCount-1, fields.Spells_table, powerRow, powerCol );
			}
			content = charCS.get('name') + ' is using [' + power + '](!&#13;&#47;w gm &#37;{'+powerLib.dB+'|'+power+'}). '
					+ 'Select ' + charCS.get('name') + '\'s token before pressing to see effects.';
			sendFeedback( content );
			
		} else if (powerCount == 0) {
			content = '&{template:'+fields.defaultTemplate+'}{{name='+itemName+'\'s '+powerName+' power}}'
					+ '{{desc=You have already used all '+itemName+'\'s '+powerName+' charges for today.  '
					+ 'You need to allow '+itemName+' to have a long rest so it can regain all its powers}}'
					+ '{{desc1=[Redisplay '+itemName+'](~'+magicItem.dB+'|'+itemName+') or just do something else}}';
			sendResponse( charCS, content );
		} else {
			setAttr( charCS, fields.SpellToMem, powerLib.dB+'|'+power );
			setAttr( charCS, fields.Casting_name, itemName );
			setAttr( charCS, fields.Casting_level, castLevel );
			args = ['',tokenID,powerName,castLevel,itemName,magicItem.dB,power,powerLib.dB];
			makeUseMIpowerMenu( args );
		}
	    return;
	}
	
	/*
	 * Handle storing a spell from a characters memorised
	 * spells into a spell-storing magic item.
	 */
	 
	var handleStoreMIspell = function( args ) {
		
		var tokenID = args[1],
			charCS = getCharacter(tokenID);
			
		if (!charCS) {
			sendDebug('handleViewUseMI: invalid tokenID parameter');
			sendError('Internal MagicMaster error');
			return;
		}
		var isMU = args[0].toUpperCase().includes('MU'),
			isMI = args[0].toUpperCase().includes('MI'),
			MIbutton = args[2],
			MIrow = args[3],
			MIcol = args[4],
			spellButton = args[5],
			spellRow = args[6],
			spellCol = args[7];
			
		if (isNaN(MIbutton) || MIbutton<0 || isNaN(MIrow) || isNaN(MIcol) || isNaN(spellButton) || spellButton<0 || isNaN(spellRow) || isNaN(spellCol)) {
			sendDebug('handleViewUseMI: invalid button, row or col parameter');
			sendError('Internal MagicMaster error');
			return;
		}
			
		var	spellName = attrLookup( charCS, fields.Spells_name, fields.Spells_table, spellRow, spellCol ),
			MIspellName = attrLookup( charCS, fields.Spells_msg, fields.Spells_table, MIrow, MIcol );
			
		if (spellName.toLowerCase().replace(reIgnore,'') != MIspellName.toLowerCase().replace(reIgnore,'')) {
			sendParsedMsg( tokenID, messages.fixedSpell, getObj('graphic',tokenID).get('name')+'\'s magic item');
			makeStoreMIspell( args, 'Could not store '+spellName+' in '+getObj('graphic',tokenID).get('name')+'\'s spell storing magic item' );
			return;
		}
	
		setAttr( charCS, fields.Spells_name, spellName, fields.Spells_table, MIrow, MIcol );
		setAttr( charCS, fields.Spells_db, (isMU ? fields.MU_SpellsDB : fields.PR_SpellsDB), fields.Spells_table, MIrow, MIcol );
		setAttr( charCS, fields.Spells_speed, attrLookup( charCS, fields.Spells_speed, fields.Spells_table, spellRow, spellCol ), fields.Spells_table, MIrow, MIcol);
		setAttr( charCS, fields.Spells_castValue, 1, fields.Spells_table, MIrow, MIcol );
		setAttr( charCS, fields.Spells_castMax, 1, fields.Spells_table, MIrow, MIcol );
		setAttr( charCS, fields.Spells_storedLevel, attrLookup( charCS, fields.Casting_level ), fields.Spells_table, MIrow, MIcol);
		setAttr( charCS, fields.Spells_cost, 0, fields.Spells_table, MIrow, MIcol );
		setAttr( charCS, fields.Spells_castValue, 0, fields.Spells_table, spellRow, spellCol );
		
		args[2] = args[5] = -1;
		
		makeStoreMIspell( args, 'Stored '+spellName+' in '+getObj('graphic',tokenID).get('name')+'\'s spell storing magic item' );
		return;
	}
	
	/*
	 * Add a selected spell or power to a spell-storing item
	 */
	 
	var handleChangeSpellStore = function( args ) {
		
		var del = args[0].toUpperCase().includes('DEL'),
			tokenID = args[1],
			item = args[2],
			cmd = args[3].toUpperCase(),
			level = parseInt(args[4]) || 1,
			spell = args[5],
			castingLevel = args[6],
			maxVal = 0,
		    charCS = getCharacter(tokenID),
			isMU = cmd.includes('MU'),
			isPR = cmd.includes('PR'),
			isPower = cmd.includes('POWER'),
			storedSpellsAttr, storedLevelAttr,
			currentList, currentValues;
		
		if (isPower) {
			storedSpellsAttr = [fields.ItemPowersList[0]+item,fields.ItemPowersList[1]];
			storedLevelAttr  = [fields.ItemPowerValues[0]+item,fields.ItemPowerValues[1]];
			maxVal = castingLevel;
		} else if (isMU) {
			storedSpellsAttr = [fields.ItemMUspellsList[0]+item,fields.ItemMUspellsList[1]];
			storedLevelAttr  = [fields.ItemMUspellValues[0]+item,fields.ItemMUspellValues[1]];
		} else {
			storedSpellsAttr = [fields.ItemPRspellsList[0]+item,fields.ItemPRspellsList[1]];
			storedLevelAttr  = [fields.ItemPRspellValues[0]+item,fields.ItemPRspellValues[1]];
		};
		
		currentList = (attrLookup( charCS, storedSpellsAttr ) || '').split(',').filter(e=>!!e);
		currentValues = (attrLookup( charCS, storedLevelAttr ) || '').split(',').filter(e=>!!e);
		if (del) {
			let index = currentList.indexOf(spell);
			if (index >= 0) {
				currentList.splice(index,1);
				currentValues.splice(index,1);
			}
		} else {
			currentList.push(spell);
			currentValues.push(castingLevel+'.'+maxVal);
		}
		setAttr( charCS, storedSpellsAttr, currentList.join(',') );
		setAttr( charCS, storedLevelAttr, currentValues.join(',') );
		
		args[5] = '';
		makeSpellsMenu( args, (del ? ('Removed '+spell+' from stored '+(isPower?'powers':'spells')) : ('Added '+spell+' to stored '+(isPower?'powers':'spells'))) );
		return;
	};
	
	/**
	 * handle where somehow the player has been able to select an empty slot
	 **/

	var handlePickupNothing = function( args, pickMI, putSlot ) {
		
		var tokenID = args[1],
		    fromID = args[3],
		    toID = args[4],
		    fromRow = args[2],
		    toRow = args[5],
		    fromCS = getCharacter(fromID),
		    toCS = getCharacter(toID);
			
		if (!fromCS || !toCS){
			sendDebug('handlePickupNothing: invalid tokenID parameter');
			sendError('Internal MagicMaster error');
			return;
		}
			
		var fromName = fromCS.get('name'),
			toName = toCS.get('name'),
		    targetID = (tokenID == fromID) ? toID : fromID,
		    content = messages.nothingToPick + '{{desc1=Trying to pick up "'+pickMI+'" from '+fromName+' and putting in '+toName+'\'s "'+putSlot+'"}}'
		            + '{{desc2=[Other way round](!magic --button POPsubmit|'+tokenID+'|'+toRow+'|'+toID+'|'+fromID+'|'+fromRow+'|-1)'
		            + ' or [Pick something else](!magic --pickorput '+tokenID+'|'+targetID+')}}';
		sendParsedMsg( tokenID, content );
		return;		
	};
	
	/**
	* Handle switching to a treasure menu
	**/

	var handleTreasure = function( args, senderId ) {
		
		var tokenID = args[1],
			charCS = getCharacter( tokenID ),
			content = makeLootMenu( senderId, args );
		sendResponse( charCS, content );
		return;
	};
	
	/**
	* handle the failure of an attempt to pick pockets
	**/
	
	var handlePPfailed = function( args, senderId ) {
		
		var tokenID = args[1],
		    putID = args[3],
			targetID = args[2],
			ppRoll = parseInt(args[4],10),
			charCS = getCharacter( tokenID ),
			targetCS = getCharacter( targetID );
			
		if (!tokenID || !targetID || !charCS || !targetCS) {
			sendDebug('handlePPfailure: invalid ID argument passed');
			sendError('Invalid MagicMaster parameter');
			return;
		};
		
		if (isNaN(ppRoll)) {
			sendDebug('handlePPfailure: invalid ppRoll');
			sendError('Invalid MagicMaster parameter');
			return;
		}
		
		var	charName = charCS.get('name'),
			targetName = targetCS.get('name'),
			targetLevel,
    		content = '&{template:'+fields.defaultTemplate+'}{{name=Failed pick pocket attempt by '+charName+'}}';
			
		targetLevel = characterLevel( targetCS );
		
		if (isNaN(targetLevel)) {
		    targetLevel = 0;
		}
		
		if (ppRoll > (100-(targetLevel*3))) {
			content += '{{desc='+charName+' tried to pick '+targetName+'\'s pocket unsuccessfully and they noticed.  What will '+targetName+' do about it?}}';
			sendResponse( targetCS, content );
		} else {
			content += '{{desc='+charName+' tried to pick '+targetName+'\'s pocket, but they did not notice.}}';
			sendFeedback( content );
		};
		content = '&{template:'+fields.defaultTemplate+'}{{name='+charName+' is Picking Pockets for MIs}}'
				+ '{{desc=Oh dear! Failed! Nothing to see here... now, did anyone notice?}}';
		return content;
	};
	
	/**
	* Handle a character picking or putting away an item to/from a store
	 * args[] is the standard action|charID|fromID|toID|fromRow|toRow|qty|cost
	 * qty -1 means not yet chosen, cost -1 means not yet agreed or no cost
	**/
	
	var handlePickOrPut = function( args, senderId ) {
	
		var tokenID = args[1],
			fromID = args[3],
			toID = args[4],
			fromRowRef = args[2],
			toRowRef = args[5],
			qty = args[6],
			expenditure = args[7],
			charCS = getCharacter( tokenID ),
			fromCS = getCharacter( fromID ),
			toCS = getCharacter( toID );
		
		if (!charCS || !fromCS || !toCS) {
		    sendDebug( 'handlePickOrPut: one or more tokenIDs do not represent valid characters' );
		    sendError('Invalid MagicMaster button arguments');
		    return;
		}
		if (isNaN(fromRowRef) || fromRowRef<0 || isNaN(toRowRef) || toRowRef<0) {
			sendDebug('handlePickOrPut: invalid row or column parameter');
			sendError('Internal MagicMaster error');
			return;
		}
		
		var toMIbag = getAllTables( toCS, 'MI' )['MI'],
		    fromMIbag = getAllTables( fromCS, 'MI' )['MI'],
		    toSlotName = tableLookup( toMIbag, fields.Items_name, toRowRef, false ),
			toMIvalues = initValues( toMIbag.fieldGroup ),
			toSlotTrueName, toSlotType, toSlotQty, toSlotCharges,
		    fromSlotType = (tableLookup( fromMIbag, fields.Items_type, fromRowRef ) || '').toLowerCase(),
			MIname = tableLookup( fromMIbag, fields.Items_name, fromRowRef ),
			MItrueName = tableLookup( fromMIbag, fields.Items_trueName, fromRowRef );
		    
	    if (!_.isUndefined(toSlotName)) {
			toSlotType = tableLookup( toMIbag, fields.Items_type, toRowRef );
			toSlotTrueName = tableLookup( toMIbag, fields.Items_trueName, toRowRef );
			toSlotQty = parseInt((tableLookup( toMIbag, fields.Items_qty, toRowRef ) || 0),10);
			toSlotCharges = parseInt((tableLookup( toMIbag, fields.Items_trueQty, toRowRef ) || 0),10);
	    } else {
			toSlotName = '-';
			toSlotTrueName = toMIvalues[fields.Items_trueName[0]][fields.Items_trueName[1]];
			toSlotType = toMIvalues[fields.Items_type[0]][fields.Items_type[1]];
	    }

		var sameMI = (MItrueName.toLowerCase() == toSlotTrueName.toLowerCase()) && (toSlotType == fromSlotType),
			toSlotEmpty = toSlotName == '-';

		if (toSlotType && toSlotType.includes('cursed') && !sameMI && !toSlotEmpty) {
			sendParsedMsg( tokenID, messages.cursedSlot + '{{desc1=[Select another slot](!magic --button '+BT.POP_PICK+'|'+tokenID+'|'+fromRowRef+'|'+fromID+'|'+toID+'|-1)}}' );
			return;
		}
			
		if (fromSlotType && fromSlotType.includes('cursed') && fromID == tokenID) {
			sendParsedMsg( tokenID, messages.cursedItem + '{{desc1=[Select another item](!magic --button '+BT.POP_PICK+'|'+tokenID+'|-1|'+fromID+'|'+toID+'|'+toRowRef+')}}' );
			return;
		}
			
		var	MIqty = parseInt( (tableLookup( fromMIbag, fields.Items_qty, fromRowRef ) || 0), 10),
			MItrueQty = parseInt((tableLookup( fromMIbag, fields.Items_trueQty, fromRowRef) || 0),10),
			MIspeed = tableLookup( fromMIbag, fields.Items_speed, fromRowRef ),
			MItrueSpeed = tableLookup( fromMIbag, fields.Items_trueSpeed, fromRowRef ),
		    MItype = tableLookup( fromMIbag, fields.Items_type, fromRowRef ),
		    MIcost  = parseFloat( (tableLookup( fromMIbag, fields.Items_cost, fromRowRef ) || 0), 10),
			rechargeable = ['recharging','rechargeable','cursed-recharging','cursed-charged','cursed-rechargeable','selfchargeable','cursed+selfchargeable'],
			recharging = ['recharging','cursed-recharging'],
			finalQty, finalCharges, pickQty, charges, content;
			
		MIqty = isNaN(MIqty) ? 0 : MIqty;
		MIcost = isNaN(MIcost) ? 0 : MIcost;
	    toSlotQty = isNaN(toSlotQty) ? 0 : toSlotQty;
	    toSlotCharges = isNaN(toSlotCharges) ? 0 : toSlotCharges;
	    	
		switch (MIqty) {
		case 0:
			if (rechargeable.includes(fromSlotType)) {
				qty = pickQty = 0;
				charges = MItrueQty;
			} else {
				handlePickupNothing( args, MIname, toSlotName );
				return;
			};
			break;
		
		case 1:
			qty = 1;
			pickQty = charges = MItrueQty;
			MIqty = 0;
			break;
			
		default:
			if (rechargeable.includes(fromSlotType)) {
				qty = MIqty;
				pickQty = (recharging.includes(fromSlotType)) ? MIqty : MItrueQty;
				charges = MItrueQty;
				MIqty = 0;
			} else if (qty < 0) {
				howMany( args, MIname, fromSlotType, MIqty );
				return;
			} else if (qty >= MIqty) {
				qty = MIqty;
				pickQty = charges = MItrueQty;
				MIqty = 0;
			} else if (qty == 0) {
				return;
			} else {
				pickQty = charges = qty * Math.ceil(MItrueQty/MIqty);
			}
			break;
		}
		finalQty = pickQty;
		finalCharges = charges;
		
		if (toSlotName.toLowerCase() == MIname.toLowerCase()) {
		    finalQty = (parseInt(finalQty)||0) + (parseInt(toSlotQty)||0);
			finalCharges = (parseInt(finalCharges)||0) + (parseInt(toSlotCharges)||0);
		} else if (toSlotType != '' && (toSlotName != '-')) {
			content = messages.slotFull;
			content += '{{[Choose another slot](!magic --pickorput|'+tokenID+'|'+fromRowRef+'|'+fromID+'|'+toID+'|-1)}}';
			sendParsedMsg( tokenID, content );
			return;
		}
		
		if (!_.isUndefined(expenditure)) {
		    expenditure = parseFloat(expenditure);
		}
		
		if (_.isUndefined(expenditure) || isNaN(expenditure) || expenditure < 0) {
			expenditure = MIcost * qty;
			if (expenditure && charCS.id != fromCS.id) {
				setAttr( charCS, ['expenditure', 'current'], expenditure );
				content = '&{template:'+fields.defaultTemplate+'}{{name=Pay for Goods}}'
						+ '{{desc=The goods you have selected from '+fromCS.get('name')+' have a total cost of '+showCost(expenditure)+'.  Are you happy to pay this?}}'
						+ '{{desc1=[Buy goods](!magic --button POPbuy|'+tokenID+'|'+fromRowRef+'|'+fromID+'|'+toID+'|'+toRowRef+'|'+qty+'|'+expenditure+') or'
						+ '[Choose something else](!magic --pickorput '+tokenID+'|'+fromID+'|'+toID+')}}';
				sendResponse( charCS, content );
				return;
			}
		}
		
        if (expenditure != 0) {
    		spendMoney( toCS, expenditure, fromCS );
        }
		
		toMIvalues[fields.Items_name[0]][fields.Items_name[1]] = MIname;
		toMIvalues[fields.Items_trueName[0]][fields.Items_trueName[1]] = MItrueName;
		toMIvalues[fields.Items_qty[0]][fields.Items_qty[1]] = finalQty;
		toMIvalues[fields.Items_trueQty[0]][fields.Items_trueQty[1]] = finalCharges;
		toMIvalues[fields.Items_speed[0]][fields.Items_speed[1]] = MIspeed;
		toMIvalues[fields.Items_trueSpeed[0]][fields.Items_trueSpeed[1]] = MItrueSpeed;
		toMIvalues[fields.Items_cost[0]][fields.Items_cost[1]] = 0;
		toMIvalues[fields.Items_type[0]][fields.Items_type[1]] = MItype;
		toMIbag = addTableRow( toMIbag, toRowRef, toMIvalues );
		
		let containerType = (parseInt(attrLookup(toCS, fields.ItemContainerType) || 0) || 0);
		containerType = (containerType == 0 ? 1 : (containerType == 2 ? 3 : containerType));
		setAttr( toCS, fields.ItemContainerType, containerType );
		
		moveMIspells( fromCS, toCS, MIname );
		
		if (MIqty == 0) {
			addTableRow( fromMIbag, fromRowRef );	// Blanks this row of the table
		} else {
			fromMIbag = tableSet( fromMIbag, fields.Items_trueQty, fromRowRef, (MItrueQty - charges) );
			fromMIbag = tableSet( fromMIbag, fields.Items_qty, fromRowRef, (MIqty - qty) );
		};
		
		// RED: v2.037 check the updated MI Bag for effects on the character's AC
		content = fields.attackMaster + ' --checkac ' + tokenID + '|silent||' + senderId;
   		sendMagicAPI( content, senderId );

		pickupMessage( args, MIname, MItype, qty, (MItrueQty - qty), finalCharges );
		return;
	};
	
	/*
	 * Handle selecting a magic item to store in the
	 * displayed magic item bag.
	 */
 
	var handleSelectMI = function( args, GMonly, senderId ) {
		
		var tokenID = args[1],
			MIrowref = args[2],
			MItoStore = args[3],
			charCS = getCharacter(tokenID),
			itemObj = abilityLookup( fields.MagicItemDB, MItoStore );
			
		if (!charCS) {
			sendDebug('handleSelectMI: invalid tokenID passed');
			sendError('Internal miMaster error');
			return;
		}
		if (!MItoStore || MItoStore.length == 0) {
			sendDebug('handleSelectMI: invalid Magic Item passed');
			sendError('Internal miMaster error');
			return;
		}
		
		setAttr( charCS, fields.ItemCastingTime, ((itemObj.ct && itemObj.ct.length) ? itemObj.ct[0].get('current') : 0) );
		setAttr( charCS, fields.ItemSelected, 1 );
		
		if (GMonly) {
			makeGMonlyMImenu( args );
		} else {
			makeEditBagMenu( args, senderId, 'Selected '+MItoStore+' to store' );
		}
		return;
	};

	/*
	 * Handle selecting a slot in the displayed MI bag
	 */
	 
	var handleSelectSlot = function( args, GMonly, senderId ) {

		var tokenID = args[1],
			MIrowref = args[2],
			MIchosen = args[3],
			charCS = getCharacter(tokenID);

		if (!charCS) {
			sendDebug('handleSelectSlot: invalid tokenID passed');
			sendError('Internal miMaster error');
			return;
		}
		if (!MIrowref || isNaN(MIrowref) || MIrowref<0) {
			sendDebug('handleSelectSlot: invalid MI parameter passed');
			sendError('Internal miMaster error');
			return;
		}
		
		var slotItem,
		    MagicItems = getAllTables( charCS, 'MI' )['MI'];
		    
		if (MIrowref >= MagicItems.sortKeys.length) {
    		addTableRow( MagicItems, MIrowref, null, 'Items_' );
		}

		setAttr( charCS, fields.ItemRowRef, MIrowref );
		setAttr( charCS, fields.Expenditure, (attrLookup( charCS, fields.Items_cost, fields.Items_table, MIrowref ) || 0 ) );
		setAttr( charCS, fields.ItemSelected, 1 );
		
		if (GMonly) {
			makeGMonlyMImenu( args );
		} else {
			makeEditBagMenu( args, senderId, 'Selected slot currently containing '+slotItem );
		}
		return;			
	}
	
	/*
	 * Handle storing an MI in a Magic Item bag.
	 * A flag parameter determines if this is a GM-only action
	 */
	 
	var handleStoreMI = function( args, GMonly, senderId ) {
		
		var tokenID = args[1],
			MIrowref = args[2],
			MIchosen = args[3],
			MIqty = args[4],
			charCS = getCharacter( tokenID );
			
		if (!charCS) {
			sendDebug('handleStoreMI: invalid tokenID passed');
			sendError('Internal miMaster error');
			return;
		}
		
		if (isNaN(MIrowref) || MIrowref<0) {
			sendDebug('handleStoreMI: invalid row reference passed');
			sendError('Internal miMaster error');
			return;
		}
				
		if (MIqty.length == 0 || MIqty.length > 5) {
			MIqty = 0;
		} else {
			try {
				MIqty = eval(MIqty) || 0;
			} catch {
				MIqty = 0;
			}
		}
		var MItables = getAllTables( charCS, 'MI' )['MI'],
			slotName = tableLookup( MItables, fields.Items_name, MIrowref ),
			slotType = tableLookup( MItables, fields.Items_type, MIrowref ),
			containerNo = attrLookup( charCS, fields.ItemContainerType ),
			magicItem = abilityLookup( fields.MagicItemDB, MIchosen ),
			values = MItables.values;
		
		if (!magicItem.ct || _.isUndefined(magicItem.ct[0])) {
			sendDebug('handleStoreMI: selected magic item speed/type not defined');
			sendError('Selected Magic Item not fully defined');
			return;
		}
		
		var MIspeed = magicItem.ct[0].get('current'),
		    MItype = magicItem.ct[0].get('max'),
		    midbCS;
			
		if (!GMonly && slotType.toLowerCase().includes('cursed')) {
			sendParsedMsg( tokenID, messages.cursedSlot + '{{desc1=[Return to menu](!magic --edit-mi '+tokenID+')}}' );
			return;
		}

		values[fields.Items_name[0]][fields.Items_name[1]] = MIchosen;
		values[fields.Items_trueName[0]][fields.Items_trueName[1]] = MIchosen;
		values[fields.Items_speed[0]][fields.Items_speed[1]] = MIspeed;
		values[fields.Items_trueSpeed[0]][fields.Items_trueSpeed[1]] = MIspeed;
		values[fields.Items_qty[0]][fields.Items_qty[1]] = MIqty;
		values[fields.Items_trueQty[0]][fields.Items_trueQty[1]] = MIqty;
		values[fields.Items_cost[0]][fields.Items_cost[1]] = 0;
		values[fields.Items_type[0]][fields.Items_type[1]] = MItype;
		
		MItables = addTableRow( MItables, MIrowref, values );

		if (!(containerNo % 2)) {
			setAttr( charCS, fields.ItemContainerType, (isNaN(containerNo) ? 1 : containerNo+1) );
		}
		
		midbCS = findCharacter(magicItem.dB);
		if (midbCS) {
			moveMIspells( midbCS, charCS, MIchosen );
		}
		
		// RED: v2.037 calling attackMaster checkAC command to see if 
		//             there has been any impact on AC.
   		sendMagicAPI( (fields.attackMaster + ' --checkac ' + tokenID + '|Silent||' + senderId), senderId );

		args = ['',tokenID,-1,''];
		
		if (GMonly) {
			makeGMonlyMImenu( args, MIchosen + ' has been stored in slot '+MIrowref );
		} else {
			makeEditBagMenu( args, senderId, MIchosen+' has overwritten '+slotName );
		}
		return;
	}
	
	/*
	 * Handle changing the displayed magic item name to that selected
	 * without changing what it actually is.  Only available to GM
	 */
 
	var handleHideMI = function( args ) {
		
		var tokenID = args[1],
			MIrowref = args[2],
			MIchosen = args[3],
			charCS = getCharacter(tokenID);
			
		if (!charCS) {
			sendDebug('handleHideMI: invalid tokenID passed');
			sendError('Internal miMaster error');
			return;
		}
		if (isNaN(MIrowref) || MIrowref<0) {
			sendDebug('handleHideMI: invalid row reference passed');
			sendError('Internal miMaster error');
			return;
		}
		
		setAttr( charCS, fields.Items_name, MIchosen, fields.Items_table, MIrowref );
		makeGMonlyMImenu( ['',tokenID,-1,''], 'Slot '+MIrowref+' is now displayed as '+MIchosen );
		return;
	}
	
	/*
	 * Handle removing an MI from a Magic Item bag.
	 * Use a flag to check if this is being done by the GM.
	 */
	 
	var handleRemoveMI = function( args, GMonly, senderId ) {
		
		var tokenID = args[1],
			MIrowref = args[2],
			MIchosen = args[3],
			charCS = getCharacter(tokenID);
			
		if (!charCS) {
			sendDebug('handleRemoveMI: invalid tokenID passed');
			sendError('Internal miMaster error');
			return;
		}
		if (isNaN(MIrowref) || MIrowref<0) {
			sendDebug('handleRemoveMI: invalid row reference passed');
			sendError('Internal miMaster error');
			return;
		}
		
		var slotType = attrLookup( charCS, fields.Items_type, fields.Items_table, MIrowref ) || '';
		if (!GMonly && slotType.toLowerCase().includes('cursed')) {
			sendParsedMsg( tokenID, messages.cursedSlot + '{{desc1=[Return to menu](!magic --edit-mi '+tokenID+')}}' );
			return;
		}
		addTableRow( getAllTables( charCS, 'MI' )['MI'], MIrowref );	// Blanks this table row
		moveMIspells( charCS, undefined, MIchosen );
		
		// RED: v2.037 calling attackMaster checkAC command to see if 
		//             there has been any impact on AC.
   		sendMagicAPI( (fields.attackMaster + ' --checkac ' + tokenID + '|Silent||' + senderId), senderId );

		args[2] = -1;
		args[3] = '';
		if (GMonly) {
			makeGMonlyMImenu( args, 'Slot '+MIrowref+' has been blanked' );
		} else {
			makeEditBagMenu( args, senderId, 'Slot '+MIrowref+' has been removed' );
		}
		return;
	};
	
	/*
	 * Handle changing the type of a Magic Item.  Only available to the GM.
	 */
	 
	var handleChangeMItype = function( args ) {
		
		var tokenID = args[1],
			MIrowref = args[2],
			newType = args[4],
			charCS = getCharacter(tokenID);
		
		if (!charCS) {
			sendDebug('handleChangeMItype: invalid tokenID passed');
			sendError('Internal miMaster error');
			return;
		}
		if (isNaN(MIrowref) || MIrowref<0) {
			sendDebug('handleChangeMI: invalid row reference passed');
			sendError('Internal miMaster error');
			return;
		}
		
		var MIname = attrLookup( charCS, fields.Items_name, fields.Items_table, MIrowref ) || '-';

		setAttr( charCS, fields.Items_type, newType, fields.Items_table, MIrowref );
		makeGMonlyMImenu( ['',tokenID,-1,''], MIname+' has been changed to be type '+newType );
		return;
	}
	
	/*
	 * Handle changing the number of charges.  A parameter determines if
	 * the displayed charges, the actual charges or both are set.
	 */
	 
	var handleChangeMIcharges = function( args, changeType ) {
		
		var tokenID = args[1],
			MIrowref = args[2],
			MInewQty = args[4],
			charCS = getCharacter(tokenID);
			
		if (!charCS) {
			sendDebug('handleChangeMIcharges: invalid tokenID passed');
			sendError('Internal miMaster error');
			return;
		}
		if (isNaN(MIrowref) || MIrowref<0) {
			sendDebug('handleChangeMIcharges: invalid row reference passed');
			sendError('Internal miMaster error');
			return;
		}
		
		var MIname = attrLookup( charCS, fields.Items_name, fields.Items_table, MIrowref ) || '-';

		if (changeType == 'Displayed' || changeType == 'Both') {
			setAttr( charCS, [fields.Items_qty[0], 'current'], MInewQty, fields.Items_table, MIrowref );
		}
		if (changeType == 'Actual' || changeType == 'Both') {
			setAttr( charCS, [fields.Items_qty[0], 'max'], MInewQty, fields.Items_table, MIrowref );
		}
		
		makeGMonlyMImenu( ['',tokenID,-1,''], MIname+'\'s '+changeType+' quantity has been changed to '+MInewQty );
		return;
	}
	
	/*
	 * Handle resetting a single selected MI Bag slot, so that the 
	 * actual name and qty are displayed.
	 */
	 
	var handleResetSingleMI = function( args ) {
		
		var tokenID = args[1],
			MIrowref = args[2],
			charCS = getCharacter(tokenID);
			
		if (!charCS) {
			sendDebug('handleResetSingleMI: invalid tokenID passed');
			sendError('Internal miMaster error');
			return;
		}
		if (isNaN(MIrowref) || MIrowref<0) {
			sendDebug('handleResetSingleMI: invalid row reference passed');
			sendError('Internal miMaster error');
			return;
		}
		
		var MIname = attrLookup( charCS, [fields.Items_name[0], 'max'], fields.Items_table, MIrowref ) || '-';

		setAttr( charCS, [fields.Items_name[0], 'current'], MIname, fields.Items_table, MIrowref );
		setAttr( charCS, [fields.Items_qty[0], 'current'], attrLookup( charCS, [fields.Items_qty[0], 'max'], fields.Items_table, MIrowref ), fields.Items_table, MIrowref );
		setAttr( charCS, [fields.Items_speed[0], 'current'], (attrLookup( charCS, [fields.Items_speed[0], 'max'], fields.Items_table, MIrowref ) || 0), fields.Items_table, MIrowref );
		
		makeGMonlyMImenu( ['',tokenID,-1,''], MIname+' has been reset' );
		return;
	}
	
	/*
	 * Handle change the cost of an MI, to support shops and Inns
	 */
	 
	var handleSetMIcost = function( args ) {
		
		var tokenID = args[1],
			MIrowref = args[2],
			newMIcost = args[4],
			charCS = getCharacter(tokenID);

		if (!charCS) {
			sendDebug('handleSetMIcost: invalid tokenID passed');
			sendError('Internal miMaster error');
			return;
		}
		if (isNaN(MIrowref) || MIrowref<0) {
			sendDebug('handleSetMIcost: invalid row reference passed');
			sendError('Internal miMaster error');
			return;
		}
		
		var MIname = attrLookup( charCS, [fields.Items_name[0], 'max'], fields.Items_table, MIrowref ) || '-';

		setAttr( charCS, fields.Items_cost, newMIcost, fields.Items_table, MIrowref );
		
		makeGMonlyMImenu( ['',tokenID,-1,''], MIname+' now costs '+newMIcost+'GP' );
		return;
	}
	
	/*
	 * Handle adding a row to the MIbag.  This is usually called as a 
	 * command in front of a command string that will call a follow-on,
	 * meaning a shift() creates the follow-on command call to doButton()
	 */
	 
	var handleAddMIrow = function( args, senderID ) {
		
		args.shift();
		
		var tokenID = args[1],
			index = args[2],
			charCS = getCharacter(tokenID);

		addTableRow( getAllTables(charCS,'MI')['MI'], index, null, 'Items_' );
		
		doButton( args, senderID );
		return;
	}
			
	/*
	 * Handle blanking the selected Magic Item bag.
	 */
	 
	var handleBlankMIBag = function( args ) {
		
		var tokenID = args[1],
			charCS = getCharacter(tokenID);
			
		if (!charCS) {
			sendDebug('handleDeleteTreasure: invalid tokenID passed');
			sendError('Internal miMaster error');
			return;
		}
		
		var content = '&{template:'+fields.defaultTemplate+'}{{name=TOTALLY BLANK THE MI BAG}}'
					+ '{{desc=Are you REALLY sure you want to delete the complete MI Bag with all its contents?}}'
					+ '{{desc1=[Yes](!magic --button GM-ConfirmedBlank|'+tokenID+'|-1|) or [No](!magic --button GM-NoBlank|'+tokenID+'|-1|)}}';
					
		sendFeedback(content);
		return;
	}
	
	/*
	 * The GM confirmed they want to Blank the MI Bag
	 */
	 
	var handleConfirmedBlank = function( args ) {
		
		var tokenID = args[1],
			charCS = getCharacter(tokenID);
			
		if (!charCS) {
			sendDebug('handleConfirmedBlank: invalid tokenID passed');
			sendError('Internal MagicMaster error');
			return;
		}
		
		var Items = getAllTables( charCS, 'MI' )['MI'],
			miNameObj, miSpeedObj, miQtyObj, miCostObj, miTypeObj;
		for (let i=fields.Items_table[1]; i<fields.MIRows; i++) {
			if (_.isUndefined(tableLookup( Items, fields.Items_name, i, false, true ))) break;
			addTableRow( Items, i );
		}
		makeGMonlyMImenu( args, 'Magic Item Bag has been blanked' );
		return;
	}
	
	/*
	 * Handle setting the type of the container
	 * 0: Empty Inanimate Object, just reports nothing to be found
	 * 1: Inanimate object that contains stuff, so can be easily looted
	 * 2: Sentient Creature without anything, but needs Pick Pocket roll or might notice
	 * 3: Sentient Creature with stuff, so a successful Pick Pocket allows looting
	 * 4: A trapped container, with the trap specified in an ability macro called Trap
	 */
	 
	var handleSetContainerType = function( args ) {
		
		var tokenID = args[1],
			tokenType = args[4],
			charCS = getCharacter(tokenID);
			
		if (!charCS) {
			sendDebug('handleSetContainerType: invalid tokenID passed');
			sendError('Internal MagicMaster error');
			return;
		}
			
		setAttr( charCS, fields.ItemContainerType, tokenType );
		makeGMonlyMImenu( args, 'Container type set' );
		return;
	}
	
	/*
	 * Handle setting the size of a container
	 */
	 
	var handleSetContainerSize = function( args ) {
		
		var tokenID = args[1],
			tokenSize = args[4],
			charCS = getCharacter(tokenID);
			
		if (!charCS) {
			sendDebug('handleSetContainerSize: invalid tokenID passed');
			sendError('Internal MagicMaster error');
			return;
		}
			
		setAttr( charCS, fields.ItemContainerSize, tokenSize );
		makeGMonlyMImenu( args, 'Container size set to '+tokenSize );
		return;
		
	}
	
	/*
	 * Handle adding treasure narrative (not actual Gold) to a Character Sheet
	 * Only available to the GM.
	 */
	 
	var handleAddTreasure = function( args ) {
		
		var tokenID = args[1],
			newTitle = args[2],
			newTreasure = args[3],
			charCS = getCharacter(tokenID);
			
		if (!charCS) {
			sendDebug('handleAddTreasure: invalid tokenID passed');
			sendError('Internal miMaster error');
			return;
		}
		
		var curTreasure = attrLookup( charCS, fields.Money_treasure ) || '';
		
		setAttr( charCS, fields.Money_treasure, (curTreasure+'{{'+newTitle+'='+newTreasure+'}}') );
		makeEditTreasureMenu( args, 'Treasure added' );
		return;
	}
	
	/*
	 * Handle editing the current treasure text
	 */
	 
	var handleEditTreasure = function( args ) {
		
		var tokenID = args[1],
			charCS = getCharacter(tokenID);
			
		if (!charCS) {
			sendDebug('handleEditTreasure: invalid tokenID passed');
			sendError('Internal miMaster error');
			return;
		}
		
		var curTreasure = attrLookup( charCS, fields.Money_treasure ) || '',
			content = '&{template:'+fields.defaultTemplate+'}{{name=Editing Treasure for '+charCS.get('name')+'}}{{desc=Select all the text below, copy it (using Ctrl-C) and paste it into the Chat Edit box below (using Ctrl-V).  Then edit the elements **within the {{...} } only** before hitting *Return* to set the new value.}}\n'
					+ '/w gm !setattr --fb-from MI System --fb-header Editing treasure --replace --name '+charCS.get('name')+' --otherval|'+curTreasure;
					
		sendFeedback(content);
		return;
	}
	
	/*
	 * Handle deleting the current treasure.  This does not
	 * affect the coinage values, only the treasure text
	 * description/journal
	 */
	 
	var handleDeleteTreasure = function( args ) {
		
		var tokenID = args[1],
			charCS = getCharacter(tokenID);

		if (!charCS) {
			sendDebug('handleDeleteTreasure: invalid tokenID passed');
			sendError('Internal miMaster error');
			return;
		}
		
		var curTreasure = attrLookup( charCS, fields.Money_treasure ) || '',
			content = '&{template:'+fields.defaultTemplate+'}{{name=Current Treasure to Delete}}'+curTreasure+'{{desc=Are you sure you want to delete this?}}'
					+ '{{desc1=[Yes](!magic --button GM-DelTreasure|'+tokenID+') or [No](!magic --button GM-NodelTreasure|'+tokenID+')}}';
					
		sendFeedback(content);
		return;
	}
	
	/*
	 * Handle a confirmed deletion of the treasure text
	 * description/journal
	 */
	 
	var handleConfirmedDelTreasure = function( args ) {
		 
		var tokenID = args[1],
			charCS = getCharacter(tokenID);
			
		setAttr( charCS, fields.Money_treasure, '' );
		makeEditTreasureMenu( args, 'Treasure text deleted' );
		return;
	}
	
	/*
	 * Handle a [No] button being pressed
	 */
	 
	var handleNo = function( args ) {
		
		var noType = args[0],
			tokenID = args[1],
			charCS = getCharacter(tokenID);

		switch (noType) {

		case 'GM-NodelTreasure':
		
			makeEditTreasureMenu(args,'OK, Treasure not deleted');
			break;
			
		case 'GM-NoBlank':
		
			makeGMonlyMImenu(args,'OK, Magic Item Bag not blanked');
			break;
			
		default:
			break;
		}
		
		return;	
			
	}
	
// ------------------------------------------------------------- Command Action Functions ---------------------------------------------

	/**
	 * Show help message
	 */ 

	var showHelp = function() {
		var content = 
			'<div style="background-color: #FFF; border: 2px solid #000; box-shadow: rgba(0,0,0,0.4) 3px 3px; border-radius: 0.5em; margin-left: 2px; margin-right: 2px; padding-top: 5px; padding-bottom: 5px;">'
				+ '<div style="font-weight: bold; text-align: center; border-bottom: 2px solid black;">'
					+ '<span style="font-weight: bold; font-size: 125%">MagicMaster v'+version+'</span>'
				+ '</div>'
				+ '<div style="padding-left: 5px; padding-right: 5px; overflow: hidden;">'
					+ '<div style="font-weight: bold;">!magic --help</div>'
					+ '<li style="padding-left: 10px;">Display this message</li><br>'
					+ '<div style="font-weight: bold;">!magic --spellmenu [token_id]|[MU/PR/POWER]</div>'
					+ '<li style="padding-left: 10px;">Display menu of spell or power actions.  If type not specified, Player is asked which type</li><br>'
					+ '<div style="font-weight: bold;">!magic --mem-spell (MU/PR/POWER)|[token_id]</div>'
					+ '<li style="padding-left: 10px;">Display menu to memorise new spells from spellbook. Type must be specified</li><br>'
					+ '<div style="font-weight: bold;">!magic --view-spell (MU/PR/POWER)|[token_id]</div>'
					+ '<li style="padding-left: 10px;">Display memorised spells and allow viewing specs. Type must be specified</li><br>'
					+ '<div style="font-weight: bold;">!magic --cast-spell (MU/PR/POWER/MI)|[token_id]|[cast-level]|[cast-name]</div>'
					+ '<li style="padding-left: 10px;">Cast a memorised spell. Type must be specified. Optional level and name default to caster.</li><br>'
					+ '<div style="font-weight: bold;">!magic --cast-again (MU/PR/POWER)|[token_id]|[spell-name]</div>'
					+ '<li style="padding-left: 10px;">Cast a spell again without using more charges. Type must be specified. Optional name of spell to cast.</li><br>'
					+ '<div style="font-weight: bold;">!magic --mimenu [token_id]</div>'
					+ '<li style="padding-left: 10px;">Display a menu of Magic Item actions</li><br>'
					+ '<div style="font-weight: bold;">!magic --edit-mi [token_id]</div>'
					+ '<li style="padding-left: 10px;">Edit the contents of the character\'s Magic Item bag</li><br>'
					+ '<div style="font-weight: bold;">!magic --gm-edit-mi [token_id]</div>'
					+ '<li style="padding-left: 10px;">DM/GM version of edit-mi command allows changes to hidden and cursed items</li><br>'
					+ '<div style="font-weight: bold;">!magic --view-mi [token_id]</div>'
					+ '<li style="padding-left: 10px;">View the contents of character\'s Magic Item bag</li><br>'
					+ '<div style="font-weight: bold;">!magic --use-mi [token_id]</div>'
					+ '<li style="padding-left: 10px;">Use a Magic Item from the displayed contents of the Magic Item bag</li><br>'
					+ '<div style="font-weight: bold;">--mi-charges token_id|[+/-]value|[mi_name]|[maximum]</div>'
					+ '<li style="padding-left: 10px;">Change the number of charges a "mi-name" has (defaults to last item used). -value deducts current charges. +value adds max charges up to maximum. value sets max charges</li><br>'
					+ '<div style="font-weight: bold;">!magic --mi-power|token_id|power-name|mi-name|[level]</div>'
					+ '<li style="padding-left: 10px;">Casts the named power from the named magic item at the specified level (defaults to caster level).</li><br>'
					+ '<div style="font-weight: bold;">!magic --mem-spell (MI-MU/MI-PR)|[token_id]|[mi-name]</div>'
					+ '<li style="padding-left: 10px;">Cast a MU or PR spell into a spell-storing magic item from the character\'s memorised spells.</li><br>'
					+ '<div style="font-weight: bold;">!magic --view-spell MI|[token_id]|[casting_level]|[casting_name]|(not-used)|[mi-name]</div>'
					+ '<li style="padding-left: 10px;">View a MU or PR spell in a list from a spell-storing magic item</li><br>'
					+ '<div style="font-weight: bold;">!magic --cast-spell MI|[token_id]|[casting_level]|[casting_name]|[CHARGED]|[mi-name]</div>'
					+ '<li style="padding-left: 10px;">Cast a spell from a spell-storing magic item, with specified name (defaults to caster)</li><br>'
					+ '<div style="font-weight: bold;">!magic --touch token_id|effect-name|duration|[+/-]increment|[message]|[marker]</div>'
					+ '<li style="padding-left: 10px;">Sets up the token ready for an “Attack Roll” to deliver touch magic that requires an attack</li><br>'
					+ '<div style="font-weight: bold;">!magic --rest [token_id]|[SHORT/LONG]|[MU/PR/MU-PR/POWER/MI/MI-POWER]|[timescale]</div>'
					+ '<li style="padding-left: 10px;">Short of Long rest, for one or all magic. Long rest only if optional timescale or character sheet attribute Timescale = 1 or more</li><br>'
					+ '<div style="font-weight: bold;">!magic --search token_id|pick_id|put_id</div>'
					+ '<li style="padding-left: 10px;">Search a container to pick items from or put items into.</li><br>'
					+ '<div style="font-weight: bold;">!magic --pickorput token_id|pick_id|put_id|[SHORT/LONG]</div>'
					+ '<li style="padding-left: 10px;">Pick up items from a container, or put them in a container without the need to search. Optionally use a short or long (verbose) menu (default is last type used).</li><br>'
					+ '<div style="font-weight: bold;">!magic --lightsources [token_id]<br>'
													+ '!magic --changelight token_id|(NONE/WEAPON/TORCH/HOODED/CONTLIGHT/BULLSEYE/BEACON)</div>'
					+ '<li style="padding-left: 10px;">Show a menu for light sources the character can use.  **Only works with Roll20 Dynamic Lighting**</li><br>'
					+ '<div style="font-weight: bold;">!magic --light token_id|(NONE/WEAPON/TORCH/HOODED/CONTLIGHT/BULLSEYE/BEACON)<br>'
					+ '<li style="padding-left: 10px;">Change character\'s light source to type specified.  *Only works with Roll20 Dynamic Lighting**</li><br>'
				+ '</div>'
   			+ '</div>'; 

		sendFeedback(content); 
	}; 
	
	/*
	 * Handle casting a spell
	 */
	 
	var doCastSpell = function( args, selected ) {
		
		if (!args) return;
		if (args[0] && !args[1] && selected && selected.length) {
			args[1] = selected[0]._id;
		} else if (args.length < 2) {
			sendDebug('doCastSpell: invalid arguments, missing caster type or token_id');
			sendError('Incorrect MagicMaster syntax');
			return;
		}
		
		var chargedItem = (!!args[4] && args[4].toLowerCase()=='charged');

		args = setCaster( args, messages.castSpellClass );
		if (!args) {
			return;
		}

		args[4] = args[3] = args[2] = -1;
		args[5] = chargedItem;
		
		makeCastSpellMenu( args );
		return;		
	}
	
	/*
	 * Use another charge of the same spell/power/MI
	 * if there are any charges left
	 */
	 
	var doCastAgain = function( args ) {
		
		if (!args) return;
		
		if (args.length < 2) {
			sendDebug('doCastAgain: invalid arguments, missing caster type or token_id');
			sendError('Incorrect MagicMaster syntax');
			return;
		}
		var isPower = args[0].toUpperCase().includes('POWER'),
		    isMU = args[0].toUpperCase().includes('MU'),
		    tokenID = args[1],
			charCS = getCharacter(tokenID),
			spellName = args[2];
			
		if (!charCS) {
			sendDebug('doCastAgain: invalid token_id');
			sendError('Incorrect MagicMaster syntax');
			return;
		}

		var castingName = attrLookup( charCS, fields.Casting_name ),
			castingLevel = attrLookup( charCS, fields.Casting_level ),
			spellRow = attrLookup( charCS, fields.SpellRowRef ),
			spellCol = attrLookup( charCS, fields.SpellColIndex ),
			firstColNum = isPower ? fields.PowersFirstColNum : fields.SpellsFirstColNum,
			col = (firstColNum || spellCol != 1) ? spellCol : '',
			rep = (isPower ? fields.Powers_table[0] : fields.Spells_table[0]) + col + '_$' + spellRow + '_',
			spellCharges = parseInt((attrLookup( charCS, fields.Spells_castValue, (isPower ? fields.Powers_table[0] : fields.Spells_table[0]), spellRow, spellCol ) || 0),10);
			
		if (spellCharges <= 0) {
			sendParsedMsg( tokenID, messages.noMoreCharges );
			return;
		}
		
		if (!spellName || spellName.length == 0) {
			spellName = attrLookup( charCS, fields.SpellToMem ) || '-';
		}
		
		args[0] = isPower ? BT.USE_POWER : (isMU ? BT.CAST_MUSPELL : BT.CAST_PRSPELL);
		args[3] = spellRow;
		args[4] = spellCol;
		args[5] = spellName;
		
		makeCastAgainMenu( args );
		return;
	}
	
	/*
	 * Target a spell that requires a "to-hit" roll at a token
	 */
	 
	var doTouch = function( args, isGM ) {
	    
		if (!args) return;
		
	    if (args.length < 4) {
			sendDebug('doTouch: invalid number of arguments');
			sendError('Too few targeting arguments');
			return;
	    }
		
		var tokenID = args[0],
			charCS = getCharacter(tokenID);
		
		if (!charCS) {
			sendDebug('doTouch: invalid tokenID parameter');
			sendError('Internal MagicMaster error');
			return;
		}
		handleSpellTargeting( args, isGM );
		return;
	}
	
	/*
	 * Create a menu to change the memorised spells for the day
	 */

	var doMemoriseSpells = function( args, selected ) {
		
		if (!args) return;
		if (args[0] && !args[1] && selected && selected.length) {
			args[1] = selected[0]._id;
		} else if (args.length < 2) {
			sendDebug('doMemoriseSpells: invalid arguments, missing caster type or token_id');
			sendError('Incorrect MagicMaster syntax');
			return;
		};
		
		var magicItem = (args[2] || '');

        args = setCaster( [args[0],args[1]], messages.memSpellClass );
		if (!args) {
			return;
		}

		var isMU = args[0].toUpperCase().includes('MU'),
			isPR = args[0].toUpperCase().includes('PR'),
			isPower = args[0].toUpperCase().includes('POWER'),
			isMI = args[0].toUpperCase().includes('MI'),
			tokenID = args[1],
			charCS = getCharacter(tokenID);

		if (magicItem.length) {
			setAttr( charCS, fields.ItemChosen, magicItem );
		}
		args = (isMI) ? [args[0],args[1],-1,-1,-1,-1,-1,-1] : [args[0],args[1],1,-1,-1,''];

		if (isMI && (isMU || isPR)) {
			makeStoreMIspell( args );
		} else {
			makeManageSpellsMenu( args );
		}
		return;
	}
	
	/*
	 * Create a menu to see what spells the character has memorised for the day,
	 * and allow selection to see the description of each spell.
	 */
	 
	var doViewMemorisedSpells = function( args, selected ) {
		
		if (!args) return;
		if (args[0] && !args[1] && selected && selected.length) {
			args[1] = selected[0]._id;
		} else if (args.length < 2) {
			sendDebug('doViewMemorisedSpells: invalid arguments, missing caster type or token_id');
			sendError('Incorrect MagicMaster syntax');
			return;
		}
		
		args = setCaster( args, messages.viewSpellClass );
		if (!args) return;

		args[2] = args[3] = args[4] = -1;
		args[5] = '';

		makeViewMemSpells( args );
		return;
	}
	
	/*
	 * Function to View or Use a Magic Item
	 * possible actions are BT.VIEW_MI or BT.USE_MI
	 */
	 
	var doViewUseMI = function( args, action, senderId, selected ) {
		
		if (!args) args=[];
		if (!args[0] && selected && selected.length) {
			args[0] = selected[0]._id;
		} else if (!args[0]) {
			sendDebug('doViewUseMI: invalid number of parameters');
			sendError('Invalid MagicMaster parameters');
			return;
		}
		
		var tokenID = args[0],
			charCS = getCharacter(tokenID);

		if (!charCS) {
			sendDebug('doViewUseMI: invalid token_id');
			sendError('Incorrect MagicMaster syntax');
			return;
		}
		setAttr( charCS, fields.Casting_level, casterLevel( charCS, 'MI' ));

		makeViewUseMI( [action, tokenID, -1], senderId );
		return;
		
	}
	
	/*
	 * Specify a power to use from a Magic Item (isUse = false)
	 * or actually use the Magic Item power (isUse = true)
	 */
	 
	var doSelectMIpower = function( args, isUse ) {
		
		if (!args) return;
		
		if (args.length < 4) {
			sendDebug('doSelectMIpower: invalid number of arguments');
			sendError('Incorrect MagicMaster syntax');
			return;
		}
		args.unshift('');
		handleSelectMIpower( args, isUse );
	
		return;
	}
	
	/*
	 * Deal with requests to undertake a rest, either short or long, or
	 * if undetermined, ask the player which to do.  Only enable a
	 * long rest if the DM has enabled it.
	 */

	var doRest = function( args, selected ) {
		
		if (!args) args=[];
		if (!args[0] && selected && selected.length) {
			args[0] = selected[0]._id;
		} else if (!args[0]) {
			sendDebug('doRest: invalid arguments, missing token_id');
			sendError('Incorrect MagicMaster syntax');
			return;
		}

		var tokenID = args[0],
			restType = (args[1] || 'SELECT').toUpperCase(),
			casterType = (args[2] || 'MU+PR').toUpperCase(),
			timeSpent = args[3];
			
		if (casterType.includes('MI') && casterType.includes('POWER')) {
			handleRest( args );
			return;
		}
		
		var	curToken = getObj('graphic',tokenID),
			charCS = getCharacter(tokenID);
			
		if (!charCS) {
			sendDebug('doRest: invalid token_id');
			sendError('Incorrect MagicMaster syntax');
			return;
		}
		if (_.isUndefined(timeSpent)) {
			timeSpent = parseInt(attrLookup( charCS, fields.Timespent ) || 0);
		}
		
		switch (restType) {
			
		case 'LONG':
			if (timeSpent == 0) {
				sendParsedMsg( tokenID, messages.noLongRest );
				break;
			}
			handleRest( args );
			setAttr( charCS, fields.Timespent, 0 );
			sendParsedMsg( tokenID, (messages.restHeader + '{{' + inGameDate(handleTimePassing( charCS, timeSpent )) + '=' + messages.longRest + '{{Check with the DM then [Try again](!magic --rest '+tokenID+'|long|'+casterType+')') );
			break;
			
		case 'SHORT':
			handleRest( args );
			sendParsedMsg( tokenID, messages.shortRest );
			break;
			
		case 'SELECT':
		default:
			makeRestSelectMenu( args, (timeSpent != 0) );
			break;
			
		}
		return;
	}
	
	/*
	 * Set a new maximum number of charges for a Magic Item.  This is
	 * mainly used for magic items that regain a variable number of
	 * charges per day.  Command is either ADD (adds value to current charges
	 * and sets as the max charges), SET (overwrites current max charges),
	 * or DEDUCT (deducts charges from the current number of charges).
	 */
	 
	var doChangeCharges = function( args, selected ) {
		
		if (!args) return;
		if (!args[0] && args[1] && selected && selected.length) {
			args[0] = selected[0]._id;
		} else if (!args[0] || !args[1]) {
			sendDebug('doChangeCharges: invalid arguments, missing token_id, item name or recharges');
			sendError('Incorrect MagicMaster syntax');
			return;
		}
		var tokenID = args[0],
			command = args[1][0] == '-' ? 'DEDUCT' : (args[1][0] == '+' ? 'ADD' : 'SET'),
			charges = Math.abs(parseInt(args[1])),
			MIname = args[2],
			maxCharges = parseInt(args[3]),
			r, i,
			charCS = getCharacter(tokenID);
		
		if (!charCS || isNaN(charges)) {
			sendDebug('doNewMaxCharges: invalid token_id or charges');
			sendError('Incorrect MagicMaster syntax');
			return;
		}

		if (MIname && MIname.length>0) {
			for (i=0; i<fields.MIRows; i++) {
				r = i + fields.Items_table[1];
				if (MIname == attrLookup( charCS, fields.Items_name, fields.Items_table, r )) {
					break;
				}
			}
		} else {
			r = attrLookup( charCS, ['MIrowref', 'current'] );
		}
		if (_.isUndefined(r)) {
			sendDebug('doChangeCharges: magic item "'+MIname+'" not found');
			sendError('Incorrect MagicMaster arguments');
			return;
		}
		switch (command) {
		case 'ADD':
		    i = parseInt(attrLookup( charCS, fields.Items_qty, fields.Items_table, r ) || 0);
			charges = charges + i;
		case 'SET':
			if (!isNaN(maxCharges) && maxCharges < charges) {
				charges = maxCharges;
			}
			setAttr( charCS, fields.Items_trueQty, charges, fields.Items_table, r );
			break;
		case 'DEDUCT':
			handleViewUseMI( ['',tokenID,r], true, charges );
			break;
		}
		return;
	}
	
	/*
	 * Display a menu of actions for spell use.  First, determine the type
	 * spellbooks the character has (PR, MU or both).  If a type is provided as
	 * an argument and the character has such a spellbook, display the menu.  If
	 * does not have the specified type, display an error message to the player.
	 * If no type is specified, display the appropriate spellbook menu or,
	 * if the character has both types, ask which the player wants to use.
	 */
	 
	var doSpellsMenu = function( args, selected ) {
		
		if (!args) args=[];
		if (!args[0] && selected && selected.length) {
			args[0] = selected[0]._id;
		} else if (!args[0]) {
			sendDebug('doSpellsMenu: invalid arguments, missing token_id');
			sendError('Incorrect MagicMaster syntax');
			return;
		}
		
		var tokenID = args[0],
			isMU = args[1] && args[1].toUpperCase().includes('MU'),
			isPR = args[1] && args[1].toUpperCase().includes('PR'),
			isPower = args[1] && args[1].toUpperCase().includes('POWER'),
			curToken = getObj('graphic',tokenID),
			charCS = getCharacter(tokenID);
			
		if (!charCS) {
			sendDebug('doSpellsMenu: invalid token_id');
			sendError('Incorrect MagicMaster syntax');
			return;
		}
		
		var muLevel = casterLevel( charCS, 'MU' ),
			prLevel = casterLevel( charCS, 'PR' );
			
		if (isMU) {
			if (muLevel > 0) {
				makeMUSpellsMenu( args );
			} else {
				sendParsedMsg( tokenID, messages.noMUspellbook );
			}
		} else if (isPR) {
			if (prLevel > 0) {
				makePRSpellsMenu( args );
			} else {
				sendParsedMsg( tokenID, messages.noPRspellbook );
			}
		} else if (isPower) {
			makePowersMenu( args );
		}

		if (!isMU && !isPR && !isPower) {
			if (muLevel > 0 && prLevel > 0) {
				sendParsedMsg( tokenID, messages.chooseSpellMenu );
			} else if (muLevel > 0) {
				makeMUSpellsMenu( args );
			} else if (prLevel > 0) {
				makePRSpellsMenu( args );
			} else {
				sendParsedMsg( tokenID, messages.noSpellbooks );
			}
		}
	};
	
	/**
	 * Function to allow the DM to add spells to a spell-storing 
	 * magic item (instead of programming in the database)
	 **/
	 
	var doStoreSpells = function( args ) {
		
		if (!args) return;
		
		if (args.length < 2) {
			sendDebug('doStoreSpells: invalid number of parameters');
			sendError('Invalid MagicMaster parameters');
			return;
		}
		
		var tokenID = args[0],
			item = args[1],
			cmd = (args[2] || '').toUpperCase(),
			level = args[3] || 1,
			charCS = getCharacter(tokenID),
			ability, specs, isSpell, isPower;
			
		if (!charCS) {
			sendDebug('doStoreSpells: invalid token_id');
			sendError('Incorrect MagicMaster syntax');
			return;
		};
		
		ability = abilityLookup( fields.MagicItemDB, item );
		if (!ability.obj || !ability.obj.length) {
			sendDebug('doStoreSpells: invalid item name');
			sendError('Incorrect MagicMaster syntax');
			return;
		};
		
		args.unshift('');
		args[4] = level;
		args[5] = '';
		isSpell = reCastMIspellCmd.test(ability.obj[0].get('action'));
		isPower = reCastMIpowerCmd.test(ability.obj[0].get('action'));
		if (isSpell || isPower) {
			if (!((isSpell && (cmd.includes('MU') || cmd.includes('PR'))) || (isPower && cmd.includes('POWER')))) {
				args[3] = (isSpell ? 'MU' : 'POWER');
			}
			args[3] += (isSpell && isPower ? '-ALL' : '');
			makeSpellsMenu( args );
		} else {
			sendFeedback( '&{template:'+fields.defaultTemplate+'}{{name=Invalid Item}}'
						+ '{{desc='+item+' cannot store spells or powers as it lacks a button to use them.  Choose a different item.}}'
						+ '{{desc1=[Return to main menu](!magic --gm-edit-mi '+tokenID+')}}' );
		};
		return;
	}
			
	
	/**
	* Function to deal with a character interacting with a target, either
	* an inanimate chest or other MI store, or with an animate, possibly
	* intelligent creature that might detect their action.  In either case,
	* the target might also be trapped.
	**/
	
	var doSearchForMIs = function( args, senderId ) {
		
		if (!args) return;
		
		var msg = args;
		if (args.length != 3) {
			sendDebug('doSearchForMIs: invalid number of parameters');
			sendError('Invalid MagicMaster parameters');
			return;
		}
		
		var tokenID = args[0],
		    pickID = args[1],
			putID = args[2],
			charCS = getCharacter( tokenID );
			
		if (charCS && !(getObj('graphic',pickID).get('represents')) || !(getObj('graphic',putID).get('represents'))) {
			sendResponse(charCS,'Nothing to be found here...');
			return;
		}
		
		var putCS = getCharacter( putID ),
			pickCS = getCharacter( pickID ),
			MIBagSecurity,
			content;
			
		if (!charCS || !putCS || !pickCS) {
			sendDebug('doSearchForMIs: invalid ID arguments');
			sendError('Invalid MagicMaster parameters');
			return;
		};
		setAttr( putCS, ['target-level', 'current'], characterLevel(pickCS) );
		setAttr( putCS, ['target-token', 'current'], getObj('graphic',pickID).get('name') );
		setAttr( pickCS, ['search-id', 'current'], pickID );
		
		MIBagSecurity = parseInt((attrLookup( pickCS, ['check-for-MIBag', 'current'] ) || '0'),10);
		switch (MIBagSecurity) {
		
		case 0:
		
			// target is an inanimate object or insensitive creature without any magic items

            var treasure = (attrLookup( pickCS, fields.Money_treasure ) || '');
			content = messages.header + '{{desc=' + pickCS.get('name') + ' ' + messages.fruitlessSearch + treasure;
			sendParsedMsg( tokenID, content );
			break;
			
		case 1:
		
			// target is an inanimate object or insensitive creature with magic items
		
			doPickOrPut( msg, senderId );
			break;
		
		case 2:
		case 3:
		
			// target is a creature that might detect any snooping.
			// A pick pockets roll is necessary
			
			content = '&{template:'+fields.defaultTemplate+'}{{name='+putCS.get('name')+' is Picking Pockets for MIs}}'
			        + '{{desc=Are you trying to pick '+pickCS.get('name')+'\'s pocket?\n'
			        + '[Yes](!magic --pickpockets '+tokenID+'|'+pickID+'|'+putID+'|&#91;&#91;?{Roll vs Pick Pockets|1d100}&#93;&#93;)'
			        + ' or [No](!&#13;&#47;w &#34;'+putCS.get('name')+'&#34; OK, not making the attempt)}}';

			sendResponse( charCS, content );

			break;
			
		case 4:
		
			// target is trapped, and should have a trap ability macro
			
            var trapVersion = (attrLookup( pickCS, ['trap-version', 'current'] ) || ''),
			    trapName = 'trap'+trapVersion,
				trapMacro = findObjs({ _type : 'ability', characterid : pickCS.id, name : trapName }, {caseInsensitive: true});
			if (!trapMacro || trapMacro.length === 0) {
				trapName = 'Check-for-MIBag'+trapVersion;
				trapMacro = findObjs({ _type : 'ability', characterid : pickCS.id, name : trapName }, {caseInsensitive: true});
			}
			
			if (!trapMacro || trapMacro.length === 0) {
			    sendDebug('doSearchForMIs: Not found trapMacro');
				doPickOrPut( msg, senderId );
				break;
			}
            sendAPImacro( putID, pickID, trapName );
			break;
			
		default:
		    sendDebug('doSearchForMIs: unknown MIBagSecurity type');
		    sendError('Unknown MIBag security type');
		};
		return;
		
	}
	
	/**
	 * Function to display the Edit MI Bag menu
	 */
	 
	var doEditMIbag = function( args, senderId, selected ) {
		
		if (!args) args=[];
		if (!args[0] && selected && selected.length) {
			args[0] = selected[0]._id;
		} else if (!args[0]) {
			sendDebug('doEditMIbag: invalid number of parameters');
			sendError('Invalid MagicMaster parameters');
			return;
		}
		
		var tokenID = args[0],
			charCS = getCharacter(tokenID);
			
		if (!charCS) {
			sendDebug('doEditMIbag: invalid ID arguments');
			sendError('Invalid MagicMaster parameters');
			return;
		};
		
		args = [BT.EDIT_MI,tokenID,-1,''];
		makeEditBagMenu( args, senderId );
		return;
	}
	
	/**
	* Function to support picking of pockets and trapped chests, using
	* options and ability macros set in the target character sheet.
	**/
	
	var doPickPockets = function( args, senderId ) {
		
		if (!args) return;
		
		if (args.length != 4) {
			sendDebug('doPickPockets: invalid number of parameters');
			sendError('Invalid MagicMaster parameters');
			return;
		}
		
		var	tokenID = args[0],
		    pickID = args[1],
			putID = args[2],
			ppRoll = parseInt(args[3],10),
			charCS = getCharacter( tokenID ),
			pickCS = getCharacter( pickID );
			
		if (!charCS || !pickCS) {
			sendDebug('doPickPockets: invalid ID arguments');
			sendError('Invalid MagicMaster parameters');
			return;
		};
		
		if (isNaN(ppRoll)) {
			sendDebug('doPickPockets: invalid dice roll argument');
			sendError('Invalid MagicMaster parameters');
			return;
		};
		
		var pick_pockets = (attrLookup( charCS, [fields.Pick_Pockets[0]+'t', fields.Pick_Pockets[1]] ) || 5),
			pp_target = (Math.min(Math.ceil(Math.max(pick_pockets,0)),96)),
			content = '&{template:'+fields.defaultTemplate+'}{{name='+charCS.get('name')+' is Picking Pockets for MIs}}'
					+ '{{target=[['+pp_target+']]}}'
					+ '{{rolled=<span style=' + ((ppRoll <= pp_target) ? design.success_box : design.failure_box) + '>' + ppRoll + '</span>}}';
		
		if (ppRoll <= pp_target) {
			content += '{{desc=Press [Succeeded](!magic --pickorput '+tokenID+'|'+pickID+'|'+putID+') to view items to pick from}}';
		} else {
		    content += '{{=<span style='+design.failure_box+'>Failed!</span>}}'
		    args.unshift('PPfailed');
		    content += '\n/w "'+charCS.get('name')+'" '+handlePPfailed( args, senderId );
		}
		
		sendResponse( charCS, content );
		return;
	};


	/*
	* Function to display the menu for picking up or putting away Magic Items
	* from one Magic Item bag into another Magic Item bag.
	*/

	var doPickOrPut = function( args, senderId ) {

		if (!args) return;
		
		if (args.length < 3 || args.length > 4) {
			sendDebug('doPickOrPut: Invalid number of arguments');
			sendError('Invalid MagicMaster syntax');
			return;
		};

		var tokenID = args[0],
		    pickID = args[1],
			putID = args[2],
			menuType = args[3],
			charCS = getCharacter( tokenID ),
			pickCS = getCharacter( pickID ),
			content;
			
		if (!tokenID || !putID || !pickID || !charCS || !pickCS) {
			sendDebug('doPickOrPut: One or more IDs are invalid');
			sendError('Invalid MagicMaster arguments');
			return;
		};
		
		var menu,
			playerConfig = getSetPlayerConfig( senderId ),
			pickName = pickCS.get('name');
			
		if (menuType && ['short','long'].includes(menuType.toLowerCase())) {
			playerConfig.pickOrPutType = menuType.toLowerCase();
			getSetPlayerConfig( senderId, playerConfig );
		} else if (playerConfig && playerConfig.pickOrPutType) {
			menuType = playerConfig.pickOrPutType;
		} else {
		    if (!playerConfig) {
		        playerConfig = {};
		    }
			playerConfig.pickOrPutType = menuType = 'short';
			getSetPlayerConfig( senderId, playerConfig );
		};
			
		setAttr( charCS, fields.ItemRowRef, -1 );
		setAttr( charCS, fields.ItemCastingTime, 0 );
		setAttr( charCS, [fields.Expenditure[0],'current'], 0 );
		setAttr( charCS, [fields.Expenditure[0],'max'], 0 );
		
		args = ['POPmenu',tokenID,-1,pickID,putID,-1];
		
		makeShortPOPmenu( args, senderId );
		
		return;

    };
	
	/*
	 * Handle the Config command, to configure the API
	 */
	 
	var doConfig = function( args ) {
		
		if (!args || args.length < 2) {
			makeConfigMenu( args );
			return;
		}
		
		var flag = args[0].toLowerCase(),
			value = args[1].toLowerCase() == 'true',
			msg = '';
		
		switch (flag) {
		case 'specialist-rules':
			state.MagicMaster.spellRules.specMU = value;
			msg = value ? 'Only rules-based specialists get extra spell' : 'Any specialist gets extra spell';
			break;
			
		case 'spell-num':
			state.MagicMaster.spellRules.strictNum = value;
			msg = value ? 'Spells per level restricted to rules' : 'Misc spells per level supported';
			break;
			
		default:
			sendError('Invalid Config Command syntax');
			return;
		}
		makeConfigMenu( args, msg );
		return;
	}

	/*
	 * Handle a button press, and redirect to the correct handler
	 */

	var doButton = function( args, senderId ) {

		if (!args) return;
		
		var	handler = args[0];

		switch (handler) {

		case BT.VIEWMI_OPTION:
		case BT.USEMI_OPTION:
		case BT.EDITMI_OPTION:
		case BT.PICKMI_OPTION:
		case BT.PUTMI_OPTION:
		
			handleOptionButton( args, senderId );
			break;

		case BT.MU_SPELL :
		case BT.PR_SPELL :
		case BT.MI_SPELL :
		case BT.MI_POWER :
		case BT.POWER :
		
			handleChooseSpell( args );
			break;
			
		case BT.CAST_MUSPELL :
		case BT.CAST_PRSPELL :
		case BT.CAST_MISPELL :
		case BT.CAST_MIPOWER :
		case BT.CAST_SCROLL :
		case BT.USE_POWER :
		
			handleCastSpell( args );
			break;
			
		case BT.EDIT_MUSPELLS :
		case BT.EDIT_PRSPELLS :
		case BT.EDIT_POWERS :
		case BT.EDIT_MIPOWERS :
		
			handleRedisplayManageSpells( args );
			break;
			
		case BT.VIEW_MUSPELL :
		case BT.VIEW_PRSPELL :
		case BT.VIEW_POWER :
		case BT.VIEW_MI_MUSPELL :
		case BT.VIEW_MI_PRSPELL :
		case BT.VIEW_MI_POWER :
		case BT.REVIEW_MUSPELL :
		case BT.REVIEW_PRSPELL :
		case BT.REVIEW_POWER :
		case BT.REVIEW_MI :
		case BT.REVIEW_MIPOWER :
			 
			handleReviewSpell( args );
			break;
			
		case BT.MEM_MUSPELL :
		case BT.MEM_PRSPELL :
		case BT.MEM_POWER :
		case BT.MEM_MIPOWER :
			 
			handleMemoriseSpell( args );
			break;
			
		case BT.VIEWMEM_MUSPELLS :
		case BT.VIEWMEM_PRSPELLS :
		case BT.VIEWMEM_POWERS :
		case BT.VIEWMEM_MI_MUSPELLS :
		case BT.VIEWMEM_MI_PRSPELLS :
		case BT.VIEWMEM_MI_POWERS :
		
			makeViewMemSpells( args );
			break;
			
		case BT.EDIT_NOSPELLS:
		
			makeMiscSpellsEdit( args );
			break;
			
		case BT.MISC_SPELL:
		
			handleSetMiscSpell( args );
			break;
			
		case BT.CHOOSE_VIEW_MI:
		case BT.CHOOSE_USE_MI:
		
			makeViewUseMI( args, senderId );
			break;
			
		case BT.REDO_CHOOSE_MI:
		    
		    makeEditBagMenu( args, senderId );
		    break;
			
		case BT.VIEW_MI:
		case BT.USE_MI:
		
			handleViewUseMI( args, playerIsGM(senderId) );
			break;
			
		case BT.ADD_MIROW:
		    
		    handleAddMIrow( args, senderId );
		    break;
			
		case BT.MU_TO_STORE:
		case BT.PR_TO_STORE:
		case BT.MU_MI_SLOT:
		case BT.PR_MI_SLOT:
		
			handleSelectMIspell( args );
			break;
			
		case BT.MISTORE_MUSPELL:
		case BT.MISTORE_PRSPELL:
		
			handleStoreMIspell( args );
			break;
			
		case BT.MI_POWER_USED:
		
			handleSelectMIpower( args, true );
			break;
			
		case BT.CHOOSE_TO_STORE:
		
			makeSpellsMenu( args );
			break;
			
		case BT.REVIEW_STORE:
		
			handleRevStore( args );
			break;
			
		case BT.ADD_TO_STORE:
		case BT.DEL_STORED:
		
			handleChangeSpellStore( args );
			break;

		case BT.POP_PICK :
		
			makeShortPOPmenu( args, senderId );
			break;
			
		case 'POPqty' :
		case 'POPbuy' :
		case 'POPsubmit' :
		case BT.POP_STORE :
		    
		    handlePickOrPut( args, senderId );
		    break;
			
		case 'PPfailed' :
		
			handlePPfailed( args, senderId );
			break;
			
		case 'POPtreasure' :
		
			handleTreasure( args, senderId );
			break;
			
		case 'GM-MImenu':
		
			makeGMonlyMImenu( args );
			break;
			
		case BT.CHOOSE_MI :
		case 'GM-MItoStore':
		
			handleSelectMI( args, (handler == 'GM-MItoStore'), senderId );
			break;
			
		case BT.SLOT_MI :
		case 'GM-MIslot':
		
			handleSelectSlot( args, (handler == 'GM-MIslot'), senderId );
			break;
			
		case BT.STORE_MI :
		case 'GM-StoreMI':
		
			handleStoreMI( args, (handler == 'GM-StoreMI'), senderId );
			break;
			
		case 'GM-RenameMI':
		
			handleHideMI( args );
			break;
			
		case BT.REMOVE_MI :
		case 'GM-DelMI':
		
			handleRemoveMI( args, (handler == 'GM-DelMI'), senderId );
			break;
			
		case 'GM-ChangeMIcost':
		
			handleChangeMItype( args );
			break;
			
		case 'GM-ChangeDispCharges':
		
			handleChangeMIcharges( args, 'Displayed' );
			break;
			
		case 'GM-ChangeActCharges':
		
			handleChangeMIcharges( args, 'Actual' );
			break;
			
		case 'GM-ResetSingleMI':
		
			handleResetSingleMI( args );
			break;
			
		case 'GM-ChangeMItype':
		    
		    handleChangeMItype( args );
		    break;
			
		case 'GM-SetMIcost':
		
			handleSetMIcost( args );
			break;
			
		case 'GM-SetTokenType':
		
			handleSetContainerType( args );
			break;
			
		case 'GM-SetTokenSize':
		
			handleSetContainerSize( args );
			break;
			
		case 'GM-TreasureMenu':
		
			makeEditTreasureMenu( args );
			break;
			
		case 'GM-AddTreasure':
		
			handleAddTreasure( args );
			break;
			
		case 'GM-EditTreasure':
		
			handleEditTreasure( args );
			break;
			
		case 'GM-DeleteTreasure':
		
			handleDeleteTreasure( args );
			break;
			
		case 'GM-DelTreasure':
		
			handleConfirmedDelTreasure( args );
			break;
			
		case 'GM-NoBlank':			
        case 'GM-NodelTreasure':
            
            handleNo( args );
            break;

		case 'GM-BlankBag':
		
			handleBlankMIBag( args );
			break;
		
		case 'GM-ConfirmedBlank':
		
			handleConfirmedBlank( args );
			break;
		
		default:
		
			sendDebug( 'doButton: invalid button type specified' );
			sendError( 'Invalid MagicMaster button call' );
			return;
		};

	};
	
	/**
	 * Set options for a particular player
	 **/
	 
	var doSetOptions = function( args, senderId ) {
	    
		if (!args) return;
		
	    if (args.length != 2) {
	        sendDebug('soSetOptions: invalid argument pair.  Must be [option|value]');
	        sendError('Invalid MagicMaster parameters');
	    }
	
	    var option = args[0],
	        value = args[1],
	        player = getObj('player',senderId),
	        playerName, content,
	        config = getSetPlayerConfig( senderId ) || {};
	        
        if (player) {
            playerName = player.get('_displayname');
        } else {
            playerName = 'GM';
        }
        content = '&{template:'+fields.defaultTemplate+'}{{name='+playerName+'\'s MagicMaster options}}';

        switch (option.toLowerCase()) {
        
        case 'menutype':
            value = value.toLowerCase();
            if (!['short','long'].includes(value)) {
                sendResponseError( senderId, 'Invalid menuType option.  Use short or long' );
                return;
            }
            config.pickOrPutType = value;
            getSetPlayerConfig( senderId, config );
            content += '{{desc=Menu type set to '+value+'}}';
            sendResponsePlayer(senderId,content);
            config = getSetPlayerConfig( senderId );
            break;
            
        default:
            sendResponseError( senderId, 'Invalid MagicMaster option. [Show Help](!magic --help)');
            break;
        };
	    return config;
	};
	
	/**
	 * Present the Magic Item Bag menu for the tokenID passed, if it has one
	*/

    var doMIBagMenu = function( args, senderId, selected ) {
		if (!args) args=[];
		if (!args[0] && selected && selected.length) {
			args[0] = selected[0]._id;
		} else if (!args[0]) {
			sendDebug('doMIBagMenu: Invalid number of arguments');
			sendError('Invalid MagicMaster syntax');
			return;
		};

        var tokenID = args[0],
            curToken = getObj( 'graphic', tokenID );
            
        if (!curToken){
            sendDebug('doMIBagMenu: Invalid tokenID: ' + tokenID);
            sendError('Invalid MagicMaster syntax');
            return;
        }
        
        var charID = curToken.get('represents'),
            tokenName = curToken.get('name'),
            ppt, ppTarget, ppTargetMax,
            content, menuType,
            charCS = getObj( 'character', charID ),
			charName = charCS.get('name');

        ppt = (attrLookup( charCS, ['ppt', 'current'] ) || 5);
        ppTarget = Math.min(Math.ceil(1.5*Math.max(ppt,0)),96);
        ppTargetMax = Math.min(Math.ceil(Math.max(ppt,0)),96);
        
        content = '&{template:'+fields.defaultTemplate+'} {{name=' + tokenName + '\'s\n'
                + 'Magic Items menu}}{{desc=[2. Use a Magic Item](!magic --use-mi '+tokenID+')\n'
                + '[3. Search for MIs & Treasure](!magic --search '+tokenID+'|&#64;{target|Search Where?|token_id}|'+tokenID+')\n'
                + '[3. Store MIs](!magic --pickorput '+tokenID+'|'+tokenID+'|&#64;{target|Store Where?|token_id})\n'
                + '[4. Change MIs](!magic --edit-mi '+tokenID+')\n'
                + '[4. View your Magic Item bag](!magic --view-mi '+tokenID+')}}';
                
        sendResponse( charCS, content );
    };
	
	/*
	 * Call up the GM's Edit MI bag menu, which allows the GM
	 * change MIs to be cursed, hide the real name, reveal items
	 * once identified, change displayed & actual quantities etc.
	 */
	 
	var doGMonlyMImenu = function( args, selected ) {
		
		if (!args) args=[];
		if (!args[0] && selected && selected.length) {
			args[0] = selected[0]._id;
		} else if (!args[0]) {
			sendDebug('doGMonlyMImenu: Invalid number of arguments');
			sendError('Invalid MagicMaster syntax');
			return;
		};

		var tokenID = args[0];
		
		args.push( tokenID, -1, '' );
		
		makeGMonlyMImenu( args );
		return;
	}
	
    /*
     * RED: v1.012 A menu to allow players to choose light sources
     */
	
	var doLightSourcesMenu = function( args, selected ) {

		if (!args) args=[];
		if (!args[0] && selected && selected.length) {
			args[0] = selected[0]._id;
		} else if (!args[0]) {
			sendDebug('doLightSourcesMenu: Invalid number of arguments');
			sendError('Invalid MagicMaster syntax');
			return;
		};

        var tokenID = args[0],
            curToken = getObj( 'graphic', tokenID );
            
        if (!curToken){
            sendDebug('doLightSourcesMenu: Invalid tokenID: ' + tokenID);
            sendError('Invalid MagicMaster syntax');
            return;
        }
		
		var charCS = getCharacter( tokenID );
		if (!charCS) {
            sendDebug('doLightSourcesMenu: Invalid tokenID: ' + tokenID);
            sendError('Invalid MagicMaster syntax');
            return;
        }

		var lightSource = attrLookup( charCS, fields.LightSource ) || 'None',
			weaponSwitch = (lightSource == 'Weapon') ? ('<td><span style='+design.green_button+'>On</span></td><td>[Off](!magic --changelight '+tokenID+'|None)</td>')
													 : ('<td>[On](!magic --changelight '+tokenID+'|Weapon)</td><td><span style='+design.grey_button+'>Off</span></td>'),
			torchSwitch = (lightSource == 'Torch') ? ('<td><span style='+design.green_button+'>On</span></td><td>[Off](!magic --changelight '+tokenID+'|None)</td>')
													 : ('<td>[On](!magic --changelight '+tokenID+'|Torch)</td><td><span style='+design.grey_button+'>Off</span></td>'),
			hoodedSwitch = (lightSource == 'Hooded') ? ('<td><span style='+design.green_button+'>On</span></td><td>[Off](!magic --changelight '+tokenID+'|None)</td>')
													 : ('<td>[On](!magic --changelight '+tokenID+'|Hooded)</td><td><span style='+design.grey_button+'>Off</span></td>'),
			bullseyeSwitch = (lightSource == 'Bullseye') ? ('<td><span style='+design.green_button+'>On</span></td><td>[Off](!magic --changelight '+tokenID+'|None)</td>')
													 : ('<td>[On](!magic --changelight '+tokenID+'|Bullseye)</td><td><span style='+design.grey_button+'>Off</span></td>'),
			contLightSwitch = (lightSource == 'ContLight') ? ('<td><span style='+design.green_button+'>On</span></td><td>[Off](!magic --changelight '+tokenID+'|None)</td>')
													 : ('<td>[On](!magic --changelight '+tokenID+'|ContLight)</td><td><span style='+design.grey_button+'>Off</span></td>'),
			beaconSwitch = (lightSource == 'Beacon') ? ('<td><span style='+design.green_button+'>On</span></td><td>[Off](!magic --changelight '+tokenID+'|None)</td>')
													 : ('<td>[On](!magic --changelight '+tokenID+'|Beacon)</td><td><span style='+design.grey_button+'>Off</span></td>'),
			
			content = '&{template:'+fields.defaultTemplate+'}{{name=Manage '+curToken.get('name')+'\'s Light Sources}}'
			        + '{{desc=Current state indicated by a green button like <span style='+design.green_button+'>On</span>. '
			        + 'Select a red button to turn the current source off and choose a different one.}}'
					+ '{{desc1=In order of illumination<table>'
					+ '<tr><td>Magic Weapon</td><td>5ft</td>'+weaponSwitch+'</tr>'
					+ '<tr><td>Torch</td><td>15ft</td>'+torchSwitch+'</tr>'
					+ '<tr><td>Hooded Lantern</td><td>30ft</td>'+hoodedSwitch+'</tr>'
					+ '<tr><td>Bullseye Lantern</td><td>60ft beam</td>'+bullseyeSwitch+'</tr>'
					+ '<tr><td>Cont-Light gem</td><td>60ft</td>'+contLightSwitch+'</tr>'
					+ '<tr><td>Beacon Lantern</td><td>240ft beam</td>'+beaconSwitch+'</tr>'
					+ '</table>}}';
					

		sendResponse( charCS, content );
		return;
	}
	
	var doLightSource = function( args, dispMenu ) {
		
		if (!args) return;
		
		if (args.length != 2) {
			sendDebug('doLightSource: Invalid number of arguments');
			sendError('Invalid MagicMaster syntax');
			return;
		};

        var tokenID = args[0],
			newSource = args[1],
			curToken = getObj( 'graphic', tokenID );
            
        if (!curToken){
            sendDebug('doLightSource: Invalid tokenID: ' + tokenID);
            sendError('Invalid MagicMaster syntax');
            return;
        }
		
		var charCS = getCharacter( tokenID );
		if (!charCS) {
            sendDebug('doLightSource: Invalid tokenID: ' + tokenID);
            sendError('Invalid MagicMaster syntax');
            return;
        }

		switch (newSource.toLowerCase()) {
		case 'none':
			curToken.set({emits_bright_light: false, emits_low_light: false,
			bright_light_distance: 0,  low_light_distance: 0,
			has_directional_bright_light: false, has_directional_dim_light: false,
			directional_dim_light_centre: 180, directional_dim_light_total: 360,
			directional_bright_light_centre: 180, directional_bright_light_total: 360});
			break;
			
		case 'weapon':
			curToken.set({emits_bright_light: true, emits_low_light: true,
			bright_light_distance: 1,  low_light_distance: 5,
			has_directional_bright_light: false, has_directional_dim_light: false,
//			directional_dim_light_centre: 180, directional_dim_light_total: 360,
			directional_bright_light_centre: 180, directional_bright_light_total: 360});
			break;
			
		case 'torch':
			curToken.set({emits_bright_light: true, emits_low_light: true,
			bright_light_distance: 1,  low_light_distance: 15,
			has_directional_bright_light: false, has_directional_dim_light: false,
//			directional_dim_light_centre: 180, directional_dim_light_total: 360,
			directional_bright_light_centre: 180, directional_bright_light_total: 360});
			break;
		
		case 'hooded':
			curToken.set({emits_bright_light: true, emits_low_light: true,
			bright_light_distance: 15, low_light_distance: 30,
			has_directional_bright_light: false, has_directional_dim_light: false,
//			directional_dim_light_centre: 180, directional_dim_light_total: 360,
			directional_bright_light_centre: 180, directional_bright_light_total: 360});
			break;
		
		case 'contlight':
			curToken.set({emits_bright_light: true, emits_low_light: true,
			bright_light_distance: 50, low_light_distance: 60,
			has_directional_bright_light: false, has_directional_dim_light: false,
//			directional_dim_light_centre: 180, directional_dim_light_total: 360,
			directional_bright_light_centre: 180, directional_bright_light_total: 360});
			break;
		
		case 'bullseye':
			curToken.set({emits_bright_light: true, emits_low_light: false, 
			bright_light_distance: 60, low_light_distance: 60,
			has_directional_bright_light: true, has_directional_dim_light: false,
//			directional_dim_light_centre: 180, directional_dim_light_total: 19,
			directional_bright_light_centre: 180, directional_bright_light_total: 19});
			break;
		
		case 'beacon':
			curToken.set({emits_bright_light: true, emits_low_light: false, 
			bright_light_distance: 240, low_light_distance: 240,
			has_directional_bright_light: true, has_directional_dim_light: false,
//			directional_dim_light_centre: 180, directional_dim_light_total: 21,
			directional_bright_light_centre: 180, directional_bright_light_total: 21});
			break;
			
		default:
			sendDebug( 'doLightSource: Invalid light source type '+newSource );
			sendError( 'Invalid MIMaster syntax' );
			break;
		}
		
		setAttr( charCS, fields.LightSource, newSource );
		
		if (dispMenu) {
			doLightSourcesMenu( args );
		}
		return;
	}
	
	/*
	 * check for correct syntax of a 'write database' command, then
	 * call the function to write the specified character sheet database
	 * to a handout in object format to be cut&pasted to an API
	 */
	 
	var doWriteDB = function(args) {
		
		var dbName = args[1],
			dbVersion = args[0],
			dbHandout;
			
		if (dbName && dbName.length) {
			if (!(dbHandout = saveDBtoHandout( dbName, dbVersion ))) {
				sendError( 'Unable to write db object for '+dbName );
			} else {
				sendFeedback( 'Created db object in handout '+dbHandout.get('name') );
			}
			
		} else {
			sendFeedback('Updating all handouts');
			_.each( dbNames, (db,k) => saveDBtoHandout( k.replace(/_/g,'-'), dbVersion ));
		}
			
		return;
	}
		
	/*
	 * Update  databases to latest versions held in API
	 */
 
	var doUpdateDB = function(args, silent) {
		
		var dbName = args[0];
			
		if (dbName && dbName.length) {
			let dbLabel = dbName.replace(/-/g,'_');
			if (!dbNames[dbLabel]) {
				sendError('Not found database '+dbName);
			} else {
				log('Updating database '+dbName);
				sendFeedback('Updating database '+dbName);
				buildCSdb( dbName, dbNames[dbLabel], silent );
			}
		} else if (_.some( dbNames, (db,dbName) => checkDBver( dbName, db, silent ))) {
			log('Updating all MagicMaster databases');
			if (!silent) sendFeedback('Updating all MagicMaster databases');
			_.each( dbNames, (db,dbName) => {
				let dbCS = findObjs({ type:'character', name:dbName.replace(/_/g,'-') },{caseInsensitive:true});
				if (dbCS && dbCS.length) {
					dbCS[0].remove();
				}
			});
			// Have to remove all pre-defined databases before updating them
			// so that moves can happen without causing duplicates
			_.each( dbNames, (db,dbName) => {
				buildCSdb( dbName, db, silent );
			});
		};
		updateDBindex();
		
		return;
	}
	
	/**
	 * Handle a handshake from another API
	 **/
	 
	/**
	 * Handle handshake request
	 **/
	 
	var doHsQueryResponse = function(args) {
		if (!args) return;
		var from = args[0] || '',
			func = args[1] || '',
			funcTrue = ['spellmenu','mem-spell','view-spell','cast-spell','cast-again','mimenu','edit-mi','view-mi','use-mi','mi-charges','mi-power','touch','rest','gm-edit-mi','search','pickorput','lightsources',
						'light','changelight','help','check-db','debug'].includes(func.toLowerCase()),
			cmd = '!'+from+' --hsr magic'+((func && func.length) ? ('|'+func+'|'+funcTrue) : '');
			
		sendMagicAPI(cmd);
		return;
	};

	/**
	 * Handle the response to a handshake query
	 **/
	 
	var doHandleHsResponse = function(args) {
		if (!args) {
			sendError('Invalid handshake response received');
			return;
		}
		var from = args[0] || '',
			func = args[1] || '',
			funcExists = (!!args[2]) || false;
		
		if (!apiCommands[from]) {
			apiCommands[from] = {};
		}
		apiCommands[from].exists = true;
		if (func && func.length) {
			apiCommands[from][func] = funcExists;
		}
		return;
	}

	/**
	 * Handle Pending Requests
	 */

	var doRelay = function(args,senderId) {
		if (!args) return;
		
		var carry,
			hash; 
		args = args.split(' %% '); 
		if (!args) { log(args); return; }
		hash = args[0];
		if (hash) {
			hash = hash.match(/hc% .+/);
			if (!hash) { log(hash); return; }
			hash = hash[0].replace('hc% ','');
			carry = args[1];
			if (carry)
				{carry = carry.trim();}
			var pr = findPending(hash);
			if (pr) {
				pr.doOps(carry);
				clearPending(hash);    
			} else {
                sendDebug('doRelay: Selection Invalidated');
				sendResponseError(senderId,'Selection Invalidated');
			}
		}
	}; 

// -------------------------------------------------------- Event Handlers --------------------------------------------------
            
	/**
	 * Handle chat message event
	 * RED: v1.213 Updated to allow multiple actions per call
	 * This allows procedural/linear processing of activity and overcomes
	 * some of the limitations of Roll20 asynchronous processing
	 */ 
 

	var handleChatMessage = function(msg) { 
		var args = processInlinerolls(msg),
			senderId = msg.playerid,
			selected = msg.selected;
			
		if (args.indexOf('!magic') !== 0 && args.indexOf('!mibag') !== 0)
			{return;}

        sendDebug('MagicMaster called');

		args = args.split(' --');
		args.shift();
		
		if (_.isUndefined(senderId) || _.isUndefined(getObj('player',senderId))) {
			sendDebug('senderId undefined, looking for GM');
			if (_.isUndefined(senderId = findTheGM())) {
				sendDebug('Unable to findTheGM');
				return;
			} else {
				sendDebug('found the GM');
			}
		} else {
			sendDebug('senderId is defined as ' + getObj('player',senderId).get('_displayname'));
		};
		
		var isGM = (playerIsGM(senderId) || state.MagicMaster.debug === senderId);
			
		_.each(args, function(e) {
			var arg = e, i=arg.indexOf(' '), cmd, argString;
			sendDebug('Processing arg: '+arg);
			
			cmd = (i<0 ? arg : arg.substring(0,i)).trim().toLowerCase();
			argString = (i<0 ? '' : arg.substring(i+1).trim());
			arg = argString.split('|');
			
			try {
				switch (cmd) {
				// RED: v1.213 If in debugging mode, allow debugger to execute GM
				// type commands
    	    	case 'cast-spell':
        			doCastSpell(arg,selected);
					break;
    	    	case 'cast-again':
        			doCastAgain(arg);
					break;
    	    	case 'mem-spell':
        			doMemoriseSpells(arg,selected);
					break;
    	    	case 'view-spell':
        			doViewMemorisedSpells(arg,selected);
					break;
    	    	case 'touch':
        			doTouch(arg,isGM);
					break;
    	    	case 'target':
        			sendError('Targeting commands have moved to RoundMaster');
					break;
    	    	case 'spellmenu':
        			doSpellsMenu(arg,selected);
					break;
    	    	case 'rest':
        			doRest(arg,selected);
					break;
    	    	case 'pickorput':
        			doPickOrPut(arg,senderId);
					break;
    	    	case 'mimenu':
    	    	    doMIBagMenu(arg,senderId,selected);
					break;
    	    	case 'view-mi':
    	    	    doViewUseMI(arg,BT.VIEW_MI,senderId,selected);
					break;
    	    	case 'use-mi':
    	    	    doViewUseMI(arg,BT.USE_MI,senderId,selected);
					break;
    	    	case 'mi-charges':
    	    	    doChangeCharges(arg,selected);
					break;
    	    	case 'mi-power':
    	    	    doSelectMIpower(arg,false);
					break;
    	    	case 'edit-mi':
    	    	    doEditMIbag(arg,senderId,selected);
					break;
				case 'store-spells':
					doStoreSpells(arg);
					break;
    	    	case 'search':
    	    	    doSearchForMIs(arg,senderId);
					break;
    	    	case 'pickpockets':
    	    	    doPickPockets(arg,senderId);
					break;
    	    	case 'gm-edit-mi':
    	    	    if (isGM) doGMonlyMImenu(arg,selected);
					break;
    	    	case 'lightsources':
    	    	    doLightSourcesMenu(arg,selected);
					break;
    	    	case 'light':
    	    	    doLightSource(arg,false);
					break;
    	    	case 'changelight':
    	    	    doLightSource(arg,true);
					break;
	    		case 'options':
		    		doSetOptions(arg,senderId);
					break;
				case 'write-db':
					if (isGM) doWriteDB(arg);
					break;
				case 'update-db':
					if (isGM) doUpdateDB(arg, false);
					break;
				case 'check-db':
					if (isGM) checkCSdb(arg);
					break;
				case 'config':
					if (isGM) doConfig(arg);
					break;
				case 'handout':
				case 'handouts':
					if (isGM) updateHandouts(false,senderId);
					break;
				case 'hsq':
				case 'handshake':
					doHsQueryResponse(arg);
					break;
				case 'hsr':
					doHandleHsResponse(arg);
					break;
	    		case 'button':
		    		doButton(arg,senderId);
					break;
    			case 'help':
    				showHelp(); 
					break;
    			case 'relay':
    				doRelay(argString,senderId); 
					break;
    			case 'debug':
    				// RED: v1.207 allow anyone to set debug and who to send debug messages to
    				doSetDebug(argString,senderId);
					break;
    			default:
    			    sendFeedback('<span style="color: red;">Invalid command " <b>'+msg.content+'</b> "</span>');
    				showHelp(); 
					break;
    			}
			} catch (e) {
				sendDebug('MagicMaster handleChatMsg: JavaScript '+e.name+': '+e.message);
				sendError('MagicMaster JavaScript '+e.name+': '+e.message);
			}
    	});
	};
	
// -------------------------------------------------------------- Register the API -------------------------------------------

	/*
	 * Register msgicMaster API with the
	 * commandMaster API
	 */
	 
	var cmdMasterRegister = function() {
		var cmd = fields.commandMaster
				+ ' --register Cast_MU_spell|Cast a Wizard spell|magic|~~cast-spell|MU%%`{selected|token_id}'
				+ ' --register Cast_PR_spell|Cast a Priest spell|magic|~~cast-spell|PR%%`{selected|token_id}'
				+ ' --register Cast_spell|Ask for which type of spell to cast|magic|~~cast-spell|MU-PR%%`{selected|token_id}'
				+ ' --register Spells_menu|Open a menu with spell management functions|magic|~~spellmenu|`{selected|token_id}'
				+ ' --register Use_power|Use a Power|magic|~~cast-spell|POWER%%`{selected|token_id}'
				+ ' --register Powers_menu|Open a menu with power management functions|magic|~~spellmenu|`{selected|token_id}%%POWERS'
				+ ' --register Use_magic_item|Use a Magic Item from character\'s bag|magic|~~use-mi|`{selected|token_id}'
				+ ' --register Magic_Item_menu|Open a menu of Magic Item management functions|magic|~~mimenu|`{selected|token_id}'
				+ ' --register Rest|Perform Short or Long rests|magic|~~rest|`{selected|token_id}';
		sendMagicAPI( cmd );
		return;
	};

	/**
	 * Register and bind event handlers
	 */ 
	var registerAPI = function() {
		on('chat:message',handleChatMessage);
	};
 
	return {
		init: init,
		registerAPI: registerAPI
	};
 
}());

on("ready", function() {
	'use strict'; 
	MagicMaster.init(); 
	MagicMaster.registerAPI();
});